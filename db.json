{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/11-300x286.png","path":"images/11-300x286.png","modified":1,"renderable":0},{"_id":"source/images/2-250x300.png","path":"images/2-250x300.png","modified":1,"renderable":0},{"_id":"source/images/DOC8GFX6-300x139.png","path":"images/DOC8GFX6-300x139.png","modified":1,"renderable":0},{"_id":"source/images/apachetest-300x89.png","path":"images/apachetest-300x89.png","modified":1,"renderable":0},{"_id":"source/images/clipboard.png","path":"images/clipboard.png","modified":1,"renderable":0},{"_id":"source/images/clipboard1-300x134-20190917165133735.png","path":"images/clipboard1-300x134-20190917165133735.png","modified":1,"renderable":0},{"_id":"source/images/clipboard1-300x134.png","path":"images/clipboard1-300x134.png","modified":1,"renderable":0},{"_id":"source/images/clipboard2-246x300.png","path":"images/clipboard2-246x300.png","modified":1,"renderable":0},{"_id":"source/images/ha.png","path":"images/ha.png","modified":1,"renderable":0},{"_id":"source/images/ha2.png","path":"images/ha2.png","modified":1,"renderable":0},{"_id":"source/images/hainstall.png","path":"images/hainstall.png","modified":1,"renderable":0},{"_id":"source/images/http-cache-control.png","path":"images/http-cache-control.png","modified":1,"renderable":0},{"_id":"source/images/image-20191021135643975.png","path":"images/image-20191021135643975.png","modified":1,"renderable":0},{"_id":"source/images/image.png","path":"images/image.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4a9789a5c5.png","path":"images/img_56f4a9789a5c5.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4a99aa9435.png","path":"images/img_56f4a99aa9435.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4a9875257e.png","path":"images/img_56f4a9875257e.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4a9ab888d0.png","path":"images/img_56f4a9ab888d0.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4aa6c69a26-20190917143633077.png","path":"images/img_56f4aa6c69a26-20190917143633077.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4aa8c14ae0-20190917143633236.png","path":"images/img_56f4aa8c14ae0-20190917143633236.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4aa8c14ae0-20190917145027287.png","path":"images/img_56f4aa8c14ae0-20190917145027287.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4aa989af5e-20190917143633212.png","path":"images/img_56f4aa989af5e-20190917143633212.png","modified":1,"renderable":0},{"_id":"source/images/img_570da13048078.png","path":"images/img_570da13048078.png","modified":1,"renderable":0},{"_id":"source/images/img_570da1465a8dc.png","path":"images/img_570da1465a8dc.png","modified":1,"renderable":0},{"_id":"source/images/img_570da15f9ead1.png","path":"images/img_570da15f9ead1.png","modified":1,"renderable":0},{"_id":"source/images/img_5773310c679a1.png","path":"images/img_5773310c679a1.png","modified":1,"renderable":0},{"_id":"source/images/img_5877344e51cd6.png","path":"images/img_5877344e51cd6.png","modified":1,"renderable":0},{"_id":"source/images/img_587dde19b6b47.png","path":"images/img_587dde19b6b47.png","modified":1,"renderable":0},{"_id":"source/images/img_58802ffca93b9.png","path":"images/img_58802ffca93b9.png","modified":1,"renderable":0},{"_id":"source/images/img_588031f4a62e1.png","path":"images/img_588031f4a62e1.png","modified":1,"renderable":0},{"_id":"source/images/img_58803215d9370.png","path":"images/img_58803215d9370.png","modified":1,"renderable":0},{"_id":"source/images/img_5880322f10890.png","path":"images/img_5880322f10890.png","modified":1,"renderable":0},{"_id":"source/images/img_58ddc18a1993a.png","path":"images/img_58ddc18a1993a.png","modified":1,"renderable":0},{"_id":"source/images/img_58ddc1b2d8078.png","path":"images/img_58ddc1b2d8078.png","modified":1,"renderable":0},{"_id":"source/images/img_58ddc20c6f8c3.png","path":"images/img_58ddc20c6f8c3.png","modified":1,"renderable":0},{"_id":"source/images/img_59b269634a216.png","path":"images/img_59b269634a216.png","modified":1,"renderable":0},{"_id":"source/images/img_59b2698d5658f.png","path":"images/img_59b2698d5658f.png","modified":1,"renderable":0},{"_id":"source/images/img_59b26b3126991.png","path":"images/img_59b26b3126991.png","modified":1,"renderable":0},{"_id":"source/images/img_59c35cd9ab71b.png","path":"images/img_59c35cd9ab71b.png","modified":1,"renderable":0},{"_id":"source/images/img_59c35d1d930c1.png","path":"images/img_59c35d1d930c1.png","modified":1,"renderable":0},{"_id":"source/images/lvsnat.png","path":"images/lvsnat.png","modified":1,"renderable":0},{"_id":"source/images/tomcat-300x84.png","path":"images/tomcat-300x84.png","modified":1,"renderable":0},{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"source/images/image-20191018151450374.png","path":"images/image-20191018151450374.png","modified":1,"renderable":0},{"_id":"source/images/image-20191018172515467.png","path":"images/image-20191018172515467.png","modified":1,"renderable":0},{"_id":"source/images/image-20191021135659882.png","path":"images/image-20191021135659882.png","modified":1,"renderable":0},{"_id":"source/images/image-20191021135714997.png","path":"images/image-20191021135714997.png","modified":1,"renderable":0},{"_id":"source/images/image-20191021135724279.png","path":"images/image-20191021135724279.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4aa5d219ba-20190917143633356.png","path":"images/img_56f4aa5d219ba-20190917143633356.png","modified":1,"renderable":0},{"_id":"source/images/img_56f4aa815cb3c-20190917143633401.png","path":"images/img_56f4aa815cb3c-20190917143633401.png","modified":1,"renderable":0},{"_id":"source/images/img_570da173ef401.png","path":"images/img_570da173ef401.png","modified":1,"renderable":0},{"_id":"source/images/img_577330e1e5d06.png","path":"images/img_577330e1e5d06.png","modified":1,"renderable":0},{"_id":"source/images/img_577330f8871b5.png","path":"images/img_577330f8871b5.png","modified":1,"renderable":0},{"_id":"source/images/img_5773313591d94.png","path":"images/img_5773313591d94.png","modified":1,"renderable":0},{"_id":"source/images/img_57733153a13cb.png","path":"images/img_57733153a13cb.png","modified":1,"renderable":0},{"_id":"source/images/img_587733a5ae0ba.png","path":"images/img_587733a5ae0ba.png","modified":1,"renderable":0},{"_id":"source/images/img_5877340a43dea.png","path":"images/img_5877340a43dea.png","modified":1,"renderable":0},{"_id":"source/images/img_587ddd23c02a3.png","path":"images/img_587ddd23c02a3.png","modified":1,"renderable":0},{"_id":"source/images/img_59b26b4437729.png","path":"images/img_59b26b4437729.png","modified":1,"renderable":0},{"_id":"source/images/img_5a66a577176c8.png","path":"images/img_5a66a577176c8.png","modified":1,"renderable":0},{"_id":"source/images/img_59c35d389b1c5.png","path":"images/img_59c35d389b1c5.png","modified":1,"renderable":0},{"_id":"source/images/san.png","path":"images/san.png","modified":1,"renderable":0},{"_id":"source/images/QQ20161220-0.png","path":"images/QQ20161220-0.png","modified":1,"renderable":0},{"_id":"source/images/img_577330bdc322e.png","path":"images/img_577330bdc322e.png","modified":1,"renderable":0},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"source/images/1.png","path":"images/1.png","modified":1,"renderable":0},{"_id":"source/images/img_57b1811567e55.png","path":"images/img_57b1811567e55.png","modified":1,"renderable":0},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":1,"renderable":1},{"_id":"source/images/img_5b5184bfd49e3.png","path":"images/img_5b5184bfd49e3.png","modified":1,"renderable":0},{"_id":"source/images/img_5bbefa0f833d9.png","path":"images/img_5bbefa0f833d9.png","modified":1,"renderable":0},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":1,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":1,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":1,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":1,"renderable":1},{"_id":"source/images/img_5bbef98529a61.png","path":"images/img_5bbef98529a61.png","modified":1,"renderable":0},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"source/images/img_5b5183b84d4dd.png","path":"images/img_5b5183b84d4dd.png","modified":1,"renderable":0},{"_id":"source/images/img_5b5184fb1c8d4.png","path":"images/img_5b5184fb1c8d4.png","modified":1,"renderable":0},{"_id":"source/images/img_59b26b60dc7e7.png","path":"images/img_59b26b60dc7e7.png","modified":1,"renderable":0},{"_id":"source/images/img_59b2697b89208.png","path":"images/img_59b2697b89208.png","modified":1,"renderable":0},{"_id":"source/images/image-20190917165314461.png","path":"images/image-20190917165314461.png","modified":1,"renderable":0},{"_id":"themes/pure/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"source/images/img_5b518515e4fe7.png","path":"images/img_5b518515e4fe7.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"c1c836de9ed247345e9e00a9562288408ee15638","modified":1571470624440},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1569565286651},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1569565286651},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1569565286652},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1569565286652},{"_id":"themes/pure/_config.yml","hash":"e3be3ec4feb81d999c61c26f04762ddc8532fb64","modified":1572335011748},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1569565286653},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1569565286675},{"_id":"source/about/index.md","hash":"69d55cfe8a7f2fe8082dee70ee8dde67ebc1a053","modified":1576134610337},{"_id":"source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1569567292017},{"_id":"source/_posts/Three-shared-storage-comparisons.md","hash":"db56d42ce80a24e73ead69a26c86b869c3ab7444","modified":1571641063060},{"_id":"source/_posts/.DS_Store","hash":"e33573346915414fbc92309321e2db134c67d6c8","modified":1571487123359},{"_id":"source/_posts/apache-auth.md","hash":"e8dd690e7730b1fa9ed6bca7cfe19dc88e06f4a2","modified":1571641062835},{"_id":"source/_posts/apache-configure.md","hash":"c7377ce497d3aee8761a569df8167de9ed91dee3","modified":1571641062923},{"_id":"source/_posts/apache-running-mode.md","hash":"83d2bcc3e2cf02bdbc401558e7719a10912c3f17","modified":1571641063061},{"_id":"source/_posts/apache-webserver.md","hash":"bd4d894b2adcb5586865b92b8b16b006e191276b","modified":1571641062835},{"_id":"source/_posts/apachetop.md","hash":"96d2f16d07414ef26705a4beb299908379139b9b","modified":1571627992562},{"_id":"source/_posts/apppool-0x80-error.md","hash":"2fbdd9f1b94dfe4202dd7fcc876b57138702636b","modified":1571648529437},{"_id":"source/_posts/aws-edge-lambda-modify-origin-host.md","hash":"01528031fbe83ce15ef27e88dd81ffd3afb2c445","modified":1571641063061},{"_id":"source/_posts/build-mysql-proxy.md","hash":"228d2c6e3e09e6190c3dc8811da145cf527e7688","modified":1571641062921},{"_id":"source/_posts/cloud-not-run-curl-config.md","hash":"a499e2120706852fc29d502212db6242e54aaefa","modified":1571641063013},{"_id":"source/_posts/cpulimit.md","hash":"bd0d450f3173d8129f177d03fe86a6dcf031402a","modified":1571641062386},{"_id":"source/_posts/dedecms-yanzhenma.md","hash":"20cb4dbb6d098559ebeda276d6f8803d1066080e","modified":1571641062669},{"_id":"source/_posts/deploy-zabbix_agent-to-windows.md","hash":"aa5f1cc8a16dc458b97bad204ed247cc74490f22","modified":1571641063013},{"_id":"source/_posts/django-reset-admin-password.md","hash":"4501de3d6616ddbaf342f3ba8f7ceac5ba911f74","modified":1571641062570},{"_id":"source/_posts/dns-server.md","hash":"33f4c45949de1ea178d322a3302fe47030149532","modified":1571641062819},{"_id":"source/_posts/dns-view.md","hash":"46a14c5b186deb1ed9f816b10c81b08863281756","modified":1571641062921},{"_id":"source/_posts/docker-privileged.md","hash":"0fec3ef29a2cabd35ad8f7318ea33056d614cad1","modified":1571641063060},{"_id":"source/_posts/domain-status-code.md","hash":"7aa75cbf0c6c2b75bcf143d93d386d9b0f5f1fbb","modified":1571641063047},{"_id":"source/_posts/fix-zabbix-item-not-supported.md","hash":"c3bd1bba5167717748ebfa9eaa2fef201bf75483","modified":1571641062898},{"_id":"source/_posts/graphite_relay-sharding.md","hash":"4b65a77ae92f5f282d618e251b43b5fdea86075d","modified":1571641063060},{"_id":"source/_posts/http-cache.md","hash":"8d78e2f658a05a4126d7350d6e2131d893780b23","modified":1571641062935},{"_id":"source/_posts/iis-auth.md","hash":"494879082ba4a2f9675e5c3b043c5b2f2ec1e7ab","modified":1571648511365},{"_id":"source/_posts/iis-backup-restore.md","hash":"0a2e26180b1dedc2856f73bc32ad362ef8d80883","modified":1571641063060},{"_id":"source/_posts/iis-get-pid.md","hash":"c9221392faabc7c70b584d17b7525a84179bed29","modified":1571641062478},{"_id":"source/_posts/iis-set-urlrewrite.md","hash":"92c1c75387ebc994a3523b55cc411e5cccc0b1fd","modified":1571648399559},{"_id":"source/_posts/iptables-count.md","hash":"0651670e509542a8551365519a4560ad229d609d","modified":1571641062886},{"_id":"source/_posts/iscsi-store.md","hash":"a9af46400acd72f74f77063f65714cdedc47102a","modified":1571641062442},{"_id":"source/_posts/k8s-ingress-nginx.md","hash":"defb867af0a5c7236f1ef3b245c4c14f243435c3","modified":1571641062989},{"_id":"source/_posts/k8s-tcpdump.md","hash":"116768bf717e3cd69a9fb8ca525dadac3926d919","modified":1576134308737},{"_id":"source/_posts/keepalived-multi-server.md","hash":"7911f1133c2a1563ac5da090e601a5e24e4bc802","modified":1571641063061},{"_id":"source/_posts/keepalived-not-support-IPVS.md","hash":"d6aaa54992eaa02991372fccae915d779d82be24","modified":1571641062989},{"_id":"source/_posts/linux-boot-workflow.md","hash":"0b7cc308d99ff8ccb7c39c40a0a49b2c53316edd","modified":1571641062697},{"_id":"source/_posts/linux-crontab-and-at.md","hash":"dd4098f22265421dc4d152d1fc27b9ede65898f3","modified":1571641063061},{"_id":"source/_posts/linux-disable-arp.md","hash":"521a3e6acd19a1ae677680a67bb18858a51b84fc","modified":1571641062477},{"_id":"source/_posts/linux-disk-quota.md","hash":"44b73d9a90d18cc301e3306884a7550b4d68b061","modified":1571641063047},{"_id":"source/_posts/linux-find-commands.md","hash":"58c7f3932b4a1c8ddf794693988bccd0cee5959a","modified":1571641062716},{"_id":"source/_posts/linux-kernal-paramenter.md","hash":"cbff94265911959a9fb1aed1bdee36b0cb021634","modified":1571641063061},{"_id":"source/_posts/linux-limit-tools.md","hash":"8d9f82a4c59c8a4ff933bbbbc7993af79a9bfa25","modified":1571641062327},{"_id":"source/_posts/linux-ln.md","hash":"f183272511a84663eb1bc152648c8b4dd86214f4","modified":1571641062819},{"_id":"source/_posts/linux-log-system.md","hash":"8c2a53db62a6c8a60ccd318c5bf02866d776f094","modified":1571641062910},{"_id":"source/_posts/linux-lvm.md","hash":"908d778a42bb86cc018df23f1d780df9ec646989","modified":1571641062989},{"_id":"source/_posts/linux-nf-conntrack-drop-package.md","hash":"d812c75a86236373e438e39766d3c72536c568fc","modified":1571641062328},{"_id":"source/_posts/linux-premissions-and-acl.md","hash":"4153dd05f1efa034c4cef1a6b289a89e76fec23f","modified":1571641063061},{"_id":"source/_posts/linux-process-manager.md","hash":"ddb1e6875ce2d28e79a68758d2f6a3a04d3cc119","modified":1571641063011},{"_id":"source/_posts/linux-process-status.md","hash":"dd06da3af10c9cf0014871a22636a32bdd02a35c","modified":1571641062805},{"_id":"source/_posts/linux-start-stop-daemon.md","hash":"67997c1963a72700e0b2bfe5fa74e31241172d16","modified":1571641062835},{"_id":"source/_posts/linux-stdin-stdout-stderr.md","hash":"5180f7b5a5ab33ba06dd1902776609adc58ff0ec","modified":1571641063061},{"_id":"source/_posts/linux-tree.md","hash":"138a8cc807f7c991807d4452fcd865573a6b3d9d","modified":1571641063061},{"_id":"source/_posts/linux-user-and-group.md","hash":"d78a04316508a47f293b800a64d050dc4d040356","modified":1571641063061},{"_id":"source/_posts/linux-yum-repo.md","hash":"985ea7988a722d4617e7d36c75c33a8d842fee01","modified":1571641063060},{"_id":"source/_posts/lvs-dr.md","hash":"aebd79918cd3b3791970b6765d8d891be3df9014","modified":1571641063047},{"_id":"source/_posts/lvs-nat-cluster.md","hash":"bfa3eb35a203abcf4b98c247263ea40f629c4417","modified":1571641062819},{"_id":"source/_posts/lvs-three-mode.md","hash":"7d7c13370b48d18b9eae9efa2186bf480eef8ea7","modified":1571641062620},{"_id":"source/_posts/magent-create-memcache-cluster.md","hash":"4357db085c7f48704a39d91e94bd1615e3237fad","modified":1571641062620},{"_id":"source/_posts/mime-type.md","hash":"fa73bd2f96a64c5d7c898ed50bb07bcf8065164b","modified":1571648413031},{"_id":"source/_posts/mssql-deny-save.md","hash":"86e645a4d7b300c237ce5abfd51a621fb4edd4f8","modified":1571648421279},{"_id":"source/_posts/multi-tomcat-server.md","hash":"424dbf2474c01e6e6827ecd008ecb39a639c9b5d","modified":1571641063013},{"_id":"source/_posts/mysql-binlog-recovery-data.md","hash":"46961d51f56ac4a639392fdd150464fe0254a54a","modified":1571641062910},{"_id":"source/_posts/mysql-lock-table.md","hash":"57b044518c0fca222cf5c9c08b7f4c0fc14d39b2","modified":1571641063061},{"_id":"source/_posts/mysql-master-master.md","hash":"8300f36251803c8c482ea83d704f8046c5dbece8","modified":1571641063060},{"_id":"source/_posts/mysql-master-slave.md","hash":"8c6044a5b0f6880a03dc01e8d0a4b3029ff1e34c","modified":1571641062697},{"_id":"source/_posts/mysql-proxy-amoeba.md","hash":"16b7e9e3709c875e24b52b3f1fddc54cf3065e24","modified":1571728425997},{"_id":"source/_posts/mysqlcheck.md","hash":"8648ee3f94dc6ecf4ff37126d74d3fac2b2faeb2","modified":1571648516752},{"_id":"source/_posts/mysqldump-error.md","hash":"1dbba936a7daebbd6d41d0d6184837ac48a9d20e","modified":1571480548240},{"_id":"source/_posts/nginx-referer.md","hash":"28c9171c941a31486d2278aa9f6bfb1209f83a38","modified":1571479949779},{"_id":"source/_posts/nginx-remote-port-is-null.md","hash":"9b18080d126d50d70d6a9aaef329b7e5ffe6499e","modified":1576134412916},{"_id":"source/_posts/nginx-server_name_hash_bucket_size.md","hash":"0fa41a295319819d2b7a15fe6ac65b1fb53386a4","modified":1571641063017},{"_id":"source/_posts/nginx-uwsgi-deploy-django.md","hash":"e33d6ca580bbb50876ff3d3303a7135666713ed7","modified":1571641062570},{"_id":"source/_posts/nginx-websocket-proxying.md","hash":"00edcb45d2b43ff3b0a5bffb714733d3d85560a3","modified":1571641062989},{"_id":"source/_posts/ntp-server.md","hash":"cf3682274b58286e141f944461d3d87f765aa7b5","modified":1571641062386},{"_id":"source/_posts/php-data-timezone.md","hash":"417f4274386362b1bdcf104468dcc54304273959","modified":1571641062386},{"_id":"source/_posts/php_curl.md","hash":"e00f52a0e09579fdab4676b3426126e177289a3a","modified":1571641062702},{"_id":"source/_posts/phpcms-v9-password-retry-too-more.md","hash":"0689a27220c5a2e07f9ea338ba82a28ae385b76c","modified":1571648534347},{"_id":"source/_posts/phpmyadmin-upload-limit-size.md","hash":"8a1b995bedc514dc0ff2bbb55fcdb80d5b1f6c05","modified":1571648522048},{"_id":"source/_posts/postgresql-replica-status.md","hash":"9da3e5c4c1fee73fa8f3bd3277d78bd685b4e5c3","modified":1571478034388},{"_id":"source/_posts/pxe-kickstart.md","hash":"99ad47153bf4795feeb760abf17db7acfe8d9bf5","modified":1571641063002},{"_id":"source/_posts/python-code-socket.md","hash":"ea4ec2b3b83b4e8a7c0674d7212bc2f9e0a7499d","modified":1571641062386},{"_id":"source/_posts/python-is.md","hash":"b9b50a3f926649789988542890c2c9679b65b136","modified":1571641062910},{"_id":"source/_posts/python-send-mail.md","hash":"0e614dbfb8595f8c1389633ee808bfa2cf035fac","modified":1571641063061},{"_id":"source/_posts/python-tab.md","hash":"b5f1d34b3efeeb31ac70b0a80e30f20382af5e3b","modified":1571477236679},{"_id":"source/_posts/rbash-add-readonly-user.md","hash":"a6e15fa2fccd50bd1487bbcda0640353977f9702","modified":1571641062831},{"_id":"source/_posts/redis-dump.md","hash":"4f413f55689aeb47452085756053cb28efde4a15","modified":1571476144060},{"_id":"source/_posts/redis-maxmemory-policy.md","hash":"3b8385e13809e5db9de5228f9a5fc789675a0851","modified":1571476282213},{"_id":"source/_posts/redis-repl_diskless_replication.md","hash":"660c960ff464635c01fd4c32186f2acea0bac044","modified":1571641062620},{"_id":"source/_posts/redis-slave-replica.md","hash":"0a55334a4b16b5fcab891f3c869b3303db804117","modified":1571474621709},{"_id":"source/_posts/redis-trib-rb-create-cluster.md","hash":"47c180f0c3e7cd51d67fb9f0cd27a274e7e00569","modified":1571641062922},{"_id":"source/_posts/redis-trib-rb.md","hash":"87b879e221c7a462f035c24e8b1d0c2d9c33b3ba","modified":1571641062989},{"_id":"source/_posts/repcache-magent.md","hash":"11300e503326085461501c416cf2f68707391db7","modified":1571641062570},{"_id":"source/_posts/rhcs-ha-cluster.md","hash":"c3d70daf29f6178293e362e6614cdeae4ac7d304","modified":1571473629995},{"_id":"source/_posts/session_start-error.md","hash":"4ba7bc0b551b9802b45563c9ea5896596f1b32bb","modified":1571648555142},{"_id":"source/_posts/shell-advance-variable.md","hash":"76a4f26533613428cb929046437c2b62fde897a3","modified":1571641062989},{"_id":"source/_posts/shell-command-watch.md","hash":"90e609617f9d27977fa66df4b0fefa8b68356a52","modified":1571641062819},{"_id":"source/_posts/shell-special-env-variable.md","hash":"54cc5c90ae67f247399ae6a75d4cdf7330d904d6","modified":1571472382355},{"_id":"source/_posts/slb-502-debug.md","hash":"f812518051edfe6cd48af38788cbf1d0524b474f","modified":1571472707770},{"_id":"source/_posts/ssh-authorizedkeyscommand.md","hash":"ba403afdfb215394d65992d2a09447386eff51be","modified":1571641063061},{"_id":"source/_posts/statsd-cluster-proxy.md","hash":"2188629e28d325d041a130182da3f4265fc9e4db","modified":1571641062329},{"_id":"source/_posts/tcp-state.md","hash":"4455aea22e2a1ac79498ed4d77949af8da39caab","modified":1571641062714},{"_id":"source/_posts/tcp-time_wait.md","hash":"f7b803a615582b2e37cfac2072db3dee24d3fc62","modified":1571470803304},{"_id":"source/_posts/tomcat-change-webroot.md","hash":"7ceaf8ec7736874036377b9e733fb419aa3bb95d","modified":1571469886748},{"_id":"source/_posts/tomcat-permgen-space.md","hash":"b059ea769938d034cd3f1535410182869ceca12b","modified":1571641062570},{"_id":"source/_posts/tomcat-server-name-alias.md","hash":"c290f4f9e75aab22aeaaee5fc0e2b7175bf14066","modified":1571641062989},{"_id":"source/_posts/tomcat-server.md","hash":"41a98dcef70ef90518f11e5a134ca1a7e43be80b","modified":1571641063018},{"_id":"source/_posts/tomcat-virtual-host.md","hash":"c24d3b3e5e23844c00f2f889d4cc82385ba76d89","modified":1571469612516},{"_id":"source/_posts/transaction-isolation-level.md","hash":"7802763be224fdd517b81c194d5f3623ff4f172e","modified":1571726898709},{"_id":"source/_posts/twemproxu.md","hash":"bf3197f649e2dc17245a62d86938ea84a83ac00e","modified":1571641062606},{"_id":"source/_posts/twemproxy-configure.md","hash":"bf240a155fe5704bc3af6402fe91c558a0e8a8bf","modified":1571641062989},{"_id":"source/_posts/udev.md","hash":"c1954146ca4f2dfc75fc8453505de821dbd5d679","modified":1571641062910},{"_id":"source/_posts/uwsgi-invalid-option-x-getopt_long-error.md","hash":"5f4db1c760289c2ec3c40a722e1ffa63d8cc97c8","modified":1571641062571},{"_id":"source/_posts/vagrant-mulit-vm.md","hash":"90428d956ea1283c7e462e653b0770b82ebf7b93","modified":1571641062570},{"_id":"source/_posts/vagrant.md","hash":"e5aff4a05201df85aef5bfb97a7ab37bd517672c","modified":1571641062697},{"_id":"source/_posts/vagrantfile.md","hash":"45330e90deb16230b20a1abeeb489fb5861bf91a","modified":1571641062922},{"_id":"source/_posts/vcenter-expand-disk-to-linux.md","hash":"c2c7df044f80053d71deb604e2c4ca85f9f8d42e","modified":1571641062697},{"_id":"source/_posts/vcenter-expand-disk-to-windows.md","hash":"60e92d47a5a1a660dde77d1f893b046d67977440","modified":1571641062593},{"_id":"source/_posts/website-download-apk.md","hash":"1f86a4e2fca5df1230c75fda6e5814481df3d920","modified":1571648539371},{"_id":"source/_posts/window-force-delete-file.md","hash":"7aac78a6048c92ebbdeeb24a77e268142e90a92d","modified":1571728374182},{"_id":"source/_posts/windows-cant-open-contral.md","hash":"f5bbe2db4bdbc9df90f31003279a86a68dc42765","modified":1571648544150},{"_id":"source/_posts/windows-server-memory-limit.md","hash":"bdfb8b07bdaa9f06d54f2f520c4c76f45472dc46","modified":1571648549360},{"_id":"source/_posts/zabbix-alert-to-wechat-script.md","hash":"06599a9a32ce880fd0cc9d8e5a0b2f4c5e3bba34","modified":1571641063061},{"_id":"source/_posts/zabbix-distrubuted-monitor.md","hash":"064cd795c39b3c58947e03bc5a28aa590323f36e","modified":1571641062570},{"_id":"source/_posts/zabbix-less-than-25-free-in-the-configuration-cache.md","hash":"109f4174237067c645df98dad1be643db073622d","modified":1571641062921},{"_id":"source/_posts/zabbix-monitor-memcache.md","hash":"a92b062aa325946c8654e5cd47575a841214c145","modified":1571641062702},{"_id":"source/_posts/zabbix-monitor-mongo.md","hash":"699ce84be4e96c4432270f7c8dc81f47e7817ddd","modified":1571641063061},{"_id":"source/_posts/zabbix-monitor-port.md","hash":"68a36cc910472b5803ad67d88cf403b819317809","modified":1571641062819},{"_id":"source/_posts/zabbix-monitor-process.md","hash":"993e13ffa11bd57c44b62d1c24489338a83c44ea","modified":1571641062493},{"_id":"source/_posts/zabbix-monitor-redis.md","hash":"d044084fc6617e552b6993b9b66a0db2fbab70b2","modified":1571641062697},{"_id":"source/_posts/zabbix-monitor-ssl-cert.md","hash":"ad1a6cf206e327a093f9daad03d3bce6f72bd9b6","modified":1571641063061},{"_id":"source/_posts/zabbix-server-configure.md","hash":"8e794ea63caefcc71bb3b408d39524a9efbc70f9","modified":1571641063061},{"_id":"source/_posts/zabbix-trigger-function.md","hash":"b6ee7ce758df9b28c1ecb9f7d8deba9328716a58","modified":1571641062328},{"_id":"source/_posts/zentaopms-deployment.md","hash":"4300bd9fedf18fb0691e115ef80c805c5f24f4d3","modified":1571641063061},{"_id":"source/links/index.md","hash":"826e230a39513d3e6d5d2940388d11f82235433e","modified":1571650400417},{"_id":"source/images/11-300x286.png","hash":"1b12c82d7e221312540e39d99c91f6a8357df045","modified":1571637001151},{"_id":"source/images/2-250x300.png","hash":"2e1cd3283898c2f7c5825ca123a2a97c1e381fc9","modified":1571637001133},{"_id":"source/images/DOC8GFX6-300x139.png","hash":"f40599b0599fcd031a74342e9d0d1c37f8778a9c","modified":1571637001137},{"_id":"source/images/apachetest-300x89.png","hash":"3a0b80e416b6294476ff50d2e22d50163ac57039","modified":1571628310088},{"_id":"source/images/clipboard.png","hash":"db17335ae3dc732502a3ff4dddacbd85e9a04414","modified":1571483202441},{"_id":"source/images/clipboard1-300x134-20190917165133735.png","hash":"2f35aad40c96d7428f7f920b344c69d667590eae","modified":1569486916577},{"_id":"source/images/clipboard1-300x134.png","hash":"2f35aad40c96d7428f7f920b344c69d667590eae","modified":1569486916598},{"_id":"source/images/clipboard2-246x300.png","hash":"496568a3c79a421c35ee076cdd967d566ec074dd","modified":1571637001183},{"_id":"source/images/ha.png","hash":"59ffdc2daf448ab87e8bb9b24514ce094e058816","modified":1571473152476},{"_id":"source/images/ha2.png","hash":"22419e7881858256a0ed8e34b648201308864dae","modified":1571473152460},{"_id":"source/images/hainstall.png","hash":"46f87efb34cb01db975e87cf9bb6e9f7262b20c0","modified":1571473152477},{"_id":"source/images/http-cache-control.png","hash":"6593afbbabcb0996359e27a77353998aa9759f1b","modified":1571499140901},{"_id":"source/images/image-20191021135643975.png","hash":"f6dacb60c8ef4f12205c7d0abada960dbe0159c5","modified":1571637403976},{"_id":"source/images/image.png","hash":"2dead1110ec1f44037aae6b3477cf63674a7044c","modified":1571499140245},{"_id":"source/images/img_56f4a9789a5c5.png","hash":"f841b8b06e115c191f755aad6efc96b652cdb038","modified":1571630316650},{"_id":"source/images/img_56f4a99aa9435.png","hash":"9a81670acdac1c8a9e71a21c62ff0c664febf18f","modified":1571630316666},{"_id":"source/images/img_56f4a9875257e.png","hash":"53ffc7aeb28fa2bb3d6f139410ca4effd516b0a1","modified":1571630317030},{"_id":"source/images/img_56f4a9ab888d0.png","hash":"a3384d08c417ce42df34a4d847eed880a896acf7","modified":1571630316680},{"_id":"source/images/img_56f4aa6c69a26-20190917143633077.png","hash":"1854be7b0916af4648c9a314593c8b8990d751c0","modified":1569486916597},{"_id":"source/images/img_56f4aa8c14ae0-20190917143633236.png","hash":"09c4d00f74e00656eb1bef1140adc7802b785777","modified":1569486916574},{"_id":"source/images/img_56f4aa8c14ae0-20190917145027287.png","hash":"09c4d00f74e00656eb1bef1140adc7802b785777","modified":1569486916578},{"_id":"source/images/img_56f4aa989af5e-20190917143633212.png","hash":"f810f94576d604af90d0bd665323e784a5eb7bcc","modified":1569486916568},{"_id":"source/images/img_570da13048078.png","hash":"0292f0426e9a4ec009abc39964e81c6814273394","modified":1569486916566},{"_id":"source/images/img_570da1465a8dc.png","hash":"561da3e1edaaff1999fa203bd938bdf89967d980","modified":1569486916579},{"_id":"source/images/img_570da15f9ead1.png","hash":"c256a1f98473d58727b1aa2258c8b298eaf5d052","modified":1569486916580},{"_id":"source/images/img_5773310c679a1.png","hash":"84ddd7cd21942ad93875be02c5952db2eb9491bb","modified":1569486916571},{"_id":"source/images/img_5877344e51cd6.png","hash":"b47b4cd849a434480681e14bc9b0e63bbb939e8c","modified":1569486916611},{"_id":"source/images/img_587dde19b6b47.png","hash":"766c8be87b4ea15ac8f367049ef2721b93d2cfa7","modified":1571623665167},{"_id":"source/images/img_58802ffca93b9.png","hash":"6920935b7932b8eb29931460f184c8b20e0ee264","modified":1569486916583},{"_id":"source/images/img_588031f4a62e1.png","hash":"c51c318af01f841991aa58a499fc57962931d891","modified":1569486916590},{"_id":"source/images/img_58803215d9370.png","hash":"41db0b6faee076ba536348173c572f39ed14d4f8","modified":1569486916601},{"_id":"source/images/img_5880322f10890.png","hash":"e73fa0d077b8972d69073abfa0782067d672730c","modified":1569486916569},{"_id":"source/images/img_58ddc18a1993a.png","hash":"e3e303a981a79e6480b9289198baafa631369c2c","modified":1571623469019},{"_id":"source/images/img_58ddc1b2d8078.png","hash":"53f19404471eb2437000d50dafdadab98bbb80ef","modified":1571623469063},{"_id":"source/images/img_58ddc20c6f8c3.png","hash":"6637028cc18d347669ffdd962580203d19b12cc2","modified":1571623469064},{"_id":"source/images/img_59b269634a216.png","hash":"51c6094920e288cb233d611dabcc247659ea8d3e","modified":1571470923027},{"_id":"source/images/img_59b2698d5658f.png","hash":"c7308db8045ee884af54a6d83c767e8c6d4e7274","modified":1571470922966},{"_id":"source/images/img_59b26b3126991.png","hash":"5c2aed7fcc584c781e2b59ed657ee83be98b8218","modified":1571499469134},{"_id":"source/images/img_59c35cd9ab71b.png","hash":"602cda8dd6854cb3e6f0d7d80ca6af569a49d02b","modified":1569486916586},{"_id":"source/images/img_59c35d1d930c1.png","hash":"299bbc1a1fb906d810f706e7a3e292e5cb98df99","modified":1569486916585},{"_id":"source/images/lvsnat.png","hash":"d1248d59fdedefb0f4d8189cdb31e2206bd19cfb","modified":1569486916608},{"_id":"source/images/tomcat-300x84.png","hash":"41ef0d0d8c20b8f12e845db1b342633b6c9e24c2","modified":1571390811653},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1569567301567},{"_id":"source/tags/index.md","hash":"22dd3308e0a3db852e008fa8c8d526142e790dcb","modified":1569490386254},{"_id":"source/tips/index.md","hash":"dfbdc60b84c51dd11d375c8dd48e80dbdf662df0","modified":1571648284018},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1569565286655},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1569565286655},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1569565286655},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1569565286656},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1569565286672},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1569565286672},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1569565286672},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1569565286673},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1569565286673},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1569565286674},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1569565286674},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1569565286674},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1569565286674},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1569565286674},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1569565286674},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1569565286674},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1569565286675},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1569565286689},{"_id":"themes/pure/source/favicon.png","hash":"8ee63c36da95b5e2083a84c7798d16c045fc71b6","modified":1571294817480},{"_id":"source/images/image-20191018151450374.png","hash":"30058eb5e01ed0926dea58791fd0b508c5758735","modified":1571382890374},{"_id":"source/images/image-20191018172515467.png","hash":"21fb97c079dd7e42e3f740e0fc067a5ac8722159","modified":1571390715469},{"_id":"source/images/image-20191021135659882.png","hash":"bafb09c042885b8954e23b19dfd195742c836e92","modified":1571637419882},{"_id":"source/images/image-20191021135714997.png","hash":"f4261de4235e16a616bae98494b6898e5b3147cf","modified":1571637434998},{"_id":"source/images/image-20191021135724279.png","hash":"4eee96043d0eb02254acff5b183f3a5ee6eae784","modified":1571637444279},{"_id":"source/images/img_56f4aa5d219ba-20190917143633356.png","hash":"32aaa1e95a4f871499b08b384eeaeeec34518d0c","modified":1569486916566},{"_id":"source/images/img_56f4aa815cb3c-20190917143633401.png","hash":"85842619f56096d94dc496b659e8e9c7d1cf02d3","modified":1569486916610},{"_id":"source/images/img_570da173ef401.png","hash":"722a7d3c25090830d23aa2656d7f262f8db5de34","modified":1569486916595},{"_id":"source/images/img_577330e1e5d06.png","hash":"2ad2f39c516a0b62a7b9fd2b9e2099d01e0efa24","modified":1569486916576},{"_id":"source/images/img_577330f8871b5.png","hash":"d545dc4f729b5d7a5e5d24d20f8dfe609be300d9","modified":1569486916588},{"_id":"source/images/img_5773313591d94.png","hash":"77e4c5b14a0dcda0e86977ba0bf899e4b7124947","modified":1569486916582},{"_id":"source/images/img_57733153a13cb.png","hash":"beb066fff61bdfe490890a847b21f3a42dcbdc12","modified":1569486916609},{"_id":"source/images/img_587733a5ae0ba.png","hash":"ef234d83dfbb9d3346bc271b3d49cb081cd046e9","modified":1569486916603},{"_id":"source/images/img_5877340a43dea.png","hash":"02d0360688cddd0d1490df01a0282bd793d63dce","modified":1569486916599},{"_id":"source/images/img_587ddd23c02a3.png","hash":"0b3ec3f54e9057bda815651e0806dc5acdeec335","modified":1571623665294},{"_id":"source/images/img_59b26b4437729.png","hash":"4948ab6dee9db76e37dd56547ca3d45249ae5190","modified":1571499469133},{"_id":"source/images/img_5a66a577176c8.png","hash":"d623866b5c05e05f905c1fc739f23d2234249784","modified":1571470580793},{"_id":"source/images/img_59c35d389b1c5.png","hash":"50a728e86b1f9ef5e7e012db3f43cf3244a38927","modified":1569486916584},{"_id":"source/images/san.png","hash":"e468f9b1f14503d51842dc8f56edb9b5fc75e9b2","modified":1571499791803},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1569565286676},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1569565286677},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1569565286678},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1569565286679},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1569565286680},{"_id":"source/images/QQ20161220-0.png","hash":"41308380ef4ee41f73f776300e1595b9d7f63189","modified":1571629328805},{"_id":"source/images/img_577330bdc322e.png","hash":"8e6e049cb4c08d9c845ee1a08220fd7b30dc9c9a","modified":1569486916593},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1569565286653},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1569565286654},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1569565286654},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1569565286654},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1569565286654},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1569565286654},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1569565286655},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1569565286655},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1569565286655},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"61ec9d04eaafc44b702294951c3ae03bb53df201","modified":1571653652891},{"_id":"themes/pure/layout/_common/head.ejs","hash":"560eb7b9a52f5ec0b3d7a3b133e49baa56c62cd2","modified":1571654034582},{"_id":"themes/pure/layout/_common/header.ejs","hash":"eb98e355f7785bb9befc2bd3ea0a1311ddbb1c69","modified":1571647939770},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1569565286657},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1569565286657},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1569565286657},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1569565286657},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1569565286657},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1569565286658},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1569565286658},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1569565286658},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1569565286658},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1569565286658},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1569565286658},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"06186553b96d89b9bdfd2342cdab63a7ebeaf6ac","modified":1571737351208},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1569565286659},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"cbd4ce1472c89c07a09f0ebaa268559c08d42104","modified":1571732374013},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1569565286662},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1569565286662},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1569565286662},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1569565286665},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1569565286666},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1569565286666},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1569565286666},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1569565286666},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1569565286667},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1569565286667},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1569565286667},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1569565286667},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1569565286667},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1569565286668},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1569565286668},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1569565286668},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1569565286668},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1569565286671},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1569565286668},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1569565286671},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1569565286672},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1569565286672},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1569565286696},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1569565286697},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1569565286699},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1569565286700},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1569565286702},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1569565286702},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1569565286702},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1569565286702},{"_id":"themes/pure/source/js/insight.js","hash":"078880783984873abc0f53701f6a92295b81f9b1","modified":1571728088567},{"_id":"source/images/1.png","hash":"fbe8f2067ce2f6c7423cfef7f7a5b6639da08662","modified":1571483202558},{"_id":"source/images/img_57b1811567e55.png","hash":"f57f2b990ca2dafd270adf4461ccf1c6b64172dc","modified":1571627974751},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1569565286707},{"_id":"source/images/img_5b5184bfd49e3.png","hash":"bee215303308e2cede55ddbba94846ebfaab7de1","modified":1571471894772},{"_id":"source/images/img_5bbefa0f833d9.png","hash":"3b368170e1f12c845932f3fdafa8be65da7c111e","modified":1571631118261},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1569565286659},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1569565286659},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"abcd8d3ea9fc962f83fdf75f6e7c1a0916a3a28c","modified":1571737887232},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1569565286660},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1569565286661},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1569565286661},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1569565286661},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1569565286661},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1569565286661},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1569565286661},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1569565286661},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1569565286661},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1569565286662},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1569565286662},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1569565286663},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1569565286663},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1569565286663},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"4773905f82fa173432495507969725a0dba4fc49","modified":1571655216292},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1569565286663},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1569565286664},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1569565286665},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1569565286665},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1569565286665},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1569565286695},{"_id":"themes/pure/source/images/avatar.jpg","hash":"8ebc792488e45126aa195dc065ef2a9590d0908b","modified":1571294911088},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1569565286700},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1569565286700},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1569565286701},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1569565286701},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1569565286701},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1569565286703},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1569565286706},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1569565286704},{"_id":"source/images/img_5bbef98529a61.png","hash":"b450adb8c2210f032bbb3ba3d740982ce29a8b94","modified":1571631118272},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1569565286693},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1569565286699},{"_id":"source/images/img_5b5183b84d4dd.png","hash":"6899405fd33e268a2907b14319433729a80040f1","modified":1571471895005},{"_id":"source/images/img_5b5184fb1c8d4.png","hash":"4a6cc38b8b70dac09cd6f976101e5c07ed8430c5","modified":1571471895076},{"_id":"source/images/img_59b26b60dc7e7.png","hash":"d46319756f42ddaae0c56e765ad5a54f1c859099","modified":1571499469258},{"_id":"source/images/img_59b2697b89208.png","hash":"a94e2009abc1ea6919fe8dba1201072879180f53","modified":1571470923206},{"_id":"source/images/image-20190917165314461.png","hash":"1cf6dfb86d084ced7cbc466aa87d137d9ad838a7","modified":1569486916606},{"_id":"themes/pure/source/images/avatar.png","hash":"97ec5ba51935886e732368bfd59e3a6d4ddff421","modified":1571295425512},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1569565286688},{"_id":"source/images/img_5b518515e4fe7.png","hash":"1dce10cf18b5a9ad7336ad661e46b134944fde81","modified":1571471895638},{"_id":"public/baidusitemap.xml","hash":"bbba73de3efc170052fd96874aaa9d3f59311205","modified":1576134796569},{"_id":"public/atom.xml","hash":"c12c9865f692c71205cb730a461faaa8fb5025b7","modified":1576134796571},{"_id":"public/content.json","hash":"0acbd09052b40364ba5eb587ff0277ecf00f925e","modified":1576134798639},{"_id":"public/search.json","hash":"3c23517c823cfa9130946a33a080d597cd617d63","modified":1576134798641},{"_id":"public/sitemap.xml","hash":"80e4bb49c82990c26d2b700c247cd82b534f917b","modified":1576134798695},{"_id":"public/about/index.html","hash":"c8a8614f7ef65369a1344e99dd68066822f891ec","modified":1576134798725},{"_id":"public/categories/index.html","hash":"de596a5a37c9fef06ee4a1316a180f47f7a8d70e","modified":1576134798725},{"_id":"public/links/index.html","hash":"8ae0875c17fe9ac6f411cbfd071223a0b5d9e10b","modified":1576134798725},{"_id":"public/repository/index.html","hash":"c814dd91a418db010007bd66e2c5cfde2080d1a7","modified":1576134798726},{"_id":"public/tags/index.html","hash":"dd9f7ad74803a95100c8f77ddfa8658abea01f19","modified":1576134798726},{"_id":"public/tips/index.html","hash":"2ef1e50dcbd1fffb36c1261b84596900ca7c5417","modified":1576134798726},{"_id":"public/2019/12/12/nginx-remote-port-is-null/index.html","hash":"2cfa9c68f5e5d9908bc11acf6d24e1e1f0bd02a4","modified":1576134798726},{"_id":"public/2019/12/12/k8s-tcpdump/index.html","hash":"97056e120d75273a6bcf40f136c20f6eed9da0d2","modified":1576134798726},{"_id":"public/2019/09/16/k8s-ingress-nginx/index.html","hash":"ba66efa8cf47fddfd69bbc461bc8aecd408bd521","modified":1576134798726},{"_id":"public/2019/07/08/postgresql-replica-status/index.html","hash":"d43277d717418b86dc7395117b694a2abedcc06b","modified":1576134798726},{"_id":"public/2019/05/13/http-cache/index.html","hash":"f0875444fe872fa8adf2a0f8328f11c4690f3d6e","modified":1576134798726},{"_id":"public/2019/05/06/mysqldump-error/index.html","hash":"d878f00e675d0f265f9e4b711dc091f9050becec","modified":1576134798726},{"_id":"public/2019/05/06/redis-dump/index.html","hash":"352d47e8217a0134b2011139ca08225941709c16","modified":1576134798726},{"_id":"public/2019/05/06/ssh-authorizedkeyscommand/index.html","hash":"1ba5fa275e1502a4f00d1decaa335c89345d9d11","modified":1576134798726},{"_id":"public/2018/10/11/aws-edge-lambda-modify-origin-host/index.html","hash":"932716c61b55c7b5027fb2a45d3b4cbb86e15cb3","modified":1576134798726},{"_id":"public/2018/07/20/slb-502-debug/index.html","hash":"60d0297148b1c6afa9caa437f8f5c7bc309987eb","modified":1576134798726},{"_id":"public/2018/01/23/tcp-state/index.html","hash":"ce13962fc3b3860337bdba7bc681381ab56132eb","modified":1576134798727},{"_id":"public/2018/01/23/tcp-time_wait/index.html","hash":"138fa78eceb5d8d2cbc52428ea11843f702c9279","modified":1576134798727},{"_id":"public/2017/09/21/zabbix-distrubuted-monitor/index.html","hash":"dd642b3a3650fb6d5f9d7645efe1dd2c4dc74cfd","modified":1576134798727},{"_id":"public/2017/09/08/graphite_relay-sharding/index.html","hash":"3492000694137580c26ff1a135b7622fda19fed9","modified":1576134798727},{"_id":"public/2017/09/08/statsd-cluster-proxy/index.html","hash":"5ebe9fb6c3e7b16a2195bb788219930d788b4c73","modified":1576134798727},{"_id":"public/2017/07/14/redis-maxmemory-policy/index.html","hash":"ff8ec5251db2c6f4a69d4f1174a4c1e5abc64c26","modified":1576134798727},{"_id":"public/2017/04/11/iptables-count/index.html","hash":"03288e74fb10a428d68da2d128082de606e3fca7","modified":1576134798727},{"_id":"public/2017/03/31/iis-backup-restore/index.html","hash":"6164a403191ba409a8dc002dfb5beb7794bc3055","modified":1576134798727},{"_id":"public/2017/03/29/linux-process-status/index.html","hash":"571e971518b3677c2a445da5a8d59ffedeb6d19c","modified":1576134798727},{"_id":"public/2017/03/06/redis-repl_diskless_replication/index.html","hash":"385dbeee782dbf741a2648f25a9de35def954371","modified":1576134798727},{"_id":"public/2017/02/27/redis-trib-rb/index.html","hash":"ec6772818f116c0d9a2b8705779756ced9b44646","modified":1576134798727},{"_id":"public/2017/02/27/redis-trib-rb-create-cluster/index.html","hash":"d29b9fed294bd101f28002b5d229e5fd8253148e","modified":1576134798727},{"_id":"public/2017/02/09/magent-create-memcache-cluster/index.html","hash":"23d5191f506ca98acf7e885a3419bd6d1a586029","modified":1576134798727},{"_id":"public/2017/02/09/repcache-magent/index.html","hash":"e73ced47083ab3ed0b371bd7c24ede59bc592492","modified":1576134798727},{"_id":"public/2017/02/09/vagrant-mulit-vm/index.html","hash":"841e3ad934ec5f387836a4584c85429c13f30fb5","modified":1576134798727},{"_id":"public/2017/02/09/vagrant/index.html","hash":"1b776d94acbd63fd7b001989d040d532a095ba16","modified":1576134798728},{"_id":"public/2017/02/09/twemproxy-configure/index.html","hash":"c986a8c9abfa9abb804b22b096891f9965c3b54c","modified":1576134798728},{"_id":"public/2017/02/09/twemproxu/index.html","hash":"8c36b669c7750785f53cb1a7d5aedc4f70a325e6","modified":1576134798728},{"_id":"public/2017/02/09/vagrantfile/index.html","hash":"83d840563d2bf0d9304cc2d95d5057c666b95257","modified":1576134798728},{"_id":"public/2017/01/19/vcenter-expand-disk-to-linux/index.html","hash":"9c675898bfec7084f5dc68ec784b92223a129c89","modified":1576134798728},{"_id":"public/2017/01/18/nginx-server_name_hash_bucket_size/index.html","hash":"7141b435bc020ead0f2b8207e2861b16d6613bbd","modified":1576134798728},{"_id":"public/2017/01/18/nginx-referer/index.html","hash":"b7882eba30d6d2a29693997b7d263a2f4372bcf7","modified":1576134798728},{"_id":"public/2017/01/18/docker-privileged/index.html","hash":"381eaaefae5e0758a46f856db2fb87884946f7b1","modified":1576134798728},{"_id":"public/2017/01/17/iis-get-pid/index.html","hash":"47e26cb193134d4adf7378b68a7a19116179a38d","modified":1576134798728},{"_id":"public/2017/01/12/vcenter-expand-disk-to-windows/index.html","hash":"843fab10262fc6dac19d7f544a3479542ed3690d","modified":1576134798728},{"_id":"public/2017/01/07/linux-start-stop-daemon/index.html","hash":"4b2d4024c1d6b8c929f580736d28e78daa08c52b","modified":1576134798728},{"_id":"public/2016/12/20/linux-nf-conntrack-drop-package/index.html","hash":"de6f76a842f4c54fb7eb3fd8706935e72182b8a1","modified":1576134798728},{"_id":"public/2016/12/19/zabbix-monitor-redis/index.html","hash":"6a2e17746f37eae7132e5944d498d71a5d579095","modified":1576134798728},{"_id":"public/2016/12/19/zabbix-monitor-mongo/index.html","hash":"3948f6b5f49abdd621b299f24787622cc3e702a5","modified":1576134798728},{"_id":"public/2016/12/19/zabbix-monitor-memcache/index.html","hash":"1bdcb5a7d5c572e26eb6928900f4f1d19419c36d","modified":1576134798728},{"_id":"public/2016/12/14/nginx-websocket-proxying/index.html","hash":"a754a676589cdece712a689d7bfe30b22fab5ba8","modified":1576134798728},{"_id":"public/2016/12/05/zabbix-monitor-ssl-cert/index.html","hash":"7a9ee8b02b9c1620d36ce8d71bacaa5f46fdb4a1","modified":1576134798729},{"_id":"public/2016/12/05/zabbix-trigger-function/index.html","hash":"9b3e2903c6b7ac94a531f085177e35a4ca8583c5","modified":1576134798729},{"_id":"public/2016/11/23/fix-zabbix-item-not-supported/index.html","hash":"8ddda812d2a339cf5fa22da645d596236f2fe270","modified":1576134798729},{"_id":"public/2016/09/29/django-reset-admin-password/index.html","hash":"6b682996b1eb1218c94374a3d6f46c1a25c0238a","modified":1576134798729},{"_id":"public/2016/09/01/zabbix-server-configure/index.html","hash":"e589832fd087150e5b917cde9f7aa58d17e0c1d7","modified":1576134798729},{"_id":"public/2016/08/24/keepalived-not-support-IPVS/index.html","hash":"eb5e1a9ae33c2527138e2c75051ed2dc87e085de","modified":1576134798729},{"_id":"public/2016/08/24/keepalived-multi-server/index.html","hash":"29425f6dbc4c31117ee5079d3e062ad0793b0e6d","modified":1576134798729},{"_id":"public/2016/08/18/tomcat-change-webroot/index.html","hash":"03252a5dac387c9e5d8cc0d93411d0244d212946","modified":1576134798729},{"_id":"public/2016/08/15/apachetop/index.html","hash":"983dfa77aa8b417877e4a21ec5f756936180dee9","modified":1576134798729},{"_id":"public/2016/08/11/shell-command-watch/index.html","hash":"9d7a33c7137ff57ecf99a5612827cc898019e487","modified":1576134798729},{"_id":"public/2016/08/11/linux-disable-arp/index.html","hash":"2661250bcdab99c0d72a30a61b68ae1507d6aa00","modified":1576134798730},{"_id":"public/2016/08/09/zabbix-less-than-25-free-in-the-configuration-cache/index.html","hash":"74618868b70caa62ee7647834d82fc22d0a0b25f","modified":1576134798730},{"_id":"public/2016/08/02/mysql-lock-table/index.html","hash":"a94ef3996b54dbc4f3d2e31e74e7d70e669edf03","modified":1576134798730},{"_id":"public/2016/07/27/domain-status-code/index.html","hash":"9563ea397876084a691e8d618eaf21711bde29fe","modified":1576134798730},{"_id":"public/2016/07/26/uwsgi-invalid-option-x-getopt_long-error/index.html","hash":"0257d7ff2068fa79164878977b4b2f15c2d4e6ae","modified":1576134798730},{"_id":"public/2016/07/26/nginx-uwsgi-deploy-django/index.html","hash":"301ec9ac410107a5e85c51256d9afc58ea1b0c8a","modified":1576134798730},{"_id":"public/2016/07/11/linux-limit-tools/index.html","hash":"005041318259660784f11cdafd2564c29dab1dd6","modified":1576134798730},{"_id":"public/2016/07/06/cpulimit/index.html","hash":"59049e4cb3bbf494f03d234c9369ac941d7602d9","modified":1576134798730},{"_id":"public/2016/07/06/php_curl/index.html","hash":"82d8ea1c3222dcde28a1a1a117dbdc2006496ecc","modified":1576134798730},{"_id":"public/2016/06/29/zabbix-alert-to-wechat-script/index.html","hash":"56244afe0f5d269de89cce33954bda6ce5eab6ef","modified":1576134798730},{"_id":"public/2016/06/29/zabbix-monitor-port/index.html","hash":"0427441cea053d5f976b331551e059700373ce3c","modified":1576134798730},{"_id":"public/2016/06/29/shell-advance-variable/index.html","hash":"4c45c866ed43b0d03c84607eca2b89cf7f41b31e","modified":1576134798730},{"_id":"public/2016/06/29/shell-special-env-variable/index.html","hash":"fd96cd35415111a8b687acb99d760517a8afa160","modified":1576134798730},{"_id":"public/2016/06/02/rbash-add-readonly-user/index.html","hash":"04babcc66ba72cf0588a9d681eed4850b4d38444","modified":1576134798730},{"_id":"public/2016/05/27/cloud-not-run-curl-config/index.html","hash":"3683f80fd07e169e53b5bc873081d0bfe228beb3","modified":1576134798730},{"_id":"public/2016/05/26/dedecms-yanzhenma/index.html","hash":"ea5b321ef017d40be5684060bdee868e74c9031d","modified":1576134798730},{"_id":"public/2016/05/23/redis-slave-replica/index.html","hash":"f65be8ac3306b6a8d33f81559fbadb57909b7010","modified":1576134798730},{"_id":"public/2016/05/23/linux-kernal-paramenter/index.html","hash":"ff4a172b1f62e47e844a9212c1c892a7a5bbf150","modified":1576134798731},{"_id":"public/2016/04/28/python-send-mail/index.html","hash":"2c522e3691d407018ec2ba1f7cda7e3cc00aaa94","modified":1576134798731},{"_id":"public/2016/04/28/python-code-socket/index.html","hash":"edceb091e6e16ffb7afcf9a350b063f04c67823a","modified":1576134798731},{"_id":"public/2016/04/13/deploy-zabbix_agent-to-windows/index.html","hash":"9b6a54ffb7bfb7c6633cb80acf6de656aa676239","modified":1576134798731},{"_id":"public/2016/04/13/tomcat-server-name-alias/index.html","hash":"46292800375932e7458fe8acb87ee7bb7d164820","modified":1576134798731},{"_id":"public/2016/03/29/tomcat-permgen-space/index.html","hash":"5679f8457925f57d524acd3aa94ca87e8a5184f4","modified":1576134798731},{"_id":"public/2016/03/29/python-is/index.html","hash":"9171e09f6dfaa033113c132215ba52898fc49521","modified":1576134798731},{"_id":"public/2016/03/25/zentaopms-deployment/index.html","hash":"4be1c4e9469800ada637558090c74f30789d062b","modified":1576134798731},{"_id":"public/2016/03/25/zabbix-monitor-process/index.html","hash":"fa53c89206e199ce8a36864a7dbc3f3fa7b09128","modified":1576134798731},{"_id":"public/2016/03/04/python-tab/index.html","hash":"6f8df7f7e8fe8238eed5e55e53016108b49476b2","modified":1576134798731},{"_id":"public/2016/02/18/build-mysql-proxy/index.html","hash":"e55920b930c9c099b01d8d86286eaab42075653c","modified":1576134798731},{"_id":"public/2016/02/18/mysql-proxy-amoeba/index.html","hash":"d3d65adafda68578dc1a6972c6caac7666a95752","modified":1576134798731},{"_id":"public/2016/02/18/udev/index.html","hash":"a6f814d1a300a9a196721058662d5485ea170179","modified":1576134798731},{"_id":"public/2016/02/18/Three-shared-storage-comparisons/index.html","hash":"c63f9eb1b1d71a65f64f40e82adc22d5dd60ea67","modified":1576134798731},{"_id":"public/2016/02/18/iscsi-store/index.html","hash":"1156c3ed40ea5bbcebda0145d6650ee682de032f","modified":1576134798731},{"_id":"public/2016/02/18/lvs-dr/index.html","hash":"8b516bb61d682296236d01e34f80c7e1aa237e07","modified":1576134798732},{"_id":"public/2016/02/18/lvs-nat-cluster/index.html","hash":"acf42643cd9b17008488bf4de5ba8c8333cf5dfb","modified":1576134798732},{"_id":"public/2016/02/18/lvs-three-mode/index.html","hash":"fbf82a592584d4209d4b07ec415e82257dca6441","modified":1576134798732},{"_id":"public/2016/02/01/rhcs-ha-cluster/index.html","hash":"b0b6b81caab1c720b19f18777b5302a2e4b9284c","modified":1576134798732},{"_id":"public/2016/01/31/mysql-master-slave/index.html","hash":"bd9736c4a8c1ff49e49b61552045d9ec60045508","modified":1576134798732},{"_id":"public/2016/01/31/mysql-master-master/index.html","hash":"c137f9526cc2a2569943f7d9847785028327ae66","modified":1576134798732},{"_id":"public/2016/01/31/dns-view/index.html","hash":"0f328024dadfc49e70b3373b3d0ee984af86b3ea","modified":1576134798732},{"_id":"public/2016/01/31/transaction-isolation-level/index.html","hash":"4d49b68c1cf2c7d07a5372b85494651a3c1fa80a","modified":1576134798732},{"_id":"public/2016/01/30/mysql-binlog-recovery-data/index.html","hash":"40e5f106a0edea23774dd874feee983cbd19fea3","modified":1576134798732},{"_id":"public/2016/01/30/multi-tomcat-server/index.html","hash":"8d6bebc849a613fd1e33fe1c82195080eed3f246","modified":1576134798732},{"_id":"public/2016/01/30/tomcat-virtual-host/index.html","hash":"c47e7379cc09c130954ef8ae93efcea173ec7a5c","modified":1576134798732},{"_id":"public/2016/01/24/tomcat-server/index.html","hash":"6ebde5869fef339259667f21237d878e68428070","modified":1576134798732},{"_id":"public/2016/01/17/apache-configure/index.html","hash":"5553708723786b860d87a309d526bf124e661175","modified":1576134798733},{"_id":"public/2016/01/17/apache-running-mode/index.html","hash":"9505537df09fef4d8fe0f114ca97323da4a09be0","modified":1576134798733},{"_id":"public/2016/01/17/apache-webserver/index.html","hash":"2d7bcc688ab74f4e1aec175e4f04ba7f02d30007","modified":1576134798733},{"_id":"public/2016/01/17/apache-auth/index.html","hash":"a353fdeb0308275d6e340aac57a913c7227ea8de","modified":1576134798733},{"_id":"public/2016/01/17/pxe-kickstart/index.html","hash":"710581cb1071788a5ca8e902fe451e9741592919","modified":1576134798733},{"_id":"public/2015/11/30/dns-server/index.html","hash":"c86b20792ef869a9971217f3abb10f8367b7e197","modified":1576134798733},{"_id":"public/2015/11/29/ntp-server/index.html","hash":"6925d31a2b668c953bb160861b62feaa02aae142","modified":1576134798733},{"_id":"public/2015/11/29/linux-disk-quota/index.html","hash":"1c1a44ca1cac2296156891ba3d4682bad4102ff0","modified":1576134798733},{"_id":"public/2015/11/29/linux-lvm/index.html","hash":"ef189b9ff23ea0e61eac7ac4d7ebcb4cc93814be","modified":1576134798733},{"_id":"public/2015/11/28/linux-crontab-and-at/index.html","hash":"bb6e324598761f5f692d49e43428d60d016a562d","modified":1576134798733},{"_id":"public/2015/11/28/linux-log-system/index.html","hash":"86339e953e4d4ef575308ee6202c6304e172d62a","modified":1576134798733},{"_id":"public/2015/11/15/linux-boot-workflow/index.html","hash":"e5779117b41bd00f89ecf8c41f09333c0cfe856d","modified":1576134798733},{"_id":"public/2015/11/15/linux-process-manager/index.html","hash":"dbfd3b4c9a0366e27eb6199cad5dd9832995e07e","modified":1576134798733},{"_id":"public/2015/11/09/linux-yum-repo/index.html","hash":"dcda61d344cb1153947b1cd26ff976d847e0c880","modified":1576134798733},{"_id":"public/2015/11/07/linux-tree/index.html","hash":"8712174d826b8f7bb4eb68294018526e8277feb1","modified":1576134798733},{"_id":"public/2015/11/07/linux-stdin-stdout-stderr/index.html","hash":"c63944a4de87242e393ae12ef12d5c423720104b","modified":1576134798733},{"_id":"public/2015/11/05/linux-premissions-and-acl/index.html","hash":"f18e1379b089f9f41832581768c7bc277565282d","modified":1576134798734},{"_id":"public/2015/11/05/linux-ln/index.html","hash":"e14cbaaeabd66e8dc4cd47a51f6c1295ce011139","modified":1576134798734},{"_id":"public/2015/11/05/linux-user-and-group/index.html","hash":"3d0539df7dc81d14dd4d85713efa98843fa79ba5","modified":1576134798734},{"_id":"public/2015/10/16/linux-find-commands/index.html","hash":"cb29f89478132d0b4ad968313afb491d77e68ff6","modified":1576134798734},{"_id":"public/2015/10/11/php-data-timezone/index.html","hash":"681a0240312cf3bbb5993ca07b7c4bb29edd8cc0","modified":1576134798734},{"_id":"public/2015/10/08/window-force-delete-file/index.html","hash":"3228cd81c3a70d5b40ab802722cc775bf845b45b","modified":1576134798734},{"_id":"public/2015/09/30/session_start-error/index.html","hash":"804a8dfccbb23b22af57ff86bf070cef6fca4ee5","modified":1576134798734},{"_id":"public/2015/09/29/windows-cant-open-contral/index.html","hash":"f89b25ef0d8230755bc723cecf9ecb355a55b529","modified":1576134798734},{"_id":"public/2015/09/29/apppool-0x80-error/index.html","hash":"d53c98e3581c3b39291c787dcf8b3a14708d45ea","modified":1576134798734},{"_id":"public/2015/09/29/website-download-apk/index.html","hash":"3ff04704dd48dad01d47b8f7e4ff9afbb4747f52","modified":1576134798734},{"_id":"public/2015/09/29/phpcms-v9-password-retry-too-more/index.html","hash":"0a4fcb1b751af13da573196821f2f3bc17559314","modified":1576134798734},{"_id":"public/2015/09/29/windows-server-memory-limit/index.html","hash":"0c4a121787841818e6535d42af4f1995c2286a9f","modified":1576134798734},{"_id":"public/2015/08/24/iis-auth/index.html","hash":"994e5ef31334b3175016df1e1adda10420011a5f","modified":1576134798734},{"_id":"public/2015/08/24/phpmyadmin-upload-limit-size/index.html","hash":"8d3e9940db899fdb89e689f905c21206ad69120e","modified":1576134798734},{"_id":"public/2015/08/24/mysqlcheck/index.html","hash":"d874900135099ae5ab602e6eb48eccabd079d519","modified":1576134798734},{"_id":"public/2015/08/21/iis-set-urlrewrite/index.html","hash":"45e055a24c15a41d571d790378c2c1102b4690e3","modified":1576134798734},{"_id":"public/2015/08/21/mssql-deny-save/index.html","hash":"d6c81a365ce7f9f1d9630a3f82b4b6e0e06519d9","modified":1576134798734},{"_id":"public/2015/08/21/mime-type/index.html","hash":"22326416622e30c7819a19f75d1b60981703ed08","modified":1576134798735},{"_id":"public/archive/index.html","hash":"599c88d930238cc0e9ab5df81d5e1c921e26ead4","modified":1576134798735},{"_id":"public/archive/page/2/index.html","hash":"0a7be3acd07fd0ef9ddfd27a15bd43fca8a3072f","modified":1576134798735},{"_id":"public/archive/page/3/index.html","hash":"c9d97df9e8ca796ff7b2f4e54e3755543079e1b9","modified":1576134798735},{"_id":"public/archive/page/4/index.html","hash":"2c871f8a7555935ef3f721a9f634ded83aeb48bd","modified":1576134798735},{"_id":"public/archive/page/5/index.html","hash":"343d0284ada6eeae09c12e08d637e66094f55508","modified":1576134798735},{"_id":"public/archive/page/6/index.html","hash":"be33c859946d846b8a2719740aa6f72d96cc1857","modified":1576134798735},{"_id":"public/archive/page/7/index.html","hash":"b2b735e4a0f3afd2a712191f0ba298e7c6ae539a","modified":1576134798735},{"_id":"public/archive/page/8/index.html","hash":"2441662240fb9b6a6ea31ebf13ea1073650d8800","modified":1576134798735},{"_id":"public/archive/page/9/index.html","hash":"63eaba50d6fdf38b63686bd0537b1fe0a259b4e0","modified":1576134798735},{"_id":"public/archive/page/10/index.html","hash":"d7539c351029c2a806b22e2eb84b04ba9aa8ee79","modified":1576134798735},{"_id":"public/archive/page/11/index.html","hash":"e73da9bea8a98591b55a61d62e009227551bebbc","modified":1576134798735},{"_id":"public/archive/page/12/index.html","hash":"0ed27b8f33d4ce78d261b9e5d3829a17b4474d40","modified":1576134798735},{"_id":"public/archive/page/13/index.html","hash":"f241a2a3697b3e7374c29c780201f9dca00bb327","modified":1576134798735},{"_id":"public/archive/2015/index.html","hash":"2e8da7968a2bdba8cb0bb44d4c9722b070ff62b3","modified":1576134798735},{"_id":"public/archive/2015/page/2/index.html","hash":"157f591bbf2c122e746ef11ba152bd3cfec4963e","modified":1576134798735},{"_id":"public/archive/2015/page/3/index.html","hash":"ca64fa30b5ad06184d9b82e909076b71cd36b773","modified":1576134798735},{"_id":"public/archive/2015/08/index.html","hash":"361399848ad80c308560e6d5923e21d4f8277d36","modified":1576134798736},{"_id":"public/archive/2015/09/index.html","hash":"bf4b8f3fae3542f4ffaca13b1d461c4efe92020d","modified":1576134798736},{"_id":"public/archive/2015/10/index.html","hash":"baa4acc577d84fa8f4d0307045f5d078f36e584d","modified":1576134798736},{"_id":"public/archive/2015/11/index.html","hash":"4ba26b5af6fc1d12cd9239f3d2c1ffd1ee48b847","modified":1576134798736},{"_id":"public/archive/2015/11/page/2/index.html","hash":"9fd0cfccd6e7ac75fdf337b897ca8661ac4dd4a4","modified":1576134798736},{"_id":"public/archive/2016/index.html","hash":"640c547f70c576bd3f3863493128d78acddd16df","modified":1576134798736},{"_id":"public/archive/2016/page/2/index.html","hash":"adc6e9b1814e98cafeaa98c65ed54ccb6979b99b","modified":1576134798736},{"_id":"public/archive/2016/page/3/index.html","hash":"dfc1d75d9366cb618a4fd6309e3f4dc640ff7104","modified":1576134798736},{"_id":"public/archive/2016/page/4/index.html","hash":"0847e36c8b91a611d4172b0c41f04293ff019f9e","modified":1576134798736},{"_id":"public/archive/2016/page/5/index.html","hash":"5ee5c4893156986cfaeee56d43ed71bb19ac33ed","modified":1576134798737},{"_id":"public/archive/2016/page/6/index.html","hash":"68af03030912e4fd790fc6e93619d2de386c35a2","modified":1576134798737},{"_id":"public/archive/2016/page/7/index.html","hash":"63cc073833a5e3650fd8a31296cc0c41526a5273","modified":1576134798737},{"_id":"public/archive/2016/01/index.html","hash":"59816a40d1dfe77b86e2731198f5fc02beb2a1b7","modified":1576134798737},{"_id":"public/archive/2016/01/page/2/index.html","hash":"9bcc45b636daebb3649d600ae64190499695fe90","modified":1576134798737},{"_id":"public/archive/2016/02/index.html","hash":"1b6d66d0b67d3575771c16eaadbf87d7db7f6a69","modified":1576134798737},{"_id":"public/archive/2016/03/index.html","hash":"c0d86573412b03f526a45184a672b71d2571ddbb","modified":1576134798737},{"_id":"public/archive/2016/04/index.html","hash":"db815c54811320c0b85232208fecf73ebdfc205f","modified":1576134798737},{"_id":"public/archive/2016/05/index.html","hash":"f0d73d8e2a44296dcd88833fa462aa4d75c15e5b","modified":1576134798737},{"_id":"public/archive/2016/06/index.html","hash":"e7b98d5789599352dc9ac0c44b07c394d86b4486","modified":1576134798737},{"_id":"public/archive/2016/07/index.html","hash":"a59a3626fd835f3441eca1fd4864dd388c14ccb8","modified":1576134798737},{"_id":"public/archive/2016/08/index.html","hash":"e2490d8276015742d2de806819d29e276b03475b","modified":1576134798737},{"_id":"public/archive/2016/09/index.html","hash":"c1bf058a43f9c7320f276104a691f72ea94e7dc2","modified":1576134798738},{"_id":"public/archive/2016/11/index.html","hash":"af2aacd83ef6b26b3e3514098d98bb5e4f5e192d","modified":1576134798738},{"_id":"public/archive/2016/12/index.html","hash":"971da444800ce6e548b5bfa04d0acf5351415a06","modified":1576134798738},{"_id":"public/archive/2017/index.html","hash":"cbac84336dc1d9f6d33e24fa6df6c5bed8a2132d","modified":1576134798738},{"_id":"public/archive/2017/page/2/index.html","hash":"d1ad2030da09959888a3fc179b52078a974aec38","modified":1576134798738},{"_id":"public/archive/2017/page/3/index.html","hash":"dc2e7604a8bb1c5791a3ea69be5cc61cae5f2370","modified":1576134798738},{"_id":"public/archive/2017/01/index.html","hash":"a8683c89ac87d96fe06dbce2112ccf47c2f59ce4","modified":1576134798738},{"_id":"public/archive/2017/02/index.html","hash":"52aeb9cc1e1a139a771ebe1096fd595e3d9bf5c6","modified":1576134798738},{"_id":"public/archive/2017/03/index.html","hash":"c64cd357816fac88f0a889e546669d6c9f18384e","modified":1576134798738},{"_id":"public/archive/2017/04/index.html","hash":"af86e225cf323628d5b5ab200ac719928cb6d84f","modified":1576134798738},{"_id":"public/archive/2017/07/index.html","hash":"d4cf3b00f52ee9f1320f8672e3f40d4ad2390df3","modified":1576134798739},{"_id":"public/archive/2017/09/index.html","hash":"9640dcc3f108983dadb3ff084176ddef874407b5","modified":1576134798739},{"_id":"public/archive/2018/index.html","hash":"27f80eb8cdd6068667ba4afd86c8ea9c74a663aa","modified":1576134798739},{"_id":"public/archive/2018/01/index.html","hash":"f6c2fb8fd4c0f2d602497ba7ae3c46485f09a5fd","modified":1576134798739},{"_id":"public/archive/2018/07/index.html","hash":"aa4e58e1283d2d79a152a91174b5c13326573b14","modified":1576134798739},{"_id":"public/archive/2018/10/index.html","hash":"1c41fb2cc71eeedb1e341c4a8c9a6e74599f52e9","modified":1576134798739},{"_id":"public/archive/2019/index.html","hash":"03f7c433bbe432fa9bd85c47a46ae42b62388d84","modified":1576134798739},{"_id":"public/archive/2019/05/index.html","hash":"d4d985b34c8cc82d8a2730fc308d44219b2b22b5","modified":1576134798739},{"_id":"public/archive/2019/07/index.html","hash":"e3f0f6b0a72f84d7259109ec2b12fdeda34e3a86","modified":1576134798739},{"_id":"public/archive/2019/09/index.html","hash":"5867ef322225f118d0e544268445ed16818bbb97","modified":1576134798739},{"_id":"public/archive/2019/12/index.html","hash":"82973a2a071b027a07f8dad591800ee43407d2cd","modified":1576134798739},{"_id":"public/categories/storage/index.html","hash":"6bd3cdcc6826f6e17a0bcf67fc4589919cdbeab8","modified":1576134798739},{"_id":"public/categories/apache/index.html","hash":"fa546f8dc784d9ce6dab97b5e33628ba2a3f44bf","modified":1576134798739},{"_id":"public/categories/iis/index.html","hash":"5c1d56d477fa0f7e46a51519af06c1481bcb117a","modified":1576134798739},{"_id":"public/categories/aws/index.html","hash":"b8b06629320b86ea479ca1369578db463fb724c3","modified":1576134798740},{"_id":"public/categories/mysql/index.html","hash":"49429ed282142add5d755ab6ca407054d69c7274","modified":1576134798740},{"_id":"public/categories/linux/index.html","hash":"aebffb37525d9f3c9b68ddc4b59168ef158e1099","modified":1576134798740},{"_id":"public/categories/linux/page/2/index.html","hash":"513380b04e49036fa5d2c9ea0cac882f86179448","modified":1576134798740},{"_id":"public/categories/linux/page/3/index.html","hash":"0896afda6d6ca5bd96126e4cba2916f907c813c1","modified":1576134798740},{"_id":"public/categories/linux/page/4/index.html","hash":"2f8443a3edcae9db99c0df92adc68375635fd5c6","modified":1576134798740},{"_id":"public/categories/php/index.html","hash":"a85acbfb3920153c4ce2ce11d773846ade87c6a1","modified":1576134798740},{"_id":"public/categories/zabbix/index.html","hash":"edb4ebbfbe329503c39b202a1ad583e7adb554ff","modified":1576134798740},{"_id":"public/categories/zabbix/page/2/index.html","hash":"aa8f3bac1aea0594ede5bcef2e441f6ba80756ec","modified":1576134798740},{"_id":"public/categories/python/index.html","hash":"2c2a9b07d2664a62584eac17da2d9d0199a60151","modified":1576134798740},{"_id":"public/categories/dns/index.html","hash":"b6707706f4dd1e61de9c530d8c71ef2152184cf5","modified":1576134798740},{"_id":"public/categories/iis/windows/index.html","hash":"6c0b0e7e51259bddf9cdb97a3fe8a15aab0090e2","modified":1576134798740},{"_id":"public/categories/docker/index.html","hash":"9f05f0b2dc65472576785cea66dc52618c08567a","modified":1576134798740},{"_id":"public/categories/domain/index.html","hash":"89d4ad52fd6519170ea14e18814cda16921966a4","modified":1576134798740},{"_id":"public/categories/statsd/index.html","hash":"532bd8c6d0f65d2801ed7ca1351014318e5341b4","modified":1576134798740},{"_id":"public/categories/http/index.html","hash":"b58bff175e18e0b594812be1c5bc628476ad2306","modified":1576134798741},{"_id":"public/categories/windows/index.html","hash":"4a7795bd3af28d3b3e78da3e61d60113911ccec3","modified":1576134798741},{"_id":"public/categories/k8s/index.html","hash":"ba100499715a8db60ab818c63ac445257079d214","modified":1576134798741},{"_id":"public/categories/keepalived/index.html","hash":"56ff914291898fcc107f06cdc6e2683927aa9c1e","modified":1576134798741},{"_id":"public/categories/zabbix/issue/index.html","hash":"eec99555b3671661ca763da4e76a7e198be8963c","modified":1576134798741},{"_id":"public/categories/statsd/graphite/index.html","hash":"43426ff70e71265ec66fbf9836a726e2bb0cf78a","modified":1576134798741},{"_id":"public/categories/lvs/index.html","hash":"2874a76a0ffb9aa508f6b3f376c7463de4373608","modified":1576134798741},{"_id":"public/categories/memcached/index.html","hash":"36930047bc41e61169259ebc30042251c35f5146","modified":1576134798741},{"_id":"public/categories/windows/iis/index.html","hash":"e2bdab4e7053dfd8166ff912efe046e46309a33d","modified":1576134798741},{"_id":"public/categories/http/mime-type/index.html","hash":"f664041761384772e037265421a4a563372c8144","modified":1576134798741},{"_id":"public/categories/mssql/index.html","hash":"e73d0511001c128b8591aae0f14a68eb8a321861","modified":1576134798741},{"_id":"public/categories/tomcat/index.html","hash":"515ea4f2ae1e94588ba212df5d98fc7eb0bf6487","modified":1576134798741},{"_id":"public/categories/nginx/index.html","hash":"4baa28c8e1fbc4c97a44997dfa7b9b06645a9103","modified":1576134798741},{"_id":"public/categories/python/uwsgi/index.html","hash":"727abbea80a9ff77fa202294b3601fb0b30fe3a9","modified":1576134798741},{"_id":"public/categories/postgresql/index.html","hash":"99811eeafa9314b06f17424b8c2b9234978ee46d","modified":1576134798741},{"_id":"public/categories/redis/index.html","hash":"71f93e9ebb3cad48cd7cfdf77504b774941a702f","modified":1576134798741},{"_id":"public/categories/cluster/index.html","hash":"6b24511ec6fc87421bae52cc3e0959dab044449f","modified":1576134798741},{"_id":"public/categories/php/debug/index.html","hash":"eca77a3748835d645ea04e4a10d1da9cd13808d7","modified":1576134798742},{"_id":"public/categories/shell/index.html","hash":"16eca2d29ad46664521d193d3859f6205dff0a42","modified":1576134798742},{"_id":"public/categories/command/index.html","hash":"c2c55a56eb6e6992ff6d8b41b1615f97d719e7ff","modified":1576134798742},{"_id":"public/categories/memcached/redis/index.html","hash":"a498dae0f7f7b643093af0a2c11980403a9d3fb4","modified":1576134798742},{"_id":"public/categories/uwsgi/index.html","hash":"7b1ea26035ab01242446eca37cf2bb178cf052cf","modified":1576134798742},{"_id":"public/categories/vagrant/index.html","hash":"2ed74ad19075dc9cd83c28026c1c6a0a619b1838","modified":1576134798742},{"_id":"public/categories/vcenter/index.html","hash":"3fd311f7241823c646fc4de195f735ec8147811a","modified":1576134798742},{"_id":"public/categories/windows/vcenter/index.html","hash":"4b7a2755587fd851cce30ae00d978ead76655b7d","modified":1576134798742},{"_id":"public/categories/iis/nginx/index.html","hash":"52d259b64b7ed97a4e0dccf00859119ed7f0baad","modified":1576134798742},{"_id":"public/categories/shell/linux/index.html","hash":"cba6fbb355bec059dff99912be793e4c01dadcaf","modified":1576134798742},{"_id":"public/categories/zentaopms/index.html","hash":"d24690897df7c0a6cdef34d9e8aaf8d21a428810","modified":1576134798742},{"_id":"public/categories/uwsgi/python/index.html","hash":"a805e4279185fe5a2e25a5689375e5313b1db63e","modified":1576134798742},{"_id":"public/categories/zentaopms/deployment/index.html","hash":"31af9042eee9b330dfd86120e35bf7a85276e705","modified":1576134798742},{"_id":"public/categories/linux/nginx/index.html","hash":"54d6a08742707da21669e916ee9112476edfacca","modified":1576134798742},{"_id":"public/categories/linux/nginx/debug/index.html","hash":"3bbbd2f3256c62235d0139a21362a3f962b1e773","modified":1576134798742},{"_id":"public/index.html","hash":"a67d4c1f426937497c2447488691cc3a58a1ec65","modified":1576134798742},{"_id":"public/page/2/index.html","hash":"116ad26c284e86d04941b5b81d6e4d229e3756ca","modified":1576134798742},{"_id":"public/page/3/index.html","hash":"f6906b9a6e608c59f9cc4a9b8b6828f8869f3a8a","modified":1576134798742},{"_id":"public/page/4/index.html","hash":"9be5a1c9cd1200452d60800f52d6733ebc5cc89a","modified":1576134798742},{"_id":"public/page/5/index.html","hash":"aa7752ead513dc602742e3f4ef70720108651c17","modified":1576134798743},{"_id":"public/page/6/index.html","hash":"de7fe713b429f18287e145ed44631ac648e7c27d","modified":1576134798743},{"_id":"public/page/7/index.html","hash":"7b024e29afd3d84cf1a0a6b9e6fe8b9c355df825","modified":1576134798743},{"_id":"public/page/8/index.html","hash":"7af9f0e2ff5a131f2d5ac6a4319098e9c8e9a5d8","modified":1576134798743},{"_id":"public/page/9/index.html","hash":"c9ef2ad3ec5de935179364bb1040dce7a407229f","modified":1576134798743},{"_id":"public/page/10/index.html","hash":"1d57f69ef85d70cb20ecc120383ce28f2c1cbecc","modified":1576134798743},{"_id":"public/page/11/index.html","hash":"1ce88ad82ef8c933afa50f156f91c59b7cdc52a1","modified":1576134798743},{"_id":"public/page/12/index.html","hash":"035b220074db7265b3fc886d9607ab1d8fcc2797","modified":1576134798743},{"_id":"public/page/13/index.html","hash":"5f2eb7831b5bcd2e014589e3894e885ea6d75416","modified":1576134798743},{"_id":"public/tags/apache/index.html","hash":"60bde749f90f46ffedc96a3003103f06cb584ff1","modified":1576134798743},{"_id":"public/tags/webserver/index.html","hash":"3e99cb23398693e0bc79577d0fe6e34f93e1dfb9","modified":1576134798743},{"_id":"public/tags/webserver/page/2/index.html","hash":"25fe351d83ff1b22cc78badaf87d15f67feaadd7","modified":1576134798743},{"_id":"public/tags/command/index.html","hash":"f4cca49f0c790535cea2853e3bde620a53c77e9e","modified":1576134798743},{"_id":"public/tags/iis/index.html","hash":"0fcd6bdb3040006886e1293780bcc356383d2900","modified":1576134798743},{"_id":"public/tags/windows/index.html","hash":"6467b41aecc229be9b16fd6a1376f787d591da8b","modified":1576134798743},{"_id":"public/tags/debug/index.html","hash":"4c90e911ffd629faf7e400c9fdad5b8d4e94997f","modified":1576134798743},{"_id":"public/tags/debug/page/2/index.html","hash":"2b3dd2e2627398a87813e87adae8f03502ec1176","modified":1576134798743},{"_id":"public/tags/aws/index.html","hash":"dd845e172e35da36f9dd2d1bec40670f2d2a10c6","modified":1576134798744},{"_id":"public/tags/lambda/index.html","hash":"bc739de9d849b9abf01a53231b08cae719286087","modified":1576134798744},{"_id":"public/tags/cloudfront/index.html","hash":"7c576e9c8ddb5d089923b6fb3ae3a006b6a27a07","modified":1576134798744},{"_id":"public/tags/mysql/index.html","hash":"46c19000e45c91f435001c8cb65b40b407f7087a","modified":1576134798744},{"_id":"public/tags/mysql-proxy/index.html","hash":"7fb7ff2094f18b61d6b44fddc74a3bbff40fd829","modified":1576134798744},{"_id":"public/tags/linux/index.html","hash":"88ecae5a1fe4da0e04d1f6139ff89d9e128f66a0","modified":1576134798744},{"_id":"public/tags/linux/page/2/index.html","hash":"0f4ccaaac0172dfaffff7c71ea22659275925153","modified":1576134798744},{"_id":"public/tags/linux/page/3/index.html","hash":"3cdb1be65be85cb66f1ab77a4d28fbb6f5ddc5f7","modified":1576134798744},{"_id":"public/tags/linux/page/4/index.html","hash":"255f965d097a9a506b65b1de4f9a7228eeda3e00","modified":1576134798744},{"_id":"public/tags/cpulimit/index.html","hash":"ad251d2f35460248404b6c01561991d3cc2f5d4c","modified":1576134798744},{"_id":"public/tags/php/index.html","hash":"9707d1ba9d4ab4f7d11193f315a05b83749fe4aa","modified":1576134798744},{"_id":"public/tags/dedecms/index.html","hash":"84c1e666a7e2f2ec31340ad987c4a3f8fbaf0ee1","modified":1576134798744},{"_id":"public/tags/zabbix/index.html","hash":"f90303d2a37bc9f1123235708b6e2a78ab54e4e1","modified":1576134798744},{"_id":"public/tags/python/index.html","hash":"5afff4e2904529045584835059e7eefe51e2b061","modified":1576134798744},{"_id":"public/tags/django/index.html","hash":"dcbb8f585cda29beb2326f62c05b116c678b8888","modified":1576134798744},{"_id":"public/tags/dns/index.html","hash":"01c6bd92b76e9a09933193bc74914c04d97a33d6","modified":1576134798744},{"_id":"public/tags/view/index.html","hash":"f8b7cbdc99eb268aef1d1ee1a1e0ff52948dc7c5","modified":1576134798744},{"_id":"public/tags/domain/index.html","hash":"31a9ab5258affb6e765863249c298ce3adb869c4","modified":1576134798744},{"_id":"public/tags/statusCode/index.html","hash":"8a05124107d3968870ad17e306738d8ae5dd921c","modified":1576134798744},{"_id":"public/tags/http/index.html","hash":"ff546c8e2f4108b295f69cf745bd188c4bb67e82","modified":1576134798744},{"_id":"public/tags/cache/index.html","hash":"745f040be81e5c5879bab54c39306bdc8ab71be9","modified":1576134798744},{"_id":"public/tags/iptables/index.html","hash":"6f9b76f0651edf3bcbcfe065a70849878542524e","modified":1576134798744},{"_id":"public/tags/iscsi/index.html","hash":"463bb426eb392d0f18d1144f3f79707465e5687b","modified":1576134798744},{"_id":"public/tags/store/index.html","hash":"a434c0d020ff8604f90f1a155d868fb587f5a911","modified":1576134798745},{"_id":"public/tags/k8s/index.html","hash":"08980e6a716af46d25bf1e0d624ff01c5f7fb888","modified":1576134798745},{"_id":"public/tags/tcpdump/index.html","hash":"ffe4e9dd357e39027b439e4aecec1c9d4139fd85","modified":1576134798745},{"_id":"public/tags/network/index.html","hash":"8169431e972013e21531d4230ff0dd355e0e9706","modified":1576134798745},{"_id":"public/tags/keepalived/index.html","hash":"225b6b517a8ebf6edab84b882261504eb9825439","modified":1576134798745},{"_id":"public/tags/cluster/index.html","hash":"842e526c1e7a06898d2994895f2d84b0b8702f71","modified":1576134798745},{"_id":"public/tags/arp/index.html","hash":"e68fcc6231014b2af3ee61057b34e569124a59c8","modified":1576134798745},{"_id":"public/tags/kernal/index.html","hash":"5a13c619d5d4b7c61b09ad9c6a5fcc8d4e19ea84","modified":1576134798745},{"_id":"public/tags/acl/index.html","hash":"8548f0e2b031ba70af71a50321297924ed1fe9f7","modified":1576134798745},{"_id":"public/tags/commands/index.html","hash":"b7e5057fa983e49b308e17020f3b33e73f2fc5fc","modified":1576134798745},{"_id":"public/tags/yum/index.html","hash":"a1789d50252edeba067961d599988f6a590fee35","modified":1576134798745},{"_id":"public/tags/lvs/index.html","hash":"81bd9a6f40e992d01cde0017bf5f10b703782e52","modified":1576134798745},{"_id":"public/tags/memcached/index.html","hash":"93a65b4f8bdc860185b5909cd1d2012aa37f9722","modified":1576134798745},{"_id":"public/tags/database/index.html","hash":"5f2d4c1aa293f5a59e2f8f0027405073108741a0","modified":1576134798745},{"_id":"public/tags/mime-type/index.html","hash":"8174a715cccd93ab0bdfb52a7e59a27f2ed1ae4d","modified":1576134798745},{"_id":"public/tags/mssql/index.html","hash":"d3ec1650eaad00c009c60b540a647dac54454342","modified":1576134798745},{"_id":"public/tags/tomcat/index.html","hash":"a2731ab5cb0eae8538bddbb43b5df7aa6585bff0","modified":1576134798745},{"_id":"public/tags/binlog/index.html","hash":"0d03f1ebb3d61bcff254a623ee9746a2e4de715c","modified":1576134798745},{"_id":"public/tags/amoeba/index.html","hash":"36645c11541b459b5281b2c562ba0dedfefe82ec","modified":1576134798745},{"_id":"public/tags/mysqlcheck/index.html","hash":"b77842e0ae2b589c48abbac98f2a81573a78cbda","modified":1576134798746},{"_id":"public/tags/tool/index.html","hash":"79dd4e53e36b4e2221ab1e72171fefddf4f81103","modified":1576134798746},{"_id":"public/tags/nginx/index.html","hash":"1b7a8090205f6f359c90b516ab3d9f87ef9c5e80","modified":1576134798746},{"_id":"public/tags/uwsgi/index.html","hash":"bd48c666b0894abe7964e0be6470fa3bcdf4e189","modified":1576134798746},{"_id":"public/tags/websocket/index.html","hash":"4d9973f9995b555dd82767dd54ea449a53d2357d","modified":1576134798746},{"_id":"public/tags/ntp/index.html","hash":"5d389ea0ec0e7a036b455c1bc625f1b1603b8221","modified":1576134798746},{"_id":"public/tags/CMS/index.html","hash":"cbdf087fe99e21e478850614542e2e9eb1cb3da7","modified":1576134798746},{"_id":"public/tags/phpmyadmin/index.html","hash":"4ec87e1568e6f8ab8b6977e6da7ad840cfed4588","modified":1576134798746},{"_id":"public/tags/postgresql/index.html","hash":"8ab767b425e427785bc979e861a68a77f6974bec","modified":1576134798746},{"_id":"public/tags/pxe/index.html","hash":"1e7f894edb135305980777e2c9ec0df96863cb54","modified":1576134798746},{"_id":"public/tags/kickstart/index.html","hash":"63cc13e6ac4c4c87123ef4edd1b11ac498b1785c","modified":1576134798746},{"_id":"public/tags/socket/index.html","hash":"78871072bd18e007ae601315bfc6e2bf26160b6a","modified":1576134798746},{"_id":"public/tags/mail/index.html","hash":"c23e1f4acb6876a7ff61f3ff098e324bee70340a","modified":1576134798746},{"_id":"public/tags/rbash/index.html","hash":"6662f335a5b2817bfb07316ab532065df0fdba9d","modified":1576134798746},{"_id":"public/tags/bash/index.html","hash":"aa0e9aa6be7fa53f2d07bdd2e384510bf387b572","modified":1576134798746},{"_id":"public/tags/redis/index.html","hash":"cc6e4112d404104413b6826140204fda2f3aa5dc","modified":1576134798746},{"_id":"public/tags/repcache/index.html","hash":"4771dad2e01a1efda9e844a0cddf7a9596fe9da8","modified":1576134798746},{"_id":"public/tags/magent/index.html","hash":"b3152dcf9671bbfce087cd288f52652420c7d2ce","modified":1576134798746},{"_id":"public/tags/rhcs/index.html","hash":"04441a98b436e61a9a7ed989969dc7c4bb41e6b5","modified":1576134798746},{"_id":"public/tags/shell/index.html","hash":"086d1ab5c8956374fcd6a6c65c70af91eb6b1abc","modified":1576134798746},{"_id":"public/tags/ssh/index.html","hash":"1ae9ddbaf0f9958d66bad91985a200be30d0f677","modified":1576134798746},{"_id":"public/tags/statsd/index.html","hash":"521dbab610003c294eed81e042233cb70610b11a","modified":1576134798747},{"_id":"public/tags/graphite/index.html","hash":"25095922036f4b2bf89c2df22e3e0c01fa5bea36","modified":1576134798747},{"_id":"public/tags/monitor/index.html","hash":"ccd5e241cd7f58aab2ec35668dfce3eb1e81a7ac","modified":1576134798747},{"_id":"public/tags/tcp/index.html","hash":"3c420599871352751a612dd42a306b945735d0ce","modified":1576134798747},{"_id":"public/tags/twemproxy/index.html","hash":"3c41442eaa93208615e21e747725cf82a3a7d859","modified":1576134798747},{"_id":"public/tags/memcache/index.html","hash":"c662c1cf15916b525d00a5f890b25d70e9a76559","modified":1576134798747},{"_id":"public/tags/issue/index.html","hash":"4faab2f65e172529a1a464465012a67eed3b09ad","modified":1576134798747},{"_id":"public/tags/vagrant/index.html","hash":"b723f65e1cb93bc816be11069c9fc86de400a141","modified":1576134798747},{"_id":"public/tags/vcenter/index.html","hash":"82902e43f89863b747ef1ebc5b71691dc219c40e","modified":1576134798747},{"_id":"public/tags/mongo/index.html","hash":"2b0f024c6aa77bc12b6cfcc9467cdf68c9aeafe3","modified":1576134798747},{"_id":"public/tags/scripts/index.html","hash":"64f09d5e722f32b8e390952af06278372c78cc4b","modified":1576134798747},{"_id":"public/tags/zentaopms/index.html","hash":"cb8435d87ee4a1a8e729376537104a486a8adee3","modified":1576134798747},{"_id":"public/tags/deployment/index.html","hash":"e6e8dccfeadcf2e124ce008d02bbf6f1729e1d60","modified":1576134798747},{"_id":"public/tags/ingress/index.html","hash":"411a73187bfad11287db7fdbc56bde07d2798087","modified":1576134798748},{"_id":"public/tags/lvm/index.html","hash":"8a4cd7e3d9e5dc23c42c7a1ebf1ada1e74fe34d4","modified":1576134798748},{"_id":"public/tags/udev/index.html","hash":"78152c98d021d863e6a44259dd8fa5826d02eaf6","modified":1576134798748},{"_id":"public/images/11-300x286.png","hash":"1b12c82d7e221312540e39d99c91f6a8357df045","modified":1576134798806},{"_id":"public/images/2-250x300.png","hash":"2e1cd3283898c2f7c5825ca123a2a97c1e381fc9","modified":1576134798806},{"_id":"public/images/DOC8GFX6-300x139.png","hash":"f40599b0599fcd031a74342e9d0d1c37f8778a9c","modified":1576134798806},{"_id":"public/images/apachetest-300x89.png","hash":"3a0b80e416b6294476ff50d2e22d50163ac57039","modified":1576134798806},{"_id":"public/images/clipboard.png","hash":"db17335ae3dc732502a3ff4dddacbd85e9a04414","modified":1576134798806},{"_id":"public/images/clipboard1-300x134-20190917165133735.png","hash":"2f35aad40c96d7428f7f920b344c69d667590eae","modified":1576134798806},{"_id":"public/images/clipboard1-300x134.png","hash":"2f35aad40c96d7428f7f920b344c69d667590eae","modified":1576134798806},{"_id":"public/images/clipboard2-246x300.png","hash":"496568a3c79a421c35ee076cdd967d566ec074dd","modified":1576134798806},{"_id":"public/images/ha.png","hash":"59ffdc2daf448ab87e8bb9b24514ce094e058816","modified":1576134798807},{"_id":"public/images/http-cache-control.png","hash":"6593afbbabcb0996359e27a77353998aa9759f1b","modified":1576134798807},{"_id":"public/images/hainstall.png","hash":"46f87efb34cb01db975e87cf9bb6e9f7262b20c0","modified":1576134798807},{"_id":"public/images/ha2.png","hash":"22419e7881858256a0ed8e34b648201308864dae","modified":1576134798807},{"_id":"public/images/image-20191021135643975.png","hash":"f6dacb60c8ef4f12205c7d0abada960dbe0159c5","modified":1576134798807},{"_id":"public/images/img_56f4a9789a5c5.png","hash":"f841b8b06e115c191f755aad6efc96b652cdb038","modified":1576134798807},{"_id":"public/images/image.png","hash":"2dead1110ec1f44037aae6b3477cf63674a7044c","modified":1576134798807},{"_id":"public/images/img_56f4a99aa9435.png","hash":"9a81670acdac1c8a9e71a21c62ff0c664febf18f","modified":1576134798807},{"_id":"public/images/img_56f4a9875257e.png","hash":"53ffc7aeb28fa2bb3d6f139410ca4effd516b0a1","modified":1576134798807},{"_id":"public/images/img_56f4a9ab888d0.png","hash":"a3384d08c417ce42df34a4d847eed880a896acf7","modified":1576134798807},{"_id":"public/images/img_56f4aa6c69a26-20190917143633077.png","hash":"1854be7b0916af4648c9a314593c8b8990d751c0","modified":1576134798807},{"_id":"public/images/img_570da13048078.png","hash":"0292f0426e9a4ec009abc39964e81c6814273394","modified":1576134798807},{"_id":"public/images/img_56f4aa8c14ae0-20190917143633236.png","hash":"09c4d00f74e00656eb1bef1140adc7802b785777","modified":1576134798807},{"_id":"public/images/img_56f4aa8c14ae0-20190917145027287.png","hash":"09c4d00f74e00656eb1bef1140adc7802b785777","modified":1576134798808},{"_id":"public/images/img_570da1465a8dc.png","hash":"561da3e1edaaff1999fa203bd938bdf89967d980","modified":1576134798808},{"_id":"public/images/img_56f4aa989af5e-20190917143633212.png","hash":"f810f94576d604af90d0bd665323e784a5eb7bcc","modified":1576134798808},{"_id":"public/images/img_570da15f9ead1.png","hash":"c256a1f98473d58727b1aa2258c8b298eaf5d052","modified":1576134798808},{"_id":"public/images/img_5773310c679a1.png","hash":"84ddd7cd21942ad93875be02c5952db2eb9491bb","modified":1576134798808},{"_id":"public/images/img_5877344e51cd6.png","hash":"b47b4cd849a434480681e14bc9b0e63bbb939e8c","modified":1576134798808},{"_id":"public/images/img_587dde19b6b47.png","hash":"766c8be87b4ea15ac8f367049ef2721b93d2cfa7","modified":1576134798808},{"_id":"public/images/img_58802ffca93b9.png","hash":"6920935b7932b8eb29931460f184c8b20e0ee264","modified":1576134798808},{"_id":"public/images/img_588031f4a62e1.png","hash":"c51c318af01f841991aa58a499fc57962931d891","modified":1576134798808},{"_id":"public/images/img_58803215d9370.png","hash":"41db0b6faee076ba536348173c572f39ed14d4f8","modified":1576134798808},{"_id":"public/images/img_5880322f10890.png","hash":"e73fa0d077b8972d69073abfa0782067d672730c","modified":1576134798808},{"_id":"public/images/img_58ddc18a1993a.png","hash":"e3e303a981a79e6480b9289198baafa631369c2c","modified":1576134798808},{"_id":"public/images/img_58ddc1b2d8078.png","hash":"53f19404471eb2437000d50dafdadab98bbb80ef","modified":1576134798808},{"_id":"public/images/img_58ddc20c6f8c3.png","hash":"6637028cc18d347669ffdd962580203d19b12cc2","modified":1576134798809},{"_id":"public/images/img_59b269634a216.png","hash":"51c6094920e288cb233d611dabcc247659ea8d3e","modified":1576134798809},{"_id":"public/images/img_59b2698d5658f.png","hash":"c7308db8045ee884af54a6d83c767e8c6d4e7274","modified":1576134798809},{"_id":"public/images/img_59b26b3126991.png","hash":"5c2aed7fcc584c781e2b59ed657ee83be98b8218","modified":1576134798809},{"_id":"public/images/img_59c35d1d930c1.png","hash":"299bbc1a1fb906d810f706e7a3e292e5cb98df99","modified":1576134798809},{"_id":"public/images/img_59c35cd9ab71b.png","hash":"602cda8dd6854cb3e6f0d7d80ca6af569a49d02b","modified":1576134798809},{"_id":"public/images/lvsnat.png","hash":"d1248d59fdedefb0f4d8189cdb31e2206bd19cfb","modified":1576134798810},{"_id":"public/images/tomcat-300x84.png","hash":"41ef0d0d8c20b8f12e845db1b342633b6c9e24c2","modified":1576134798810},{"_id":"public/favicon.png","hash":"8ee63c36da95b5e2083a84c7798d16c045fc71b6","modified":1576134798810},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1576134798810},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1576134798810},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1576134798810},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1576134798810},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1576134798811},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1576134798811},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1576134798811},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1576134798811},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1576134798811},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1576134798811},{"_id":"public/images/image-20191018151450374.png","hash":"30058eb5e01ed0926dea58791fd0b508c5758735","modified":1576134798832},{"_id":"public/images/image-20191018172515467.png","hash":"21fb97c079dd7e42e3f740e0fc067a5ac8722159","modified":1576134798832},{"_id":"public/images/image-20191021135659882.png","hash":"bafb09c042885b8954e23b19dfd195742c836e92","modified":1576134798833},{"_id":"public/images/image-20191021135714997.png","hash":"f4261de4235e16a616bae98494b6898e5b3147cf","modified":1576134798833},{"_id":"public/images/image-20191021135724279.png","hash":"4eee96043d0eb02254acff5b183f3a5ee6eae784","modified":1576134798833},{"_id":"public/images/img_56f4aa5d219ba-20190917143633356.png","hash":"32aaa1e95a4f871499b08b384eeaeeec34518d0c","modified":1576134798833},{"_id":"public/images/img_56f4aa815cb3c-20190917143633401.png","hash":"85842619f56096d94dc496b659e8e9c7d1cf02d3","modified":1576134798833},{"_id":"public/images/img_570da173ef401.png","hash":"722a7d3c25090830d23aa2656d7f262f8db5de34","modified":1576134798833},{"_id":"public/images/img_577330e1e5d06.png","hash":"2ad2f39c516a0b62a7b9fd2b9e2099d01e0efa24","modified":1576134798833},{"_id":"public/images/img_577330f8871b5.png","hash":"d545dc4f729b5d7a5e5d24d20f8dfe609be300d9","modified":1576134798833},{"_id":"public/images/img_5773313591d94.png","hash":"77e4c5b14a0dcda0e86977ba0bf899e4b7124947","modified":1576134798833},{"_id":"public/images/img_57733153a13cb.png","hash":"beb066fff61bdfe490890a847b21f3a42dcbdc12","modified":1576134798833},{"_id":"public/images/img_587733a5ae0ba.png","hash":"ef234d83dfbb9d3346bc271b3d49cb081cd046e9","modified":1576134798833},{"_id":"public/images/img_5877340a43dea.png","hash":"02d0360688cddd0d1490df01a0282bd793d63dce","modified":1576134798833},{"_id":"public/images/img_587ddd23c02a3.png","hash":"0b3ec3f54e9057bda815651e0806dc5acdeec335","modified":1576134798833},{"_id":"public/images/img_5a66a577176c8.png","hash":"d623866b5c05e05f905c1fc739f23d2234249784","modified":1576134798833},{"_id":"public/images/img_59b26b4437729.png","hash":"4948ab6dee9db76e37dd56547ca3d45249ae5190","modified":1576134798833},{"_id":"public/images/img_59c35d389b1c5.png","hash":"50a728e86b1f9ef5e7e012db3f43cf3244a38927","modified":1576134798833},{"_id":"public/images/san.png","hash":"e468f9b1f14503d51842dc8f56edb9b5fc75e9b2","modified":1576134798834},{"_id":"public/images/avatar.jpg","hash":"8ebc792488e45126aa195dc065ef2a9590d0908b","modified":1576134798834},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1576134798859},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1576134798859},{"_id":"public/fonts/README.html","hash":"7c1128fed284d2fb7fee743e8a739da99385b358","modified":1576134798859},{"_id":"public/images/QQ20161220-0.png","hash":"41308380ef4ee41f73f776300e1595b9d7f63189","modified":1576134798859},{"_id":"public/images/img_577330bdc322e.png","hash":"8e6e049cb4c08d9c845ee1a08220fd7b30dc9c9a","modified":1576134798859},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1576134798859},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1576134798859},{"_id":"public/js/insight.js","hash":"078880783984873abc0f53701f6a92295b81f9b1","modified":1576134798919},{"_id":"public/images/img_57b1811567e55.png","hash":"f57f2b990ca2dafd270adf4461ccf1c6b64172dc","modified":1576134798919},{"_id":"public/images/img_5bbefa0f833d9.png","hash":"3b368170e1f12c845932f3fdafa8be65da7c111e","modified":1576134798919},{"_id":"public/images/img_5b5184bfd49e3.png","hash":"bee215303308e2cede55ddbba94846ebfaab7de1","modified":1576134798948},{"_id":"public/images/img_5bbef98529a61.png","hash":"b450adb8c2210f032bbb3ba3d740982ce29a8b94","modified":1576134798949},{"_id":"public/images/1.png","hash":"fbe8f2067ce2f6c7423cfef7f7a5b6639da08662","modified":1576134798971},{"_id":"public/images/img_5b5183b84d4dd.png","hash":"6899405fd33e268a2907b14319433729a80040f1","modified":1576134799043},{"_id":"public/images/img_5b5184fb1c8d4.png","hash":"4a6cc38b8b70dac09cd6f976101e5c07ed8430c5","modified":1576134799088},{"_id":"public/images/img_59b26b60dc7e7.png","hash":"d46319756f42ddaae0c56e765ad5a54f1c859099","modified":1576134799088},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1576134799216},{"_id":"public/images/img_59b2697b89208.png","hash":"a94e2009abc1ea6919fe8dba1201072879180f53","modified":1576134799216},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1576134799231},{"_id":"public/images/image-20190917165314461.png","hash":"1cf6dfb86d084ced7cbc466aa87d137d9ad838a7","modified":1576134799234},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1576134799236},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1576134799239},{"_id":"public/images/avatar.png","hash":"97ec5ba51935886e732368bfd59e3a6d4ddff421","modified":1576134799239},{"_id":"public/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1576134799244},{"_id":"public/images/img_5b518515e4fe7.png","hash":"1dce10cf18b5a9ad7336ad661e46b134944fde81","modified":1576134799267}],"Category":[{"name":"storage","_id":"ck42dyic20004u9urn060qw0z"},{"name":"apache","_id":"ck42dyica000cu9ur2jlf7mul"},{"name":"iis","_id":"ck42dyico000zu9ur9oq9njcj"},{"name":"aws","_id":"ck42dyicq0017u9urzxp10y94"},{"name":"mysql","_id":"ck42dyics001cu9urpi9o1eby"},{"name":"linux","_id":"ck42dyicv001iu9ur046nlayu"},{"name":"php","_id":"ck42dyid0001uu9urvlag5v12"},{"name":"zabbix","_id":"ck42dyid20022u9uraijfbn3j"},{"name":"python","_id":"ck42dyid7002bu9urpi1q1uss"},{"name":"dns","_id":"ck42dyidc002ku9ur5y2ypmi8"},{"name":"windows","parent":"ck42dyico000zu9ur9oq9njcj","_id":"ck42dyidf002su9ur4xlllc96"},{"name":"docker","_id":"ck42dyidi0030u9urnrqcnnmc"},{"name":"domain","_id":"ck42dyidk0039u9ur4zat4odc"},{"name":"statsd","_id":"ck42dyidq003ru9urdqh8wg31"},{"name":"http","_id":"ck42dyidv003zu9urpunktu88"},{"name":"windows","_id":"ck42dyidx0047u9urivti2y1b"},{"name":"k8s","_id":"ck42dyie70054u9ur023qs6p4"},{"name":"keepalived","_id":"ck42dyieb005eu9urm9h1r9sw"},{"name":"issue","parent":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyiej005uu9urifl1vh09"},{"name":"graphite","parent":"ck42dyidq003ru9urdqh8wg31","_id":"ck42dyiem0062u9ura1veaetp"},{"name":"lvs","_id":"ck42dyieo006bu9ur5ieuh1nw"},{"name":"memcached","_id":"ck42dyiez0071u9urtp6vor4p"},{"name":"iis","parent":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyif20079u9ur78i2ztmp"},{"name":"mime-type","parent":"ck42dyidv003zu9urpunktu88","_id":"ck42dyif7007hu9ur3qe50ju3"},{"name":"mssql","_id":"ck42dyifc007pu9ur7wg10ds8"},{"name":"tomcat","_id":"ck42dyift0084u9urzsnovddf"},{"name":"nginx","_id":"ck42dyig0008ju9uray42j70i"},{"name":"uwsgi","parent":"ck42dyid7002bu9urpi1q1uss","_id":"ck42dyiga0093u9urwv251ism"},{"name":"postgresql","_id":"ck42dyigf009ju9urkgmg7f4q"},{"name":"redis","_id":"ck42dyigj009uu9ur9wgtgpof"},{"name":"cluster","_id":"ck42dyigw00avu9ur2bqhr7x9"},{"name":"debug","parent":"ck42dyid0001uu9urvlag5v12","_id":"ck42dyigy00b4u9ure176buoh"},{"name":"shell","_id":"ck42dyih000bcu9urasxfsqo7"},{"name":"command","_id":"ck42dyih500bmu9ur6pqwm4ex"},{"name":"redis","parent":"ck42dyiez0071u9urtp6vor4p","_id":"ck42dyih900c1u9urpqdei5ce"},{"name":"uwsgi","_id":"ck42dyihb00ceu9urc46zok81"},{"name":"vagrant","_id":"ck42dyihc00cku9urbo0awjda"},{"name":"vcenter","_id":"ck42dyihf00d3u9urvpy0g54n"},{"name":"vcenter","parent":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyihf00d8u9ur0sagxhsq"},{"name":"nginx","parent":"ck42dyico000zu9ur9oq9njcj","_id":"ck42dyihg00dcu9urynz8jxy3"},{"name":"linux","parent":"ck42dyih000bcu9urasxfsqo7","_id":"ck42dyihh00dhu9urf4h8kvcs"},{"name":"zentaopms","_id":"ck42dyihh00dou9ur31w11awk"},{"name":"python","parent":"ck42dyihb00ceu9urc46zok81","_id":"ck42dyihj00dyu9urz7m104fc"},{"name":"deployment","parent":"ck42dyihh00dou9ur31w11awk","_id":"ck42dyihj00e3u9urm7dk3xb7"},{"name":"nginx","parent":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyijx00kcu9urlkd37pye"},{"name":"debug","parent":"ck42dyijx00kcu9urlkd37pye","_id":"ck42dyijy00kju9ur0juzld8b"}],"Data":[],"Page":[{"layout":"about","_content":"#### 徒步轨迹\n-------------\n- [x] 清凉峰南线   轨迹: http://www.foooooot.com/trip/3067492/\n- [x] 武功山   \n- [x] ‌徽杭古道\n- [ ] ‌稻城亚丁\n- [ ] ‌雨崩\n- [ ] ‌黄南古道\n- [x] ‌莫干山\n- [ ] ‌腾格里沙漠\n- [ ] ‌虎跳峡\n- [ ] ‌乌孙古道\n- [ ] ‌吴越古道\n- [ ] ‌括苍山\n- [ ] ‌船底顶\n- [ ] ‌韭菜岭\n- [ ] ‌四姑娘山\n- [ ] ‌军障古道\n- [ ] ‌南太行山\n- [ ] ‌五台山\n- [x] 上虞池杉  轨迹: http://foooooot.com/trip/3169829/\n- [x] 陶宴岭古道 轨迹: http://foooooot.com/trip/3169859/\n\n-------------\nPS：以后尽量所有的路线都正确记录轨迹，有一起约的小伙伴也可以留言","source":"about/index.md","raw":"---\nlayout: \"about\"\n# title: \"About me\"\n---\n#### 徒步轨迹\n-------------\n- [x] 清凉峰南线   轨迹: http://www.foooooot.com/trip/3067492/\n- [x] 武功山   \n- [x] ‌徽杭古道\n- [ ] ‌稻城亚丁\n- [ ] ‌雨崩\n- [ ] ‌黄南古道\n- [x] ‌莫干山\n- [ ] ‌腾格里沙漠\n- [ ] ‌虎跳峡\n- [ ] ‌乌孙古道\n- [ ] ‌吴越古道\n- [ ] ‌括苍山\n- [ ] ‌船底顶\n- [ ] ‌韭菜岭\n- [ ] ‌四姑娘山\n- [ ] ‌军障古道\n- [ ] ‌南太行山\n- [ ] ‌五台山\n- [x] 上虞池杉  轨迹: http://foooooot.com/trip/3169829/\n- [x] 陶宴岭古道 轨迹: http://foooooot.com/trip/3169859/\n\n-------------\nPS：以后尽量所有的路线都正确记录轨迹，有一起约的小伙伴也可以留言","date":"2019-12-12T07:10:10.337Z","updated":"2019-12-12T07:10:10.337Z","path":"about/index.html","title":"","comments":1,"_id":"ck42dyibu0000u9uroxtc4nj7","content":"<h4 id=\"徒步轨迹\"><a href=\"#徒步轨迹\" class=\"headerlink\" title=\"徒步轨迹\"></a>徒步轨迹</h4><hr>\n<ul>\n<li><input checked disabled type=\"checkbox\"> 清凉峰南线   轨迹: <a href=\"http://www.foooooot.com/trip/3067492/\" target=\"_blank\" rel=\"noopener\">http://www.foooooot.com/trip/3067492/</a></li>\n<li><input checked disabled type=\"checkbox\"> 武功山   </li>\n<li><input checked disabled type=\"checkbox\"> ‌徽杭古道</li>\n<li><input disabled type=\"checkbox\"> ‌稻城亚丁</li>\n<li><input disabled type=\"checkbox\"> ‌雨崩</li>\n<li><input disabled type=\"checkbox\"> ‌黄南古道</li>\n<li><input checked disabled type=\"checkbox\"> ‌莫干山</li>\n<li><input disabled type=\"checkbox\"> ‌腾格里沙漠</li>\n<li><input disabled type=\"checkbox\"> ‌虎跳峡</li>\n<li><input disabled type=\"checkbox\"> ‌乌孙古道</li>\n<li><input disabled type=\"checkbox\"> ‌吴越古道</li>\n<li><input disabled type=\"checkbox\"> ‌括苍山</li>\n<li><input disabled type=\"checkbox\"> ‌船底顶</li>\n<li><input disabled type=\"checkbox\"> ‌韭菜岭</li>\n<li><input disabled type=\"checkbox\"> ‌四姑娘山</li>\n<li><input disabled type=\"checkbox\"> ‌军障古道</li>\n<li><input disabled type=\"checkbox\"> ‌南太行山</li>\n<li><input disabled type=\"checkbox\"> ‌五台山</li>\n<li><input checked disabled type=\"checkbox\"> 上虞池杉  轨迹: <a href=\"http://foooooot.com/trip/3169829/\" target=\"_blank\" rel=\"noopener\">http://foooooot.com/trip/3169829/</a></li>\n<li><input checked disabled type=\"checkbox\"> 陶宴岭古道 轨迹: <a href=\"http://foooooot.com/trip/3169859/\" target=\"_blank\" rel=\"noopener\">http://foooooot.com/trip/3169859/</a></li>\n</ul>\n<hr>\n<p>PS：以后尽量所有的路线都正确记录轨迹，有一起约的小伙伴也可以留言</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"徒步轨迹\"><a href=\"#徒步轨迹\" class=\"headerlink\" title=\"徒步轨迹\"></a>徒步轨迹</h4><hr>\n<ul>\n<li><input checked disabled type=\"checkbox\"> 清凉峰南线   轨迹: <a href=\"http://www.foooooot.com/trip/3067492/\" target=\"_blank\" rel=\"noopener\">http://www.foooooot.com/trip/3067492/</a></li>\n<li><input checked disabled type=\"checkbox\"> 武功山   </li>\n<li><input checked disabled type=\"checkbox\"> ‌徽杭古道</li>\n<li><input disabled type=\"checkbox\"> ‌稻城亚丁</li>\n<li><input disabled type=\"checkbox\"> ‌雨崩</li>\n<li><input disabled type=\"checkbox\"> ‌黄南古道</li>\n<li><input checked disabled type=\"checkbox\"> ‌莫干山</li>\n<li><input disabled type=\"checkbox\"> ‌腾格里沙漠</li>\n<li><input disabled type=\"checkbox\"> ‌虎跳峡</li>\n<li><input disabled type=\"checkbox\"> ‌乌孙古道</li>\n<li><input disabled type=\"checkbox\"> ‌吴越古道</li>\n<li><input disabled type=\"checkbox\"> ‌括苍山</li>\n<li><input disabled type=\"checkbox\"> ‌船底顶</li>\n<li><input disabled type=\"checkbox\"> ‌韭菜岭</li>\n<li><input disabled type=\"checkbox\"> ‌四姑娘山</li>\n<li><input disabled type=\"checkbox\"> ‌军障古道</li>\n<li><input disabled type=\"checkbox\"> ‌南太行山</li>\n<li><input disabled type=\"checkbox\"> ‌五台山</li>\n<li><input checked disabled type=\"checkbox\"> 上虞池杉  轨迹: <a href=\"http://foooooot.com/trip/3169829/\" target=\"_blank\" rel=\"noopener\">http://foooooot.com/trip/3169829/</a></li>\n<li><input checked disabled type=\"checkbox\"> 陶宴岭古道 轨迹: <a href=\"http://foooooot.com/trip/3169859/\" target=\"_blank\" rel=\"noopener\">http://foooooot.com/trip/3169859/</a></li>\n</ul>\n<hr>\n<p>PS：以后尽量所有的路线都正确记录轨迹，有一起约的小伙伴也可以留言</p>\n"},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2019-09-27T06:54:52.021Z","updated":"2019-09-27T06:54:52.017Z","path":"categories/index.html","_id":"ck42dyibz0002u9ur0wap6coi","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Favorite site","layout":"post","comments":1,"sidebar":"none","_content":"[sameersbn/docker-gitlab: Dockerized GitLab](https://github.com/sameersbn/docker-gitlab)\n\n[jamesrwhite/minicron: A system to manage and monitor cron jobs](https://github.com/jamesrwhite/minicron)\n\n[samwierema/go-qr-generator: A QR code generator written in Golang](https://github.com/samwierema/go-qr-generator)\n\n[jumpserver/jumpserver: 开源跳板机(堡垒机):认证,授权,审计,自动化运维](https://github.com/jumpserver/jumpserver)\n\n[etsy/statsd: Daemon for easy but powerful stats aggregation](https://github.com/etsy/statsd)\n\n[mobtitude/docker-vpn-pptp](https://github.com/mobtitude/docker-vpn-pptp)\n\n[adnanh/webhook: webhook is a lightweight configurable tool written in Go, that allows you to easily create HTTP endpoints (hooks) on your server, which you can use to execute configured commands.](https://github.com/adnanh/webhook)\n\n[TonnyL/Awesome_APIs: A collection of APIs](https://github.com/TonnyL/Awesome_APIs)\n\n[henices/Tcp-DNS-proxy: A TCP dns proxy which can get the RIGHT ip address](https://github.com/henices/Tcp-DNS-proxy)\n\n[robbyrussell/oh-my-zsh: A delightful community-driven (with 1,000+ contributors) framework for managing your zsh configuration. Includes 200+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, php, python, etc), over 140 themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.](https://github.com/robbyrussell/oh-my-zsh)\n\n[kylemanna/docker-openvpn: 🔒 OpenVPN server in a Docker container complete with an EasyRSA PKI CA](https://github.com/kylemanna/docker-openvpn)\n\n[oddrationale/docker-shadowsocks: shadowsocks Docker image](https://github.com/oddrationale/docker-shadowsocks)","source":"links/index.md","raw":"---\ntitle: Favorite site\nlayout: post\ncomments: true\nsidebar: none\n---\n[sameersbn/docker-gitlab: Dockerized GitLab](https://github.com/sameersbn/docker-gitlab)\n\n[jamesrwhite/minicron: A system to manage and monitor cron jobs](https://github.com/jamesrwhite/minicron)\n\n[samwierema/go-qr-generator: A QR code generator written in Golang](https://github.com/samwierema/go-qr-generator)\n\n[jumpserver/jumpserver: 开源跳板机(堡垒机):认证,授权,审计,自动化运维](https://github.com/jumpserver/jumpserver)\n\n[etsy/statsd: Daemon for easy but powerful stats aggregation](https://github.com/etsy/statsd)\n\n[mobtitude/docker-vpn-pptp](https://github.com/mobtitude/docker-vpn-pptp)\n\n[adnanh/webhook: webhook is a lightweight configurable tool written in Go, that allows you to easily create HTTP endpoints (hooks) on your server, which you can use to execute configured commands.](https://github.com/adnanh/webhook)\n\n[TonnyL/Awesome_APIs: A collection of APIs](https://github.com/TonnyL/Awesome_APIs)\n\n[henices/Tcp-DNS-proxy: A TCP dns proxy which can get the RIGHT ip address](https://github.com/henices/Tcp-DNS-proxy)\n\n[robbyrussell/oh-my-zsh: A delightful community-driven (with 1,000+ contributors) framework for managing your zsh configuration. Includes 200+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, php, python, etc), over 140 themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.](https://github.com/robbyrussell/oh-my-zsh)\n\n[kylemanna/docker-openvpn: 🔒 OpenVPN server in a Docker container complete with an EasyRSA PKI CA](https://github.com/kylemanna/docker-openvpn)\n\n[oddrationale/docker-shadowsocks: shadowsocks Docker image](https://github.com/oddrationale/docker-shadowsocks)","date":"2019-10-21T09:33:20.417Z","updated":"2019-10-21T09:33:20.417Z","path":"links/index.html","_id":"ck42dyic30005u9ur6smw59aa","content":"<p><a href=\"https://github.com/sameersbn/docker-gitlab\" target=\"_blank\" rel=\"noopener\">sameersbn/docker-gitlab: Dockerized GitLab</a></p>\n<p><a href=\"https://github.com/jamesrwhite/minicron\" target=\"_blank\" rel=\"noopener\">jamesrwhite/minicron: A system to manage and monitor cron jobs</a></p>\n<p><a href=\"https://github.com/samwierema/go-qr-generator\" target=\"_blank\" rel=\"noopener\">samwierema/go-qr-generator: A QR code generator written in Golang</a></p>\n<p><a href=\"https://github.com/jumpserver/jumpserver\" target=\"_blank\" rel=\"noopener\">jumpserver/jumpserver: 开源跳板机(堡垒机):认证,授权,审计,自动化运维</a></p>\n<p><a href=\"https://github.com/etsy/statsd\" target=\"_blank\" rel=\"noopener\">etsy/statsd: Daemon for easy but powerful stats aggregation</a></p>\n<p><a href=\"https://github.com/mobtitude/docker-vpn-pptp\" target=\"_blank\" rel=\"noopener\">mobtitude/docker-vpn-pptp</a></p>\n<p><a href=\"https://github.com/adnanh/webhook\" target=\"_blank\" rel=\"noopener\">adnanh/webhook: webhook is a lightweight configurable tool written in Go, that allows you to easily create HTTP endpoints (hooks) on your server, which you can use to execute configured commands.</a></p>\n<p><a href=\"https://github.com/TonnyL/Awesome_APIs\" target=\"_blank\" rel=\"noopener\">TonnyL/Awesome_APIs: A collection of APIs</a></p>\n<p><a href=\"https://github.com/henices/Tcp-DNS-proxy\" target=\"_blank\" rel=\"noopener\">henices/Tcp-DNS-proxy: A TCP dns proxy which can get the RIGHT ip address</a></p>\n<p><a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">robbyrussell/oh-my-zsh: A delightful community-driven (with 1,000+ contributors) framework for managing your zsh configuration. Includes 200+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, php, python, etc), over 140 themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.</a></p>\n<p><a href=\"https://github.com/kylemanna/docker-openvpn\" target=\"_blank\" rel=\"noopener\">kylemanna/docker-openvpn: 🔒 OpenVPN server in a Docker container complete with an EasyRSA PKI CA</a></p>\n<p><a href=\"https://github.com/oddrationale/docker-shadowsocks\" target=\"_blank\" rel=\"noopener\">oddrationale/docker-shadowsocks: shadowsocks Docker image</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://github.com/sameersbn/docker-gitlab\" target=\"_blank\" rel=\"noopener\">sameersbn/docker-gitlab: Dockerized GitLab</a></p>\n<p><a href=\"https://github.com/jamesrwhite/minicron\" target=\"_blank\" rel=\"noopener\">jamesrwhite/minicron: A system to manage and monitor cron jobs</a></p>\n<p><a href=\"https://github.com/samwierema/go-qr-generator\" target=\"_blank\" rel=\"noopener\">samwierema/go-qr-generator: A QR code generator written in Golang</a></p>\n<p><a href=\"https://github.com/jumpserver/jumpserver\" target=\"_blank\" rel=\"noopener\">jumpserver/jumpserver: 开源跳板机(堡垒机):认证,授权,审计,自动化运维</a></p>\n<p><a href=\"https://github.com/etsy/statsd\" target=\"_blank\" rel=\"noopener\">etsy/statsd: Daemon for easy but powerful stats aggregation</a></p>\n<p><a href=\"https://github.com/mobtitude/docker-vpn-pptp\" target=\"_blank\" rel=\"noopener\">mobtitude/docker-vpn-pptp</a></p>\n<p><a href=\"https://github.com/adnanh/webhook\" target=\"_blank\" rel=\"noopener\">adnanh/webhook: webhook is a lightweight configurable tool written in Go, that allows you to easily create HTTP endpoints (hooks) on your server, which you can use to execute configured commands.</a></p>\n<p><a href=\"https://github.com/TonnyL/Awesome_APIs\" target=\"_blank\" rel=\"noopener\">TonnyL/Awesome_APIs: A collection of APIs</a></p>\n<p><a href=\"https://github.com/henices/Tcp-DNS-proxy\" target=\"_blank\" rel=\"noopener\">henices/Tcp-DNS-proxy: A TCP dns proxy which can get the RIGHT ip address</a></p>\n<p><a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">robbyrussell/oh-my-zsh: A delightful community-driven (with 1,000+ contributors) framework for managing your zsh configuration. Includes 200+ optional plugins (rails, git, OSX, hub, capistrano, brew, ant, php, python, etc), over 140 themes to spice up your morning, and an auto-update tool so that makes it easy to keep up with the latest updates from the community.</a></p>\n<p><a href=\"https://github.com/kylemanna/docker-openvpn\" target=\"_blank\" rel=\"noopener\">kylemanna/docker-openvpn: 🔒 OpenVPN server in a Docker container complete with an EasyRSA PKI CA</a></p>\n<p><a href=\"https://github.com/oddrationale/docker-shadowsocks\" target=\"_blank\" rel=\"noopener\">oddrationale/docker-shadowsocks: shadowsocks Docker image</a></p>\n"},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2019-09-27T06:55:01.568Z","updated":"2019-09-27T06:55:01.567Z","path":"repository/index.html","_id":"ck42dyic60008u9ur5sj9ldk8","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\n---","date":"2019-09-26T09:33:06.254Z","updated":"2019-09-26T09:33:06.254Z","path":"tags/index.html","comments":1,"_id":"ck42dyic9000au9ur7jja2owx","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Commands Tips","layout":"post","comments":1,"_content":"\n\n```\n#获取所有region的机器数量\nfor i in $(aws ec2 describe-regions | grep RegionName| awk -F\"[\\\"]+\" '{print $4}');do echo -n \"$i:  \"; AWS_PROFILE=jp aws --region=$i ec2 describe-instances|grep InstanceId|wc -l;done;\n\n#获取节点的机器tag.name和privateIP\naws ec2 describe-instances --filters \"Name=tag:Service,Values=eos\" --query \"Reservations[*].Instances[*].[PrivateIpAddress,Tags[?Key=='Name'].Value]\" --output text\n\n#simple http server\npython -m SimperHTTPServer 60123\n\n#ssh端口转发\nssh -v -N -L 0.0.0.0:60123:192.168.10.195:60123 203.175.165.66\n\n#查看rsa私钥的公钥\nssh-keygen -y -f id_rsa > id_rsa.pub\n\n#wget 断点续传\nwget -c -t 0 -O backup_2018_01_01_050000_9591273.bak http://47.88.192.116:12312/backup_2018_01_01_050000_9591273.bak\n\n\n#rsync+ssh proxy\nrsync -av -P -e \"ssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p'\" 2018-03-06_03-05.sql.gz 10.86.48.8:/data/backup\n\n#consul-template\n/srv/consul/consul-template -consul 192.168.10.123:8500 -template /srv/consul/my.ctmpl:/srv/consul/conf.d/my.conf:/etc/init.d/nginx reload -once\n\n#iptables forward\niptables -t nat -A PREROUTING -d 192.168.10.226 -p tcp -dport 6386 -j DNAT --to-destination 192.168.10.81:6386\niptables -t nat -I POSTROUTING  -j MASQUERADE\n\n#远程抓包在本地调用wireshark工具打开\nssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p' 192.168.199.63 \"sudo tcpdump -vv -i eth0 port 80 -w -\" | wireshark -k -i -\n\n#git diff对比commit差异，只列出文件名\ngit diff --name-status 128e72a28ea38d1c8691a22a28937356e7adf736^ 128e72a28ea38d1c8691a22a28937356e7adf736\n\n#docker log-opt\n--log-driver syslog --log-opt tag=\"eos-producer\"\n--log-driver json-file --log-opt max-size=500m\n\nsudo docker run --log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=eos-log --log-opt awslogs-datetime-format='\\[%b %d, %Y %H:%M:%S\\]'  -d  -p 8898:80 nginx\n\ndocker run -d -p 9876:9876 -p 80:8888 --name eos --log-driver gelf --log-opt gelf-address=udp://10.188.10.145:15155  -v /data/eos/:/eos  eoslaomao/eos:1.3.0 /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf\n\ndocker run -d -p 9876:9876 -p 8888:8888 --name eos --log-driver json-file --log-opt max-size=1g  -v /data/eos/:/eos gcr.io/eosasia-testnet/eos:v1.5.3-patch /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf\n\n#pigz多线程打包\napt install pigz\ntar --use-compress-program=pigz -cvpf package.tgz ./package\ntar --use-compress-program=pigz -xvpf package.tgz -C ./package\n\n#aws elb reg/unreg instance\naws elbv2 register-targets --target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd\naws elbv2 deregister-targets --target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd\n\n#pmm\ndocker run -d \\\n   -p 80:81 \\\n   --volumes-from pmm-data \\\n   --name pmm-server \\\n   --restart always \\\n   percona/pmm-server:latest\n\n#git 使用指定的private key clone\nGIT_SSH_COMMAND=\"ssh -i ~/.ssh/id_rsa\" git clone git@cd.i.ly.com:ly/cat.git\n\n\n#K8S 端口转发\nkubectl -n test port-forward $(kubectl -n test get endpoints prometheus -o jsonpath='{.subsets[0].addresses[0].targetRef.name}') 9090:9090\n\n#jp 处理数据\njq  '.members[]|{\"id\": .id, \"Name\": .fullName}' trello.json\njq  '.cards[]|if .idList == \"5c64e37e57ba1c20f62751ce\" then .idMembers else .xxx end' trello.json\n\n#获取websocket返回信息\ns = new WebSocket('wss://www.staging.strikingly.com/livechat-ws')\ns.onclose = (e) => { console.log(e)}\n\n# 获取postgresql scheme\nselect * from information_schema.schemata;\n\n#查看表字段 - postgresql\nSELECT a.attname as name, a.attnotnull as notnull\nFROM pg_class as c,pg_attribute as a\nwhere c.relname = 'mini_program_accounts' and a.attrelid = c.oid and a.attnum>0\n\n#postgresql dump database\npg_dump -U vi -d vi -h rm-j.pg.rds.aliyuncs.com -p 3433 --no-owner --no-privileges -f vi.sql\n\n#mysqldump\nmysqldump --host rm-j.mysql.rds.aliyuncs.com -u vi -p --databases via --column-statistics=0 > vi.sql\n\n# 获取当前会话总数\nselect count(*) from pg_stat_activity;\n\n# 杀死所有idle的进程\nselect pg_terminate_backend(pid) from pg_stat_activity where state='idle';\n\n# 查看所有表的空间占用情况\nSELECT  \nschemaname as schema,  \ntablename as table_name,  \npg_size_pretty(pg_relation_size(schemaname || '.' || tablename)) AS size_p,  \npg_total_relation_size(schemaname || '.' || tablename) AS siz,  \npg_size_pretty(pg_total_relation_size(schemaname || '.' || tablename)) AS 表总大小,  \npg_total_relation_size(schemaname || '.' || tablename) - pg_relation_size(schemaname || '.' || tablename) AS 索引大小,  \n(100*(pg_total_relation_size(schemaname || '.' || tablename) - pg_relation_size(schemaname || '.' || tablename)))/CASE WHEN pg_total_relation_size(schemaname || '.' || tablename) = 0 THEN 1 ELSE pg_total_relation_size(schemaname || '.' || tablename) END || '%' AS index_pct  \nFROM pg_tables  \nORDER BY siz DESC  \n```","source":"tips/index.md","raw":"---\ntitle: Commands Tips\nlayout: post\ncomments: true\n---\n\n\n```\n#获取所有region的机器数量\nfor i in $(aws ec2 describe-regions | grep RegionName| awk -F\"[\\\"]+\" '{print $4}');do echo -n \"$i:  \"; AWS_PROFILE=jp aws --region=$i ec2 describe-instances|grep InstanceId|wc -l;done;\n\n#获取节点的机器tag.name和privateIP\naws ec2 describe-instances --filters \"Name=tag:Service,Values=eos\" --query \"Reservations[*].Instances[*].[PrivateIpAddress,Tags[?Key=='Name'].Value]\" --output text\n\n#simple http server\npython -m SimperHTTPServer 60123\n\n#ssh端口转发\nssh -v -N -L 0.0.0.0:60123:192.168.10.195:60123 203.175.165.66\n\n#查看rsa私钥的公钥\nssh-keygen -y -f id_rsa > id_rsa.pub\n\n#wget 断点续传\nwget -c -t 0 -O backup_2018_01_01_050000_9591273.bak http://47.88.192.116:12312/backup_2018_01_01_050000_9591273.bak\n\n\n#rsync+ssh proxy\nrsync -av -P -e \"ssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p'\" 2018-03-06_03-05.sql.gz 10.86.48.8:/data/backup\n\n#consul-template\n/srv/consul/consul-template -consul 192.168.10.123:8500 -template /srv/consul/my.ctmpl:/srv/consul/conf.d/my.conf:/etc/init.d/nginx reload -once\n\n#iptables forward\niptables -t nat -A PREROUTING -d 192.168.10.226 -p tcp -dport 6386 -j DNAT --to-destination 192.168.10.81:6386\niptables -t nat -I POSTROUTING  -j MASQUERADE\n\n#远程抓包在本地调用wireshark工具打开\nssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p' 192.168.199.63 \"sudo tcpdump -vv -i eth0 port 80 -w -\" | wireshark -k -i -\n\n#git diff对比commit差异，只列出文件名\ngit diff --name-status 128e72a28ea38d1c8691a22a28937356e7adf736^ 128e72a28ea38d1c8691a22a28937356e7adf736\n\n#docker log-opt\n--log-driver syslog --log-opt tag=\"eos-producer\"\n--log-driver json-file --log-opt max-size=500m\n\nsudo docker run --log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=eos-log --log-opt awslogs-datetime-format='\\[%b %d, %Y %H:%M:%S\\]'  -d  -p 8898:80 nginx\n\ndocker run -d -p 9876:9876 -p 80:8888 --name eos --log-driver gelf --log-opt gelf-address=udp://10.188.10.145:15155  -v /data/eos/:/eos  eoslaomao/eos:1.3.0 /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf\n\ndocker run -d -p 9876:9876 -p 8888:8888 --name eos --log-driver json-file --log-opt max-size=1g  -v /data/eos/:/eos gcr.io/eosasia-testnet/eos:v1.5.3-patch /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf\n\n#pigz多线程打包\napt install pigz\ntar --use-compress-program=pigz -cvpf package.tgz ./package\ntar --use-compress-program=pigz -xvpf package.tgz -C ./package\n\n#aws elb reg/unreg instance\naws elbv2 register-targets --target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd\naws elbv2 deregister-targets --target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd\n\n#pmm\ndocker run -d \\\n   -p 80:81 \\\n   --volumes-from pmm-data \\\n   --name pmm-server \\\n   --restart always \\\n   percona/pmm-server:latest\n\n#git 使用指定的private key clone\nGIT_SSH_COMMAND=\"ssh -i ~/.ssh/id_rsa\" git clone git@cd.i.ly.com:ly/cat.git\n\n\n#K8S 端口转发\nkubectl -n test port-forward $(kubectl -n test get endpoints prometheus -o jsonpath='{.subsets[0].addresses[0].targetRef.name}') 9090:9090\n\n#jp 处理数据\njq  '.members[]|{\"id\": .id, \"Name\": .fullName}' trello.json\njq  '.cards[]|if .idList == \"5c64e37e57ba1c20f62751ce\" then .idMembers else .xxx end' trello.json\n\n#获取websocket返回信息\ns = new WebSocket('wss://www.staging.strikingly.com/livechat-ws')\ns.onclose = (e) => { console.log(e)}\n\n# 获取postgresql scheme\nselect * from information_schema.schemata;\n\n#查看表字段 - postgresql\nSELECT a.attname as name, a.attnotnull as notnull\nFROM pg_class as c,pg_attribute as a\nwhere c.relname = 'mini_program_accounts' and a.attrelid = c.oid and a.attnum>0\n\n#postgresql dump database\npg_dump -U vi -d vi -h rm-j.pg.rds.aliyuncs.com -p 3433 --no-owner --no-privileges -f vi.sql\n\n#mysqldump\nmysqldump --host rm-j.mysql.rds.aliyuncs.com -u vi -p --databases via --column-statistics=0 > vi.sql\n\n# 获取当前会话总数\nselect count(*) from pg_stat_activity;\n\n# 杀死所有idle的进程\nselect pg_terminate_backend(pid) from pg_stat_activity where state='idle';\n\n# 查看所有表的空间占用情况\nSELECT  \nschemaname as schema,  \ntablename as table_name,  \npg_size_pretty(pg_relation_size(schemaname || '.' || tablename)) AS size_p,  \npg_total_relation_size(schemaname || '.' || tablename) AS siz,  \npg_size_pretty(pg_total_relation_size(schemaname || '.' || tablename)) AS 表总大小,  \npg_total_relation_size(schemaname || '.' || tablename) - pg_relation_size(schemaname || '.' || tablename) AS 索引大小,  \n(100*(pg_total_relation_size(schemaname || '.' || tablename) - pg_relation_size(schemaname || '.' || tablename)))/CASE WHEN pg_total_relation_size(schemaname || '.' || tablename) = 0 THEN 1 ELSE pg_total_relation_size(schemaname || '.' || tablename) END || '%' AS index_pct  \nFROM pg_tables  \nORDER BY siz DESC  \n```","date":"2019-10-21T08:58:04.018Z","updated":"2019-10-21T08:58:04.018Z","path":"tips/index.html","_id":"ck42dyicb000du9urc3gchcuw","content":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获取所有region的机器数量</span></span><br><span class=\"line\">for i in $(aws ec2 <span class=\"keyword\">describe</span>-regions | grep RegionName| awk -F<span class=\"string\">\"[\\\"]+\"</span> <span class=\"string\">'&#123;print $4&#125;'</span>);<span class=\"keyword\">do</span> echo -n <span class=\"string\">\"$i:  \"</span>; AWS_PROFILE=jp aws <span class=\"comment\">--region=$i ec2 describe-instances|grep InstanceId|wc -l;done;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取节点的机器tag.name和privateIP</span></span><br><span class=\"line\">aws ec2 <span class=\"keyword\">describe</span>-instances <span class=\"comment\">--filters \"Name=tag:Service,Values=eos\" --query \"Reservations[*].Instances[*].[PrivateIpAddress,Tags[?Key=='Name'].Value]\" --output text</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#simple http server</span></span><br><span class=\"line\">python -m SimperHTTPServer <span class=\"number\">60123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ssh端口转发</span></span><br><span class=\"line\">ssh -v -N -L <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">60123</span>:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.195</span>:<span class=\"number\">60123</span> <span class=\"number\">203.175</span><span class=\"number\">.165</span><span class=\"number\">.66</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看rsa私钥的公钥</span></span><br><span class=\"line\">ssh-keygen -y -f id_rsa &gt; id_rsa.pub</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#wget 断点续传</span></span><br><span class=\"line\">wget -c -t <span class=\"number\">0</span> -O backup_2018_01_01_050000_9591273.bak <span class=\"keyword\">http</span>://<span class=\"number\">47.88</span><span class=\"number\">.192</span><span class=\"number\">.116</span>:<span class=\"number\">12312</span>/backup_2018_01_01_050000_9591273.bak</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#rsync+ssh proxy</span></span><br><span class=\"line\">rsync -av -P -e <span class=\"string\">\"ssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p'\"</span> <span class=\"number\">2018</span><span class=\"number\">-03</span><span class=\"number\">-06</span>_03<span class=\"number\">-05.</span>sql.gz <span class=\"number\">10.86</span><span class=\"number\">.48</span><span class=\"number\">.8</span>:/<span class=\"keyword\">data</span>/<span class=\"keyword\">backup</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#consul-template</span></span><br><span class=\"line\">/srv/consul/consul-<span class=\"keyword\">template</span> -consul <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.123</span>:<span class=\"number\">8500</span> -<span class=\"keyword\">template</span> /srv/consul/my.ctmpl:/srv/consul/conf.d/my.conf:/etc/init.d/nginx reload -once</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#iptables forward</span></span><br><span class=\"line\">iptables -t nat -A PREROUTING -d <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span> -p tcp -dport <span class=\"number\">6386</span> -j DNAT <span class=\"comment\">--to-destination 192.168.10.81:6386</span></span><br><span class=\"line\">iptables -t nat -I POSTROUTING  -j MASQUERADE</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#远程抓包在本地调用wireshark工具打开</span></span><br><span class=\"line\">ssh -o <span class=\"string\">'ProxyCommand ssh 123.206.197.235 nc %h %p'</span> <span class=\"number\">192.168</span><span class=\"number\">.199</span><span class=\"number\">.63</span> <span class=\"string\">\"sudo tcpdump -vv -i eth0 port 80 -w -\"</span> | wireshark -k -i -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#git diff对比commit差异，只列出文件名</span></span><br><span class=\"line\">git diff <span class=\"comment\">--name-status 128e72a28ea38d1c8691a22a28937356e7adf736^ 128e72a28ea38d1c8691a22a28937356e7adf736</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#docker log-opt</span></span><br><span class=\"line\"><span class=\"comment\">--log-driver syslog --log-opt tag=\"eos-producer\"</span></span><br><span class=\"line\"><span class=\"comment\">--log-driver json-file --log-opt max-size=500m</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo docker run <span class=\"comment\">--log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=eos-log --log-opt awslogs-datetime-format='\\[%b %d, %Y %H:%M:%S\\]'  -d  -p 8898:80 nginx</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -p <span class=\"number\">9876</span>:<span class=\"number\">9876</span> -p <span class=\"number\">80</span>:<span class=\"number\">8888</span> <span class=\"comment\">--name eos --log-driver gelf --log-opt gelf-address=udp://10.188.10.145:15155  -v /data/eos/:/eos  eoslaomao/eos:1.3.0 /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -p <span class=\"number\">9876</span>:<span class=\"number\">9876</span> -p <span class=\"number\">8888</span>:<span class=\"number\">8888</span> <span class=\"comment\">--name eos --log-driver json-file --log-opt max-size=1g  -v /data/eos/:/eos gcr.io/eosasia-testnet/eos:v1.5.3-patch /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#pigz多线程打包</span></span><br><span class=\"line\">apt <span class=\"keyword\">install</span> pigz</span><br><span class=\"line\">tar <span class=\"comment\">--use-compress-program=pigz -cvpf package.tgz ./package</span></span><br><span class=\"line\">tar <span class=\"comment\">--use-compress-program=pigz -xvpf package.tgz -C ./package</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#aws elb reg/unreg instance</span></span><br><span class=\"line\">aws elbv2 <span class=\"keyword\">register</span>-targets <span class=\"comment\">--target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd</span></span><br><span class=\"line\">aws elbv2 deregister-targets <span class=\"comment\">--target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#pmm</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">   -p <span class=\"number\">80</span>:<span class=\"number\">81</span> \\</span><br><span class=\"line\">   <span class=\"comment\">--volumes-from pmm-data \\</span></span><br><span class=\"line\">   <span class=\"comment\">--name pmm-server \\</span></span><br><span class=\"line\">   <span class=\"comment\">--restart always \\</span></span><br><span class=\"line\">   percona/pmm-<span class=\"keyword\">server</span>:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#git 使用指定的private key clone</span></span><br><span class=\"line\">GIT_SSH_COMMAND=<span class=\"string\">\"ssh -i ~/.ssh/id_rsa\"</span> git <span class=\"keyword\">clone</span> git@cd.i.ly.com:ly/cat.git</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#K8S 端口转发</span></span><br><span class=\"line\">kubectl -n <span class=\"keyword\">test</span> port-forward $(kubectl -n <span class=\"keyword\">test</span> <span class=\"keyword\">get</span> endpoints prometheus -o jsonpath=<span class=\"string\">'&#123;.subsets[0].addresses[0].targetRef.name&#125;'</span>) <span class=\"number\">9090</span>:<span class=\"number\">9090</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#jp 处理数据</span></span><br><span class=\"line\">jq  <span class=\"string\">'.members[]|&#123;\"id\": .id, \"Name\": .fullName&#125;'</span> trello.json</span><br><span class=\"line\">jq  <span class=\"string\">'.cards[]|if .idList == \"5c64e37e57ba1c20f62751ce\" then .idMembers else .xxx end'</span> trello.json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取websocket返回信息</span></span><br><span class=\"line\">s = <span class=\"keyword\">new</span> WebSocket(<span class=\"string\">'wss://www.staging.strikingly.com/livechat-ws'</span>)</span><br><span class=\"line\">s.onclose = (e) =&gt; &#123; console.log(e)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取postgresql scheme</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> information_schema.schemata;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看表字段 - postgresql</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.attname <span class=\"keyword\">as</span> <span class=\"keyword\">name</span>, a.attnotnull <span class=\"keyword\">as</span> <span class=\"keyword\">notnull</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> pg_class <span class=\"keyword\">as</span> c,pg_attribute <span class=\"keyword\">as</span> a</span><br><span class=\"line\"><span class=\"keyword\">where</span> c.relname = <span class=\"string\">'mini_program_accounts'</span> <span class=\"keyword\">and</span> a.attrelid = c.oid <span class=\"keyword\">and</span> a.attnum&gt;<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#postgresql dump database</span></span><br><span class=\"line\">pg_dump -U vi -d vi -h rm-j.pg.rds.aliyuncs.com -p <span class=\"number\">3433</span> <span class=\"comment\">--no-owner --no-privileges -f vi.sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#mysqldump</span></span><br><span class=\"line\">mysqldump <span class=\"comment\">--host rm-j.mysql.rds.aliyuncs.com -u vi -p --databases via --column-statistics=0 &gt; vi.sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前会话总数</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">count</span>(*) <span class=\"keyword\">from</span> pg_stat_activity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀死所有idle的进程</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> pg_terminate_backend(pid) <span class=\"keyword\">from</span> pg_stat_activity <span class=\"keyword\">where</span> state=<span class=\"string\">'idle'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看所有表的空间占用情况</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span>  </span><br><span class=\"line\">schemaname <span class=\"keyword\">as</span> <span class=\"keyword\">schema</span>,  </span><br><span class=\"line\">tablename <span class=\"keyword\">as</span> table_name,  </span><br><span class=\"line\">pg_size_pretty(pg_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename)) <span class=\"keyword\">AS</span> size_p,  </span><br><span class=\"line\">pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) <span class=\"keyword\">AS</span> siz,  </span><br><span class=\"line\">pg_size_pretty(pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename)) <span class=\"keyword\">AS</span> 表总大小,  </span><br><span class=\"line\">pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) - pg_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) <span class=\"keyword\">AS</span> 索引大小,  </span><br><span class=\"line\">(<span class=\"number\">100</span>*(pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) - pg_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename)))/<span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) = <span class=\"number\">0</span> <span class=\"keyword\">THEN</span> <span class=\"number\">1</span> <span class=\"keyword\">ELSE</span> pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) <span class=\"keyword\">END</span> || <span class=\"string\">'%'</span> <span class=\"keyword\">AS</span> index_pct  </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> pg_tables  </span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> siz <span class=\"keyword\">DESC</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获取所有region的机器数量</span></span><br><span class=\"line\">for i in $(aws ec2 <span class=\"keyword\">describe</span>-regions | grep RegionName| awk -F<span class=\"string\">\"[\\\"]+\"</span> <span class=\"string\">'&#123;print $4&#125;'</span>);<span class=\"keyword\">do</span> echo -n <span class=\"string\">\"$i:  \"</span>; AWS_PROFILE=jp aws <span class=\"comment\">--region=$i ec2 describe-instances|grep InstanceId|wc -l;done;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取节点的机器tag.name和privateIP</span></span><br><span class=\"line\">aws ec2 <span class=\"keyword\">describe</span>-instances <span class=\"comment\">--filters \"Name=tag:Service,Values=eos\" --query \"Reservations[*].Instances[*].[PrivateIpAddress,Tags[?Key=='Name'].Value]\" --output text</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#simple http server</span></span><br><span class=\"line\">python -m SimperHTTPServer <span class=\"number\">60123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ssh端口转发</span></span><br><span class=\"line\">ssh -v -N -L <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>:<span class=\"number\">60123</span>:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.195</span>:<span class=\"number\">60123</span> <span class=\"number\">203.175</span><span class=\"number\">.165</span><span class=\"number\">.66</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看rsa私钥的公钥</span></span><br><span class=\"line\">ssh-keygen -y -f id_rsa &gt; id_rsa.pub</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#wget 断点续传</span></span><br><span class=\"line\">wget -c -t <span class=\"number\">0</span> -O backup_2018_01_01_050000_9591273.bak <span class=\"keyword\">http</span>://<span class=\"number\">47.88</span><span class=\"number\">.192</span><span class=\"number\">.116</span>:<span class=\"number\">12312</span>/backup_2018_01_01_050000_9591273.bak</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#rsync+ssh proxy</span></span><br><span class=\"line\">rsync -av -P -e <span class=\"string\">\"ssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p'\"</span> <span class=\"number\">2018</span><span class=\"number\">-03</span><span class=\"number\">-06</span>_03<span class=\"number\">-05.</span>sql.gz <span class=\"number\">10.86</span><span class=\"number\">.48</span><span class=\"number\">.8</span>:/<span class=\"keyword\">data</span>/<span class=\"keyword\">backup</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#consul-template</span></span><br><span class=\"line\">/srv/consul/consul-<span class=\"keyword\">template</span> -consul <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.123</span>:<span class=\"number\">8500</span> -<span class=\"keyword\">template</span> /srv/consul/my.ctmpl:/srv/consul/conf.d/my.conf:/etc/init.d/nginx reload -once</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#iptables forward</span></span><br><span class=\"line\">iptables -t nat -A PREROUTING -d <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span> -p tcp -dport <span class=\"number\">6386</span> -j DNAT <span class=\"comment\">--to-destination 192.168.10.81:6386</span></span><br><span class=\"line\">iptables -t nat -I POSTROUTING  -j MASQUERADE</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#远程抓包在本地调用wireshark工具打开</span></span><br><span class=\"line\">ssh -o <span class=\"string\">'ProxyCommand ssh 123.206.197.235 nc %h %p'</span> <span class=\"number\">192.168</span><span class=\"number\">.199</span><span class=\"number\">.63</span> <span class=\"string\">\"sudo tcpdump -vv -i eth0 port 80 -w -\"</span> | wireshark -k -i -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#git diff对比commit差异，只列出文件名</span></span><br><span class=\"line\">git diff <span class=\"comment\">--name-status 128e72a28ea38d1c8691a22a28937356e7adf736^ 128e72a28ea38d1c8691a22a28937356e7adf736</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#docker log-opt</span></span><br><span class=\"line\"><span class=\"comment\">--log-driver syslog --log-opt tag=\"eos-producer\"</span></span><br><span class=\"line\"><span class=\"comment\">--log-driver json-file --log-opt max-size=500m</span></span><br><span class=\"line\"></span><br><span class=\"line\">sudo docker run <span class=\"comment\">--log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=eos-log --log-opt awslogs-datetime-format='\\[%b %d, %Y %H:%M:%S\\]'  -d  -p 8898:80 nginx</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -p <span class=\"number\">9876</span>:<span class=\"number\">9876</span> -p <span class=\"number\">80</span>:<span class=\"number\">8888</span> <span class=\"comment\">--name eos --log-driver gelf --log-opt gelf-address=udp://10.188.10.145:15155  -v /data/eos/:/eos  eoslaomao/eos:1.3.0 /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d -p <span class=\"number\">9876</span>:<span class=\"number\">9876</span> -p <span class=\"number\">8888</span>:<span class=\"number\">8888</span> <span class=\"comment\">--name eos --log-driver json-file --log-opt max-size=1g  -v /data/eos/:/eos gcr.io/eosasia-testnet/eos:v1.5.3-patch /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#pigz多线程打包</span></span><br><span class=\"line\">apt <span class=\"keyword\">install</span> pigz</span><br><span class=\"line\">tar <span class=\"comment\">--use-compress-program=pigz -cvpf package.tgz ./package</span></span><br><span class=\"line\">tar <span class=\"comment\">--use-compress-program=pigz -xvpf package.tgz -C ./package</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#aws elb reg/unreg instance</span></span><br><span class=\"line\">aws elbv2 <span class=\"keyword\">register</span>-targets <span class=\"comment\">--target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd</span></span><br><span class=\"line\">aws elbv2 deregister-targets <span class=\"comment\">--target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targets Id=i-00b7f498a742cd</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#pmm</span></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">   -p <span class=\"number\">80</span>:<span class=\"number\">81</span> \\</span><br><span class=\"line\">   <span class=\"comment\">--volumes-from pmm-data \\</span></span><br><span class=\"line\">   <span class=\"comment\">--name pmm-server \\</span></span><br><span class=\"line\">   <span class=\"comment\">--restart always \\</span></span><br><span class=\"line\">   percona/pmm-<span class=\"keyword\">server</span>:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#git 使用指定的private key clone</span></span><br><span class=\"line\">GIT_SSH_COMMAND=<span class=\"string\">\"ssh -i ~/.ssh/id_rsa\"</span> git <span class=\"keyword\">clone</span> git@cd.i.ly.com:ly/cat.git</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#K8S 端口转发</span></span><br><span class=\"line\">kubectl -n <span class=\"keyword\">test</span> port-forward $(kubectl -n <span class=\"keyword\">test</span> <span class=\"keyword\">get</span> endpoints prometheus -o jsonpath=<span class=\"string\">'&#123;.subsets[0].addresses[0].targetRef.name&#125;'</span>) <span class=\"number\">9090</span>:<span class=\"number\">9090</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#jp 处理数据</span></span><br><span class=\"line\">jq  <span class=\"string\">'.members[]|&#123;\"id\": .id, \"Name\": .fullName&#125;'</span> trello.json</span><br><span class=\"line\">jq  <span class=\"string\">'.cards[]|if .idList == \"5c64e37e57ba1c20f62751ce\" then .idMembers else .xxx end'</span> trello.json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取websocket返回信息</span></span><br><span class=\"line\">s = <span class=\"keyword\">new</span> WebSocket(<span class=\"string\">'wss://www.staging.strikingly.com/livechat-ws'</span>)</span><br><span class=\"line\">s.onclose = (e) =&gt; &#123; console.log(e)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取postgresql scheme</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> information_schema.schemata;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看表字段 - postgresql</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> a.attname <span class=\"keyword\">as</span> <span class=\"keyword\">name</span>, a.attnotnull <span class=\"keyword\">as</span> <span class=\"keyword\">notnull</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> pg_class <span class=\"keyword\">as</span> c,pg_attribute <span class=\"keyword\">as</span> a</span><br><span class=\"line\"><span class=\"keyword\">where</span> c.relname = <span class=\"string\">'mini_program_accounts'</span> <span class=\"keyword\">and</span> a.attrelid = c.oid <span class=\"keyword\">and</span> a.attnum&gt;<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#postgresql dump database</span></span><br><span class=\"line\">pg_dump -U vi -d vi -h rm-j.pg.rds.aliyuncs.com -p <span class=\"number\">3433</span> <span class=\"comment\">--no-owner --no-privileges -f vi.sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#mysqldump</span></span><br><span class=\"line\">mysqldump <span class=\"comment\">--host rm-j.mysql.rds.aliyuncs.com -u vi -p --databases via --column-statistics=0 &gt; vi.sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取当前会话总数</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">count</span>(*) <span class=\"keyword\">from</span> pg_stat_activity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀死所有idle的进程</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> pg_terminate_backend(pid) <span class=\"keyword\">from</span> pg_stat_activity <span class=\"keyword\">where</span> state=<span class=\"string\">'idle'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看所有表的空间占用情况</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span>  </span><br><span class=\"line\">schemaname <span class=\"keyword\">as</span> <span class=\"keyword\">schema</span>,  </span><br><span class=\"line\">tablename <span class=\"keyword\">as</span> table_name,  </span><br><span class=\"line\">pg_size_pretty(pg_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename)) <span class=\"keyword\">AS</span> size_p,  </span><br><span class=\"line\">pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) <span class=\"keyword\">AS</span> siz,  </span><br><span class=\"line\">pg_size_pretty(pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename)) <span class=\"keyword\">AS</span> 表总大小,  </span><br><span class=\"line\">pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) - pg_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) <span class=\"keyword\">AS</span> 索引大小,  </span><br><span class=\"line\">(<span class=\"number\">100</span>*(pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) - pg_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename)))/<span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) = <span class=\"number\">0</span> <span class=\"keyword\">THEN</span> <span class=\"number\">1</span> <span class=\"keyword\">ELSE</span> pg_total_relation_size(schemaname || <span class=\"string\">'.'</span> || tablename) <span class=\"keyword\">END</span> || <span class=\"string\">'%'</span> <span class=\"keyword\">AS</span> index_pct  </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> pg_tables  </span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> siz <span class=\"keyword\">DESC</span></span><br></pre></td></tr></table></figure>"}],"Post":[{"layout":"post","title":"三种共享存储比较","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T20:02:44.000Z","_content":"\n### 共享存储（Share Storage）类型\n\n  1. NAS(Network Attached Storage)网络附加存储\n  2. SAN (Storage Area Network)储存区域网络\n  3. iSAN (internet Storage Area Network )以太网存储区域网络,基于以太网的san\n\n#### NAS(Network Attached Storage)\n  1. 基于tcp/ip网络\n  2. 以文件为单位进行操作（文件锁）\n\n#### SAN (Storage Area Network)\n  1. 基于硬盘驱动协议（sisc）传输的是磁道/扇区信息\n  2. 基于扇区/block锁\n\n#### iSAN (internet Storage Area Network )\n  1. 基于tcp/ip网络 , 通过以太网数据包传递scsi协议数据\n  2. 基于扇区/block锁","source":"_posts/Three-shared-storage-comparisons.md","raw":"---\nlayout: post\ntitle: 三种共享存储比较\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 04:02:44\ntags: [ ]\ncategories:\n    - 'storage'\n#permalink: '/2016/02/18/Three-shared-storage-comparisons'\n---\n\n### 共享存储（Share Storage）类型\n\n  1. NAS(Network Attached Storage)网络附加存储\n  2. SAN (Storage Area Network)储存区域网络\n  3. iSAN (internet Storage Area Network )以太网存储区域网络,基于以太网的san\n\n#### NAS(Network Attached Storage)\n  1. 基于tcp/ip网络\n  2. 以文件为单位进行操作（文件锁）\n\n#### SAN (Storage Area Network)\n  1. 基于硬盘驱动协议（sisc）传输的是磁道/扇区信息\n  2. 基于扇区/block锁\n\n#### iSAN (internet Storage Area Network )\n  1. 基于tcp/ip网络 , 通过以太网数据包传递scsi协议数据\n  2. 基于扇区/block锁","slug":"Three-shared-storage-comparisons","updated":"2019-10-21T06:57:43.060Z","photos":[],"link":"","_id":"ck42dyibv0001u9ury6xzlk2i","content":"<h3 id=\"共享存储（Share-Storage）类型\"><a href=\"#共享存储（Share-Storage）类型\" class=\"headerlink\" title=\"共享存储（Share Storage）类型\"></a>共享存储（Share Storage）类型</h3><ol>\n<li>NAS(Network Attached Storage)网络附加存储</li>\n<li>SAN (Storage Area Network)储存区域网络</li>\n<li>iSAN (internet Storage Area Network )以太网存储区域网络,基于以太网的san</li>\n</ol>\n<h4 id=\"NAS-Network-Attached-Storage\"><a href=\"#NAS-Network-Attached-Storage\" class=\"headerlink\" title=\"NAS(Network Attached Storage)\"></a>NAS(Network Attached Storage)</h4><ol>\n<li>基于tcp/ip网络</li>\n<li>以文件为单位进行操作（文件锁）</li>\n</ol>\n<h4 id=\"SAN-Storage-Area-Network\"><a href=\"#SAN-Storage-Area-Network\" class=\"headerlink\" title=\"SAN (Storage Area Network)\"></a>SAN (Storage Area Network)</h4><ol>\n<li>基于硬盘驱动协议（sisc）传输的是磁道/扇区信息</li>\n<li>基于扇区/block锁</li>\n</ol>\n<h4 id=\"iSAN-internet-Storage-Area-Network\"><a href=\"#iSAN-internet-Storage-Area-Network\" class=\"headerlink\" title=\"iSAN (internet Storage Area Network )\"></a>iSAN (internet Storage Area Network )</h4><ol>\n<li>基于tcp/ip网络 , 通过以太网数据包传递scsi协议数据</li>\n<li>基于扇区/block锁</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"共享存储（Share-Storage）类型\"><a href=\"#共享存储（Share-Storage）类型\" class=\"headerlink\" title=\"共享存储（Share Storage）类型\"></a>共享存储（Share Storage）类型</h3><ol>\n<li>NAS(Network Attached Storage)网络附加存储</li>\n<li>SAN (Storage Area Network)储存区域网络</li>\n<li>iSAN (internet Storage Area Network )以太网存储区域网络,基于以太网的san</li>\n</ol>\n<h4 id=\"NAS-Network-Attached-Storage\"><a href=\"#NAS-Network-Attached-Storage\" class=\"headerlink\" title=\"NAS(Network Attached Storage)\"></a>NAS(Network Attached Storage)</h4><ol>\n<li>基于tcp/ip网络</li>\n<li>以文件为单位进行操作（文件锁）</li>\n</ol>\n<h4 id=\"SAN-Storage-Area-Network\"><a href=\"#SAN-Storage-Area-Network\" class=\"headerlink\" title=\"SAN (Storage Area Network)\"></a>SAN (Storage Area Network)</h4><ol>\n<li>基于硬盘驱动协议（sisc）传输的是磁道/扇区信息</li>\n<li>基于扇区/block锁</li>\n</ol>\n<h4 id=\"iSAN-internet-Storage-Area-Network\"><a href=\"#iSAN-internet-Storage-Area-Network\" class=\"headerlink\" title=\"iSAN (internet Storage Area Network )\"></a>iSAN (internet Storage Area Network )</h4><ol>\n<li>基于tcp/ip网络 , 通过以太网数据包传递scsi协议数据</li>\n<li>基于扇区/block锁</li>\n</ol>\n"},{"layout":"post","title":"Apache的访问控制","published":1,"author":"xiemx","comments":1,"date":"2016-01-17T02:01:04.000Z","_content":"Apache的访问控制两种，一是客户端限制，一是用户验证机制。\n\n* 客户端限制：\n```\n<Directory /some/dir>\norder allow,deny\ndeny from all\n</Directory >\n```\n \n\n这就是一个目录限制，他限制所有IP对这个目录的访问。\n\n* 用户验证机制：\n```\n<Directory /some/dir>\nAuthType Basic\nAuthName \"My Auth File\"\nAuthUserFile /some/file/path\nRequire valid-user\n</Directory >\n```\n这就是一个用户验证机制，他要求用户给出用户名和密码才能访问目录下的内容。","source":"_posts/apache-auth.md","raw":"---\nlayout: post\ntitle: Apache的访问控制\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-17 10:01:04\ntags: [ apache, webserver ]\ncategories:\n    - apache\n---\nApache的访问控制两种，一是客户端限制，一是用户验证机制。\n\n* 客户端限制：\n```\n<Directory /some/dir>\norder allow,deny\ndeny from all\n</Directory >\n```\n \n\n这就是一个目录限制，他限制所有IP对这个目录的访问。\n\n* 用户验证机制：\n```\n<Directory /some/dir>\nAuthType Basic\nAuthName \"My Auth File\"\nAuthUserFile /some/file/path\nRequire valid-user\n</Directory >\n```\n这就是一个用户验证机制，他要求用户给出用户名和密码才能访问目录下的内容。","slug":"apache-auth","updated":"2019-10-21T06:57:42.835Z","photos":[],"link":"","_id":"ck42dyic00003u9urbjdbc0c7","content":"<p>Apache的访问控制两种，一是客户端限制，一是用户验证机制。</p>\n<ul>\n<li>客户端限制：<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;Directory /some/dir&gt;</span></span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">order</span></span> allow,deny</span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">deny</span></span> from <span class=\"literal\">all</span></span><br><span class=\"line\"><span class=\"section\">&lt;/Directory &gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>\n<p>这就是一个目录限制，他限制所有IP对这个目录的访问。</p>\n<ul>\n<li>用户验证机制：<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory /<span class=\"keyword\">some</span>/dir&gt;</span><br><span class=\"line\">AuthType Basic</span><br><span class=\"line\">AuthName \"My Auth File\"</span><br><span class=\"line\">AuthUserFile /<span class=\"keyword\">some</span>/file/<span class=\"type\">path</span></span><br><span class=\"line\">Require <span class=\"keyword\">valid</span>-<span class=\"keyword\">user</span></span><br><span class=\"line\">&lt;/Directory &gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>这就是一个用户验证机制，他要求用户给出用户名和密码才能访问目录下的内容。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Apache的访问控制两种，一是客户端限制，一是用户验证机制。</p>\n<ul>\n<li>客户端限制：<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;Directory /some/dir&gt;</span></span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">order</span></span> allow,deny</span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">deny</span></span> from <span class=\"literal\">all</span></span><br><span class=\"line\"><span class=\"section\">&lt;/Directory &gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ul>\n<p>这就是一个目录限制，他限制所有IP对这个目录的访问。</p>\n<ul>\n<li>用户验证机制：<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Directory /<span class=\"keyword\">some</span>/dir&gt;</span><br><span class=\"line\">AuthType Basic</span><br><span class=\"line\">AuthName \"My Auth File\"</span><br><span class=\"line\">AuthUserFile /<span class=\"keyword\">some</span>/file/<span class=\"type\">path</span></span><br><span class=\"line\">Require <span class=\"keyword\">valid</span>-<span class=\"keyword\">user</span></span><br><span class=\"line\">&lt;/Directory &gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>这就是一个用户验证机制，他要求用户给出用户名和密码才能访问目录下的内容。</p>\n"},{"layout":"post","title":"Apache运行模式prefork和worker","published":1,"author":"xiemx","comments":1,"date":"2016-01-17T03:01:18.000Z","_content":"#### 两种模式\n* prefork模式\n多进程模式。将MaxClients设置为一个足够大的数值以处理潜在的请求高峰，同时又不能太大，以致需要使用的内存超出物理内存的大小。\n\n* worker模式\n多线程多进程模式。由于使用线程来处理请求，可以应对高并发的访问，而系统资源的开销小于基于进程的MPM。但是，它也使用了多进程，每个进程又有多个线程，以获得基于进程的MPM的稳定性。控制每个子进程允许建立的线程数的ThreadsPerChild指令，和控制允许建立的总线程数的MaxClients指令。\n\n#### prefork和worker模式的切换\n\n[root@localhost ~]# rpm -ql httpd | grep worker\n/usr/sbin/httpd.worker\n\n默认的工作模式为prefork当要切换模式时修改/usr/sbin/下的2个启动脚本名称即可\n\n1. 将当前的prefork模式启动文件改名\n```\nmv httpd httpd.prefork\n```\n2. 将worker模式的启动文件改名\n```\nmv httpd.worker httpd\n```\n3. 修改Apache配置文件\n```\nvim /etc/httpd/conf/httpd.conf\n找到里边的如下一段，可适当修改负载等参数：\n<IfModule prefork.c>\nStartServers 8\nMinSpareServers 5\nMaxSpareServers 20\nServerLimit 256\nMaxClients 256\nMaxRequestsPerChild 4000\n</IfModule>\n```\n处于稳定性和安全性考虑，不建议更换apache2的运行方式，使用系统默认prefork即可。另外很多php模块不能工作在worker模式下，例如redhat linux自带的php也不能支持线程安全。所以最好不要切换工作模式。\n\n#### prefork和worker模式的比较\nprefork模式使用多个子进程，每个子进程只有一个线程。每个进程在某个确定的时间只能维持一个连接。在大多数平台上，Prefork MPM在效率上要比Worker MPM要高，但是内存使用大得多。prefork的无线程设计在某些情况下将比worker更有优势：它可以使用那些没有处理好线程安全的第三方模块，并 且对于那些线程调试困难的平台而言，它也更容易调试一些。\n\nworker模式使用多个子进程，每个子进程有多个线程。每个线程在某个确定的时 间只能维持一个连接。通常来说，在一个高流量的HTTP服务器上，Worker MPM是个比较好的选择，因为Worker MPM的内存使用比Prefork MPM要低得多。但worker MPM也由不完善的地方，如果一个线程崩溃，整个进程就会连同其所有线程一起\"死掉\".由于线程共享内存空间，所以一个程序在运行时必须被系统识别为\"每 个线程都是安全的\"。\n\n总的来说，prefork方式速度要稍高于worker，然而它需要的cpu和memory资源也稍多于woker，但在高并发环境下woker优于prefork。\n\n#### prefork模式配置详解\n```\n<IfModule prefork.c>\nServerLimit 256\nStartServers 5\nMinSpareServers 8\nMaxSpareServers 10\nMaxClients 256\nMaxRequestsPerChild 4000\n</IfModule>\nServerLimit\n默认的MaxClient最大是256个线程,如果想设置更大的值，就的加上ServerLimit这个参数。20000是ServerLimit这个参数的最大值。如果需要更大，则必须编译apache,此前都是不需要重新编译Apache。\n生效前提：必须放在其他指令的前面\n\nStartServers\n指定服务器启动时建立的子进程数量，prefork默认为8。\n\nMinSpareServers\n指定空闲子进程的最小数量，默认为5。如果当前空闲子进程数少于MinSpareServers ，那么Apache将以最大每秒一个的速度产生新的子进程。此参数不要设的太大。\n\nMaxSpareServers\n设置空闲子进程的最大数量，默认为10。如果当前有超过MaxSpareServers数量的空闲子进程，那么父进程将杀死多余的子进程。此参数不要设的 太大。如果你将该指令的值设置为比MinSpareServers小，Apache将会自动将其修改成\"MinSpareServers+1\"。\n\nMaxClients\n限定同一时间客户端最大接入请求的数量(单个进程并发线程数)，默认为256。任何超过MaxClients限制的请求都将进入等候队列,一旦一个链接被释放，队列中的请求将得到服务。要增大这个值，你必须同时增大ServerLimit。\n\nMaxRequestsPerChild\n每个子进程在其生存期内允许伺服的最大请求数量，默认为10000.到达MaxRequestsPerChild的限制后，子进程将会结束。如果 MaxRequestsPerChild为\"0\"，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：\n1.可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。\n2.给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。\n\nworker模式配置详解\n<IfModule worker.c>\nStartServers 4\nMaxClients 150\nMinSpareThreads 25\nMaxSpareThreads 75\nThreadsPerChild 25\nMaxRequestsPerChild 0\n</IfModule>\n\nStartServers\n服务器启动时建立的子进程数，默认值是\"3\"。\n\nMaxClients\n允许同时伺服的最大接入请求数量(最大线程数量)。任何超过MaxClients限制的请求都将进入等候队列。默认值 是\"400\",16(ServerLimit)乘以25(ThreadsPerChild)的结果。因此要增加MaxClients的时候，你必须同时增 加ServerLimit的值。\n\nMinSpareThreads\n最小空闲线程数,默认值是\"75\"。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太少，子进程将产生新的空闲线程。\n\nMaxSpareThreads\n设置最大空闲线程数。默认值是\"250\"。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太多，子进程将杀死多余的空闲线程。 MaxSpareThreads的取值范围是有限制的。Apache将按照如下限制自动修正你设置的值：worker要求其大于等于 MinSpareThreads加上ThreadsPerChild的和。\n\nThreadsPerChild\n每个子进程建立的常驻的执行线程数。默认值是25。子进程在启动时建立这些线程后就不再建立新的线程了。\n\nMaxRequestsPerChild\n设置每个子进程在其生存期内允许伺服的最大请求数量。到达MaxRequestsPerChild的限制后，子进程将会结束。如果MaxRequestsPerChild为\"0\"，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：\n1.可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。\n2.给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。\n注意对于KeepAlive链接，只有第一个请求会被计数。事实上，它改变了每个子进程限制最大链接数量的行为。\n```","source":"_posts/apache-running-mode.md","raw":"---\nlayout: post\ntitle: Apache运行模式prefork和worker\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-17 11:01:18\ntags: [ ]\ncategories:\n    - apache\n---\n#### 两种模式\n* prefork模式\n多进程模式。将MaxClients设置为一个足够大的数值以处理潜在的请求高峰，同时又不能太大，以致需要使用的内存超出物理内存的大小。\n\n* worker模式\n多线程多进程模式。由于使用线程来处理请求，可以应对高并发的访问，而系统资源的开销小于基于进程的MPM。但是，它也使用了多进程，每个进程又有多个线程，以获得基于进程的MPM的稳定性。控制每个子进程允许建立的线程数的ThreadsPerChild指令，和控制允许建立的总线程数的MaxClients指令。\n\n#### prefork和worker模式的切换\n\n[root@localhost ~]# rpm -ql httpd | grep worker\n/usr/sbin/httpd.worker\n\n默认的工作模式为prefork当要切换模式时修改/usr/sbin/下的2个启动脚本名称即可\n\n1. 将当前的prefork模式启动文件改名\n```\nmv httpd httpd.prefork\n```\n2. 将worker模式的启动文件改名\n```\nmv httpd.worker httpd\n```\n3. 修改Apache配置文件\n```\nvim /etc/httpd/conf/httpd.conf\n找到里边的如下一段，可适当修改负载等参数：\n<IfModule prefork.c>\nStartServers 8\nMinSpareServers 5\nMaxSpareServers 20\nServerLimit 256\nMaxClients 256\nMaxRequestsPerChild 4000\n</IfModule>\n```\n处于稳定性和安全性考虑，不建议更换apache2的运行方式，使用系统默认prefork即可。另外很多php模块不能工作在worker模式下，例如redhat linux自带的php也不能支持线程安全。所以最好不要切换工作模式。\n\n#### prefork和worker模式的比较\nprefork模式使用多个子进程，每个子进程只有一个线程。每个进程在某个确定的时间只能维持一个连接。在大多数平台上，Prefork MPM在效率上要比Worker MPM要高，但是内存使用大得多。prefork的无线程设计在某些情况下将比worker更有优势：它可以使用那些没有处理好线程安全的第三方模块，并 且对于那些线程调试困难的平台而言，它也更容易调试一些。\n\nworker模式使用多个子进程，每个子进程有多个线程。每个线程在某个确定的时 间只能维持一个连接。通常来说，在一个高流量的HTTP服务器上，Worker MPM是个比较好的选择，因为Worker MPM的内存使用比Prefork MPM要低得多。但worker MPM也由不完善的地方，如果一个线程崩溃，整个进程就会连同其所有线程一起\"死掉\".由于线程共享内存空间，所以一个程序在运行时必须被系统识别为\"每 个线程都是安全的\"。\n\n总的来说，prefork方式速度要稍高于worker，然而它需要的cpu和memory资源也稍多于woker，但在高并发环境下woker优于prefork。\n\n#### prefork模式配置详解\n```\n<IfModule prefork.c>\nServerLimit 256\nStartServers 5\nMinSpareServers 8\nMaxSpareServers 10\nMaxClients 256\nMaxRequestsPerChild 4000\n</IfModule>\nServerLimit\n默认的MaxClient最大是256个线程,如果想设置更大的值，就的加上ServerLimit这个参数。20000是ServerLimit这个参数的最大值。如果需要更大，则必须编译apache,此前都是不需要重新编译Apache。\n生效前提：必须放在其他指令的前面\n\nStartServers\n指定服务器启动时建立的子进程数量，prefork默认为8。\n\nMinSpareServers\n指定空闲子进程的最小数量，默认为5。如果当前空闲子进程数少于MinSpareServers ，那么Apache将以最大每秒一个的速度产生新的子进程。此参数不要设的太大。\n\nMaxSpareServers\n设置空闲子进程的最大数量，默认为10。如果当前有超过MaxSpareServers数量的空闲子进程，那么父进程将杀死多余的子进程。此参数不要设的 太大。如果你将该指令的值设置为比MinSpareServers小，Apache将会自动将其修改成\"MinSpareServers+1\"。\n\nMaxClients\n限定同一时间客户端最大接入请求的数量(单个进程并发线程数)，默认为256。任何超过MaxClients限制的请求都将进入等候队列,一旦一个链接被释放，队列中的请求将得到服务。要增大这个值，你必须同时增大ServerLimit。\n\nMaxRequestsPerChild\n每个子进程在其生存期内允许伺服的最大请求数量，默认为10000.到达MaxRequestsPerChild的限制后，子进程将会结束。如果 MaxRequestsPerChild为\"0\"，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：\n1.可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。\n2.给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。\n\nworker模式配置详解\n<IfModule worker.c>\nStartServers 4\nMaxClients 150\nMinSpareThreads 25\nMaxSpareThreads 75\nThreadsPerChild 25\nMaxRequestsPerChild 0\n</IfModule>\n\nStartServers\n服务器启动时建立的子进程数，默认值是\"3\"。\n\nMaxClients\n允许同时伺服的最大接入请求数量(最大线程数量)。任何超过MaxClients限制的请求都将进入等候队列。默认值 是\"400\",16(ServerLimit)乘以25(ThreadsPerChild)的结果。因此要增加MaxClients的时候，你必须同时增 加ServerLimit的值。\n\nMinSpareThreads\n最小空闲线程数,默认值是\"75\"。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太少，子进程将产生新的空闲线程。\n\nMaxSpareThreads\n设置最大空闲线程数。默认值是\"250\"。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太多，子进程将杀死多余的空闲线程。 MaxSpareThreads的取值范围是有限制的。Apache将按照如下限制自动修正你设置的值：worker要求其大于等于 MinSpareThreads加上ThreadsPerChild的和。\n\nThreadsPerChild\n每个子进程建立的常驻的执行线程数。默认值是25。子进程在启动时建立这些线程后就不再建立新的线程了。\n\nMaxRequestsPerChild\n设置每个子进程在其生存期内允许伺服的最大请求数量。到达MaxRequestsPerChild的限制后，子进程将会结束。如果MaxRequestsPerChild为\"0\"，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：\n1.可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。\n2.给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。\n注意对于KeepAlive链接，只有第一个请求会被计数。事实上，它改变了每个子进程限制最大链接数量的行为。\n```","slug":"apache-running-mode","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyic40006u9urfrforoeg","content":"<h4 id=\"两种模式\"><a href=\"#两种模式\" class=\"headerlink\" title=\"两种模式\"></a>两种模式</h4><ul>\n<li><p>prefork模式<br>多进程模式。将MaxClients设置为一个足够大的数值以处理潜在的请求高峰，同时又不能太大，以致需要使用的内存超出物理内存的大小。</p>\n</li>\n<li><p>worker模式<br>多线程多进程模式。由于使用线程来处理请求，可以应对高并发的访问，而系统资源的开销小于基于进程的MPM。但是，它也使用了多进程，每个进程又有多个线程，以获得基于进程的MPM的稳定性。控制每个子进程允许建立的线程数的ThreadsPerChild指令，和控制允许建立的总线程数的MaxClients指令。</p>\n</li>\n</ul>\n<h4 id=\"prefork和worker模式的切换\"><a href=\"#prefork和worker模式的切换\" class=\"headerlink\" title=\"prefork和worker模式的切换\"></a>prefork和worker模式的切换</h4><p>[root@localhost ~]# rpm -ql httpd | grep worker<br>/usr/sbin/httpd.worker</p>\n<p>默认的工作模式为prefork当要切换模式时修改/usr/sbin/下的2个启动脚本名称即可</p>\n<ol>\n<li><p>将当前的prefork模式启动文件改名</p>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">mv</span> httpd httpd.prefork</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将worker模式的启动文件改名</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv httpd<span class=\"selector-class\">.worker</span> httpd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改Apache配置文件</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">vim</span> <span class=\"string\">/etc/httpd/conf/httpd.conf</span></span><br><span class=\"line\"><span class=\"attr\">找到里边的如下一段，可适当修改负载等参数：</span></span><br><span class=\"line\"><span class=\"meta\">&lt;IfModule</span> <span class=\"string\">prefork.c&gt;</span></span><br><span class=\"line\"><span class=\"attr\">StartServers</span> <span class=\"string\">8</span></span><br><span class=\"line\"><span class=\"attr\">MinSpareServers</span> <span class=\"string\">5</span></span><br><span class=\"line\"><span class=\"attr\">MaxSpareServers</span> <span class=\"string\">20</span></span><br><span class=\"line\"><span class=\"attr\">ServerLimit</span> <span class=\"string\">256</span></span><br><span class=\"line\"><span class=\"attr\">MaxClients</span> <span class=\"string\">256</span></span><br><span class=\"line\"><span class=\"attr\">MaxRequestsPerChild</span> <span class=\"string\">4000</span></span><br><span class=\"line\"><span class=\"attr\">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>处于稳定性和安全性考虑，不建议更换apache2的运行方式，使用系统默认prefork即可。另外很多php模块不能工作在worker模式下，例如redhat linux自带的php也不能支持线程安全。所以最好不要切换工作模式。</p>\n<h4 id=\"prefork和worker模式的比较\"><a href=\"#prefork和worker模式的比较\" class=\"headerlink\" title=\"prefork和worker模式的比较\"></a>prefork和worker模式的比较</h4><p>prefork模式使用多个子进程，每个子进程只有一个线程。每个进程在某个确定的时间只能维持一个连接。在大多数平台上，Prefork MPM在效率上要比Worker MPM要高，但是内存使用大得多。prefork的无线程设计在某些情况下将比worker更有优势：它可以使用那些没有处理好线程安全的第三方模块，并 且对于那些线程调试困难的平台而言，它也更容易调试一些。</p>\n<p>worker模式使用多个子进程，每个子进程有多个线程。每个线程在某个确定的时 间只能维持一个连接。通常来说，在一个高流量的HTTP服务器上，Worker MPM是个比较好的选择，因为Worker MPM的内存使用比Prefork MPM要低得多。但worker MPM也由不完善的地方，如果一个线程崩溃，整个进程就会连同其所有线程一起”死掉”.由于线程共享内存空间，所以一个程序在运行时必须被系统识别为”每 个线程都是安全的”。</p>\n<p>总的来说，prefork方式速度要稍高于worker，然而它需要的cpu和memory资源也稍多于woker，但在高并发环境下woker优于prefork。</p>\n<h4 id=\"prefork模式配置详解\"><a href=\"#prefork模式配置详解\" class=\"headerlink\" title=\"prefork模式配置详解\"></a>prefork模式配置详解</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;IfModule prefork.c&gt;</span><br><span class=\"line\">ServerLimit <span class=\"number\">256</span></span><br><span class=\"line\">StartServers <span class=\"number\">5</span></span><br><span class=\"line\">MinSpareServers <span class=\"number\">8</span></span><br><span class=\"line\">MaxSpareServers <span class=\"number\">10</span></span><br><span class=\"line\">MaxClients <span class=\"number\">256</span></span><br><span class=\"line\">MaxRequestsPerChild <span class=\"number\">4000</span></span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">ServerLimit</span><br><span class=\"line\">默认的MaxClient最大是<span class=\"number\">256</span>个线程,如果想设置更大的值，就的加上ServerLimit这个参数。<span class=\"number\">20000</span>是ServerLimit这个参数的最大值。如果需要更大，则必须编译apache,此前都是不需要重新编译Apache。</span><br><span class=\"line\">生效前提：必须放在其他指令的前面</span><br><span class=\"line\"></span><br><span class=\"line\">StartServers</span><br><span class=\"line\">指定服务器启动时建立的子进程数量，prefork默认为<span class=\"number\">8</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">MinSpareServers</span><br><span class=\"line\">指定空闲子进程的最小数量，默认为<span class=\"number\">5</span>。如果当前空闲子进程数少于MinSpareServers ，那么Apache将以最大每秒一个的速度产生新的子进程。此参数不要设的太大。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxSpareServers</span><br><span class=\"line\">设置空闲子进程的最大数量，默认为<span class=\"number\">10</span>。如果当前有超过MaxSpareServers数量的空闲子进程，那么父进程将杀死多余的子进程。此参数不要设的 太大。如果你将该指令的值设置为比MinSpareServers小，Apache将会自动将其修改成<span class=\"string\">\"MinSpareServers+1\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxClients</span><br><span class=\"line\">限定同一时间客户端最大接入请求的数量(单个进程并发线程数)，默认为<span class=\"number\">256</span>。任何超过MaxClients限制的请求都将进入等候队列,一旦一个链接被释放，队列中的请求将得到服务。要增大这个值，你必须同时增大ServerLimit。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxRequestsPerChild</span><br><span class=\"line\">每个子进程在其生存期内允许伺服的最大请求数量，默认为<span class=\"number\">10000.</span>到达MaxRequestsPerChild的限制后，子进程将会结束。如果 MaxRequestsPerChild为<span class=\"string\">\"0\"</span>，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：</span><br><span class=\"line\"><span class=\"number\">1.</span>可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。</span><br><span class=\"line\"><span class=\"number\">2.</span>给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。</span><br><span class=\"line\"></span><br><span class=\"line\">worker模式配置详解</span><br><span class=\"line\">&lt;IfModule worker.c&gt;</span><br><span class=\"line\">StartServers <span class=\"number\">4</span></span><br><span class=\"line\">MaxClients <span class=\"number\">150</span></span><br><span class=\"line\">MinSpareThreads <span class=\"number\">25</span></span><br><span class=\"line\">MaxSpareThreads <span class=\"number\">75</span></span><br><span class=\"line\">ThreadsPerChild <span class=\"number\">25</span></span><br><span class=\"line\">MaxRequestsPerChild <span class=\"number\">0</span></span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">StartServers</span><br><span class=\"line\">服务器启动时建立的子进程数，默认值是<span class=\"string\">\"3\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxClients</span><br><span class=\"line\">允许同时伺服的最大接入请求数量(最大线程数量)。任何超过MaxClients限制的请求都将进入等候队列。默认值 是<span class=\"string\">\"400\"</span>,<span class=\"number\">16</span>(ServerLimit)乘以<span class=\"number\">25</span>(ThreadsPerChild)的结果。因此要增加MaxClients的时候，你必须同时增 加ServerLimit的值。</span><br><span class=\"line\"></span><br><span class=\"line\">MinSpareThreads</span><br><span class=\"line\">最小空闲线程数,默认值是<span class=\"string\">\"75\"</span>。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太少，子进程将产生新的空闲线程。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxSpareThreads</span><br><span class=\"line\">设置最大空闲线程数。默认值是<span class=\"string\">\"250\"</span>。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太多，子进程将杀死多余的空闲线程。 MaxSpareThreads的取值范围是有限制的。Apache将按照如下限制自动修正你设置的值：worker要求其大于等于 MinSpareThreads加上ThreadsPerChild的和。</span><br><span class=\"line\"></span><br><span class=\"line\">ThreadsPerChild</span><br><span class=\"line\">每个子进程建立的常驻的执行线程数。默认值是<span class=\"number\">25</span>。子进程在启动时建立这些线程后就不再建立新的线程了。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxRequestsPerChild</span><br><span class=\"line\">设置每个子进程在其生存期内允许伺服的最大请求数量。到达MaxRequestsPerChild的限制后，子进程将会结束。如果MaxRequestsPerChild为<span class=\"string\">\"0\"</span>，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：</span><br><span class=\"line\"><span class=\"number\">1.</span>可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。</span><br><span class=\"line\"><span class=\"number\">2.</span>给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。</span><br><span class=\"line\">注意对于KeepAlive链接，只有第一个请求会被计数。事实上，它改变了每个子进程限制最大链接数量的行为。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"两种模式\"><a href=\"#两种模式\" class=\"headerlink\" title=\"两种模式\"></a>两种模式</h4><ul>\n<li><p>prefork模式<br>多进程模式。将MaxClients设置为一个足够大的数值以处理潜在的请求高峰，同时又不能太大，以致需要使用的内存超出物理内存的大小。</p>\n</li>\n<li><p>worker模式<br>多线程多进程模式。由于使用线程来处理请求，可以应对高并发的访问，而系统资源的开销小于基于进程的MPM。但是，它也使用了多进程，每个进程又有多个线程，以获得基于进程的MPM的稳定性。控制每个子进程允许建立的线程数的ThreadsPerChild指令，和控制允许建立的总线程数的MaxClients指令。</p>\n</li>\n</ul>\n<h4 id=\"prefork和worker模式的切换\"><a href=\"#prefork和worker模式的切换\" class=\"headerlink\" title=\"prefork和worker模式的切换\"></a>prefork和worker模式的切换</h4><p>[root@localhost ~]# rpm -ql httpd | grep worker<br>/usr/sbin/httpd.worker</p>\n<p>默认的工作模式为prefork当要切换模式时修改/usr/sbin/下的2个启动脚本名称即可</p>\n<ol>\n<li><p>将当前的prefork模式启动文件改名</p>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">mv</span> httpd httpd.prefork</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将worker模式的启动文件改名</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv httpd<span class=\"selector-class\">.worker</span> httpd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改Apache配置文件</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">vim</span> <span class=\"string\">/etc/httpd/conf/httpd.conf</span></span><br><span class=\"line\"><span class=\"attr\">找到里边的如下一段，可适当修改负载等参数：</span></span><br><span class=\"line\"><span class=\"meta\">&lt;IfModule</span> <span class=\"string\">prefork.c&gt;</span></span><br><span class=\"line\"><span class=\"attr\">StartServers</span> <span class=\"string\">8</span></span><br><span class=\"line\"><span class=\"attr\">MinSpareServers</span> <span class=\"string\">5</span></span><br><span class=\"line\"><span class=\"attr\">MaxSpareServers</span> <span class=\"string\">20</span></span><br><span class=\"line\"><span class=\"attr\">ServerLimit</span> <span class=\"string\">256</span></span><br><span class=\"line\"><span class=\"attr\">MaxClients</span> <span class=\"string\">256</span></span><br><span class=\"line\"><span class=\"attr\">MaxRequestsPerChild</span> <span class=\"string\">4000</span></span><br><span class=\"line\"><span class=\"attr\">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>处于稳定性和安全性考虑，不建议更换apache2的运行方式，使用系统默认prefork即可。另外很多php模块不能工作在worker模式下，例如redhat linux自带的php也不能支持线程安全。所以最好不要切换工作模式。</p>\n<h4 id=\"prefork和worker模式的比较\"><a href=\"#prefork和worker模式的比较\" class=\"headerlink\" title=\"prefork和worker模式的比较\"></a>prefork和worker模式的比较</h4><p>prefork模式使用多个子进程，每个子进程只有一个线程。每个进程在某个确定的时间只能维持一个连接。在大多数平台上，Prefork MPM在效率上要比Worker MPM要高，但是内存使用大得多。prefork的无线程设计在某些情况下将比worker更有优势：它可以使用那些没有处理好线程安全的第三方模块，并 且对于那些线程调试困难的平台而言，它也更容易调试一些。</p>\n<p>worker模式使用多个子进程，每个子进程有多个线程。每个线程在某个确定的时 间只能维持一个连接。通常来说，在一个高流量的HTTP服务器上，Worker MPM是个比较好的选择，因为Worker MPM的内存使用比Prefork MPM要低得多。但worker MPM也由不完善的地方，如果一个线程崩溃，整个进程就会连同其所有线程一起”死掉”.由于线程共享内存空间，所以一个程序在运行时必须被系统识别为”每 个线程都是安全的”。</p>\n<p>总的来说，prefork方式速度要稍高于worker，然而它需要的cpu和memory资源也稍多于woker，但在高并发环境下woker优于prefork。</p>\n<h4 id=\"prefork模式配置详解\"><a href=\"#prefork模式配置详解\" class=\"headerlink\" title=\"prefork模式配置详解\"></a>prefork模式配置详解</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;IfModule prefork.c&gt;</span><br><span class=\"line\">ServerLimit <span class=\"number\">256</span></span><br><span class=\"line\">StartServers <span class=\"number\">5</span></span><br><span class=\"line\">MinSpareServers <span class=\"number\">8</span></span><br><span class=\"line\">MaxSpareServers <span class=\"number\">10</span></span><br><span class=\"line\">MaxClients <span class=\"number\">256</span></span><br><span class=\"line\">MaxRequestsPerChild <span class=\"number\">4000</span></span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">ServerLimit</span><br><span class=\"line\">默认的MaxClient最大是<span class=\"number\">256</span>个线程,如果想设置更大的值，就的加上ServerLimit这个参数。<span class=\"number\">20000</span>是ServerLimit这个参数的最大值。如果需要更大，则必须编译apache,此前都是不需要重新编译Apache。</span><br><span class=\"line\">生效前提：必须放在其他指令的前面</span><br><span class=\"line\"></span><br><span class=\"line\">StartServers</span><br><span class=\"line\">指定服务器启动时建立的子进程数量，prefork默认为<span class=\"number\">8</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">MinSpareServers</span><br><span class=\"line\">指定空闲子进程的最小数量，默认为<span class=\"number\">5</span>。如果当前空闲子进程数少于MinSpareServers ，那么Apache将以最大每秒一个的速度产生新的子进程。此参数不要设的太大。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxSpareServers</span><br><span class=\"line\">设置空闲子进程的最大数量，默认为<span class=\"number\">10</span>。如果当前有超过MaxSpareServers数量的空闲子进程，那么父进程将杀死多余的子进程。此参数不要设的 太大。如果你将该指令的值设置为比MinSpareServers小，Apache将会自动将其修改成<span class=\"string\">\"MinSpareServers+1\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxClients</span><br><span class=\"line\">限定同一时间客户端最大接入请求的数量(单个进程并发线程数)，默认为<span class=\"number\">256</span>。任何超过MaxClients限制的请求都将进入等候队列,一旦一个链接被释放，队列中的请求将得到服务。要增大这个值，你必须同时增大ServerLimit。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxRequestsPerChild</span><br><span class=\"line\">每个子进程在其生存期内允许伺服的最大请求数量，默认为<span class=\"number\">10000.</span>到达MaxRequestsPerChild的限制后，子进程将会结束。如果 MaxRequestsPerChild为<span class=\"string\">\"0\"</span>，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：</span><br><span class=\"line\"><span class=\"number\">1.</span>可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。</span><br><span class=\"line\"><span class=\"number\">2.</span>给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。</span><br><span class=\"line\"></span><br><span class=\"line\">worker模式配置详解</span><br><span class=\"line\">&lt;IfModule worker.c&gt;</span><br><span class=\"line\">StartServers <span class=\"number\">4</span></span><br><span class=\"line\">MaxClients <span class=\"number\">150</span></span><br><span class=\"line\">MinSpareThreads <span class=\"number\">25</span></span><br><span class=\"line\">MaxSpareThreads <span class=\"number\">75</span></span><br><span class=\"line\">ThreadsPerChild <span class=\"number\">25</span></span><br><span class=\"line\">MaxRequestsPerChild <span class=\"number\">0</span></span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">StartServers</span><br><span class=\"line\">服务器启动时建立的子进程数，默认值是<span class=\"string\">\"3\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxClients</span><br><span class=\"line\">允许同时伺服的最大接入请求数量(最大线程数量)。任何超过MaxClients限制的请求都将进入等候队列。默认值 是<span class=\"string\">\"400\"</span>,<span class=\"number\">16</span>(ServerLimit)乘以<span class=\"number\">25</span>(ThreadsPerChild)的结果。因此要增加MaxClients的时候，你必须同时增 加ServerLimit的值。</span><br><span class=\"line\"></span><br><span class=\"line\">MinSpareThreads</span><br><span class=\"line\">最小空闲线程数,默认值是<span class=\"string\">\"75\"</span>。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太少，子进程将产生新的空闲线程。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxSpareThreads</span><br><span class=\"line\">设置最大空闲线程数。默认值是<span class=\"string\">\"250\"</span>。这个MPM将基于整个服务器监视空闲线程数。如果服务器中总的空闲线程数太多，子进程将杀死多余的空闲线程。 MaxSpareThreads的取值范围是有限制的。Apache将按照如下限制自动修正你设置的值：worker要求其大于等于 MinSpareThreads加上ThreadsPerChild的和。</span><br><span class=\"line\"></span><br><span class=\"line\">ThreadsPerChild</span><br><span class=\"line\">每个子进程建立的常驻的执行线程数。默认值是<span class=\"number\">25</span>。子进程在启动时建立这些线程后就不再建立新的线程了。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxRequestsPerChild</span><br><span class=\"line\">设置每个子进程在其生存期内允许伺服的最大请求数量。到达MaxRequestsPerChild的限制后，子进程将会结束。如果MaxRequestsPerChild为<span class=\"string\">\"0\"</span>，子进程将永远不会结束。将MaxRequestsPerChild设置成非零值有两个好处：</span><br><span class=\"line\"><span class=\"number\">1.</span>可以防止(偶然的)内存泄漏无限进行，从而耗尽内存。</span><br><span class=\"line\"><span class=\"number\">2.</span>给进程一个有限寿命，从而有助于当服务器负载减轻的时候减少活动进程的数量。</span><br><span class=\"line\">注意对于KeepAlive链接，只有第一个请求会被计数。事实上，它改变了每个子进程限制最大链接数量的行为。</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Apache搭建web服务器","published":1,"author":"xiemx","comments":1,"date":"2016-01-17T02:01:16.000Z","_content":"linux下搭建web服务器的套件很多，基本使用的还是apache、nginx、tomcat。这三种服务器都有各自的优缺点，在不同的场景下应根据实际需求选用。linux下apache搭建web服务器配置起来较为简单，只需在系统中安装httpd软件包即可。但要实现复杂环境下的应用，则需要配置更多的功能。\n\n1. 安装软件包\n```shell\nyum install httpd -y\n\n[root@localhost ~]# rpm -ql httpd | grep 'httpd\\.conf'\n/etc/httpd/conf/httpd.conf    apache服务的主配置文件\n\n[root@localhost ~]# grep -v '^#\\|^$\\|#' /etc/httpd/conf/httpd.conf\nListen 80     监听端口\nInclude conf.d/*.conf    装载附加配置文件\nUser apache\nGroup apache  运行用户和组\nDocumentRoot \"/var/www/html\"    默认主目录\nDirectoryIndex index.html index.html.var  默认首页\n```\n\n2. 在主目录/var/www/html下创建一个测试页\n\n```shell\n[root@localhost ~]# echo \"test page\" > /var/www/html/index.html\n[root@localhost ~]# /etc/init.d/httpd start\nStarting httpd:                        [OK]\n```\n3. 使用浏览器测试访问\n\n[![apachetest](/images/apachetest-300x89.png)](/images/apachetest-300x89.png)","source":"_posts/apache-webserver.md","raw":"---\nlayout: post\ntitle: Apache搭建web服务器\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-17 10:01:16\ntags: [ apache, webserver ]\ncategories:\n    - apache\n---\nlinux下搭建web服务器的套件很多，基本使用的还是apache、nginx、tomcat。这三种服务器都有各自的优缺点，在不同的场景下应根据实际需求选用。linux下apache搭建web服务器配置起来较为简单，只需在系统中安装httpd软件包即可。但要实现复杂环境下的应用，则需要配置更多的功能。\n\n1. 安装软件包\n```shell\nyum install httpd -y\n\n[root@localhost ~]# rpm -ql httpd | grep 'httpd\\.conf'\n/etc/httpd/conf/httpd.conf    apache服务的主配置文件\n\n[root@localhost ~]# grep -v '^#\\|^$\\|#' /etc/httpd/conf/httpd.conf\nListen 80     监听端口\nInclude conf.d/*.conf    装载附加配置文件\nUser apache\nGroup apache  运行用户和组\nDocumentRoot \"/var/www/html\"    默认主目录\nDirectoryIndex index.html index.html.var  默认首页\n```\n\n2. 在主目录/var/www/html下创建一个测试页\n\n```shell\n[root@localhost ~]# echo \"test page\" > /var/www/html/index.html\n[root@localhost ~]# /etc/init.d/httpd start\nStarting httpd:                        [OK]\n```\n3. 使用浏览器测试访问\n\n[![apachetest](/images/apachetest-300x89.png)](/images/apachetest-300x89.png)","slug":"apache-webserver","updated":"2019-10-21T06:57:42.835Z","photos":[],"link":"","_id":"ck42dyic80009u9ur9e992f7x","content":"<p>linux下搭建web服务器的套件很多，基本使用的还是apache、nginx、tomcat。这三种服务器都有各自的优缺点，在不同的场景下应根据实际需求选用。linux下apache搭建web服务器配置起来较为简单，只需在系统中安装httpd软件包即可。但要实现复杂环境下的应用，则需要配置更多的功能。</p>\n<ol>\n<li><p>安装软件包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd -y</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# rpm -ql httpd | grep 'httpd\\.conf'</span><br><span class=\"line\">/etc/httpd/conf/httpd.conf    apache服务的主配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# grep -v '^#\\|^$\\|#' /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">Listen 80     监听端口</span><br><span class=\"line\">Include conf.d/*.conf    装载附加配置文件</span><br><span class=\"line\">User apache</span><br><span class=\"line\">Group apache  运行用户和组</span><br><span class=\"line\">DocumentRoot \"/var/www/html\"    默认主目录</span><br><span class=\"line\">DirectoryIndex index.html index.html.var  默认首页</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在主目录/var/www/html下创建一个测试页</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# echo \"test page\" &gt; /var/www/html/index.html</span><br><span class=\"line\">[root@localhost ~]# /etc/init.d/httpd start</span><br><span class=\"line\">Starting httpd:                        [OK]</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>使用浏览器测试访问</li>\n</ol>\n<p><a href=\"/images/apachetest-300x89.png\"><img src=\"/images/apachetest-300x89.png\" alt=\"apachetest\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>linux下搭建web服务器的套件很多，基本使用的还是apache、nginx、tomcat。这三种服务器都有各自的优缺点，在不同的场景下应根据实际需求选用。linux下apache搭建web服务器配置起来较为简单，只需在系统中安装httpd软件包即可。但要实现复杂环境下的应用，则需要配置更多的功能。</p>\n<ol>\n<li><p>安装软件包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd -y</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# rpm -ql httpd | grep 'httpd\\.conf'</span><br><span class=\"line\">/etc/httpd/conf/httpd.conf    apache服务的主配置文件</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# grep -v '^#\\|^$\\|#' /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">Listen 80     监听端口</span><br><span class=\"line\">Include conf.d/*.conf    装载附加配置文件</span><br><span class=\"line\">User apache</span><br><span class=\"line\">Group apache  运行用户和组</span><br><span class=\"line\">DocumentRoot \"/var/www/html\"    默认主目录</span><br><span class=\"line\">DirectoryIndex index.html index.html.var  默认首页</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在主目录/var/www/html下创建一个测试页</p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# echo \"test page\" &gt; /var/www/html/index.html</span><br><span class=\"line\">[root@localhost ~]# /etc/init.d/httpd start</span><br><span class=\"line\">Starting httpd:                        [OK]</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>使用浏览器测试访问</li>\n</ol>\n<p><a href=\"/images/apachetest-300x89.png\"><img src=\"/images/apachetest-300x89.png\" alt=\"apachetest\"></a></p>\n"},{"layout":"post","title":"apachetop – 展示web服务器实时统计数据","published":1,"author":"xiemx","comments":1,"date":"2016-08-14T20:08:47.000Z","_content":"\napachetop – 展示web服务器实时统计数据\n\nApachetop展示Apache web服务器上关于http请求的实时表。\n\n它显示统计（stats）, 点击（hits）, 请求（requests）, 请求细节（request details），且能够获得当前你的web服务器正在运行程序的概貌，这一点很赞。\n\n如果你使用的是Nginx，也有一些相似的工具，但似乎没有apachetop那么详细。\n\n安装该命令并尝试运行：\n```shell\n$ sudo apt-get install apachetop \n```\n截图如下：\n\n![img](/images/img_57b1811567e55.png)","source":"_posts/apachetop.md","raw":"---\nlayout: post\ntitle: apachetop – 展示web服务器实时统计数据\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-15 04:08:47\ntags: [ apache, command ]\ncategories:\n    - apache\n---\n\napachetop – 展示web服务器实时统计数据\n\nApachetop展示Apache web服务器上关于http请求的实时表。\n\n它显示统计（stats）, 点击（hits）, 请求（requests）, 请求细节（request details），且能够获得当前你的web服务器正在运行程序的概貌，这一点很赞。\n\n如果你使用的是Nginx，也有一些相似的工具，但似乎没有apachetop那么详细。\n\n安装该命令并尝试运行：\n```shell\n$ sudo apt-get install apachetop \n```\n截图如下：\n\n![img](/images/img_57b1811567e55.png)","slug":"apachetop","updated":"2019-10-21T03:19:52.562Z","photos":[],"link":"","_id":"ck42dyic9000bu9urpw04vjel","content":"<p>apachetop – 展示web服务器实时统计数据</p>\n<p>Apachetop展示Apache web服务器上关于http请求的实时表。</p>\n<p>它显示统计（stats）, 点击（hits）, 请求（requests）, 请求细节（request details），且能够获得当前你的web服务器正在运行程序的概貌，这一点很赞。</p>\n<p>如果你使用的是Nginx，也有一些相似的工具，但似乎没有apachetop那么详细。</p>\n<p>安装该命令并尝试运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo apt-get install apachetop</span></span><br></pre></td></tr></table></figure>\n\n<p>截图如下：</p>\n<p><img src=\"/images/img_57b1811567e55.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>apachetop – 展示web服务器实时统计数据</p>\n<p>Apachetop展示Apache web服务器上关于http请求的实时表。</p>\n<p>它显示统计（stats）, 点击（hits）, 请求（requests）, 请求细节（request details），且能够获得当前你的web服务器正在运行程序的概貌，这一点很赞。</p>\n<p>如果你使用的是Nginx，也有一些相似的工具，但似乎没有apachetop那么详细。</p>\n<p>安装该命令并尝试运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> sudo apt-get install apachetop</span></span><br></pre></td></tr></table></figure>\n\n<p>截图如下：</p>\n<p><img src=\"/images/img_57b1811567e55.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"应用程序池0x80大量报错解决办法","published":1,"author":"xiemx","comments":1,"date":"2015-09-28T18:09:58.000Z","_content":"为应用程序池提供服务的进程意外终止。进程ID是。进程退出代码是'0x80':\n```\nHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W3SVC\\Parameters键下新建一个DWORD项，名字为：UseSharedWPDesktop值为1 重启IIS\n\n```\n","source":"_posts/apppool-0x80-error.md","raw":"---\nlayout: post\ntitle: 应用程序池0x80大量报错解决办法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-09-29 02:09:58\ntags: [ iis, windows, debug ]\ncategories:\n    - iis\n    - windows\n---\n为应用程序池提供服务的进程意外终止。进程ID是。进程退出代码是'0x80':\n```\nHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W3SVC\\Parameters键下新建一个DWORD项，名字为：UseSharedWPDesktop值为1 重启IIS\n\n```\n","slug":"apppool-0x80-error","updated":"2019-10-21T09:02:09.437Z","photos":[],"link":"","_id":"ck42dyicc000eu9urg4wl2tc5","content":"<p>为应用程序池提供服务的进程意外终止。进程ID是。进程退出代码是’0x80’:</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_LOCAL_MACHINE<span class=\"symbol\">\\S</span>ystem<span class=\"symbol\">\\C</span>urrentControlSet<span class=\"symbol\">\\S</span>ervices<span class=\"symbol\">\\W</span>3SVC<span class=\"symbol\">\\P</span>arameters键下新建一个DWORD项，名字为：UseSharedWPDesktop值为1 重启IIS</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>为应用程序池提供服务的进程意外终止。进程ID是。进程退出代码是’0x80’:</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HKEY_LOCAL_MACHINE<span class=\"symbol\">\\S</span>ystem<span class=\"symbol\">\\C</span>urrentControlSet<span class=\"symbol\">\\S</span>ervices<span class=\"symbol\">\\W</span>3SVC<span class=\"symbol\">\\P</span>arameters键下新建一个DWORD项，名字为：UseSharedWPDesktop值为1 重启IIS</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"通过lambda修改AWS CloudFront回源host","published":1,"author":"xiemx","comments":1,"date":"2018-10-10T19:10:17.000Z","_content":"在使用aws cloudfront时发现cloudfront默认不允许自定义回源请求头的Host字段，对于一些情况我们需要使用这个host+ip来回源的时候就有点坑了，这个时候我们可以通过使用aws的lambda@edge，去修改request的header来实现自定义host来回源。\n\naws lambda@edge文档：https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-edge.html\n\n1. 在创建lambda函数，并发布一个版本注意只能在us-east-1这个区创建，否则在附加到cloudfront的时候会报错不支持的区域，代码如下\n\n![img](/images/img_5bbef98529a61.png)\n\n```\n'use strict';\n\n// force a specific Host header to be sent to the origin\n\nexports.handler = (event, context, callback) => {\n    const request = event.Records[0].cf.request;\n    request.headers.host[0].value = 'www.xiemx.com';\n    return callback(null, request);\n};\n```\n\n2. 在cloudfront的Behavior菜单中\n\n![img](/images/img_5bbefa0f833d9.png)\n\n3. 重新deploy cdn和刷新一次cdn缓存","source":"_posts/aws-edge-lambda-modify-origin-host.md","raw":"---\nlayout: post\ntitle: 通过lambda修改AWS CloudFront回源host\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2018-10-11 03:10:17\ntags: [ aws, lambda, cloudfront ]\ncategories:\n    - aws\n---\n在使用aws cloudfront时发现cloudfront默认不允许自定义回源请求头的Host字段，对于一些情况我们需要使用这个host+ip来回源的时候就有点坑了，这个时候我们可以通过使用aws的lambda@edge，去修改request的header来实现自定义host来回源。\n\naws lambda@edge文档：https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-edge.html\n\n1. 在创建lambda函数，并发布一个版本注意只能在us-east-1这个区创建，否则在附加到cloudfront的时候会报错不支持的区域，代码如下\n\n![img](/images/img_5bbef98529a61.png)\n\n```\n'use strict';\n\n// force a specific Host header to be sent to the origin\n\nexports.handler = (event, context, callback) => {\n    const request = event.Records[0].cf.request;\n    request.headers.host[0].value = 'www.xiemx.com';\n    return callback(null, request);\n};\n```\n\n2. 在cloudfront的Behavior菜单中\n\n![img](/images/img_5bbefa0f833d9.png)\n\n3. 重新deploy cdn和刷新一次cdn缓存","slug":"aws-edge-lambda-modify-origin-host","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyice000gu9urjxfc7eto","content":"<p>在使用aws cloudfront时发现cloudfront默认不允许自定义回源请求头的Host字段，对于一些情况我们需要使用这个host+ip来回源的时候就有点坑了，这个时候我们可以通过使用aws的lambda@edge，去修改request的header来实现自定义host来回源。</p>\n<p>aws lambda@edge文档：<a href=\"https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-edge.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-edge.html</a></p>\n<ol>\n<li>在创建lambda函数，并发布一个版本注意只能在us-east-1这个区创建，否则在附加到cloudfront的时候会报错不支持的区域，代码如下</li>\n</ol>\n<p><img src=\"/images/img_5bbef98529a61.png\" alt=\"img\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// force a specific Host header to be sent to the origin</span></span><br><span class=\"line\"></span><br><span class=\"line\">exports.handler = <span class=\"function\">(<span class=\"params\">event, context, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> request = event.Records[<span class=\"number\">0</span>].cf.request;</span><br><span class=\"line\">    request.headers.host[<span class=\"number\">0</span>].value = <span class=\"string\">'www.xiemx.com'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> callback(<span class=\"literal\">null</span>, request);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在cloudfront的Behavior菜单中</li>\n</ol>\n<p><img src=\"/images/img_5bbefa0f833d9.png\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>重新deploy cdn和刷新一次cdn缓存</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>在使用aws cloudfront时发现cloudfront默认不允许自定义回源请求头的Host字段，对于一些情况我们需要使用这个host+ip来回源的时候就有点坑了，这个时候我们可以通过使用aws的lambda@edge，去修改request的header来实现自定义host来回源。</p>\n<p>aws lambda@edge文档：<a href=\"https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-edge.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/zh_cn/lambda/latest/dg/lambda-edge.html</a></p>\n<ol>\n<li>在创建lambda函数，并发布一个版本注意只能在us-east-1这个区创建，否则在附加到cloudfront的时候会报错不支持的区域，代码如下</li>\n</ol>\n<p><img src=\"/images/img_5bbef98529a61.png\" alt=\"img\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// force a specific Host header to be sent to the origin</span></span><br><span class=\"line\"></span><br><span class=\"line\">exports.handler = <span class=\"function\">(<span class=\"params\">event, context, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> request = event.Records[<span class=\"number\">0</span>].cf.request;</span><br><span class=\"line\">    request.headers.host[<span class=\"number\">0</span>].value = <span class=\"string\">'www.xiemx.com'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> callback(<span class=\"literal\">null</span>, request);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在cloudfront的Behavior菜单中</li>\n</ol>\n<p><img src=\"/images/img_5bbefa0f833d9.png\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>重新deploy cdn和刷新一次cdn缓存</li>\n</ol>\n"},{"layout":"post","title":"Mysql-proxy代理程序","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T22:02:43.000Z","_content":"1、安装Lua、glib、pkg-config、libevent、GCC、make等工具不同的环境下不同\n\n2、安装mysql-proxy\n```shell\ntar xzf mysql-proxy-0.8.1.tar.gz\ncd mysql-proxy-0.8.1\n./configure  --prefix=/usr/local/mysql-proxy[root@node1 bin]# /usr/local/mysql-proxy/bin/mysql-proxy     --help-all\nUsage:\nmysql-proxy [OPTION...] - MySQL Proxy\nHelp Options:\n-h, --help                                              Show help options\n--help-all                                              Show all help options\n--help-proxy                                            Show options for the proxy-module\n\nproxy-module\n  -P, --proxy-address=<host:port>                         listening address:port of the proxy-server (default: :4040)\n  -r, --proxy-read-only-backend-addresses=<host:port>     address:port of the remote slave-server (default: not set)\n  -b, --proxy-backend-addresses=<host:port>               address:port of the remote backend-servers (default: 127.0.0.1:3306)\n--proxy-skip-profiling                                  disables profiling of queries (default: enabled)\n--proxy-fix-bug-25371                                   fix bug #25371 (mysqld > 5.1.12) for older libmysql versions\n-s, --proxy-lua-script=<file>                           filename of the lua script (default: not set)\n--no-proxy                                              don't start the proxy-module (default: enabled)\n--proxy-pool-no-change-user                             don't use CHANGE_USER to reset the connection coming from the pool (default: enabled)\n--proxy-connect-timeout                                 connect timeout in seconds (default: 2.0 seconds)\n--proxy-read-timeout                                    read timeout in seconds (default: 8 hours)\n--proxy-write-timeout                                   write timeout in seconds (default: 8 hours)\n\nApplication Options:\n-V, --version                                           Show version\n--defaults-file=<file>                                  configuration file\n--verbose-shutdown                                      Always log the exit code when shutting down\n--daemon                                                Start in daemon-mode\n--user=<user>                                           Run mysql-proxy as user\n--basedir=<absolute path>                               Base directory to prepend to relative paths in the config\n--pid-file=<file>                                       PID file in case we are started as daemon\n--plugin-dir=<path>                                     path to the plugins\n--plugins=<name>                                        plugins to load\n--log-level=(error|warning|info|message|debug)          log all messages of level ... or higher\n--log-file=<file>                                       log all messages in a file\n--log-use-syslog                                        log all messages to syslog\n--log-backtrace-on-crash                                try to invoke debugger on crash\n--keepalive                                             try to restart the proxy if it crashed\n--max-open-files                                        maximum number of open files (ulimit -n)\n--event-threads                                         number of event-handling threads (default: 1)\n--lua-path=<...>                                        set the LUA_PATH\n--lua-cpath=<...>                                       set the LUA_CPATH\n```","source":"_posts/build-mysql-proxy.md","raw":"---\nlayout: post\ntitle: Mysql-proxy代理程序\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 06:02:43\ntags: [ mysql, mysql-proxy ]\ncategories:\n    - mysql\n---\n1、安装Lua、glib、pkg-config、libevent、GCC、make等工具不同的环境下不同\n\n2、安装mysql-proxy\n```shell\ntar xzf mysql-proxy-0.8.1.tar.gz\ncd mysql-proxy-0.8.1\n./configure  --prefix=/usr/local/mysql-proxy[root@node1 bin]# /usr/local/mysql-proxy/bin/mysql-proxy     --help-all\nUsage:\nmysql-proxy [OPTION...] - MySQL Proxy\nHelp Options:\n-h, --help                                              Show help options\n--help-all                                              Show all help options\n--help-proxy                                            Show options for the proxy-module\n\nproxy-module\n  -P, --proxy-address=<host:port>                         listening address:port of the proxy-server (default: :4040)\n  -r, --proxy-read-only-backend-addresses=<host:port>     address:port of the remote slave-server (default: not set)\n  -b, --proxy-backend-addresses=<host:port>               address:port of the remote backend-servers (default: 127.0.0.1:3306)\n--proxy-skip-profiling                                  disables profiling of queries (default: enabled)\n--proxy-fix-bug-25371                                   fix bug #25371 (mysqld > 5.1.12) for older libmysql versions\n-s, --proxy-lua-script=<file>                           filename of the lua script (default: not set)\n--no-proxy                                              don't start the proxy-module (default: enabled)\n--proxy-pool-no-change-user                             don't use CHANGE_USER to reset the connection coming from the pool (default: enabled)\n--proxy-connect-timeout                                 connect timeout in seconds (default: 2.0 seconds)\n--proxy-read-timeout                                    read timeout in seconds (default: 8 hours)\n--proxy-write-timeout                                   write timeout in seconds (default: 8 hours)\n\nApplication Options:\n-V, --version                                           Show version\n--defaults-file=<file>                                  configuration file\n--verbose-shutdown                                      Always log the exit code when shutting down\n--daemon                                                Start in daemon-mode\n--user=<user>                                           Run mysql-proxy as user\n--basedir=<absolute path>                               Base directory to prepend to relative paths in the config\n--pid-file=<file>                                       PID file in case we are started as daemon\n--plugin-dir=<path>                                     path to the plugins\n--plugins=<name>                                        plugins to load\n--log-level=(error|warning|info|message|debug)          log all messages of level ... or higher\n--log-file=<file>                                       log all messages in a file\n--log-use-syslog                                        log all messages to syslog\n--log-backtrace-on-crash                                try to invoke debugger on crash\n--keepalive                                             try to restart the proxy if it crashed\n--max-open-files                                        maximum number of open files (ulimit -n)\n--event-threads                                         number of event-handling threads (default: 1)\n--lua-path=<...>                                        set the LUA_PATH\n--lua-cpath=<...>                                       set the LUA_CPATH\n```","slug":"build-mysql-proxy","updated":"2019-10-21T06:57:42.921Z","photos":[],"link":"","_id":"ck42dyich000ju9urruujtm2p","content":"<p>1、安装Lua、glib、pkg-config、libevent、GCC、make等工具不同的环境下不同</p>\n<p>2、安装mysql-proxy</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzf mysql-proxy-0.8.1.tar.gz</span><br><span class=\"line\">cd mysql-proxy-0.8.1</span><br><span class=\"line\">./configure  --prefix=/usr/local/mysql-proxy[root@node1 bin]# /usr/local/mysql-proxy/bin/mysql-proxy     --help-all</span><br><span class=\"line\">Usage:</span><br><span class=\"line\">mysql-proxy [OPTION...] - MySQL Proxy</span><br><span class=\"line\">Help Options:</span><br><span class=\"line\">-h, --help                                              Show help options</span><br><span class=\"line\">--help-all                                              Show all help options</span><br><span class=\"line\">--help-proxy                                            Show options for the proxy-module</span><br><span class=\"line\"></span><br><span class=\"line\">proxy-module</span><br><span class=\"line\">  -P, --proxy-address=&lt;host:port&gt;                         listening address:port of the proxy-server (default: :4040)</span><br><span class=\"line\">  -r, --proxy-read-only-backend-addresses=&lt;host:port&gt;     address:port of the remote slave-server (default: not set)</span><br><span class=\"line\">  -b, --proxy-backend-addresses=&lt;host:port&gt;               address:port of the remote backend-servers (default: 127.0.0.1:3306)</span><br><span class=\"line\">--proxy-skip-profiling                                  disables profiling of queries (default: enabled)</span><br><span class=\"line\">--proxy-fix-bug-25371                                   fix bug #25371 (mysqld &gt; 5.1.12) for older libmysql versions</span><br><span class=\"line\">-s, --proxy-lua-script=&lt;file&gt;                           filename of the lua script (default: not set)</span><br><span class=\"line\">--no-proxy                                              don't start the proxy-module (default: enabled)</span><br><span class=\"line\">--proxy-pool-no-change-user                             don't use CHANGE_USER to reset the connection coming from the pool (default: enabled)</span><br><span class=\"line\">--proxy-connect-timeout                                 connect timeout in seconds (default: 2.0 seconds)</span><br><span class=\"line\">--proxy-read-timeout                                    read timeout in seconds (default: 8 hours)</span><br><span class=\"line\">--proxy-write-timeout                                   write timeout in seconds (default: 8 hours)</span><br><span class=\"line\"></span><br><span class=\"line\">Application Options:</span><br><span class=\"line\">-V, --version                                           Show version</span><br><span class=\"line\">--defaults-file=&lt;file&gt;                                  configuration file</span><br><span class=\"line\">--verbose-shutdown                                      Always log the exit code when shutting down</span><br><span class=\"line\">--daemon                                                Start in daemon-mode</span><br><span class=\"line\">--user=&lt;user&gt;                                           Run mysql-proxy as user</span><br><span class=\"line\">--basedir=&lt;absolute path&gt;                               Base directory to prepend to relative paths in the config</span><br><span class=\"line\">--pid-file=&lt;file&gt;                                       PID file in case we are started as daemon</span><br><span class=\"line\">--plugin-dir=&lt;path&gt;                                     path to the plugins</span><br><span class=\"line\">--plugins=&lt;name&gt;                                        plugins to load</span><br><span class=\"line\">--log-level=(error|warning|info|message|debug)          log all messages of level ... or higher</span><br><span class=\"line\">--log-file=&lt;file&gt;                                       log all messages in a file</span><br><span class=\"line\">--log-use-syslog                                        log all messages to syslog</span><br><span class=\"line\">--log-backtrace-on-crash                                try to invoke debugger on crash</span><br><span class=\"line\">--keepalive                                             try to restart the proxy if it crashed</span><br><span class=\"line\">--max-open-files                                        maximum number of open files (ulimit -n)</span><br><span class=\"line\">--event-threads                                         number of event-handling threads (default: 1)</span><br><span class=\"line\">--lua-path=&lt;...&gt;                                        set the LUA_PATH</span><br><span class=\"line\">--lua-cpath=&lt;...&gt;                                       set the LUA_CPATH</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>1、安装Lua、glib、pkg-config、libevent、GCC、make等工具不同的环境下不同</p>\n<p>2、安装mysql-proxy</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzf mysql-proxy-0.8.1.tar.gz</span><br><span class=\"line\">cd mysql-proxy-0.8.1</span><br><span class=\"line\">./configure  --prefix=/usr/local/mysql-proxy[root@node1 bin]# /usr/local/mysql-proxy/bin/mysql-proxy     --help-all</span><br><span class=\"line\">Usage:</span><br><span class=\"line\">mysql-proxy [OPTION...] - MySQL Proxy</span><br><span class=\"line\">Help Options:</span><br><span class=\"line\">-h, --help                                              Show help options</span><br><span class=\"line\">--help-all                                              Show all help options</span><br><span class=\"line\">--help-proxy                                            Show options for the proxy-module</span><br><span class=\"line\"></span><br><span class=\"line\">proxy-module</span><br><span class=\"line\">  -P, --proxy-address=&lt;host:port&gt;                         listening address:port of the proxy-server (default: :4040)</span><br><span class=\"line\">  -r, --proxy-read-only-backend-addresses=&lt;host:port&gt;     address:port of the remote slave-server (default: not set)</span><br><span class=\"line\">  -b, --proxy-backend-addresses=&lt;host:port&gt;               address:port of the remote backend-servers (default: 127.0.0.1:3306)</span><br><span class=\"line\">--proxy-skip-profiling                                  disables profiling of queries (default: enabled)</span><br><span class=\"line\">--proxy-fix-bug-25371                                   fix bug #25371 (mysqld &gt; 5.1.12) for older libmysql versions</span><br><span class=\"line\">-s, --proxy-lua-script=&lt;file&gt;                           filename of the lua script (default: not set)</span><br><span class=\"line\">--no-proxy                                              don't start the proxy-module (default: enabled)</span><br><span class=\"line\">--proxy-pool-no-change-user                             don't use CHANGE_USER to reset the connection coming from the pool (default: enabled)</span><br><span class=\"line\">--proxy-connect-timeout                                 connect timeout in seconds (default: 2.0 seconds)</span><br><span class=\"line\">--proxy-read-timeout                                    read timeout in seconds (default: 8 hours)</span><br><span class=\"line\">--proxy-write-timeout                                   write timeout in seconds (default: 8 hours)</span><br><span class=\"line\"></span><br><span class=\"line\">Application Options:</span><br><span class=\"line\">-V, --version                                           Show version</span><br><span class=\"line\">--defaults-file=&lt;file&gt;                                  configuration file</span><br><span class=\"line\">--verbose-shutdown                                      Always log the exit code when shutting down</span><br><span class=\"line\">--daemon                                                Start in daemon-mode</span><br><span class=\"line\">--user=&lt;user&gt;                                           Run mysql-proxy as user</span><br><span class=\"line\">--basedir=&lt;absolute path&gt;                               Base directory to prepend to relative paths in the config</span><br><span class=\"line\">--pid-file=&lt;file&gt;                                       PID file in case we are started as daemon</span><br><span class=\"line\">--plugin-dir=&lt;path&gt;                                     path to the plugins</span><br><span class=\"line\">--plugins=&lt;name&gt;                                        plugins to load</span><br><span class=\"line\">--log-level=(error|warning|info|message|debug)          log all messages of level ... or higher</span><br><span class=\"line\">--log-file=&lt;file&gt;                                       log all messages in a file</span><br><span class=\"line\">--log-use-syslog                                        log all messages to syslog</span><br><span class=\"line\">--log-backtrace-on-crash                                try to invoke debugger on crash</span><br><span class=\"line\">--keepalive                                             try to restart the proxy if it crashed</span><br><span class=\"line\">--max-open-files                                        maximum number of open files (ulimit -n)</span><br><span class=\"line\">--event-threads                                         number of event-handling threads (default: 1)</span><br><span class=\"line\">--lua-path=&lt;...&gt;                                        set the LUA_PATH</span><br><span class=\"line\">--lua-cpath=&lt;...&gt;                                       set the LUA_CPATH</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"错误Could not run curl-config: [Errno 2] No such file or directory解决","published":1,"author":"xiemx","comments":1,"date":"2016-05-26T21:05:22.000Z","_content":"```shell\nroot@06f95000953c:~/phantomjs# pip install pycurl\nDownloading/unpacking pycurl\n  Downloading pycurl-7.43.0.tar.gz (182kB): 182kB downloaded\n  Running setup.py (path:/tmp/pip-build-XGZuU8/pycurl/setup.py) egg_info for package pycurl\n    Traceback (most recent call last):\n      File \"\", line 17, in \n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in \n        ext = get_extension(sys.argv, split_extension_source=split_extension_source)\n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension\n        ext_config = ExtensionConfiguration(argv)\n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__\n        self.configure()\n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix\n        raise ConfigurationError(msg)\n    __main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"\", line 17, in \n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in \n\n    ext = get_extension(sys.argv, split_extension_source=split_extension_source)\n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension\n\n    ext_config = ExtensionConfiguration(argv)\n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__\n\n    self.configure()\n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix\n\n    raise ConfigurationError(msg)\n\n__main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip-build-XGZuU8/pycurl\nStoring debug log for failure in /root/.pip/pip.log\n\nroot@06f95000953c:~/phantomjs# apt-get install libcurl4-openssl-dev\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nSuggested packages:\n  libcurl4-doc libcurl3-dbg libidn11-dev libkrb5-dev libldap2-dev librtmp-dev\nThe following NEW packages will be installed:\n  libcurl4-openssl-dev\n0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 253 kB of archives.\nAfter this operation, 1262 kB of additional disk space will be used.\nGet:1 http://mirrors.163.com/ubuntu/ vivid-security/main libcurl4-openssl-dev amd64 7.38.0-3ubuntu2.2 [253 kB]\nFetched 253 kB in 5s (47.1 kB/s)            \ndebconf: delaying package configuration, since apt-utils is not installed\nSelecting previously unselected package libcurl4-openssl-dev:amd64.\n(Reading database ... 25480 files and directories currently installed.)\nPreparing to unpack .../libcurl4-openssl-dev_7.38.0-3ubuntu2.2_amd64.deb ...\nUnpacking libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...\nSetting up libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...\nroot@06f95000953c:~/phantomjs# \nroot@06f95000953c:~/phantomjs# \nroot@06f95000953c:~/phantomjs# curl\ncurl         curl-config  \nroot@06f95000953c:~/phantomjs# \n```\n\n\n安装libcurl4-openssl-dev此开发包即可\n```\nsudo apt-get install libcurl4-openssl-dev\n```","source":"_posts/cloud-not-run-curl-config.md","raw":"---\nlayout: post\ntitle: '错误Could not run curl-config: [Errno 2] No such file or directory解决'\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-05-27 05:05:22\ntags: [ linux, debug ]\ncategories:\n    - linux\n---\n```shell\nroot@06f95000953c:~/phantomjs# pip install pycurl\nDownloading/unpacking pycurl\n  Downloading pycurl-7.43.0.tar.gz (182kB): 182kB downloaded\n  Running setup.py (path:/tmp/pip-build-XGZuU8/pycurl/setup.py) egg_info for package pycurl\n    Traceback (most recent call last):\n      File \"\", line 17, in \n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in \n        ext = get_extension(sys.argv, split_extension_source=split_extension_source)\n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension\n        ext_config = ExtensionConfiguration(argv)\n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__\n        self.configure()\n      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix\n        raise ConfigurationError(msg)\n    __main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"\", line 17, in \n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in \n\n    ext = get_extension(sys.argv, split_extension_source=split_extension_source)\n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension\n\n    ext_config = ExtensionConfiguration(argv)\n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__\n\n    self.configure()\n\n  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix\n\n    raise ConfigurationError(msg)\n\n__main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip-build-XGZuU8/pycurl\nStoring debug log for failure in /root/.pip/pip.log\n\nroot@06f95000953c:~/phantomjs# apt-get install libcurl4-openssl-dev\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nSuggested packages:\n  libcurl4-doc libcurl3-dbg libidn11-dev libkrb5-dev libldap2-dev librtmp-dev\nThe following NEW packages will be installed:\n  libcurl4-openssl-dev\n0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 253 kB of archives.\nAfter this operation, 1262 kB of additional disk space will be used.\nGet:1 http://mirrors.163.com/ubuntu/ vivid-security/main libcurl4-openssl-dev amd64 7.38.0-3ubuntu2.2 [253 kB]\nFetched 253 kB in 5s (47.1 kB/s)            \ndebconf: delaying package configuration, since apt-utils is not installed\nSelecting previously unselected package libcurl4-openssl-dev:amd64.\n(Reading database ... 25480 files and directories currently installed.)\nPreparing to unpack .../libcurl4-openssl-dev_7.38.0-3ubuntu2.2_amd64.deb ...\nUnpacking libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...\nSetting up libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...\nroot@06f95000953c:~/phantomjs# \nroot@06f95000953c:~/phantomjs# \nroot@06f95000953c:~/phantomjs# curl\ncurl         curl-config  \nroot@06f95000953c:~/phantomjs# \n```\n\n\n安装libcurl4-openssl-dev此开发包即可\n```\nsudo apt-get install libcurl4-openssl-dev\n```","slug":"cloud-not-run-curl-config","updated":"2019-10-21T06:57:43.013Z","photos":[],"link":"","_id":"ck42dyici000lu9urqupfwrpm","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@06f95000953c:~/phantomjs# pip install pycurl</span><br><span class=\"line\">Downloading/unpacking pycurl</span><br><span class=\"line\">  Downloading pycurl-7.43.0.tar.gz (182kB): 182kB downloaded</span><br><span class=\"line\">  Running setup.py (path:/tmp/pip-build-XGZuU8/pycurl/setup.py) egg_info for package pycurl</span><br><span class=\"line\">    Traceback (most recent call last):</span><br><span class=\"line\">      File \"\", line 17, in </span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in </span><br><span class=\"line\">        ext = get_extension(sys.argv, split_extension_source=split_extension_source)</span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension</span><br><span class=\"line\">        ext_config = ExtensionConfiguration(argv)</span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__</span><br><span class=\"line\">        self.configure()</span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix</span><br><span class=\"line\">        raise ConfigurationError(msg)</span><br><span class=\"line\">    __main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory</span><br><span class=\"line\">    Complete output from command python setup.py egg_info:</span><br><span class=\"line\">    Traceback (most recent call last):</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"\", line 17, in </span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in </span><br><span class=\"line\"></span><br><span class=\"line\">    ext = get_extension(sys.argv, split_extension_source=split_extension_source)</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension</span><br><span class=\"line\"></span><br><span class=\"line\">    ext_config = ExtensionConfiguration(argv)</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__</span><br><span class=\"line\"></span><br><span class=\"line\">    self.configure()</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix</span><br><span class=\"line\"></span><br><span class=\"line\">    raise ConfigurationError(msg)</span><br><span class=\"line\"></span><br><span class=\"line\">__main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory</span><br><span class=\"line\"></span><br><span class=\"line\">----------------------------------------</span><br><span class=\"line\">Cleaning up...</span><br><span class=\"line\">Command python setup.py egg_info failed with error code 1 in /tmp/pip-build-XGZuU8/pycurl</span><br><span class=\"line\">Storing debug log for failure in /root/.pip/pip.log</span><br><span class=\"line\"></span><br><span class=\"line\">root@06f95000953c:~/phantomjs# apt-get install libcurl4-openssl-dev</span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree       </span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">Suggested packages:</span><br><span class=\"line\">  libcurl4-doc libcurl3-dbg libidn11-dev libkrb5-dev libldap2-dev librtmp-dev</span><br><span class=\"line\">The following NEW packages will be installed:</span><br><span class=\"line\">  libcurl4-openssl-dev</span><br><span class=\"line\">0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\">Need to get 253 kB of archives.</span><br><span class=\"line\">After this operation, 1262 kB of additional disk space will be used.</span><br><span class=\"line\">Get:1 http://mirrors.163.com/ubuntu/ vivid-security/main libcurl4-openssl-dev amd64 7.38.0-3ubuntu2.2 [253 kB]</span><br><span class=\"line\">Fetched 253 kB in 5s (47.1 kB/s)            </span><br><span class=\"line\">debconf: delaying package configuration, since apt-utils is not installed</span><br><span class=\"line\">Selecting previously unselected package libcurl4-openssl-dev:amd64.</span><br><span class=\"line\">(Reading database ... 25480 files and directories currently installed.)</span><br><span class=\"line\">Preparing to unpack .../libcurl4-openssl-dev_7.38.0-3ubuntu2.2_amd64.deb ...</span><br><span class=\"line\">Unpacking libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...</span><br><span class=\"line\">Setting up libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...</span><br><span class=\"line\">root@06f95000953c:~/phantomjs# </span><br><span class=\"line\">root@06f95000953c:~/phantomjs# </span><br><span class=\"line\">root@06f95000953c:~/phantomjs# curl</span><br><span class=\"line\">curl         curl-config  </span><br><span class=\"line\">root@06f95000953c:~/phantomjs#</span><br></pre></td></tr></table></figure>\n\n<p>安装libcurl4-openssl-dev此开发包即可</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-<span class=\"built_in\">get</span> install libcurl4-openssl-<span class=\"built_in\">dev</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@06f95000953c:~/phantomjs# pip install pycurl</span><br><span class=\"line\">Downloading/unpacking pycurl</span><br><span class=\"line\">  Downloading pycurl-7.43.0.tar.gz (182kB): 182kB downloaded</span><br><span class=\"line\">  Running setup.py (path:/tmp/pip-build-XGZuU8/pycurl/setup.py) egg_info for package pycurl</span><br><span class=\"line\">    Traceback (most recent call last):</span><br><span class=\"line\">      File \"\", line 17, in </span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in </span><br><span class=\"line\">        ext = get_extension(sys.argv, split_extension_source=split_extension_source)</span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension</span><br><span class=\"line\">        ext_config = ExtensionConfiguration(argv)</span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__</span><br><span class=\"line\">        self.configure()</span><br><span class=\"line\">      File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix</span><br><span class=\"line\">        raise ConfigurationError(msg)</span><br><span class=\"line\">    __main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory</span><br><span class=\"line\">    Complete output from command python setup.py egg_info:</span><br><span class=\"line\">    Traceback (most recent call last):</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"\", line 17, in </span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 823, in </span><br><span class=\"line\"></span><br><span class=\"line\">    ext = get_extension(sys.argv, split_extension_source=split_extension_source)</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 497, in get_extension</span><br><span class=\"line\"></span><br><span class=\"line\">    ext_config = ExtensionConfiguration(argv)</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 71, in __init__</span><br><span class=\"line\"></span><br><span class=\"line\">    self.configure()</span><br><span class=\"line\"></span><br><span class=\"line\">  File \"/tmp/pip-build-XGZuU8/pycurl/setup.py\", line 107, in configure_unix</span><br><span class=\"line\"></span><br><span class=\"line\">    raise ConfigurationError(msg)</span><br><span class=\"line\"></span><br><span class=\"line\">__main__.ConfigurationError: Could not run curl-config: [Errno 2] No such file or directory</span><br><span class=\"line\"></span><br><span class=\"line\">----------------------------------------</span><br><span class=\"line\">Cleaning up...</span><br><span class=\"line\">Command python setup.py egg_info failed with error code 1 in /tmp/pip-build-XGZuU8/pycurl</span><br><span class=\"line\">Storing debug log for failure in /root/.pip/pip.log</span><br><span class=\"line\"></span><br><span class=\"line\">root@06f95000953c:~/phantomjs# apt-get install libcurl4-openssl-dev</span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree       </span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">Suggested packages:</span><br><span class=\"line\">  libcurl4-doc libcurl3-dbg libidn11-dev libkrb5-dev libldap2-dev librtmp-dev</span><br><span class=\"line\">The following NEW packages will be installed:</span><br><span class=\"line\">  libcurl4-openssl-dev</span><br><span class=\"line\">0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\">Need to get 253 kB of archives.</span><br><span class=\"line\">After this operation, 1262 kB of additional disk space will be used.</span><br><span class=\"line\">Get:1 http://mirrors.163.com/ubuntu/ vivid-security/main libcurl4-openssl-dev amd64 7.38.0-3ubuntu2.2 [253 kB]</span><br><span class=\"line\">Fetched 253 kB in 5s (47.1 kB/s)            </span><br><span class=\"line\">debconf: delaying package configuration, since apt-utils is not installed</span><br><span class=\"line\">Selecting previously unselected package libcurl4-openssl-dev:amd64.</span><br><span class=\"line\">(Reading database ... 25480 files and directories currently installed.)</span><br><span class=\"line\">Preparing to unpack .../libcurl4-openssl-dev_7.38.0-3ubuntu2.2_amd64.deb ...</span><br><span class=\"line\">Unpacking libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...</span><br><span class=\"line\">Setting up libcurl4-openssl-dev:amd64 (7.38.0-3ubuntu2.2) ...</span><br><span class=\"line\">root@06f95000953c:~/phantomjs# </span><br><span class=\"line\">root@06f95000953c:~/phantomjs# </span><br><span class=\"line\">root@06f95000953c:~/phantomjs# curl</span><br><span class=\"line\">curl         curl-config  </span><br><span class=\"line\">root@06f95000953c:~/phantomjs#</span><br></pre></td></tr></table></figure>\n\n<p>安装libcurl4-openssl-dev此开发包即可</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-<span class=\"built_in\">get</span> install libcurl4-openssl-<span class=\"built_in\">dev</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"限制进程的CPU利用率","published":1,"author":"xiemx","comments":1,"date":"2016-07-06T02:07:20.000Z","_content":"\n1. cpulimit安装\n\n```shell\napt-get install cpulimit\nyum install cpulimit\n### 请先安装epel源，在执行yum命令.\n```\n\n2. cpulimit实例\n\n```\n### 根据进程ID限值\ncpulimit -p 1234 -l 40\n进程ID为1234的程序只能使用40%的cpu\n\n### 根据进程路径限值\ncpulimit -e nginx -l 50\nnginx只能使用50%的cpu\n```\n\n3. 注意事项\n这边要留意一点，-l后面默认值是百分比，而且在双核情况下要减半。例如nginx的例子，在双核cpu情况下他可以利用25%的cpu，在4核的情况下，只能使用12.5%的cpu.root用户可以限值所有的进程，普通用户只能限值自己程序.\n\n项目地址：http://cpulimit.sourceforge.net/","source":"_posts/cpulimit.md","raw":"---\nlayout: post\ntitle: 限制进程的CPU利用率\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-07-06 10:07:20\ntags: [ linux, command, cpulimit ]\ncategories:\n    - linux\n---\n\n1. cpulimit安装\n\n```shell\napt-get install cpulimit\nyum install cpulimit\n### 请先安装epel源，在执行yum命令.\n```\n\n2. cpulimit实例\n\n```\n### 根据进程ID限值\ncpulimit -p 1234 -l 40\n进程ID为1234的程序只能使用40%的cpu\n\n### 根据进程路径限值\ncpulimit -e nginx -l 50\nnginx只能使用50%的cpu\n```\n\n3. 注意事项\n这边要留意一点，-l后面默认值是百分比，而且在双核情况下要减半。例如nginx的例子，在双核cpu情况下他可以利用25%的cpu，在4核的情况下，只能使用12.5%的cpu.root用户可以限值所有的进程，普通用户只能限值自己程序.\n\n项目地址：http://cpulimit.sourceforge.net/","slug":"cpulimit","updated":"2019-10-21T06:57:42.386Z","photos":[],"link":"","_id":"ck42dyick000pu9uri0nvpo0n","content":"<ol>\n<li>cpulimit安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install cpulimit</span><br><span class=\"line\">yum install cpulimit</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## 请先安装epel源，在执行yum命令.</span></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>cpulimit实例</li>\n</ol>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### 根据进程ID限值</span><br><span class=\"line\">cpulimit -p <span class=\"number\">1234</span> -l <span class=\"number\">40</span></span><br><span class=\"line\">进程ID为<span class=\"number\">1234</span>的程序只能使用<span class=\"number\">40</span>%的cpu</span><br><span class=\"line\"></span><br><span class=\"line\">### 根据进程路径限值</span><br><span class=\"line\">cpulimit -e nginx -l <span class=\"number\">50</span></span><br><span class=\"line\">nginx只能使用<span class=\"number\">50</span>%的cpu</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>注意事项<br>这边要留意一点，-l后面默认值是百分比，而且在双核情况下要减半。例如nginx的例子，在双核cpu情况下他可以利用25%的cpu，在4核的情况下，只能使用12.5%的cpu.root用户可以限值所有的进程，普通用户只能限值自己程序.</li>\n</ol>\n<p>项目地址：<a href=\"http://cpulimit.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">http://cpulimit.sourceforge.net/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>cpulimit安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install cpulimit</span><br><span class=\"line\">yum install cpulimit</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## 请先安装epel源，在执行yum命令.</span></span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>cpulimit实例</li>\n</ol>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### 根据进程ID限值</span><br><span class=\"line\">cpulimit -p <span class=\"number\">1234</span> -l <span class=\"number\">40</span></span><br><span class=\"line\">进程ID为<span class=\"number\">1234</span>的程序只能使用<span class=\"number\">40</span>%的cpu</span><br><span class=\"line\"></span><br><span class=\"line\">### 根据进程路径限值</span><br><span class=\"line\">cpulimit -e nginx -l <span class=\"number\">50</span></span><br><span class=\"line\">nginx只能使用<span class=\"number\">50</span>%的cpu</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>注意事项<br>这边要留意一点，-l后面默认值是百分比，而且在双核情况下要减半。例如nginx的例子，在双核cpu情况下他可以利用25%的cpu，在4核的情况下，只能使用12.5%的cpu.root用户可以限值所有的进程，普通用户只能限值自己程序.</li>\n</ol>\n<p>项目地址：<a href=\"http://cpulimit.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">http://cpulimit.sourceforge.net/</a></p>\n"},{"layout":"post","title":"dedecms织梦验证码无法正常显示","published":1,"author":"xiemx","comments":1,"date":"2016-05-25T18:05:40.000Z","_content":"方案一：赋予sessions读、写、可执行的权限\n\n修改根目录下/data/sessions/的sess_***文件修改权限为777（命令：chmod 777 filename）。\n\n方案二：将vdimgck.php替换法\n\n替换前请将当前的vdimgck.php备份。找回相同版本的DEDE安装包，找到/include/vdimgck.php 文件，并用其替换当前站点的vdimgck.php文件。\n\n方案三：去掉登陆验证码代码\n  \n如果上面的两种解决办法都解决不了，那就直接去掉验证码功能。是修改data\\safe\\inc_safe_config.php 配置文件。\n\n方法：$safe_gdopen = ’1,2,3,5,6′; 这个就是系统哪些地方开启验证码。与[验证码安全设置]界面是一对一的关系。\n\n所以，如果当我们管理后台想关闭验证码(如果验证码无法正确输入，不支持GB库)的时候，只需要打开data\\safe\\inc_safe_config.php 将$safe_gdopen = ’1,2,3,5,6′; 中的6删除即可。","source":"_posts/dedecms-yanzhenma.md","raw":"---\nlayout: post\ntitle: dedecms织梦验证码无法正常显示\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-05-26 02:05:40\ntags: [ php, debug, dedecms ]\ncategories:\n    - php\n# permalink: '/2016/05/26/dedecms%e7%bb%87%e6%a2%a6%e9%aa%8c%e8%af%81%e7%a0%81%e6%97%a0%e6%b3%95%e6%ad%a3%e5%b8%b8%e6%98%be%e7%a4%ba'\n---\n方案一：赋予sessions读、写、可执行的权限\n\n修改根目录下/data/sessions/的sess_***文件修改权限为777（命令：chmod 777 filename）。\n\n方案二：将vdimgck.php替换法\n\n替换前请将当前的vdimgck.php备份。找回相同版本的DEDE安装包，找到/include/vdimgck.php 文件，并用其替换当前站点的vdimgck.php文件。\n\n方案三：去掉登陆验证码代码\n  \n如果上面的两种解决办法都解决不了，那就直接去掉验证码功能。是修改data\\safe\\inc_safe_config.php 配置文件。\n\n方法：$safe_gdopen = ’1,2,3,5,6′; 这个就是系统哪些地方开启验证码。与[验证码安全设置]界面是一对一的关系。\n\n所以，如果当我们管理后台想关闭验证码(如果验证码无法正确输入，不支持GB库)的时候，只需要打开data\\safe\\inc_safe_config.php 将$safe_gdopen = ’1,2,3,5,6′; 中的6删除即可。","slug":"dedecms-yanzhenma","updated":"2019-10-21T06:57:42.669Z","photos":[],"link":"","_id":"ck42dyicl000su9urkvrd0s52","content":"<p>方案一：赋予sessions读、写、可执行的权限</p>\n<p>修改根目录下/data/sessions/的sess_***文件修改权限为777（命令：chmod 777 filename）。</p>\n<p>方案二：将vdimgck.php替换法</p>\n<p>替换前请将当前的vdimgck.php备份。找回相同版本的DEDE安装包，找到/include/vdimgck.php 文件，并用其替换当前站点的vdimgck.php文件。</p>\n<p>方案三：去掉登陆验证码代码</p>\n<p>如果上面的两种解决办法都解决不了，那就直接去掉验证码功能。是修改data\\safe\\inc_safe_config.php 配置文件。</p>\n<p>方法：$safe_gdopen = ’1,2,3,5,6′; 这个就是系统哪些地方开启验证码。与[验证码安全设置]界面是一对一的关系。</p>\n<p>所以，如果当我们管理后台想关闭验证码(如果验证码无法正确输入，不支持GB库)的时候，只需要打开data\\safe\\inc_safe_config.php 将$safe_gdopen = ’1,2,3,5,6′; 中的6删除即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>方案一：赋予sessions读、写、可执行的权限</p>\n<p>修改根目录下/data/sessions/的sess_***文件修改权限为777（命令：chmod 777 filename）。</p>\n<p>方案二：将vdimgck.php替换法</p>\n<p>替换前请将当前的vdimgck.php备份。找回相同版本的DEDE安装包，找到/include/vdimgck.php 文件，并用其替换当前站点的vdimgck.php文件。</p>\n<p>方案三：去掉登陆验证码代码</p>\n<p>如果上面的两种解决办法都解决不了，那就直接去掉验证码功能。是修改data\\safe\\inc_safe_config.php 配置文件。</p>\n<p>方法：$safe_gdopen = ’1,2,3,5,6′; 这个就是系统哪些地方开启验证码。与[验证码安全设置]界面是一对一的关系。</p>\n<p>所以，如果当我们管理后台想关闭验证码(如果验证码无法正确输入，不支持GB库)的时候，只需要打开data\\safe\\inc_safe_config.php 将$safe_gdopen = ’1,2,3,5,6′; 中的6删除即可。</p>\n"},{"layout":"post","title":"window系统上部署Zabbix_agent","published":1,"author":"xiemx","comments":1,"date":"2016-04-13T01:04:53.000Z","_content":"\n1.获取windows的agent客户端，解压文件至指定位置\n\n\t![img](/images/img_570da13048078.png)\n\n2.修改conf文件中的\n\n```shell\nServer=server端的IP地址\n\nServerActive=server端的IP地址\n\nHostName=服务器在监控端上的监控名，可见名称可以不写默认为主机名称\n```\n\n![img](/images/img_570da1465a8dc.png)\n\n3.命令行模式下安装Zabbix_agent监控程序\n\n```shell\n# 进入解压后的文件夹下\n\ncd  C:\\zabbix_agents\\bin\\win64\n\n#安装程序\n\nzabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -i\n\n#启动程序\n\nzabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -s\n\n```\n\n![img](/images/img_570da15f9ead1.png)\n\n\n```markdown\n参数含义：\n-c    指定配置文件所在位置\n-i     安装客户端\n-s    启动客户端\n-x    停止客户端\n-d    卸载客户端\n```\n\n\n4.监控端添加agent服务器注意主机名为conf文件中定义的名称，否则会导致某些监控项目异常\n\n![img](/images/img_570da173ef401.png)\n\n ","source":"_posts/deploy-zabbix_agent-to-windows.md","raw":"---\nlayout: post\ntitle: window系统上部署Zabbix_agent\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-04-13 09:04:53\ntags: [ zabbix, windows ]\ncategories:\n    - zabbix\n#permalink: '/2016/04/13/deploy-zabbix_agent-to-windows'\n---\n\n1.获取windows的agent客户端，解压文件至指定位置\n\n\t![img](/images/img_570da13048078.png)\n\n2.修改conf文件中的\n\n```shell\nServer=server端的IP地址\n\nServerActive=server端的IP地址\n\nHostName=服务器在监控端上的监控名，可见名称可以不写默认为主机名称\n```\n\n![img](/images/img_570da1465a8dc.png)\n\n3.命令行模式下安装Zabbix_agent监控程序\n\n```shell\n# 进入解压后的文件夹下\n\ncd  C:\\zabbix_agents\\bin\\win64\n\n#安装程序\n\nzabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -i\n\n#启动程序\n\nzabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -s\n\n```\n\n![img](/images/img_570da15f9ead1.png)\n\n\n```markdown\n参数含义：\n-c    指定配置文件所在位置\n-i     安装客户端\n-s    启动客户端\n-x    停止客户端\n-d    卸载客户端\n```\n\n\n4.监控端添加agent服务器注意主机名为conf文件中定义的名称，否则会导致某些监控项目异常\n\n![img](/images/img_570da173ef401.png)\n\n ","slug":"deploy-zabbix_agent-to-windows","updated":"2019-10-21T06:57:43.013Z","photos":[],"link":"","_id":"ck42dyicm000vu9ur536spgsb","content":"<p>1.获取windows的agent客户端，解压文件至指定位置</p>\n<pre><code>![img](/images/img_570da13048078.png)</code></pre><p>2.修改conf文件中的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Server=server端的IP地址</span><br><span class=\"line\"></span><br><span class=\"line\">ServerActive=server端的IP地址</span><br><span class=\"line\"></span><br><span class=\"line\">HostName=服务器在监控端上的监控名，可见名称可以不写默认为主机名称</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_570da1465a8dc.png\" alt=\"img\"></p>\n<p>3.命令行模式下安装Zabbix_agent监控程序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 进入解压后的文件夹下</span></span><br><span class=\"line\"></span><br><span class=\"line\">cd  C:\\zabbix_agents\\bin\\win64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装程序</span></span><br><span class=\"line\"></span><br><span class=\"line\">zabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动程序</span></span><br><span class=\"line\"></span><br><span class=\"line\">zabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -s</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_570da15f9ead1.png\" alt=\"img\"></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数含义：</span><br><span class=\"line\">-c    指定配置文件所在位置</span><br><span class=\"line\">-i     安装客户端</span><br><span class=\"line\">-s    启动客户端</span><br><span class=\"line\">-x    停止客户端</span><br><span class=\"line\">-d    卸载客户端</span><br></pre></td></tr></table></figure>\n\n<p>4.监控端添加agent服务器注意主机名为conf文件中定义的名称，否则会导致某些监控项目异常</p>\n<p><img src=\"/images/img_570da173ef401.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.获取windows的agent客户端，解压文件至指定位置</p>\n<pre><code>![img](/images/img_570da13048078.png)</code></pre><p>2.修改conf文件中的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Server=server端的IP地址</span><br><span class=\"line\"></span><br><span class=\"line\">ServerActive=server端的IP地址</span><br><span class=\"line\"></span><br><span class=\"line\">HostName=服务器在监控端上的监控名，可见名称可以不写默认为主机名称</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_570da1465a8dc.png\" alt=\"img\"></p>\n<p>3.命令行模式下安装Zabbix_agent监控程序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 进入解压后的文件夹下</span></span><br><span class=\"line\"></span><br><span class=\"line\">cd  C:\\zabbix_agents\\bin\\win64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装程序</span></span><br><span class=\"line\"></span><br><span class=\"line\">zabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动程序</span></span><br><span class=\"line\"></span><br><span class=\"line\">zabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -s</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_570da15f9ead1.png\" alt=\"img\"></p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数含义：</span><br><span class=\"line\">-c    指定配置文件所在位置</span><br><span class=\"line\">-i     安装客户端</span><br><span class=\"line\">-s    启动客户端</span><br><span class=\"line\">-x    停止客户端</span><br><span class=\"line\">-d    卸载客户端</span><br></pre></td></tr></table></figure>\n\n<p>4.监控端添加agent服务器注意主机名为conf文件中定义的名称，否则会导致某些监控项目异常</p>\n<p><img src=\"/images/img_570da173ef401.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"django重置管理员密码","published":1,"author":"xiemx","comments":1,"date":"2016-09-28T19:09:37.000Z","_content":"忘记Django密码，使用如下操作即可找回\n```\n> cd /you/project/path  # 进入你的项目目录\n> python manage.py shell # 进入django shell\n\n> from django.contrib.auth.models import User\n> user =User.objects.get(username='admin')\n> user.set_password('123456')\n> user.save()\n```\n再使用123456密码登录即可","source":"_posts/django-reset-admin-password.md","raw":"---\nlayout: post\ntitle: django重置管理员密码\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-09-29 03:09:37\ntags: [ python, django, webserver ]\ncategories:\n    - python\n---\n忘记Django密码，使用如下操作即可找回\n```\n> cd /you/project/path  # 进入你的项目目录\n> python manage.py shell # 进入django shell\n\n> from django.contrib.auth.models import User\n> user =User.objects.get(username='admin')\n> user.set_password('123456')\n> user.save()\n```\n再使用123456密码登录即可","slug":"django-reset-admin-password","updated":"2019-10-21T06:57:42.570Z","photos":[],"link":"","_id":"ck42dyico000xu9ury32lrnad","content":"<p>忘记Django密码，使用如下操作即可找回</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; cd /you/project/path  <span class=\"comment\"># 进入你的项目目录</span></span><br><span class=\"line\">&gt; python manage.py <span class=\"keyword\">shell</span><span class=\"bash\"> <span class=\"comment\"># 进入django shell</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"keyword\">from</span> django.contrib.auth.models import <span class=\"keyword\">User</span></span><br><span class=\"line\">&gt; <span class=\"keyword\">user</span> =<span class=\"keyword\">User</span>.objects.get(username=<span class=\"string\">'admin'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">user</span>.set_password(<span class=\"string\">'123456'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">user</span>.save()</span><br></pre></td></tr></table></figure>\n\n<p>再使用123456密码登录即可</p>\n","site":{"data":{}},"excerpt":"","more":"<p>忘记Django密码，使用如下操作即可找回</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; cd /you/project/path  <span class=\"comment\"># 进入你的项目目录</span></span><br><span class=\"line\">&gt; python manage.py <span class=\"keyword\">shell</span><span class=\"bash\"> <span class=\"comment\"># 进入django shell</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"keyword\">from</span> django.contrib.auth.models import <span class=\"keyword\">User</span></span><br><span class=\"line\">&gt; <span class=\"keyword\">user</span> =<span class=\"keyword\">User</span>.objects.get(username=<span class=\"string\">'admin'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">user</span>.set_password(<span class=\"string\">'123456'</span>)</span><br><span class=\"line\">&gt; <span class=\"keyword\">user</span>.save()</span><br></pre></td></tr></table></figure>\n\n<p>再使用123456密码登录即可</p>\n"},{"layout":"post","title":"dns view功能","published":1,"author":"xiemx","comments":1,"date":"2016-01-30T23:01:54.000Z","_content":"假设现在有一个网站服务器存放在一个双线或者多线机房内，这个服务器要提供一个web给全国的用户访问。现在用的用户使用的是电信的网，有的是联通的宽带，有的可能是长城铁通之类的isp，如果让这些用户都去访问我的某一个ip，会导致一部分用户存在跨isp延迟较高的情况，要解决这样的一个情况我们可以在多线机房内申请多个isp的ip绑定到机器上，然后修改dns的解析，让dns根据请求的来源分配给不同的ip。通俗的说就是电信用户走电信线路，联通用户走联通线路。这就要用到dns的一个view功能。\n\n具体配置如下：\n```\nview \"电信-view\"{\nmatch-clients { 服务器ip1 };#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出\nzone \"abc.com\" {\ntype master;\nfile \"dx.abc.com.zone\";该zone内服务器ipadd要与match-clients所属isp对应\n};\ninclude \"/etc/named.rfc1912.zones\";#需要包含该行。\n}\n\nview \"网通-view\"{\nmatch-clients { 服务器ip2 };#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出\nzone \"abc.com\" {\ntype master;\nfile \"wt.abc.com.zone\";该zone内服务器ipadd要与match-clients所属isp对应\n};\ninclude \"/etc/named.rfc1912.zones\";#需要包含该行。\n}\n\nview \"other-view\"{\nmatch-clients { any };#匹配这个ip，符合则使用下面的服务器进行解析，否则跳出\nzone \"abc.com\" {\ntype master;\nfile \"other.abc.com.zone\";\n};\ninclude \"/etc/named.rfc1912.zones\";#需要包含该行。\n}\n```\n这里只写出view部分的设置，其他部分设置可以参考dns服务器搭建内容。","source":"_posts/dns-view.md","raw":"---\nlayout: post\ntitle: dns view功能\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-31 07:01:54\ntags: [ dns, view ]\ncategories:\n    - dns\n---\n假设现在有一个网站服务器存放在一个双线或者多线机房内，这个服务器要提供一个web给全国的用户访问。现在用的用户使用的是电信的网，有的是联通的宽带，有的可能是长城铁通之类的isp，如果让这些用户都去访问我的某一个ip，会导致一部分用户存在跨isp延迟较高的情况，要解决这样的一个情况我们可以在多线机房内申请多个isp的ip绑定到机器上，然后修改dns的解析，让dns根据请求的来源分配给不同的ip。通俗的说就是电信用户走电信线路，联通用户走联通线路。这就要用到dns的一个view功能。\n\n具体配置如下：\n```\nview \"电信-view\"{\nmatch-clients { 服务器ip1 };#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出\nzone \"abc.com\" {\ntype master;\nfile \"dx.abc.com.zone\";该zone内服务器ipadd要与match-clients所属isp对应\n};\ninclude \"/etc/named.rfc1912.zones\";#需要包含该行。\n}\n\nview \"网通-view\"{\nmatch-clients { 服务器ip2 };#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出\nzone \"abc.com\" {\ntype master;\nfile \"wt.abc.com.zone\";该zone内服务器ipadd要与match-clients所属isp对应\n};\ninclude \"/etc/named.rfc1912.zones\";#需要包含该行。\n}\n\nview \"other-view\"{\nmatch-clients { any };#匹配这个ip，符合则使用下面的服务器进行解析，否则跳出\nzone \"abc.com\" {\ntype master;\nfile \"other.abc.com.zone\";\n};\ninclude \"/etc/named.rfc1912.zones\";#需要包含该行。\n}\n```\n这里只写出view部分的设置，其他部分设置可以参考dns服务器搭建内容。","slug":"dns-view","updated":"2019-10-21T06:57:42.921Z","photos":[],"link":"","_id":"ck42dyicp0011u9ur16of6nsm","content":"<p>假设现在有一个网站服务器存放在一个双线或者多线机房内，这个服务器要提供一个web给全国的用户访问。现在用的用户使用的是电信的网，有的是联通的宽带，有的可能是长城铁通之类的isp，如果让这些用户都去访问我的某一个ip，会导致一部分用户存在跨isp延迟较高的情况，要解决这样的一个情况我们可以在多线机房内申请多个isp的ip绑定到机器上，然后修改dns的解析，让dns根据请求的来源分配给不同的ip。通俗的说就是电信用户走电信线路，联通用户走联通线路。这就要用到dns的一个view功能。</p>\n<p>具体配置如下：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">view <span class=\"string\">\"电信-view\"</span>&#123;</span><br><span class=\"line\">match-clients &#123; 服务器ip1 &#125;;#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出</span><br><span class=\"line\">zone <span class=\"string\">\"abc.com\"</span> &#123;</span><br><span class=\"line\">type master;</span><br><span class=\"line\">file <span class=\"string\">\"dx.abc.com.zone\"</span>;该zone内服务器ipadd要与match-clients所属isp对应</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">include <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>;#需要包含该行。</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">view <span class=\"string\">\"网通-view\"</span>&#123;</span><br><span class=\"line\">match-clients &#123; 服务器ip2 &#125;;#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出</span><br><span class=\"line\">zone <span class=\"string\">\"abc.com\"</span> &#123;</span><br><span class=\"line\">type master;</span><br><span class=\"line\">file <span class=\"string\">\"wt.abc.com.zone\"</span>;该zone内服务器ipadd要与match-clients所属isp对应</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">include <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>;#需要包含该行。</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">view <span class=\"string\">\"other-view\"</span>&#123;</span><br><span class=\"line\">match-clients &#123; any &#125;;#匹配这个ip，符合则使用下面的服务器进行解析，否则跳出</span><br><span class=\"line\">zone <span class=\"string\">\"abc.com\"</span> &#123;</span><br><span class=\"line\">type master;</span><br><span class=\"line\">file <span class=\"string\">\"other.abc.com.zone\"</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">include <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>;#需要包含该行。</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里只写出view部分的设置，其他部分设置可以参考dns服务器搭建内容。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>假设现在有一个网站服务器存放在一个双线或者多线机房内，这个服务器要提供一个web给全国的用户访问。现在用的用户使用的是电信的网，有的是联通的宽带，有的可能是长城铁通之类的isp，如果让这些用户都去访问我的某一个ip，会导致一部分用户存在跨isp延迟较高的情况，要解决这样的一个情况我们可以在多线机房内申请多个isp的ip绑定到机器上，然后修改dns的解析，让dns根据请求的来源分配给不同的ip。通俗的说就是电信用户走电信线路，联通用户走联通线路。这就要用到dns的一个view功能。</p>\n<p>具体配置如下：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">view <span class=\"string\">\"电信-view\"</span>&#123;</span><br><span class=\"line\">match-clients &#123; 服务器ip1 &#125;;#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出</span><br><span class=\"line\">zone <span class=\"string\">\"abc.com\"</span> &#123;</span><br><span class=\"line\">type master;</span><br><span class=\"line\">file <span class=\"string\">\"dx.abc.com.zone\"</span>;该zone内服务器ipadd要与match-clients所属isp对应</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">include <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>;#需要包含该行。</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">view <span class=\"string\">\"网通-view\"</span>&#123;</span><br><span class=\"line\">match-clients &#123; 服务器ip2 &#125;;#匹配这个ip/列表，符合则使用下面的服务器进行解析，否则跳出</span><br><span class=\"line\">zone <span class=\"string\">\"abc.com\"</span> &#123;</span><br><span class=\"line\">type master;</span><br><span class=\"line\">file <span class=\"string\">\"wt.abc.com.zone\"</span>;该zone内服务器ipadd要与match-clients所属isp对应</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">include <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>;#需要包含该行。</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">view <span class=\"string\">\"other-view\"</span>&#123;</span><br><span class=\"line\">match-clients &#123; any &#125;;#匹配这个ip，符合则使用下面的服务器进行解析，否则跳出</span><br><span class=\"line\">zone <span class=\"string\">\"abc.com\"</span> &#123;</span><br><span class=\"line\">type master;</span><br><span class=\"line\">file <span class=\"string\">\"other.abc.com.zone\"</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">include <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>;#需要包含该行。</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里只写出view部分的设置，其他部分设置可以参考dns服务器搭建内容。</p>\n"},{"layout":"post","title":"docker privileged","published":1,"author":"xiemx","comments":1,"date":"2017-01-17T17:01:49.000Z","_content":"#### docker 特权模式\n```\n$ docker help run \n...\n--privileged=false         Give extended privileges to this container\n...\n```\n使用该参数，container内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限。privileged启动的容器，可以看到很多host上的设备，并且可以执行mount,iptables等操作。甚至允许你在docker容器中启动docker容器。\n    \n    \n* 未设置privileged启动的容器：\n```\n[root@localhost ~]# docker run -t -i centos:latest bash\n[root@65acccbba42f /]# ls /dev\nconsole  fd  full  fuse  kcore  null  ptmx  pts  random  shm  stderr  stdin  stdout  tty  urandom  zero\n[root@65acccbba42f /]# mkdir /home/test/\n[root@65acccbba42f /]# mkdir /home/test2/\n[root@65acccbba42f /]# mount -o bind /home/test  /home/test2\nmount: permission denied\n```\n\n* 设置privileged启动的容器：\n```\n[root@localhost ~]# docker run -t -i --privileged centos:latest bash\n[root@c39330902b45 /]# ls /dev/\nautofs           dm-1  hidraw0       loop1               null    ptp3    sg0  shm       tty10  tty19  tty27  tty35  tty43  tty51  tty6   ttyS1    usbmon3  vcs5   vfio\nbsg              dm-2  hidraw1       loop2               nvram   pts     sg1  snapshot  tty11  tty2   tty28  tty36  tty44  tty52  tty60  ttyS2    usbmon4  vcs6   vga_arbiter\nbtrfs-control    dm-3  hpet          loop3               oldmem  random  sg2  snd       tty12  tty20  tty29  tty37  tty45  tty53  tty61  ttyS3    usbmon5  vcsa   vhost-net\nbus              dm-4  input         mapper              port    raw     sg3  stderr    tty13  tty21  tty3   tty38  tty46  tty54  tty62  uhid     usbmon6  vcsa1  watchdog\nconsole          dm-5  kcore         mcelog              ppp     rtc0    sg4  stdin     tty14  tty22  tty30  tty39  tty47  tty55  tty63  uinput   vcs      vcsa2  watchdog0\ncpu              dm-6  kmsg          mem                 ptmx    sda     sg5  stdout    tty15  tty23  tty31  tty4   tty48  tty56  tty7   urandom  vcs1     vcsa3  zero\ncpu_dma_latency  fd    kvm           net                 ptp0    sda1    sg6  tty       tty16  tty24  tty32  tty40  tty49  tty57  tty8   usbmon0  vcs2     vcsa4\ncrash            full  loop-control  network_latency     ptp1    sda2    sg7  tty0      tty17  tty25  tty33  tty41  tty5   tty58  tty9   usbmon1  vcs3     vcsa5\ndm-0             fuse  loop0         network_throughput  ptp2    sda3    sg8  tty1      tty18  tty26  tty34  tty42  tty50  tty59  ttyS0  usbmon2  vcs4     vcsa6\n[root@c39330902b45 /]# mkdir /home/test/\n[root@c39330902b45 /]# mkdir /home/test2/\n[root@c39330902b45 /]# mount -o bind /home/test  /home/test2\n```","source":"_posts/docker-privileged.md","raw":"---\nlayout: post\ntitle: docker privileged\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-01-18 01:01:49\ntags: [ ]\ncategories:\n    - docker\n---\n#### docker 特权模式\n```\n$ docker help run \n...\n--privileged=false         Give extended privileges to this container\n...\n```\n使用该参数，container内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限。privileged启动的容器，可以看到很多host上的设备，并且可以执行mount,iptables等操作。甚至允许你在docker容器中启动docker容器。\n    \n    \n* 未设置privileged启动的容器：\n```\n[root@localhost ~]# docker run -t -i centos:latest bash\n[root@65acccbba42f /]# ls /dev\nconsole  fd  full  fuse  kcore  null  ptmx  pts  random  shm  stderr  stdin  stdout  tty  urandom  zero\n[root@65acccbba42f /]# mkdir /home/test/\n[root@65acccbba42f /]# mkdir /home/test2/\n[root@65acccbba42f /]# mount -o bind /home/test  /home/test2\nmount: permission denied\n```\n\n* 设置privileged启动的容器：\n```\n[root@localhost ~]# docker run -t -i --privileged centos:latest bash\n[root@c39330902b45 /]# ls /dev/\nautofs           dm-1  hidraw0       loop1               null    ptp3    sg0  shm       tty10  tty19  tty27  tty35  tty43  tty51  tty6   ttyS1    usbmon3  vcs5   vfio\nbsg              dm-2  hidraw1       loop2               nvram   pts     sg1  snapshot  tty11  tty2   tty28  tty36  tty44  tty52  tty60  ttyS2    usbmon4  vcs6   vga_arbiter\nbtrfs-control    dm-3  hpet          loop3               oldmem  random  sg2  snd       tty12  tty20  tty29  tty37  tty45  tty53  tty61  ttyS3    usbmon5  vcsa   vhost-net\nbus              dm-4  input         mapper              port    raw     sg3  stderr    tty13  tty21  tty3   tty38  tty46  tty54  tty62  uhid     usbmon6  vcsa1  watchdog\nconsole          dm-5  kcore         mcelog              ppp     rtc0    sg4  stdin     tty14  tty22  tty30  tty39  tty47  tty55  tty63  uinput   vcs      vcsa2  watchdog0\ncpu              dm-6  kmsg          mem                 ptmx    sda     sg5  stdout    tty15  tty23  tty31  tty4   tty48  tty56  tty7   urandom  vcs1     vcsa3  zero\ncpu_dma_latency  fd    kvm           net                 ptp0    sda1    sg6  tty       tty16  tty24  tty32  tty40  tty49  tty57  tty8   usbmon0  vcs2     vcsa4\ncrash            full  loop-control  network_latency     ptp1    sda2    sg7  tty0      tty17  tty25  tty33  tty41  tty5   tty58  tty9   usbmon1  vcs3     vcsa5\ndm-0             fuse  loop0         network_throughput  ptp2    sda3    sg8  tty1      tty18  tty26  tty34  tty42  tty50  tty59  ttyS0  usbmon2  vcs4     vcsa6\n[root@c39330902b45 /]# mkdir /home/test/\n[root@c39330902b45 /]# mkdir /home/test2/\n[root@c39330902b45 /]# mount -o bind /home/test  /home/test2\n```","slug":"docker-privileged","updated":"2019-10-21T06:57:43.060Z","photos":[],"link":"","_id":"ck42dyicp0014u9urx2uw9z9d","content":"<h4 id=\"docker-特权模式\"><a href=\"#docker-特权模式\" class=\"headerlink\" title=\"docker 特权模式\"></a>docker 特权模式</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker help <span class=\"builtin-name\">run</span> </span><br><span class=\"line\"><span class=\"built_in\">..</span>.</span><br><span class=\"line\"><span class=\"attribute\">--privileged</span>=<span class=\"literal\">false</span>         Give extended privileges <span class=\"keyword\">to</span> this container</span><br><span class=\"line\"><span class=\"built_in\">..</span>.</span><br></pre></td></tr></table></figure>\n\n<p>使用该参数，container内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限。privileged启动的容器，可以看到很多host上的设备，并且可以执行mount,iptables等操作。甚至允许你在docker容器中启动docker容器。</p>\n<ul>\n<li><p>未设置privileged启动的容器：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# docker <span class=\"builtin-name\">run</span> -t -i centos:latest bash</span><br><span class=\"line\">[root@65acccbba42f /]# ls /dev</span><br><span class=\"line\">console  fd  full  fuse  kcore  <span class=\"literal\">null</span>  ptmx  pts  random  shm  stderr  stdin  stdout  tty  urandom  zero</span><br><span class=\"line\">[root@65acccbba42f /]# mkdir /home/test/</span><br><span class=\"line\">[root@65acccbba42f /]# mkdir /home/test2/</span><br><span class=\"line\">[root@65acccbba42f /]# mount -o bind /home/test  /home/test2</span><br><span class=\"line\">mount: permission denied</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置privileged启动的容器：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# docker <span class=\"builtin-name\">run</span> -t -i --privileged centos:latest bash</span><br><span class=\"line\">[root@c39330902b45 /]# ls /dev/</span><br><span class=\"line\">autofs           dm-1  hidraw0       loop1               <span class=\"literal\">null</span>    ptp3    sg0  shm       tty10  tty19  tty27  tty35  tty43  tty51  tty6   ttyS1    usbmon3  vcs5   vfio</span><br><span class=\"line\">bsg              dm-2  hidraw1       loop2               nvram   pts     sg1  snapshot  tty11  tty2   tty28  tty36  tty44  tty52  tty60  ttyS2    usbmon4  vcs6   vga_arbiter</span><br><span class=\"line\">btrfs-control    dm-3  hpet          loop3               oldmem  random  sg2  snd       tty12  tty20  tty29  tty37  tty45  tty53  tty61  ttyS3    usbmon5  vcsa   vhost-net</span><br><span class=\"line\">bus              dm-4  input         mapper             <span class=\"built_in\"> port </span>  <span class=\"built_in\"> raw </span>    sg3  stderr    tty13  tty21  tty3   tty38  tty46  tty54  tty62  uhid     usbmon6  vcsa1  watchdog</span><br><span class=\"line\">console          dm-5  kcore         mcelog             <span class=\"built_in\"> ppp </span>    rtc0    sg4  stdin     tty14  tty22  tty30  tty39  tty47  tty55  tty63  uinput   vcs      vcsa2  watchdog0</span><br><span class=\"line\">cpu              dm-6  kmsg          mem                 ptmx    sda     sg5  stdout    tty15  tty23  tty31  tty4   tty48  tty56  tty7   urandom  vcs1     vcsa3  zero</span><br><span class=\"line\">cpu_dma_latency  fd    kvm           net                 ptp0    sda1    sg6  tty       tty16  tty24  tty32  tty40  tty49  tty57  tty8   usbmon0  vcs2     vcsa4</span><br><span class=\"line\">crash            full  loop-control  network_latency     ptp1    sda2    sg7  tty0      tty17  tty25  tty33  tty41  tty5   tty58  tty9   usbmon1  vcs3     vcsa5</span><br><span class=\"line\">dm-0             fuse  loop0         network_throughput  ptp2    sda3    sg8  tty1      tty18  tty26  tty34  tty42  tty50  tty59  ttyS0  usbmon2  vcs4     vcsa6</span><br><span class=\"line\">[root@c39330902b45 /]# mkdir /home/test/</span><br><span class=\"line\">[root@c39330902b45 /]# mkdir /home/test2/</span><br><span class=\"line\">[root@c39330902b45 /]# mount -o bind /home/test  /home/test2</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"docker-特权模式\"><a href=\"#docker-特权模式\" class=\"headerlink\" title=\"docker 特权模式\"></a>docker 特权模式</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker help <span class=\"builtin-name\">run</span> </span><br><span class=\"line\"><span class=\"built_in\">..</span>.</span><br><span class=\"line\"><span class=\"attribute\">--privileged</span>=<span class=\"literal\">false</span>         Give extended privileges <span class=\"keyword\">to</span> this container</span><br><span class=\"line\"><span class=\"built_in\">..</span>.</span><br></pre></td></tr></table></figure>\n\n<p>使用该参数，container内的root拥有真正的root权限。否则，container内的root只是外部的一个普通用户权限。privileged启动的容器，可以看到很多host上的设备，并且可以执行mount,iptables等操作。甚至允许你在docker容器中启动docker容器。</p>\n<ul>\n<li><p>未设置privileged启动的容器：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# docker <span class=\"builtin-name\">run</span> -t -i centos:latest bash</span><br><span class=\"line\">[root@65acccbba42f /]# ls /dev</span><br><span class=\"line\">console  fd  full  fuse  kcore  <span class=\"literal\">null</span>  ptmx  pts  random  shm  stderr  stdin  stdout  tty  urandom  zero</span><br><span class=\"line\">[root@65acccbba42f /]# mkdir /home/test/</span><br><span class=\"line\">[root@65acccbba42f /]# mkdir /home/test2/</span><br><span class=\"line\">[root@65acccbba42f /]# mount -o bind /home/test  /home/test2</span><br><span class=\"line\">mount: permission denied</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置privileged启动的容器：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# docker <span class=\"builtin-name\">run</span> -t -i --privileged centos:latest bash</span><br><span class=\"line\">[root@c39330902b45 /]# ls /dev/</span><br><span class=\"line\">autofs           dm-1  hidraw0       loop1               <span class=\"literal\">null</span>    ptp3    sg0  shm       tty10  tty19  tty27  tty35  tty43  tty51  tty6   ttyS1    usbmon3  vcs5   vfio</span><br><span class=\"line\">bsg              dm-2  hidraw1       loop2               nvram   pts     sg1  snapshot  tty11  tty2   tty28  tty36  tty44  tty52  tty60  ttyS2    usbmon4  vcs6   vga_arbiter</span><br><span class=\"line\">btrfs-control    dm-3  hpet          loop3               oldmem  random  sg2  snd       tty12  tty20  tty29  tty37  tty45  tty53  tty61  ttyS3    usbmon5  vcsa   vhost-net</span><br><span class=\"line\">bus              dm-4  input         mapper             <span class=\"built_in\"> port </span>  <span class=\"built_in\"> raw </span>    sg3  stderr    tty13  tty21  tty3   tty38  tty46  tty54  tty62  uhid     usbmon6  vcsa1  watchdog</span><br><span class=\"line\">console          dm-5  kcore         mcelog             <span class=\"built_in\"> ppp </span>    rtc0    sg4  stdin     tty14  tty22  tty30  tty39  tty47  tty55  tty63  uinput   vcs      vcsa2  watchdog0</span><br><span class=\"line\">cpu              dm-6  kmsg          mem                 ptmx    sda     sg5  stdout    tty15  tty23  tty31  tty4   tty48  tty56  tty7   urandom  vcs1     vcsa3  zero</span><br><span class=\"line\">cpu_dma_latency  fd    kvm           net                 ptp0    sda1    sg6  tty       tty16  tty24  tty32  tty40  tty49  tty57  tty8   usbmon0  vcs2     vcsa4</span><br><span class=\"line\">crash            full  loop-control  network_latency     ptp1    sda2    sg7  tty0      tty17  tty25  tty33  tty41  tty5   tty58  tty9   usbmon1  vcs3     vcsa5</span><br><span class=\"line\">dm-0             fuse  loop0         network_throughput  ptp2    sda3    sg8  tty1      tty18  tty26  tty34  tty42  tty50  tty59  ttyS0  usbmon2  vcs4     vcsa6</span><br><span class=\"line\">[root@c39330902b45 /]# mkdir /home/test/</span><br><span class=\"line\">[root@c39330902b45 /]# mkdir /home/test2/</span><br><span class=\"line\">[root@c39330902b45 /]# mount -o bind /home/test  /home/test2</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"layout":"post","title":"域名状态含义","published":1,"author":"xiemx","comments":1,"date":"2016-07-27T03:07:26.000Z","_content":"新注册的域名，可能出现以下状态：\n\n|域名状态|含义|\n|:---|:-|\n|addPeriod|注册局设置域名新注册期（域名新注册 5 天内会出现的状态，不影响域名使用，5 天后自动解除）。|\n|·ok|普通状态（可正常使用。没有需要立即进行的操作，也没有设置任何保护措施。有其他状态时，OK 状态不显示，但并不代表不正常。|\n\n出于对域名注册信息的保护，域名在进行某些安全锁定后，会出现以下状态：\n\n|域名状态|含义|\n|:---|:-|\n|·clientDeleteProhibited|注册商设置禁止删除（保护域名的一种状态，域名不能被删除）。|\n|serverDeleteProhibited|注册局设置禁止删除（保护域名的一种状态，域名不能被删除）。|\n|·clientUpdateProhibited|注册商设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。|\n|·serverUpdateProhibited|注册局设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。|\n|·clientTransferProhibited|注册商设置禁止转移（保护域名的一种状态，域名不能转移注册商）。|\n|·serverTransferProhibited|注册局设置禁止转移（保护域名的一种状态，域名不能转移注册商。有的域名新注册及转移注册商 60 天内会被注册局设置成该状态，60 天后自动解除；有的则为域名涉及仲裁或诉讼案被注册局设置，仲裁或诉讼案结束会被解除）。|\n\n其他禁止解析、禁止续费的状态：\n\n|域名状态|含义|\n|:---|:-|\n|·pendingVerification|注册信息审核期（该域名注册后未进行实名审核，需尽早在域名付费后 5 天内提交资料审核，5 天后仍未实名审核的，将进入 ServerHold 状态）。|\n|·clientHold|注册商设置暂停解析（处于该状态域名解析暂停，需联系注册商解除该状态）。|\n|·serverHold|注册局设置暂停解析（处于该状态域名解析暂停，.cn 国内中英文域名注册成功后未通过实名审核时多出现该种状态，需在域名有效期内完成实名审核后解除）。|\n|·inactive|非激活状态（注册时未填写域名 DNS，不能进行解析，需在注册商处设置域名 DNS）。|\n|·clientRenewProhibited/serverRenewProhibited|注册商或注册局设置禁止续费（域名不能续费，处于该状态通常表示该域名处于仲裁或法院争议期，需联系注册商确认原因）。|\n|·pendingTransfer|注册局设置转移过程中（域名正在转移注册商过程中）。|\n|·redemptionPeriod|注册局设置赎回期（域名处于赎回期，可联系注册商高价赎回）。|\n|·pendingDelete|注册局设置待删除/赎回期（对于国际域名，该状态表示域名已过赎回期等待被删除，删除后开放重新注册；对于国内域名，该状态表示域名处于赎回期，可联系注册商高价赎回）。|\n","source":"_posts/domain-status-code.md","raw":"---\nlayout: post\ntitle: 域名状态含义\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-07-27 11:07:26\ntags: [ domain, statusCode ]\ncategories:\n    - 'domain'\n#permalink: '/2016/07/27/domain-status-code'\n---\n新注册的域名，可能出现以下状态：\n\n|域名状态|含义|\n|:---|:-|\n|addPeriod|注册局设置域名新注册期（域名新注册 5 天内会出现的状态，不影响域名使用，5 天后自动解除）。|\n|·ok|普通状态（可正常使用。没有需要立即进行的操作，也没有设置任何保护措施。有其他状态时，OK 状态不显示，但并不代表不正常。|\n\n出于对域名注册信息的保护，域名在进行某些安全锁定后，会出现以下状态：\n\n|域名状态|含义|\n|:---|:-|\n|·clientDeleteProhibited|注册商设置禁止删除（保护域名的一种状态，域名不能被删除）。|\n|serverDeleteProhibited|注册局设置禁止删除（保护域名的一种状态，域名不能被删除）。|\n|·clientUpdateProhibited|注册商设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。|\n|·serverUpdateProhibited|注册局设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。|\n|·clientTransferProhibited|注册商设置禁止转移（保护域名的一种状态，域名不能转移注册商）。|\n|·serverTransferProhibited|注册局设置禁止转移（保护域名的一种状态，域名不能转移注册商。有的域名新注册及转移注册商 60 天内会被注册局设置成该状态，60 天后自动解除；有的则为域名涉及仲裁或诉讼案被注册局设置，仲裁或诉讼案结束会被解除）。|\n\n其他禁止解析、禁止续费的状态：\n\n|域名状态|含义|\n|:---|:-|\n|·pendingVerification|注册信息审核期（该域名注册后未进行实名审核，需尽早在域名付费后 5 天内提交资料审核，5 天后仍未实名审核的，将进入 ServerHold 状态）。|\n|·clientHold|注册商设置暂停解析（处于该状态域名解析暂停，需联系注册商解除该状态）。|\n|·serverHold|注册局设置暂停解析（处于该状态域名解析暂停，.cn 国内中英文域名注册成功后未通过实名审核时多出现该种状态，需在域名有效期内完成实名审核后解除）。|\n|·inactive|非激活状态（注册时未填写域名 DNS，不能进行解析，需在注册商处设置域名 DNS）。|\n|·clientRenewProhibited/serverRenewProhibited|注册商或注册局设置禁止续费（域名不能续费，处于该状态通常表示该域名处于仲裁或法院争议期，需联系注册商确认原因）。|\n|·pendingTransfer|注册局设置转移过程中（域名正在转移注册商过程中）。|\n|·redemptionPeriod|注册局设置赎回期（域名处于赎回期，可联系注册商高价赎回）。|\n|·pendingDelete|注册局设置待删除/赎回期（对于国际域名，该状态表示域名已过赎回期等待被删除，删除后开放重新注册；对于国内域名，该状态表示域名处于赎回期，可联系注册商高价赎回）。|\n","slug":"domain-status-code","updated":"2019-10-21T06:57:43.047Z","photos":[],"link":"","_id":"ck42dyicq0018u9urk6r2fp4k","content":"<p>新注册的域名，可能出现以下状态：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">域名状态</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">addPeriod</td>\n<td align=\"left\">注册局设置域名新注册期（域名新注册 5 天内会出现的状态，不影响域名使用，5 天后自动解除）。</td>\n</tr>\n<tr>\n<td align=\"left\">·ok</td>\n<td align=\"left\">普通状态（可正常使用。没有需要立即进行的操作，也没有设置任何保护措施。有其他状态时，OK 状态不显示，但并不代表不正常。</td>\n</tr>\n</tbody></table>\n<p>出于对域名注册信息的保护，域名在进行某些安全锁定后，会出现以下状态：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">域名状态</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">·clientDeleteProhibited</td>\n<td align=\"left\">注册商设置禁止删除（保护域名的一种状态，域名不能被删除）。</td>\n</tr>\n<tr>\n<td align=\"left\">serverDeleteProhibited</td>\n<td align=\"left\">注册局设置禁止删除（保护域名的一种状态，域名不能被删除）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientUpdateProhibited</td>\n<td align=\"left\">注册商设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。</td>\n</tr>\n<tr>\n<td align=\"left\">·serverUpdateProhibited</td>\n<td align=\"left\">注册局设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientTransferProhibited</td>\n<td align=\"left\">注册商设置禁止转移（保护域名的一种状态，域名不能转移注册商）。</td>\n</tr>\n<tr>\n<td align=\"left\">·serverTransferProhibited</td>\n<td align=\"left\">注册局设置禁止转移（保护域名的一种状态，域名不能转移注册商。有的域名新注册及转移注册商 60 天内会被注册局设置成该状态，60 天后自动解除；有的则为域名涉及仲裁或诉讼案被注册局设置，仲裁或诉讼案结束会被解除）。</td>\n</tr>\n</tbody></table>\n<p>其他禁止解析、禁止续费的状态：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">域名状态</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">·pendingVerification</td>\n<td align=\"left\">注册信息审核期（该域名注册后未进行实名审核，需尽早在域名付费后 5 天内提交资料审核，5 天后仍未实名审核的，将进入 ServerHold 状态）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientHold</td>\n<td align=\"left\">注册商设置暂停解析（处于该状态域名解析暂停，需联系注册商解除该状态）。</td>\n</tr>\n<tr>\n<td align=\"left\">·serverHold</td>\n<td align=\"left\">注册局设置暂停解析（处于该状态域名解析暂停，.cn 国内中英文域名注册成功后未通过实名审核时多出现该种状态，需在域名有效期内完成实名审核后解除）。</td>\n</tr>\n<tr>\n<td align=\"left\">·inactive</td>\n<td align=\"left\">非激活状态（注册时未填写域名 DNS，不能进行解析，需在注册商处设置域名 DNS）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientRenewProhibited/serverRenewProhibited</td>\n<td align=\"left\">注册商或注册局设置禁止续费（域名不能续费，处于该状态通常表示该域名处于仲裁或法院争议期，需联系注册商确认原因）。</td>\n</tr>\n<tr>\n<td align=\"left\">·pendingTransfer</td>\n<td align=\"left\">注册局设置转移过程中（域名正在转移注册商过程中）。</td>\n</tr>\n<tr>\n<td align=\"left\">·redemptionPeriod</td>\n<td align=\"left\">注册局设置赎回期（域名处于赎回期，可联系注册商高价赎回）。</td>\n</tr>\n<tr>\n<td align=\"left\">·pendingDelete</td>\n<td align=\"left\">注册局设置待删除/赎回期（对于国际域名，该状态表示域名已过赎回期等待被删除，删除后开放重新注册；对于国内域名，该状态表示域名处于赎回期，可联系注册商高价赎回）。</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<p>新注册的域名，可能出现以下状态：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">域名状态</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">addPeriod</td>\n<td align=\"left\">注册局设置域名新注册期（域名新注册 5 天内会出现的状态，不影响域名使用，5 天后自动解除）。</td>\n</tr>\n<tr>\n<td align=\"left\">·ok</td>\n<td align=\"left\">普通状态（可正常使用。没有需要立即进行的操作，也没有设置任何保护措施。有其他状态时，OK 状态不显示，但并不代表不正常。</td>\n</tr>\n</tbody></table>\n<p>出于对域名注册信息的保护，域名在进行某些安全锁定后，会出现以下状态：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">域名状态</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">·clientDeleteProhibited</td>\n<td align=\"left\">注册商设置禁止删除（保护域名的一种状态，域名不能被删除）。</td>\n</tr>\n<tr>\n<td align=\"left\">serverDeleteProhibited</td>\n<td align=\"left\">注册局设置禁止删除（保护域名的一种状态，域名不能被删除）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientUpdateProhibited</td>\n<td align=\"left\">注册商设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。</td>\n</tr>\n<tr>\n<td align=\"left\">·serverUpdateProhibited</td>\n<td align=\"left\">注册局设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientTransferProhibited</td>\n<td align=\"left\">注册商设置禁止转移（保护域名的一种状态，域名不能转移注册商）。</td>\n</tr>\n<tr>\n<td align=\"left\">·serverTransferProhibited</td>\n<td align=\"left\">注册局设置禁止转移（保护域名的一种状态，域名不能转移注册商。有的域名新注册及转移注册商 60 天内会被注册局设置成该状态，60 天后自动解除；有的则为域名涉及仲裁或诉讼案被注册局设置，仲裁或诉讼案结束会被解除）。</td>\n</tr>\n</tbody></table>\n<p>其他禁止解析、禁止续费的状态：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">域名状态</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">·pendingVerification</td>\n<td align=\"left\">注册信息审核期（该域名注册后未进行实名审核，需尽早在域名付费后 5 天内提交资料审核，5 天后仍未实名审核的，将进入 ServerHold 状态）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientHold</td>\n<td align=\"left\">注册商设置暂停解析（处于该状态域名解析暂停，需联系注册商解除该状态）。</td>\n</tr>\n<tr>\n<td align=\"left\">·serverHold</td>\n<td align=\"left\">注册局设置暂停解析（处于该状态域名解析暂停，.cn 国内中英文域名注册成功后未通过实名审核时多出现该种状态，需在域名有效期内完成实名审核后解除）。</td>\n</tr>\n<tr>\n<td align=\"left\">·inactive</td>\n<td align=\"left\">非激活状态（注册时未填写域名 DNS，不能进行解析，需在注册商处设置域名 DNS）。</td>\n</tr>\n<tr>\n<td align=\"left\">·clientRenewProhibited/serverRenewProhibited</td>\n<td align=\"left\">注册商或注册局设置禁止续费（域名不能续费，处于该状态通常表示该域名处于仲裁或法院争议期，需联系注册商确认原因）。</td>\n</tr>\n<tr>\n<td align=\"left\">·pendingTransfer</td>\n<td align=\"left\">注册局设置转移过程中（域名正在转移注册商过程中）。</td>\n</tr>\n<tr>\n<td align=\"left\">·redemptionPeriod</td>\n<td align=\"left\">注册局设置赎回期（域名处于赎回期，可联系注册商高价赎回）。</td>\n</tr>\n<tr>\n<td align=\"left\">·pendingDelete</td>\n<td align=\"left\">注册局设置待删除/赎回期（对于国际域名，该状态表示域名已过赎回期等待被删除，删除后开放重新注册；对于国内域名，该状态表示域名处于赎回期，可联系注册商高价赎回）。</td>\n</tr>\n</tbody></table>\n"},{"layout":"post","title":"Zabbix自定义Item Not Supported,页面出现不支持解决\n","published":1,"author":"xiemx","comments":1,"date":"2016-11-22T20:11:59.000Z","_content":"\n使用Zabbix的时候往往会自定义Item。\n但是经常会遇到自定义的`Item Not Supported`了。\nZabbix Agent默认的超时时间是`3`秒。往往我们自定义的Item由于各种原因返回时间会比较长。建议修改一个适合自己实际的值。\n\n\n```shell\nvim /etc/zabbix/zabbix_agent.conf\n#Range: 1-30\nTimeout=8\n\n###修改完毕后重启zabbix-agent\n/etc/init.d/zabbix-agent restart\n```","source":"_posts/fix-zabbix-item-not-supported.md","raw":"---\nlayout: post\ntitle: >\n    Zabbix自定义Item Not\n    Supported,页面出现不支持解决\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-11-23 04:11:59\ntags: [ zabbix ]\ncategories:\n    - zabbix\n    - issue\n#permalink: '/2016/11/23/fix-zabbix-item-not-supported'\n---\n\n使用Zabbix的时候往往会自定义Item。\n但是经常会遇到自定义的`Item Not Supported`了。\nZabbix Agent默认的超时时间是`3`秒。往往我们自定义的Item由于各种原因返回时间会比较长。建议修改一个适合自己实际的值。\n\n\n```shell\nvim /etc/zabbix/zabbix_agent.conf\n#Range: 1-30\nTimeout=8\n\n###修改完毕后重启zabbix-agent\n/etc/init.d/zabbix-agent restart\n```","slug":"fix-zabbix-item-not-supported","updated":"2019-10-21T06:57:42.898Z","photos":[],"link":"","_id":"ck42dyicr001bu9urtidh4qd1","content":"<p>使用Zabbix的时候往往会自定义Item。<br>但是经常会遇到自定义的<code>Item Not Supported</code>了。<br>Zabbix Agent默认的超时时间是<code>3</code>秒。往往我们自定义的Item由于各种原因返回时间会比较长。建议修改一个适合自己实际的值。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/zabbix/zabbix_agent.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Range: 1-30</span></span><br><span class=\"line\">Timeout=8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##修改完毕后重启zabbix-agent</span></span></span><br><span class=\"line\">/etc/init.d/zabbix-agent restart</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>使用Zabbix的时候往往会自定义Item。<br>但是经常会遇到自定义的<code>Item Not Supported</code>了。<br>Zabbix Agent默认的超时时间是<code>3</code>秒。往往我们自定义的Item由于各种原因返回时间会比较长。建议修改一个适合自己实际的值。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/zabbix/zabbix_agent.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Range: 1-30</span></span><br><span class=\"line\">Timeout=8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##修改完毕后重启zabbix-agent</span></span></span><br><span class=\"line\">/etc/init.d/zabbix-agent restart</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"graphite_relay sharding","published":1,"author":"xiemx","comments":1,"date":"2017-09-07T22:09:47.000Z","_content":"\n当statsd发送超量的metrics到graphite中，graphite单节点无法负载的情况，可以使用consistent-hashing的模式来将数据分片到backend中。同样的consistent-hashing模式下可以自动剔除／加入节点。\n\n官方文档：\n\n```\ncarbon-relay.py serves two distinct purposes: replication and sharding.\n\nWhen running with RELAY_METHOD = rules, a carbon-relay.py instance can run in place of a carbon-cache.py server and relay all incoming metrics to multiple backend carbon-cache.py‘s running on different ports or hosts.\n\nIn RELAY_METHOD = consistent-hashing mode, a DESTINATIONS setting defines a sharding strategy across multiple carbon-cache.py backends. The same consistent hashing list can be provided to the graphite webapp via CARBONLINK_HOSTS to spread reads across the multiple backends.\n本例模拟一个双后端的carbon-cache instance.单机器运行,使用carbon-cache.py 的instance功能\n\nconfig文件：\n#####carbon.conf\n[cache:a]\nLINE_RECEIVER_PORT = 2203\nPICKLE_RECEIVER_PORT = 2204\nCACHE_QUERY_PORT = 7102\nLOCAL_DATA_DIR = /opt/graphite/storage/whisper_a/\n[cache:b]\nLINE_RECEIVER_PORT = 2205\nPICKLE_RECEIVER_PORT = 2206\nCACHE_QUERY_PORT = 7202\nLOCAL_DATA_DIR = /opt/graphite/storage/whisper_b/\n[relay]\nLINE_RECEIVER_INTERFACE = 0.0.0.0\nLINE_RECEIVER_PORT = 2003\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\nPICKLE_RECEIVER_PORT = 2004\nDESTINATIONS = 127.0.0.1:2204:a, 127.0.0.1:2206:b \n启动服务：\n\n启动instance:a\nxmx@xiemx-test:/opt/graphisudo ./carbon-cache.py --instance=a --config=/opt/graphite/conf/carbon.conf start\nStarting carbon-cache (instance a)\n\n启动instance:b\nxmx@xiemx-test:/opt/graphite/bin$ sudo ./carbon-cache.py --instance=b --config=/opt/graphite/conf/carbon.conf start\nStarting carbon-cache (instance b)\n\n启动relay:\nxmx@xiemx-test:/opt/graphite/conf$ sudo /opt/graphite/bin/carbon-relay.py --debug --config=/opt/graphite/conf/carbon.conf start\nStarting carbon-relay (instance a)\n08/09/2017 16:02:16 :: [console] Using sorted write strategy for cache\n08/09/2017 16:02:16 :: [clients] connecting to carbon daemon at 127.0.0.1:2204:a\n08/09/2017 16:02:16 :: [clients] connecting to carbon daemon at 127.0.0.1:2206:b\n08/09/2017 16:02:16 :: [console] twistd 16.4.1 (/usr/bin/python 2.7.6) starting up.\n08/09/2017 16:02:16 :: [console] reactor class: twisted.internet.epollreactor.EPollReactor.\n08/09/2017 16:02:16 :: [console] Starting factory CarbonClientFactory(127.0.0.1:2206:b)\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2206:b)::startedConnecting (127.0.0.1:2206)\n08/09/2017 16:02:16 :: [console] Starting factory CarbonClientFactory(127.0.0.1:2204:a)\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2204:a)::startedConnecting (127.0.0.1:2204)\n08/09/2017 16:02:16 :: [console] CarbonReceiverFactory starting on 2003\n08/09/2017 16:02:16 :: [console] Starting factory \n08/09/2017 16:02:16 :: [console] CarbonReceiverFactory starting on 2004\n08/09/2017 16:02:16 :: [console] Starting factory \n08/09/2017 16:02:16 :: [clients] CarbonClientProtocol(127.0.0.1:2206:b)::connectionMade\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2206:b)::connectionMade (CarbonClientProtocol(127.0.0.1:2206:b))\n08/09/2017 16:02:16 :: [clients] Destination is up: 127.0.0.1:2206:b\n08/09/2017 16:02:16 :: [clients] CarbonClientProtocol(127.0.0.1:2204:a)::connectionMade\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2204:a)::connectionMade (CarbonClientProtocol(127.0.0.1:2204:a))\n08/09/2017 16:02:16 :: [clients] Destination is up: 127.0.0.1:2204:a\n```\n\n测试：\n\n模拟5个客户端同时发送100个key\n\n![img](/images/img_59b26b3126991.png)\n\n![img](/images/img_59b26b4437729.png)\n\n模拟node掉线重连\n\n![img](/images/img_59b26b60dc7e7.png)\n\ngraphite-web数据聚合展示\n\n```\n修改local_settings.py\nCARBONLINK_HOSTS = [\"127.0.0.1:7102:a\", \"127.0.0.1:7202:b\"]\n\n启动django\nsudo PYTHONPATH=/opt/graphite/webapp django-admin.py runserver 0.0.0.0:5000 --settings\n```","source":"_posts/graphite_relay-sharding.md","raw":"---\nlayout: post\ntitle: graphite_relay sharding\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-09-08 06:09:47\ntags: [ ]\ncategories:\n    - statsd\n    - graphite\n---\n\n当statsd发送超量的metrics到graphite中，graphite单节点无法负载的情况，可以使用consistent-hashing的模式来将数据分片到backend中。同样的consistent-hashing模式下可以自动剔除／加入节点。\n\n官方文档：\n\n```\ncarbon-relay.py serves two distinct purposes: replication and sharding.\n\nWhen running with RELAY_METHOD = rules, a carbon-relay.py instance can run in place of a carbon-cache.py server and relay all incoming metrics to multiple backend carbon-cache.py‘s running on different ports or hosts.\n\nIn RELAY_METHOD = consistent-hashing mode, a DESTINATIONS setting defines a sharding strategy across multiple carbon-cache.py backends. The same consistent hashing list can be provided to the graphite webapp via CARBONLINK_HOSTS to spread reads across the multiple backends.\n本例模拟一个双后端的carbon-cache instance.单机器运行,使用carbon-cache.py 的instance功能\n\nconfig文件：\n#####carbon.conf\n[cache:a]\nLINE_RECEIVER_PORT = 2203\nPICKLE_RECEIVER_PORT = 2204\nCACHE_QUERY_PORT = 7102\nLOCAL_DATA_DIR = /opt/graphite/storage/whisper_a/\n[cache:b]\nLINE_RECEIVER_PORT = 2205\nPICKLE_RECEIVER_PORT = 2206\nCACHE_QUERY_PORT = 7202\nLOCAL_DATA_DIR = /opt/graphite/storage/whisper_b/\n[relay]\nLINE_RECEIVER_INTERFACE = 0.0.0.0\nLINE_RECEIVER_PORT = 2003\nPICKLE_RECEIVER_INTERFACE = 0.0.0.0\nPICKLE_RECEIVER_PORT = 2004\nDESTINATIONS = 127.0.0.1:2204:a, 127.0.0.1:2206:b \n启动服务：\n\n启动instance:a\nxmx@xiemx-test:/opt/graphisudo ./carbon-cache.py --instance=a --config=/opt/graphite/conf/carbon.conf start\nStarting carbon-cache (instance a)\n\n启动instance:b\nxmx@xiemx-test:/opt/graphite/bin$ sudo ./carbon-cache.py --instance=b --config=/opt/graphite/conf/carbon.conf start\nStarting carbon-cache (instance b)\n\n启动relay:\nxmx@xiemx-test:/opt/graphite/conf$ sudo /opt/graphite/bin/carbon-relay.py --debug --config=/opt/graphite/conf/carbon.conf start\nStarting carbon-relay (instance a)\n08/09/2017 16:02:16 :: [console] Using sorted write strategy for cache\n08/09/2017 16:02:16 :: [clients] connecting to carbon daemon at 127.0.0.1:2204:a\n08/09/2017 16:02:16 :: [clients] connecting to carbon daemon at 127.0.0.1:2206:b\n08/09/2017 16:02:16 :: [console] twistd 16.4.1 (/usr/bin/python 2.7.6) starting up.\n08/09/2017 16:02:16 :: [console] reactor class: twisted.internet.epollreactor.EPollReactor.\n08/09/2017 16:02:16 :: [console] Starting factory CarbonClientFactory(127.0.0.1:2206:b)\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2206:b)::startedConnecting (127.0.0.1:2206)\n08/09/2017 16:02:16 :: [console] Starting factory CarbonClientFactory(127.0.0.1:2204:a)\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2204:a)::startedConnecting (127.0.0.1:2204)\n08/09/2017 16:02:16 :: [console] CarbonReceiverFactory starting on 2003\n08/09/2017 16:02:16 :: [console] Starting factory \n08/09/2017 16:02:16 :: [console] CarbonReceiverFactory starting on 2004\n08/09/2017 16:02:16 :: [console] Starting factory \n08/09/2017 16:02:16 :: [clients] CarbonClientProtocol(127.0.0.1:2206:b)::connectionMade\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2206:b)::connectionMade (CarbonClientProtocol(127.0.0.1:2206:b))\n08/09/2017 16:02:16 :: [clients] Destination is up: 127.0.0.1:2206:b\n08/09/2017 16:02:16 :: [clients] CarbonClientProtocol(127.0.0.1:2204:a)::connectionMade\n08/09/2017 16:02:16 :: [clients] CarbonClientFactory(127.0.0.1:2204:a)::connectionMade (CarbonClientProtocol(127.0.0.1:2204:a))\n08/09/2017 16:02:16 :: [clients] Destination is up: 127.0.0.1:2204:a\n```\n\n测试：\n\n模拟5个客户端同时发送100个key\n\n![img](/images/img_59b26b3126991.png)\n\n![img](/images/img_59b26b4437729.png)\n\n模拟node掉线重连\n\n![img](/images/img_59b26b60dc7e7.png)\n\ngraphite-web数据聚合展示\n\n```\n修改local_settings.py\nCARBONLINK_HOSTS = [\"127.0.0.1:7102:a\", \"127.0.0.1:7202:b\"]\n\n启动django\nsudo PYTHONPATH=/opt/graphite/webapp django-admin.py runserver 0.0.0.0:5000 --settings\n```","slug":"graphite_relay-sharding","updated":"2019-10-21T06:57:43.060Z","photos":[],"link":"","_id":"ck42dyics001du9urdlxrvzk2","content":"<p>当statsd发送超量的metrics到graphite中，graphite单节点无法负载的情况，可以使用consistent-hashing的模式来将数据分片到backend中。同样的consistent-hashing模式下可以自动剔除／加入节点。</p>\n<p>官方文档：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carbon-relay.py serves two distinct purposes: replication and sharding.</span><br><span class=\"line\"></span><br><span class=\"line\">When running <span class=\"keyword\">with</span> RELAY_METHOD = <span class=\"keyword\">rules</span>, a carbon-relay.py <span class=\"keyword\">instance</span> can run <span class=\"keyword\">in</span> place <span class=\"keyword\">of</span> a carbon-cache.py <span class=\"keyword\">server</span> <span class=\"keyword\">and</span> relay <span class=\"keyword\">all</span> incoming metrics <span class=\"keyword\">to</span> multiple backend carbon-cache.py‘s running <span class=\"keyword\">on</span> different ports <span class=\"keyword\">or</span> hosts.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">In</span> RELAY_METHOD = <span class=\"keyword\">consistent</span>-hashing <span class=\"keyword\">mode</span>, a DESTINATIONS setting defines a sharding strategy across multiple carbon-cache.py backends. The same <span class=\"keyword\">consistent</span> hashing <span class=\"keyword\">list</span> can be provided <span class=\"keyword\">to</span> the graphite webapp via CARBONLINK_HOSTS <span class=\"keyword\">to</span> spread <span class=\"keyword\">reads</span> across the multiple backends.</span><br><span class=\"line\">本例模拟一个双后端的carbon-<span class=\"keyword\">cache</span> instance.单机器运行,使用carbon-cache.py 的<span class=\"keyword\">instance</span>功能</span><br><span class=\"line\"></span><br><span class=\"line\">config文件：</span><br><span class=\"line\"><span class=\"comment\">#####carbon.conf</span></span><br><span class=\"line\">[<span class=\"keyword\">cache</span>:a]</span><br><span class=\"line\">LINE_RECEIVER_PORT = <span class=\"number\">2203</span></span><br><span class=\"line\">PICKLE_RECEIVER_PORT = <span class=\"number\">2204</span></span><br><span class=\"line\">CACHE_QUERY_PORT = <span class=\"number\">7102</span></span><br><span class=\"line\">LOCAL_DATA_DIR = /opt/graphite/<span class=\"keyword\">storage</span>/whisper_a/</span><br><span class=\"line\">[<span class=\"keyword\">cache</span>:b]</span><br><span class=\"line\">LINE_RECEIVER_PORT = <span class=\"number\">2205</span></span><br><span class=\"line\">PICKLE_RECEIVER_PORT = <span class=\"number\">2206</span></span><br><span class=\"line\">CACHE_QUERY_PORT = <span class=\"number\">7202</span></span><br><span class=\"line\">LOCAL_DATA_DIR = /opt/graphite/<span class=\"keyword\">storage</span>/whisper_b/</span><br><span class=\"line\">[relay]</span><br><span class=\"line\">LINE_RECEIVER_INTERFACE = <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">LINE_RECEIVER_PORT = <span class=\"number\">2003</span></span><br><span class=\"line\">PICKLE_RECEIVER_INTERFACE = <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">PICKLE_RECEIVER_PORT = <span class=\"number\">2004</span></span><br><span class=\"line\">DESTINATIONS = <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a, <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b </span><br><span class=\"line\">启动服务：</span><br><span class=\"line\"></span><br><span class=\"line\">启动<span class=\"keyword\">instance</span>:a</span><br><span class=\"line\">xmx@xiemx-<span class=\"keyword\">test</span>:/opt/graphisudo ./carbon-cache.py <span class=\"comment\">--instance=a --config=/opt/graphite/conf/carbon.conf start</span></span><br><span class=\"line\"><span class=\"keyword\">Starting</span> carbon-<span class=\"keyword\">cache</span> (<span class=\"keyword\">instance</span> a)</span><br><span class=\"line\"></span><br><span class=\"line\">启动<span class=\"keyword\">instance</span>:b</span><br><span class=\"line\">xmx@xiemx-<span class=\"keyword\">test</span>:/opt/graphite/<span class=\"keyword\">bin</span>$ sudo ./carbon-cache.py <span class=\"comment\">--instance=b --config=/opt/graphite/conf/carbon.conf start</span></span><br><span class=\"line\"><span class=\"keyword\">Starting</span> carbon-<span class=\"keyword\">cache</span> (<span class=\"keyword\">instance</span> b)</span><br><span class=\"line\"></span><br><span class=\"line\">启动relay:</span><br><span class=\"line\">xmx@xiemx-<span class=\"keyword\">test</span>:/opt/graphite/conf$ sudo /opt/graphite/<span class=\"keyword\">bin</span>/carbon-relay.py <span class=\"comment\">--debug --config=/opt/graphite/conf/carbon.conf start</span></span><br><span class=\"line\"><span class=\"keyword\">Starting</span> carbon-relay (<span class=\"keyword\">instance</span> a)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Using</span> sorted write strategy <span class=\"keyword\">for</span> <span class=\"keyword\">cache</span></span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] connecting <span class=\"keyword\">to</span> carbon daemon <span class=\"keyword\">at</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] connecting <span class=\"keyword\">to</span> carbon daemon <span class=\"keyword\">at</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] twistd <span class=\"number\">16.4</span><span class=\"number\">.1</span> (/usr/<span class=\"keyword\">bin</span>/python <span class=\"number\">2.7</span><span class=\"number\">.6</span>) <span class=\"keyword\">starting</span> up.</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] reactor <span class=\"keyword\">class</span>: twisted.internet.epollreactor.EPollReactor.</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)::startedConnecting (<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)::startedConnecting (<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] CarbonReceiverFactory <span class=\"keyword\">starting</span> <span class=\"keyword\">on</span> <span class=\"number\">2003</span></span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory </span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] CarbonReceiverFactory <span class=\"keyword\">starting</span> <span class=\"keyword\">on</span> <span class=\"number\">2004</span></span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory </span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)::connectionMade</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)::connectionMade (CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b))</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] Destination <span class=\"keyword\">is</span> up: <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)::connectionMade</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)::connectionMade (CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a))</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] Destination <span class=\"keyword\">is</span> up: <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a</span><br></pre></td></tr></table></figure>\n\n<p>测试：</p>\n<p>模拟5个客户端同时发送100个key</p>\n<p><img src=\"/images/img_59b26b3126991.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_59b26b4437729.png\" alt=\"img\"></p>\n<p>模拟node掉线重连</p>\n<p><img src=\"/images/img_59b26b60dc7e7.png\" alt=\"img\"></p>\n<p>graphite-web数据聚合展示</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改local_settings.py</span><br><span class=\"line\">CARBONLINK_HOSTS = [<span class=\"string\">\"127.0.0.1:7102:a\"</span>, <span class=\"string\">\"127.0.0.1:7202:b\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">启动django</span><br><span class=\"line\">sudo PYTHONPATH=/opt/graphite/webapp django-admin<span class=\"selector-class\">.py</span> runserver <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">5000</span> --settings</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>当statsd发送超量的metrics到graphite中，graphite单节点无法负载的情况，可以使用consistent-hashing的模式来将数据分片到backend中。同样的consistent-hashing模式下可以自动剔除／加入节点。</p>\n<p>官方文档：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carbon-relay.py serves two distinct purposes: replication and sharding.</span><br><span class=\"line\"></span><br><span class=\"line\">When running <span class=\"keyword\">with</span> RELAY_METHOD = <span class=\"keyword\">rules</span>, a carbon-relay.py <span class=\"keyword\">instance</span> can run <span class=\"keyword\">in</span> place <span class=\"keyword\">of</span> a carbon-cache.py <span class=\"keyword\">server</span> <span class=\"keyword\">and</span> relay <span class=\"keyword\">all</span> incoming metrics <span class=\"keyword\">to</span> multiple backend carbon-cache.py‘s running <span class=\"keyword\">on</span> different ports <span class=\"keyword\">or</span> hosts.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">In</span> RELAY_METHOD = <span class=\"keyword\">consistent</span>-hashing <span class=\"keyword\">mode</span>, a DESTINATIONS setting defines a sharding strategy across multiple carbon-cache.py backends. The same <span class=\"keyword\">consistent</span> hashing <span class=\"keyword\">list</span> can be provided <span class=\"keyword\">to</span> the graphite webapp via CARBONLINK_HOSTS <span class=\"keyword\">to</span> spread <span class=\"keyword\">reads</span> across the multiple backends.</span><br><span class=\"line\">本例模拟一个双后端的carbon-<span class=\"keyword\">cache</span> instance.单机器运行,使用carbon-cache.py 的<span class=\"keyword\">instance</span>功能</span><br><span class=\"line\"></span><br><span class=\"line\">config文件：</span><br><span class=\"line\"><span class=\"comment\">#####carbon.conf</span></span><br><span class=\"line\">[<span class=\"keyword\">cache</span>:a]</span><br><span class=\"line\">LINE_RECEIVER_PORT = <span class=\"number\">2203</span></span><br><span class=\"line\">PICKLE_RECEIVER_PORT = <span class=\"number\">2204</span></span><br><span class=\"line\">CACHE_QUERY_PORT = <span class=\"number\">7102</span></span><br><span class=\"line\">LOCAL_DATA_DIR = /opt/graphite/<span class=\"keyword\">storage</span>/whisper_a/</span><br><span class=\"line\">[<span class=\"keyword\">cache</span>:b]</span><br><span class=\"line\">LINE_RECEIVER_PORT = <span class=\"number\">2205</span></span><br><span class=\"line\">PICKLE_RECEIVER_PORT = <span class=\"number\">2206</span></span><br><span class=\"line\">CACHE_QUERY_PORT = <span class=\"number\">7202</span></span><br><span class=\"line\">LOCAL_DATA_DIR = /opt/graphite/<span class=\"keyword\">storage</span>/whisper_b/</span><br><span class=\"line\">[relay]</span><br><span class=\"line\">LINE_RECEIVER_INTERFACE = <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">LINE_RECEIVER_PORT = <span class=\"number\">2003</span></span><br><span class=\"line\">PICKLE_RECEIVER_INTERFACE = <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">PICKLE_RECEIVER_PORT = <span class=\"number\">2004</span></span><br><span class=\"line\">DESTINATIONS = <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a, <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b </span><br><span class=\"line\">启动服务：</span><br><span class=\"line\"></span><br><span class=\"line\">启动<span class=\"keyword\">instance</span>:a</span><br><span class=\"line\">xmx@xiemx-<span class=\"keyword\">test</span>:/opt/graphisudo ./carbon-cache.py <span class=\"comment\">--instance=a --config=/opt/graphite/conf/carbon.conf start</span></span><br><span class=\"line\"><span class=\"keyword\">Starting</span> carbon-<span class=\"keyword\">cache</span> (<span class=\"keyword\">instance</span> a)</span><br><span class=\"line\"></span><br><span class=\"line\">启动<span class=\"keyword\">instance</span>:b</span><br><span class=\"line\">xmx@xiemx-<span class=\"keyword\">test</span>:/opt/graphite/<span class=\"keyword\">bin</span>$ sudo ./carbon-cache.py <span class=\"comment\">--instance=b --config=/opt/graphite/conf/carbon.conf start</span></span><br><span class=\"line\"><span class=\"keyword\">Starting</span> carbon-<span class=\"keyword\">cache</span> (<span class=\"keyword\">instance</span> b)</span><br><span class=\"line\"></span><br><span class=\"line\">启动relay:</span><br><span class=\"line\">xmx@xiemx-<span class=\"keyword\">test</span>:/opt/graphite/conf$ sudo /opt/graphite/<span class=\"keyword\">bin</span>/carbon-relay.py <span class=\"comment\">--debug --config=/opt/graphite/conf/carbon.conf start</span></span><br><span class=\"line\"><span class=\"keyword\">Starting</span> carbon-relay (<span class=\"keyword\">instance</span> a)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Using</span> sorted write strategy <span class=\"keyword\">for</span> <span class=\"keyword\">cache</span></span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] connecting <span class=\"keyword\">to</span> carbon daemon <span class=\"keyword\">at</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] connecting <span class=\"keyword\">to</span> carbon daemon <span class=\"keyword\">at</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] twistd <span class=\"number\">16.4</span><span class=\"number\">.1</span> (/usr/<span class=\"keyword\">bin</span>/python <span class=\"number\">2.7</span><span class=\"number\">.6</span>) <span class=\"keyword\">starting</span> up.</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] reactor <span class=\"keyword\">class</span>: twisted.internet.epollreactor.EPollReactor.</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)::startedConnecting (<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)::startedConnecting (<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>)</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] CarbonReceiverFactory <span class=\"keyword\">starting</span> <span class=\"keyword\">on</span> <span class=\"number\">2003</span></span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory </span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] CarbonReceiverFactory <span class=\"keyword\">starting</span> <span class=\"keyword\">on</span> <span class=\"number\">2004</span></span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [console] <span class=\"keyword\">Starting</span> factory </span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)::connectionMade</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b)::connectionMade (CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b))</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] Destination <span class=\"keyword\">is</span> up: <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2206</span>:b</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)::connectionMade</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] CarbonClientFactory(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a)::connectionMade (CarbonClientProtocol(<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a))</span><br><span class=\"line\"><span class=\"number\">08</span>/<span class=\"number\">09</span>/<span class=\"number\">2017</span> <span class=\"number\">16</span>:<span class=\"number\">02</span>:<span class=\"number\">16</span> :: [clients] Destination <span class=\"keyword\">is</span> up: <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">2204</span>:a</span><br></pre></td></tr></table></figure>\n\n<p>测试：</p>\n<p>模拟5个客户端同时发送100个key</p>\n<p><img src=\"/images/img_59b26b3126991.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_59b26b4437729.png\" alt=\"img\"></p>\n<p>模拟node掉线重连</p>\n<p><img src=\"/images/img_59b26b60dc7e7.png\" alt=\"img\"></p>\n<p>graphite-web数据聚合展示</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改local_settings.py</span><br><span class=\"line\">CARBONLINK_HOSTS = [<span class=\"string\">\"127.0.0.1:7102:a\"</span>, <span class=\"string\">\"127.0.0.1:7202:b\"</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">启动django</span><br><span class=\"line\">sudo PYTHONPATH=/opt/graphite/webapp django-admin<span class=\"selector-class\">.py</span> runserver <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">5000</span> --settings</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"http cache","published":1,"author":"xiemx","comments":1,"date":"2019-05-13T03:05:02.000Z","_content":"#### **cache流程图**\n\n![img](/images/image.png)\n\n### “no-cache”和“no-store”\n\n“no-cache”表示必须先与服务器确认返回的响应是否发生了变化，然后才能使用该响应来满足后续对同一网址的请求。 因此，如果存在合适的验证令牌 (ETag)，no-cache 会发起往返通信来验证缓存的响应，但如果资源未发生变化，则可避免下载。\n\n“no-store”禁止浏览器以及所有中间缓存存储任何版本的返回响应，例如，包含个人隐私数据或银行业务数据的响应。 每次用户请求该资产时，都会向服务器发送请求，并下载完整的响应。\n\n### “public”与 “private”\n\n“public”则即使它有关联的 HTTP 身份验证，甚至响应状态代码通常无法缓存，也可以缓存响应。 大多数情况下，“public”不是必需的，因为明确的缓存信息（例如“max-age”）已表示响应是可以缓存的。\n\n“private”浏览器可以缓存响应，不允许任何中间缓存对其进行缓存。 例如，用户的浏览器可以缓存包含用户私人信息的 HTML 网页，但 CDN 却不能缓存。\n\n### “max-age”\n\n指令指定从请求的时间开始，允许提取的响应被重用的最长时间（单位：秒）。 例如，“max-age=60”表示可在接下来的 60 秒缓存和重用响应。\n\n## 通过 ETag 验证缓存的响应\n\n在首次请求资源时服务器生成并返回\"ETag\" http请求头(通常是文件内容的哈希值或某个其他指纹)。 当120 秒后，浏览器又对该资源发起了新的请求。 首先，浏览器会检查本地缓存并找到之前的响应。如果发现缓存超过max-age, 浏览器将发起一个带有\"If-None-Match\"的http请求。 如果Etag相同，则返回304，使用本地缓存。\n\n![HTTP Cache-Control 示例](/images/http-cache-control.png)\n\n参考： https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching","source":"_posts/http-cache.md","raw":"---\nlayout: post\ntitle: http cache\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-05-13 11:05:02\ntags: [ http, cache ]\ncategories:\n    - http\n---\n#### **cache流程图**\n\n![img](/images/image.png)\n\n### “no-cache”和“no-store”\n\n“no-cache”表示必须先与服务器确认返回的响应是否发生了变化，然后才能使用该响应来满足后续对同一网址的请求。 因此，如果存在合适的验证令牌 (ETag)，no-cache 会发起往返通信来验证缓存的响应，但如果资源未发生变化，则可避免下载。\n\n“no-store”禁止浏览器以及所有中间缓存存储任何版本的返回响应，例如，包含个人隐私数据或银行业务数据的响应。 每次用户请求该资产时，都会向服务器发送请求，并下载完整的响应。\n\n### “public”与 “private”\n\n“public”则即使它有关联的 HTTP 身份验证，甚至响应状态代码通常无法缓存，也可以缓存响应。 大多数情况下，“public”不是必需的，因为明确的缓存信息（例如“max-age”）已表示响应是可以缓存的。\n\n“private”浏览器可以缓存响应，不允许任何中间缓存对其进行缓存。 例如，用户的浏览器可以缓存包含用户私人信息的 HTML 网页，但 CDN 却不能缓存。\n\n### “max-age”\n\n指令指定从请求的时间开始，允许提取的响应被重用的最长时间（单位：秒）。 例如，“max-age=60”表示可在接下来的 60 秒缓存和重用响应。\n\n## 通过 ETag 验证缓存的响应\n\n在首次请求资源时服务器生成并返回\"ETag\" http请求头(通常是文件内容的哈希值或某个其他指纹)。 当120 秒后，浏览器又对该资源发起了新的请求。 首先，浏览器会检查本地缓存并找到之前的响应。如果发现缓存超过max-age, 浏览器将发起一个带有\"If-None-Match\"的http请求。 如果Etag相同，则返回304，使用本地缓存。\n\n![HTTP Cache-Control 示例](/images/http-cache-control.png)\n\n参考： https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching","slug":"http-cache","updated":"2019-10-21T06:57:42.935Z","photos":[],"link":"","_id":"ck42dyict001eu9urhj3axxnw","content":"<h4 id=\"cache流程图\"><a href=\"#cache流程图\" class=\"headerlink\" title=\"cache流程图\"></a><strong>cache流程图</strong></h4><p><img src=\"/images/image.png\" alt=\"img\"></p>\n<h3 id=\"“no-cache”和“no-store”\"><a href=\"#“no-cache”和“no-store”\" class=\"headerlink\" title=\"“no-cache”和“no-store”\"></a>“no-cache”和“no-store”</h3><p>“no-cache”表示必须先与服务器确认返回的响应是否发生了变化，然后才能使用该响应来满足后续对同一网址的请求。 因此，如果存在合适的验证令牌 (ETag)，no-cache 会发起往返通信来验证缓存的响应，但如果资源未发生变化，则可避免下载。</p>\n<p>“no-store”禁止浏览器以及所有中间缓存存储任何版本的返回响应，例如，包含个人隐私数据或银行业务数据的响应。 每次用户请求该资产时，都会向服务器发送请求，并下载完整的响应。</p>\n<h3 id=\"“public”与-“private”\"><a href=\"#“public”与-“private”\" class=\"headerlink\" title=\"“public”与 “private”\"></a>“public”与 “private”</h3><p>“public”则即使它有关联的 HTTP 身份验证，甚至响应状态代码通常无法缓存，也可以缓存响应。 大多数情况下，“public”不是必需的，因为明确的缓存信息（例如“max-age”）已表示响应是可以缓存的。</p>\n<p>“private”浏览器可以缓存响应，不允许任何中间缓存对其进行缓存。 例如，用户的浏览器可以缓存包含用户私人信息的 HTML 网页，但 CDN 却不能缓存。</p>\n<h3 id=\"“max-age”\"><a href=\"#“max-age”\" class=\"headerlink\" title=\"“max-age”\"></a>“max-age”</h3><p>指令指定从请求的时间开始，允许提取的响应被重用的最长时间（单位：秒）。 例如，“max-age=60”表示可在接下来的 60 秒缓存和重用响应。</p>\n<h2 id=\"通过-ETag-验证缓存的响应\"><a href=\"#通过-ETag-验证缓存的响应\" class=\"headerlink\" title=\"通过 ETag 验证缓存的响应\"></a>通过 ETag 验证缓存的响应</h2><p>在首次请求资源时服务器生成并返回”ETag” http请求头(通常是文件内容的哈希值或某个其他指纹)。 当120 秒后，浏览器又对该资源发起了新的请求。 首先，浏览器会检查本地缓存并找到之前的响应。如果发现缓存超过max-age, 浏览器将发起一个带有”If-None-Match”的http请求。 如果Etag相同，则返回304，使用本地缓存。</p>\n<p><img src=\"/images/http-cache-control.png\" alt=\"HTTP Cache-Control 示例\"></p>\n<p>参考： <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"cache流程图\"><a href=\"#cache流程图\" class=\"headerlink\" title=\"cache流程图\"></a><strong>cache流程图</strong></h4><p><img src=\"/images/image.png\" alt=\"img\"></p>\n<h3 id=\"“no-cache”和“no-store”\"><a href=\"#“no-cache”和“no-store”\" class=\"headerlink\" title=\"“no-cache”和“no-store”\"></a>“no-cache”和“no-store”</h3><p>“no-cache”表示必须先与服务器确认返回的响应是否发生了变化，然后才能使用该响应来满足后续对同一网址的请求。 因此，如果存在合适的验证令牌 (ETag)，no-cache 会发起往返通信来验证缓存的响应，但如果资源未发生变化，则可避免下载。</p>\n<p>“no-store”禁止浏览器以及所有中间缓存存储任何版本的返回响应，例如，包含个人隐私数据或银行业务数据的响应。 每次用户请求该资产时，都会向服务器发送请求，并下载完整的响应。</p>\n<h3 id=\"“public”与-“private”\"><a href=\"#“public”与-“private”\" class=\"headerlink\" title=\"“public”与 “private”\"></a>“public”与 “private”</h3><p>“public”则即使它有关联的 HTTP 身份验证，甚至响应状态代码通常无法缓存，也可以缓存响应。 大多数情况下，“public”不是必需的，因为明确的缓存信息（例如“max-age”）已表示响应是可以缓存的。</p>\n<p>“private”浏览器可以缓存响应，不允许任何中间缓存对其进行缓存。 例如，用户的浏览器可以缓存包含用户私人信息的 HTML 网页，但 CDN 却不能缓存。</p>\n<h3 id=\"“max-age”\"><a href=\"#“max-age”\" class=\"headerlink\" title=\"“max-age”\"></a>“max-age”</h3><p>指令指定从请求的时间开始，允许提取的响应被重用的最长时间（单位：秒）。 例如，“max-age=60”表示可在接下来的 60 秒缓存和重用响应。</p>\n<h2 id=\"通过-ETag-验证缓存的响应\"><a href=\"#通过-ETag-验证缓存的响应\" class=\"headerlink\" title=\"通过 ETag 验证缓存的响应\"></a>通过 ETag 验证缓存的响应</h2><p>在首次请求资源时服务器生成并返回”ETag” http请求头(通常是文件内容的哈希值或某个其他指纹)。 当120 秒后，浏览器又对该资源发起了新的请求。 首先，浏览器会检查本地缓存并找到之前的响应。如果发现缓存超过max-age, 浏览器将发起一个带有”If-None-Match”的http请求。 如果Etag相同，则返回304，使用本地缓存。</p>\n<p><img src=\"/images/http-cache-control.png\" alt=\"HTTP Cache-Control 示例\"></p>\n<p>参考： <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching\" target=\"_blank\" rel=\"noopener\">https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching</a></p>\n"},{"layout":"post","title":"访问网站要求输入密码","published":1,"author":"xiemx","comments":1,"date":"2015-08-23T18:08:15.000Z","_content":"访问网站要求输入密码：\n![image-20191021135643975](/images/image-20191021135643975.png)\n\n### 方法1\n\n1. Internet—域名属性—目录安全性—编辑身份认证和访问控制——修改密码\n![image-20191021135659882](/images/image-20191021135659882.png)\n\n2. 网站应用程序池—属性—标识——修改密码(密码和上面相同)\n![image-20191021135714997](/images/image-20191021135714997.png)\n\n### 方法2：\n\n1. 删除权限中不统一的用户\n![image-20191021135724279](/images/image-20191021135724279.png)\n\n","source":"_posts/iis-auth.md","raw":"---\nlayout: post\ntitle: 访问网站要求输入密码\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-08-24 02:08:15\ntags: [ windows, iis]\ncategories:\n    - windows\n    - iis\n---\n访问网站要求输入密码：\n![image-20191021135643975](/images/image-20191021135643975.png)\n\n### 方法1\n\n1. Internet—域名属性—目录安全性—编辑身份认证和访问控制——修改密码\n![image-20191021135659882](/images/image-20191021135659882.png)\n\n2. 网站应用程序池—属性—标识——修改密码(密码和上面相同)\n![image-20191021135714997](/images/image-20191021135714997.png)\n\n### 方法2：\n\n1. 删除权限中不统一的用户\n![image-20191021135724279](/images/image-20191021135724279.png)\n\n","slug":"iis-auth","updated":"2019-10-21T09:01:51.365Z","photos":[],"link":"","_id":"ck42dyicu001hu9uri210uk9c","content":"<p>访问网站要求输入密码：<br><img src=\"/images/image-20191021135643975.png\" alt=\"image-20191021135643975\"></p>\n<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><ol>\n<li><p>Internet—域名属性—目录安全性—编辑身份认证和访问控制——修改密码<br><img src=\"/images/image-20191021135659882.png\" alt=\"image-20191021135659882\"></p>\n</li>\n<li><p>网站应用程序池—属性—标识——修改密码(密码和上面相同)<br><img src=\"/images/image-20191021135714997.png\" alt=\"image-20191021135714997\"></p>\n</li>\n</ol>\n<h3 id=\"方法2：\"><a href=\"#方法2：\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><ol>\n<li>删除权限中不统一的用户<br><img src=\"/images/image-20191021135724279.png\" alt=\"image-20191021135724279\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>访问网站要求输入密码：<br><img src=\"/images/image-20191021135643975.png\" alt=\"image-20191021135643975\"></p>\n<h3 id=\"方法1\"><a href=\"#方法1\" class=\"headerlink\" title=\"方法1\"></a>方法1</h3><ol>\n<li><p>Internet—域名属性—目录安全性—编辑身份认证和访问控制——修改密码<br><img src=\"/images/image-20191021135659882.png\" alt=\"image-20191021135659882\"></p>\n</li>\n<li><p>网站应用程序池—属性—标识——修改密码(密码和上面相同)<br><img src=\"/images/image-20191021135714997.png\" alt=\"image-20191021135714997\"></p>\n</li>\n</ol>\n<h3 id=\"方法2：\"><a href=\"#方法2：\" class=\"headerlink\" title=\"方法2：\"></a>方法2：</h3><ol>\n<li>删除权限中不统一的用户<br><img src=\"/images/image-20191021135724279.png\" alt=\"image-20191021135724279\"></li>\n</ol>\n"},{"layout":"post","title":"iis备份还原","published":1,"author":"xiemx","comments":1,"date":"2017-03-31T02:03:43.000Z","_content":"\n1. 打开我们的IIS管理器，在功能视图里找到共享的配置这个功能然后双击进入。\n\n![img](/images/img_58ddc18a1993a.png)\n\n2. 进入后单机右上方的“导出配置”选项，选择导出配置文件的物理路径，然后设置一个密码，密码必须是包含数字、符号、大小写字母组合并且至少为8个字符长的强密码，确定导出后会在你导出配置文件目录下生成administration.config、applicationHost.config和configEncKey.key共3个文件，这3个文件就是我们备份的IIS站点配置信息文件。\n\n![img](/images/img_58ddc1b2d8078.png)\n\n3. 现在是还原IIS的配置信息，首先将你导出后的administration.config、applicationHost.config和configEncKey.key这个3个文件复制到你需要恢复IIS配置信息的电脑或服务器上，然后打开IIS，同样在功能视图里找到“共享的配置”并打开。\n\n![img](/images/img_58ddc20c6f8c3.png)\n\n4. 把“启用共享的配置”勾选上，物理路径就选择你备份的文件所在目录，用户名、密码输入框都不需要填写，直接点击右上方的应用，然后它要你输入密码，确定后重启下我们的IIS 就可以看到以前的站点信息都还原了。","source":"_posts/iis-backup-restore.md","raw":"---\nlayout: post\ntitle: iis备份还原\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-03-31 10:03:43\ntags: [ windows, iis, webserver]\ncategories:\n    - windows\n    - iis\n---\n\n1. 打开我们的IIS管理器，在功能视图里找到共享的配置这个功能然后双击进入。\n\n![img](/images/img_58ddc18a1993a.png)\n\n2. 进入后单机右上方的“导出配置”选项，选择导出配置文件的物理路径，然后设置一个密码，密码必须是包含数字、符号、大小写字母组合并且至少为8个字符长的强密码，确定导出后会在你导出配置文件目录下生成administration.config、applicationHost.config和configEncKey.key共3个文件，这3个文件就是我们备份的IIS站点配置信息文件。\n\n![img](/images/img_58ddc1b2d8078.png)\n\n3. 现在是还原IIS的配置信息，首先将你导出后的administration.config、applicationHost.config和configEncKey.key这个3个文件复制到你需要恢复IIS配置信息的电脑或服务器上，然后打开IIS，同样在功能视图里找到“共享的配置”并打开。\n\n![img](/images/img_58ddc20c6f8c3.png)\n\n4. 把“启用共享的配置”勾选上，物理路径就选择你备份的文件所在目录，用户名、密码输入框都不需要填写，直接点击右上方的应用，然后它要你输入密码，确定后重启下我们的IIS 就可以看到以前的站点信息都还原了。","slug":"iis-backup-restore","updated":"2019-10-21T06:57:43.060Z","photos":[],"link":"","_id":"ck42dyicw001ju9urrx4klupl","content":"<ol>\n<li>打开我们的IIS管理器，在功能视图里找到共享的配置这个功能然后双击进入。</li>\n</ol>\n<p><img src=\"/images/img_58ddc18a1993a.png\" alt=\"img\"></p>\n<ol start=\"2\">\n<li>进入后单机右上方的“导出配置”选项，选择导出配置文件的物理路径，然后设置一个密码，密码必须是包含数字、符号、大小写字母组合并且至少为8个字符长的强密码，确定导出后会在你导出配置文件目录下生成administration.config、applicationHost.config和configEncKey.key共3个文件，这3个文件就是我们备份的IIS站点配置信息文件。</li>\n</ol>\n<p><img src=\"/images/img_58ddc1b2d8078.png\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>现在是还原IIS的配置信息，首先将你导出后的administration.config、applicationHost.config和configEncKey.key这个3个文件复制到你需要恢复IIS配置信息的电脑或服务器上，然后打开IIS，同样在功能视图里找到“共享的配置”并打开。</li>\n</ol>\n<p><img src=\"/images/img_58ddc20c6f8c3.png\" alt=\"img\"></p>\n<ol start=\"4\">\n<li>把“启用共享的配置”勾选上，物理路径就选择你备份的文件所在目录，用户名、密码输入框都不需要填写，直接点击右上方的应用，然后它要你输入密码，确定后重启下我们的IIS 就可以看到以前的站点信息都还原了。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>打开我们的IIS管理器，在功能视图里找到共享的配置这个功能然后双击进入。</li>\n</ol>\n<p><img src=\"/images/img_58ddc18a1993a.png\" alt=\"img\"></p>\n<ol start=\"2\">\n<li>进入后单机右上方的“导出配置”选项，选择导出配置文件的物理路径，然后设置一个密码，密码必须是包含数字、符号、大小写字母组合并且至少为8个字符长的强密码，确定导出后会在你导出配置文件目录下生成administration.config、applicationHost.config和configEncKey.key共3个文件，这3个文件就是我们备份的IIS站点配置信息文件。</li>\n</ol>\n<p><img src=\"/images/img_58ddc1b2d8078.png\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>现在是还原IIS的配置信息，首先将你导出后的administration.config、applicationHost.config和configEncKey.key这个3个文件复制到你需要恢复IIS配置信息的电脑或服务器上，然后打开IIS，同样在功能视图里找到“共享的配置”并打开。</li>\n</ol>\n<p><img src=\"/images/img_58ddc20c6f8c3.png\" alt=\"img\"></p>\n<ol start=\"4\">\n<li>把“启用共享的配置”勾选上，物理路径就选择你备份的文件所在目录，用户名、密码输入框都不需要填写，直接点击右上方的应用，然后它要你输入密码，确定后重启下我们的IIS 就可以看到以前的站点信息都还原了。</li>\n</ol>\n"},{"layout":"post","title":"iis7如何查看进程号对应的网站","published":1,"author":"xiemx","comments":1,"date":"2017-01-16T21:01:45.000Z","_content":"1.获取pid\n\n![img](/images/img_587ddd23c02a3.png)\n\n2.查询程序池对应的pid，根据applicationpool来查找对应网站\n\n```\n%windir%/system32/inetsrv/appcmd list wp \n```\n\n![img](/images/img_587dde19b6b47.png)","source":"_posts/iis-get-pid.md","raw":"---\nlayout: post\ntitle: iis7如何查看进程号对应的网站\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-01-17 05:01:45\ntags: [ windows, iis, webserver ]\ncategories:\n    - windows\n    - iis\n---\n1.获取pid\n\n![img](/images/img_587ddd23c02a3.png)\n\n2.查询程序池对应的pid，根据applicationpool来查找对应网站\n\n```\n%windir%/system32/inetsrv/appcmd list wp \n```\n\n![img](/images/img_587dde19b6b47.png)","slug":"iis-get-pid","updated":"2019-10-21T06:57:42.478Z","photos":[],"link":"","_id":"ck42dyicx001mu9urdb2amxe5","content":"<p>1.获取pid</p>\n<p><img src=\"/images/img_587ddd23c02a3.png\" alt=\"img\"></p>\n<p>2.查询程序池对应的pid，根据applicationpool来查找对应网站</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">%<span class=\"selector-tag\">windir</span></span>%/system32/inetsrv/appcmd list wp</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_587dde19b6b47.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.获取pid</p>\n<p><img src=\"/images/img_587ddd23c02a3.png\" alt=\"img\"></p>\n<p>2.查询程序池对应的pid，根据applicationpool来查找对应网站</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">%<span class=\"selector-tag\">windir</span></span>%/system32/inetsrv/appcmd list wp</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_587dde19b6b47.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"URLRewriter设置Config和IIS配置做伪静态","published":1,"author":"xiemx","comments":1,"date":"2015-08-21T02:08:51.000Z","_content":"\n一、首先检查config文件里面是否包含这两个节点\n\n```xml\n <configSections>\n\n   <section name=\"RewriterConfig\" requirePermission=\"false\" type=\"URLRewriter.Config.RewriterConfigSerializerSectionHandler, URLRewriter\"/>\n\n </configSections>\n\n <system.web>\n\n   <httpModules>\n     <add type=\"URLRewriter.ModuleRewriter, URLRewriter\" name=\"ModuleRewriter\"/>\n\n   </httpModules>\n\n </system.web>\n\n```\n\n二、配置IIS。\n\n 1.打开IIS，选择网站。右键，点击属性\n\n 2.选择主目录，点击配置按钮\n\n 3.在弹出的应用程序配置中，点击添加\n\n 4.在弹出的添加/编辑应用程序扩展名映射中，填写可执行文件\n\n​\t点击浏览，选择aspnet_isapi.dll这个DLL，它一般在：C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727文件夹中(也就是你的系统盘中）\n\n 5.在扩展名中填写.html\n\n 6.在动作里选择限制为，他的框就可以填写了！请填写：GET,POST\n\n 7.不要勾选把确认文件是否存在，然后点击确定\n\n![image-20190917165314461](/images/image-20190917165314461.png)","source":"_posts/iis-set-urlrewrite.md","raw":"---\nlayout: post\ntitle: URLRewriter设置Config和IIS配置做伪静态\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-08-21 10:08:51\ntags: [ windows, iis]\ncategories:\n    - 'iis'\n    - 'windows'\n#permalink: '/2015/08/21/iis-set-urlrewrite'\n---\n\n一、首先检查config文件里面是否包含这两个节点\n\n```xml\n <configSections>\n\n   <section name=\"RewriterConfig\" requirePermission=\"false\" type=\"URLRewriter.Config.RewriterConfigSerializerSectionHandler, URLRewriter\"/>\n\n </configSections>\n\n <system.web>\n\n   <httpModules>\n     <add type=\"URLRewriter.ModuleRewriter, URLRewriter\" name=\"ModuleRewriter\"/>\n\n   </httpModules>\n\n </system.web>\n\n```\n\n二、配置IIS。\n\n 1.打开IIS，选择网站。右键，点击属性\n\n 2.选择主目录，点击配置按钮\n\n 3.在弹出的应用程序配置中，点击添加\n\n 4.在弹出的添加/编辑应用程序扩展名映射中，填写可执行文件\n\n​\t点击浏览，选择aspnet_isapi.dll这个DLL，它一般在：C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727文件夹中(也就是你的系统盘中）\n\n 5.在扩展名中填写.html\n\n 6.在动作里选择限制为，他的框就可以填写了！请填写：GET,POST\n\n 7.不要勾选把确认文件是否存在，然后点击确定\n\n![image-20190917165314461](/images/image-20190917165314461.png)","slug":"iis-set-urlrewrite","updated":"2019-10-21T08:59:59.559Z","photos":[],"link":"","_id":"ck42dyicy001qu9urk625v11n","content":"<p>一、首先检查config文件里面是否包含这两个节点</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configSections</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">name</span>=<span class=\"string\">\"RewriterConfig\"</span> <span class=\"attr\">requirePermission</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"URLRewriter.Config.RewriterConfigSerializerSectionHandler, URLRewriter\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configSections</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">httpModules</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">type</span>=<span class=\"string\">\"URLRewriter.ModuleRewriter, URLRewriter\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ModuleRewriter\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">httpModules</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>二、配置IIS。</p>\n<p> 1.打开IIS，选择网站。右键，点击属性</p>\n<p> 2.选择主目录，点击配置按钮</p>\n<p> 3.在弹出的应用程序配置中，点击添加</p>\n<p> 4.在弹出的添加/编辑应用程序扩展名映射中，填写可执行文件</p>\n<p>​    点击浏览，选择aspnet_isapi.dll这个DLL，它一般在：C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727文件夹中(也就是你的系统盘中）</p>\n<p> 5.在扩展名中填写.html</p>\n<p> 6.在动作里选择限制为，他的框就可以填写了！请填写：GET,POST</p>\n<p> 7.不要勾选把确认文件是否存在，然后点击确定</p>\n<p><img src=\"/images/image-20190917165314461.png\" alt=\"image-20190917165314461\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>一、首先检查config文件里面是否包含这两个节点</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configSections</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">name</span>=<span class=\"string\">\"RewriterConfig\"</span> <span class=\"attr\">requirePermission</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"URLRewriter.Config.RewriterConfigSerializerSectionHandler, URLRewriter\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configSections</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">system.web</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">httpModules</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">add</span> <span class=\"attr\">type</span>=<span class=\"string\">\"URLRewriter.ModuleRewriter, URLRewriter\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ModuleRewriter\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">httpModules</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">system.web</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>二、配置IIS。</p>\n<p> 1.打开IIS，选择网站。右键，点击属性</p>\n<p> 2.选择主目录，点击配置按钮</p>\n<p> 3.在弹出的应用程序配置中，点击添加</p>\n<p> 4.在弹出的添加/编辑应用程序扩展名映射中，填写可执行文件</p>\n<p>​    点击浏览，选择aspnet_isapi.dll这个DLL，它一般在：C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727文件夹中(也就是你的系统盘中）</p>\n<p> 5.在扩展名中填写.html</p>\n<p> 6.在动作里选择限制为，他的框就可以填写了！请填写：GET,POST</p>\n<p> 7.不要勾选把确认文件是否存在，然后点击确定</p>\n<p><img src=\"/images/image-20190917165314461.png\" alt=\"image-20190917165314461\"></p>\n"},{"layout":"post","title":"iptables count计数","published":1,"author":"xiemx","comments":1,"date":"2017-04-10T21:04:23.000Z","_content":"```\n两个参数：\n  --verbose\t-v\t\tverbose mode\n  --zero    -Z [chain [rulenum]]  Zero counters in chain or all chains\n\n\np-hsg-cache-6% sudo iptables -nL -v -t nat\nChain PREROUTING (policy ACCEPT 50741 packets, 2370K bytes)\n pkts bytes target     prot opt in     out     source               destination\n  436 22672 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6379 to:192.168.10.82:6379\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6380 to:192.168.10.81:6380\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6381 to:192.168.10.81:6381\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6382 to:192.168.10.81:6382\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6383 to:192.168.10.81:6383\n\nChain INPUT (policy ACCEPT 18988 packets, 1082K bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain OUTPUT (policy ACCEPT 10532 packets, 549K bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n10968  572K MASQUERADE  all  --  *      *       0.0.0.0/0            0.0.0.0/0\n\np-hsg-cache-6% sudo iptables -Z -t nat\n\np-hsg-cache-6% sudo iptables -nL -v -t nat\nChain PREROUTING (policy ACCEPT 12 packets, 624 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    1    52 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6379 to:192.168.10.82:6379\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6380 to:192.168.10.81:6380\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6381 to:192.168.10.81:6381\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6382 to:192.168.10.81:6382\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6383 to:192.168.10.81:6383\n\nChain INPUT (policy ACCEPT 12 packets, 624 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain OUTPUT (policy ACCEPT 6 packets, 312 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    7   364 MASQUERADE  all  --  *      *       0.0.0.0/0            0.0.0.0/0\np-hsg-cache-6%\n\n```","source":"_posts/iptables-count.md","raw":"---\nlayout: post\ntitle: iptables count计数\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-04-11 05:04:23\ntags: [ linux, iptables ]\ncategories:\n    - linux\n---\n```\n两个参数：\n  --verbose\t-v\t\tverbose mode\n  --zero    -Z [chain [rulenum]]  Zero counters in chain or all chains\n\n\np-hsg-cache-6% sudo iptables -nL -v -t nat\nChain PREROUTING (policy ACCEPT 50741 packets, 2370K bytes)\n pkts bytes target     prot opt in     out     source               destination\n  436 22672 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6379 to:192.168.10.82:6379\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6380 to:192.168.10.81:6380\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6381 to:192.168.10.81:6381\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6382 to:192.168.10.81:6382\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6383 to:192.168.10.81:6383\n\nChain INPUT (policy ACCEPT 18988 packets, 1082K bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain OUTPUT (policy ACCEPT 10532 packets, 549K bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n10968  572K MASQUERADE  all  --  *      *       0.0.0.0/0            0.0.0.0/0\n\np-hsg-cache-6% sudo iptables -Z -t nat\n\np-hsg-cache-6% sudo iptables -nL -v -t nat\nChain PREROUTING (policy ACCEPT 12 packets, 624 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    1    52 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6379 to:192.168.10.82:6379\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6380 to:192.168.10.81:6380\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6381 to:192.168.10.81:6381\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6382 to:192.168.10.81:6382\n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.10.226       tcp dpt:6383 to:192.168.10.81:6383\n\nChain INPUT (policy ACCEPT 12 packets, 624 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain OUTPUT (policy ACCEPT 6 packets, 312 bytes)\n pkts bytes target     prot opt in     out     source               destination\n\nChain POSTROUTING (policy ACCEPT 0 packets, 0 bytes)\n pkts bytes target     prot opt in     out     source               destination\n    7   364 MASQUERADE  all  --  *      *       0.0.0.0/0            0.0.0.0/0\np-hsg-cache-6%\n\n```","slug":"iptables-count","updated":"2019-10-21T06:57:42.886Z","photos":[],"link":"","_id":"ck42dyicz001tu9ur7bv6ouxw","content":"<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">两个参数：</span><br><span class=\"line\">  --verbose\t-v\t\tverbose mode</span><br><span class=\"line\">  --zero    -Z [chain [rulenum]]  Zero counters <span class=\"keyword\">in</span> chain <span class=\"keyword\">or</span> all chains</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>% sudo iptables -nL -v -t nat</span><br><span class=\"line\">Chain PREROUTING (policy ACCEPT <span class=\"number\">50741</span> packets, <span class=\"number\">2370</span>K bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\">  <span class=\"number\">436</span> <span class=\"number\">22672</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6379</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.82</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6380</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6381</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6381</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6382</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6382</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6383</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6383</span></span><br><span class=\"line\"></span><br><span class=\"line\">Chain INPUT (policy ACCEPT <span class=\"number\">18988</span> packets, <span class=\"number\">1082</span>K bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain OUTPUT (policy ACCEPT <span class=\"number\">10532</span> packets, <span class=\"number\">549</span>K bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain POSTROUTING (policy ACCEPT <span class=\"number\">0</span> packets, <span class=\"number\">0</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"><span class=\"number\">10968</span>  <span class=\"number\">572</span>K MASQUERADE  all  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>% sudo iptables -Z -t nat</span><br><span class=\"line\"></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>% sudo iptables -nL -v -t nat</span><br><span class=\"line\">Chain PREROUTING (policy ACCEPT <span class=\"number\">12</span> packets, <span class=\"number\">624</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\">    <span class=\"number\">1</span>    <span class=\"number\">52</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6379</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.82</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6380</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6381</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6381</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6382</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6382</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6383</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6383</span></span><br><span class=\"line\"></span><br><span class=\"line\">Chain INPUT (policy ACCEPT <span class=\"number\">12</span> packets, <span class=\"number\">624</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain OUTPUT (policy ACCEPT <span class=\"number\">6</span> packets, <span class=\"number\">312</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain POSTROUTING (policy ACCEPT <span class=\"number\">0</span> packets, <span class=\"number\">0</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\">    <span class=\"number\">7</span>   <span class=\"number\">364</span> MASQUERADE  all  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>%</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">两个参数：</span><br><span class=\"line\">  --verbose\t-v\t\tverbose mode</span><br><span class=\"line\">  --zero    -Z [chain [rulenum]]  Zero counters <span class=\"keyword\">in</span> chain <span class=\"keyword\">or</span> all chains</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>% sudo iptables -nL -v -t nat</span><br><span class=\"line\">Chain PREROUTING (policy ACCEPT <span class=\"number\">50741</span> packets, <span class=\"number\">2370</span>K bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\">  <span class=\"number\">436</span> <span class=\"number\">22672</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6379</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.82</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6380</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6381</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6381</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6382</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6382</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6383</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6383</span></span><br><span class=\"line\"></span><br><span class=\"line\">Chain INPUT (policy ACCEPT <span class=\"number\">18988</span> packets, <span class=\"number\">1082</span>K bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain OUTPUT (policy ACCEPT <span class=\"number\">10532</span> packets, <span class=\"number\">549</span>K bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain POSTROUTING (policy ACCEPT <span class=\"number\">0</span> packets, <span class=\"number\">0</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"><span class=\"number\">10968</span>  <span class=\"number\">572</span>K MASQUERADE  all  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>% sudo iptables -Z -t nat</span><br><span class=\"line\"></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>% sudo iptables -nL -v -t nat</span><br><span class=\"line\">Chain PREROUTING (policy ACCEPT <span class=\"number\">12</span> packets, <span class=\"number\">624</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\">    <span class=\"number\">1</span>    <span class=\"number\">52</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6379</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.82</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6380</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6381</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6381</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6382</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6382</span></span><br><span class=\"line\">    <span class=\"number\">0</span>     <span class=\"number\">0</span> DNAT       tcp  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.226</span>       tcp dpt:<span class=\"number\">6383</span> to:<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.81</span>:<span class=\"number\">6383</span></span><br><span class=\"line\"></span><br><span class=\"line\">Chain INPUT (policy ACCEPT <span class=\"number\">12</span> packets, <span class=\"number\">624</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain OUTPUT (policy ACCEPT <span class=\"number\">6</span> packets, <span class=\"number\">312</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\"></span><br><span class=\"line\">Chain POSTROUTING (policy ACCEPT <span class=\"number\">0</span> packets, <span class=\"number\">0</span> bytes)</span><br><span class=\"line\"> pkts bytes target     prot opt <span class=\"keyword\">in</span>     <span class=\"keyword\">out</span>     source               destination</span><br><span class=\"line\">    <span class=\"number\">7</span>   <span class=\"number\">364</span> MASQUERADE  all  --  *      *       <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span>            <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">0</span></span><br><span class=\"line\">p-hsg-cache<span class=\"number\">-6</span>%</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"ISCSI存储网络构建","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T20:02:11.000Z","_content":"iscsi的结构和san的结构\n\n[![san](/images/san.png)](http://www.xiemx.com/wp-content/uploads/2016/02/san.png)\n\n#### iSCSI 通信端\n* 发起 I/O 请求的启动设备(Initiator)\n* 响应请求并执行实际 I/O 操作的目标设备(Target)\n\n#### iSCSI工作过程\n\n* target端导出共享设备\n* initiator端发现设备\n* initiator端导入设备\n* initiator端分区、格式化、挂接设备\n\n#### iSCSI实现套件\n服务端（target）：scsi-target-utils软件包\n客户端（initiator）：iscsi-initiator-utils软件包\n\n### 部署过程：\n```\nyum insitall scsi-target-utils\nyum insitall iscsi-initiator-utils\n```\n服务器端导出共享设备： 配置文件如下\n```\n[root@rhel6 ~]# grep -v '#\\|^$' /etc/tgt/targets.conf\ndefault-driver iscsi\n<target iqn.2015-10.com.example-f30:vdb1-1g>\n  backing-store /dev/vdb1\n</target>\n```\n 启动tgtd服务\n```shell\n[root@rhel6 ~]# /etc/init.d/tgtd start\nStarting SCSI target daemon:                [ OK ]\n\n ```\n\n查看客户端本地有无/dev/sda设备\n```shell\n[root@rhel6 ~]# ll /dev/sda\nls: cannot access /dev/sda: No such file or directory\n```\n搜索target端的共享设备\n```shell\n[root@rhel6 ~]# iscsiadm -m discovery -t st -p 172.25.30.10\n172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g\n```\n 导入target端的共享设备\n```shell\n[root@rhel6 ~]# iscsiadm -m node -l\nLogging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)\nLogin to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.\n```\n 查看本地/dev/sda设备\n```shell\n[root@rhel6 ~]# ll /dev/sda\nbrw-rw----. 1 root disk 8, 0 Jan 14 14:51 /dev/sda\n```\n卸载导入的设备\n```shell\n[root@rhel6 nodes]# ll /dev/sd*\nbrw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda\nbrw-rw----. 1 root disk 8, 16 Jan 14 15:35 /dev/sdb\nbrw-rw----. 1 root disk 8, 17 Jan 14 15:35 /dev/sdb1\n\n[root@rhel6 nodes]# iscsiadm -m node -T iqn.2016-01-14.com.example.node4-f24:vdb1-1G -u\nLogging out of session [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260]\nLogout of [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260] successful.\n\n[root@rhel6 nodes]# ll /dev/sd*\nbrw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda\n```\n### 配置iSCSI的acl和验证\n\n在target主配置文件中添加如下两行\n```\n[root@rhel6 ~]# grep -v '#\\|^$' /etc/tgt/targets.conf\ndefault-driver iscsi\n<target iqn.2015-10.com.example-f30:vdb1-1g>\n  backing-store /dev/vdb1\n</target>\n\n<target iqn.2015-10.com.example-f30:vdb2-2g>\n  backing-store /dev/vdb2\n  initiator-address 172.25.30.0/24\n  incominguser xiemx uplooking\n</target>\n```\n重新加载配置文件\n```\n/etc/init.d/tgtd   reload\n/etc/init.d/tgtd   force-reload\n```\n \n\n查看配置导出的设备信息\n```shell\n[root@rhel6 ~]# tgtadm --lld iscsi --mode target --op show\nTarget 1: iqn.2015-10.com.example-f30:vdb1-1g\n  System information:\n​    Driver: iscsi\n​    State: ready\n  I_T nexus information:\n  LUN information:\n​    LUN: 0\n​      Type: controller\n​      SCSI ID: IET   00010000\n​      SCSI SN: beaf10\n​      Size: 0 MB, Block size: 1\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: null\n​      Backing store path: None\n​      Backing store flags:\n​    LUN: 1\n​      Type: disk\n​      SCSI ID: IET   00010001\n​      SCSI SN: beaf11\n​      Size: 1074 MB, Block size: 512\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: rdwr\n​      Backing store path: /dev/vdb1\n​      Backing store flags:\n  Account information:\n  ACL information:\n​    ALL\n Target 2: iqn.2015-10.com.example-f30:vdb2-2g\n  System information:\n​     Driver: iscsi\n​     State: ready\n  I_T nexus information:\n  LUN information:\n​    LUN: 0\n​      Type: controller\n​      SCSI ID: IET   00020000\n​      SCSI SN: beaf20\n​      Size: 0 MB, Block size: 1\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: null\n​      Backing store path: None\n​      Backing store flags:\n​    LUN: 1\n​      Type: disk\n​      SCSI ID: IET   00020001\n​      SCSI SN: beaf21\n​      Size: 2148 MB, Block size: 512\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: rdwr\n​      Backing store path: /dev/vdb2\n​      Backing store flags:\n  Account information:\n​     xiemx\n  ACL information:\n​    172.25.30.0/24\n\n```\n\ninitiator端开启CHAP验证并配置用户密码\n\n```shell\n[root@rhel6 ~]grep -v '^#\\|^$' /etc/iscsi/iscsid.conf\niscsid.startup = /etc/rc.d/init.d/iscsid force-start\nnode.startup = automatic\nnode.leading_login = No\nnode.session.auth.authmethod = CHAP\nnode.session.auth.username = xiemx\nnode.session.auth.password = uplooking\nnode.session.timeo.replacement_timeout = 120\nnode.conn[0].timeo.login_timeout = 15\nnode.conn[0].timeo.logout_timeout = 15\nnode.conn[0].timeo.noop_out_interval = 5\nnode.conn[0].timeo.noop_out_timeout = 5\nnode.session.err_timeo.abort_timeout = 15\nnode.session.err_timeo.lu_reset_timeout = 30\nnode.session.err_timeo.tgt_reset_timeout = 30\nnode.session.initial_login_retry_max = 8\nnode.session.cmds_max = 128\nnode.session.queue_depth = 32\nnode.session.xmit_thread_priority = -20\nnode.session.iscsi.InitialR2T = No\nnode.session.iscsi.ImmediateData = Yes\nnode.session.iscsi.FirstBurstLength = 262144\nnode.session.iscsi.MaxBurstLength = 16776192\nnode.conn[0].iscsi.MaxRecvDataSegmentLength = 262144\nnode.conn[0].iscsi.MaxXmitDataSegmentLength = 0\ndiscovery.sendtargets.iscsi.MaxRecvDataSegmentLength = 32768\nnode.conn[0].iscsi.HeaderDigest = None\nnode.session.nr_sessions = 1\nnode.session.iscsi.FastAbort = Yes\n\n```\n\ninitiator重新发现并导入共享设备\n\n```shell\n[root@rhel6 nodes]# iscsiadm -m discovery -t st -p 172.25.30.10\n172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g\n172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb2-2g\n\n[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb1-1g -l\nLogging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)\nLogin to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.\n\n[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb2-2g -l\nLogging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] (multiple)\nLogin to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] successful.\n\n[root@rhel6 nodes]# ll /dev/sd*\nbrw-rw----. 1 root disk 8, 16 Jan 14 16:04 /dev/sdb\nbrw-rw----. 1 root disk 8, 32 Jan 14 16:04 /dev/sdc\n```","source":"_posts/iscsi-store.md","raw":"---\nlayout: post\ntitle: ISCSI存储网络构建\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 04:02:11\ntags: [ iscsi, linux, store ]\ncategories:\n    - linux\n---\niscsi的结构和san的结构\n\n[![san](/images/san.png)](http://www.xiemx.com/wp-content/uploads/2016/02/san.png)\n\n#### iSCSI 通信端\n* 发起 I/O 请求的启动设备(Initiator)\n* 响应请求并执行实际 I/O 操作的目标设备(Target)\n\n#### iSCSI工作过程\n\n* target端导出共享设备\n* initiator端发现设备\n* initiator端导入设备\n* initiator端分区、格式化、挂接设备\n\n#### iSCSI实现套件\n服务端（target）：scsi-target-utils软件包\n客户端（initiator）：iscsi-initiator-utils软件包\n\n### 部署过程：\n```\nyum insitall scsi-target-utils\nyum insitall iscsi-initiator-utils\n```\n服务器端导出共享设备： 配置文件如下\n```\n[root@rhel6 ~]# grep -v '#\\|^$' /etc/tgt/targets.conf\ndefault-driver iscsi\n<target iqn.2015-10.com.example-f30:vdb1-1g>\n  backing-store /dev/vdb1\n</target>\n```\n 启动tgtd服务\n```shell\n[root@rhel6 ~]# /etc/init.d/tgtd start\nStarting SCSI target daemon:                [ OK ]\n\n ```\n\n查看客户端本地有无/dev/sda设备\n```shell\n[root@rhel6 ~]# ll /dev/sda\nls: cannot access /dev/sda: No such file or directory\n```\n搜索target端的共享设备\n```shell\n[root@rhel6 ~]# iscsiadm -m discovery -t st -p 172.25.30.10\n172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g\n```\n 导入target端的共享设备\n```shell\n[root@rhel6 ~]# iscsiadm -m node -l\nLogging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)\nLogin to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.\n```\n 查看本地/dev/sda设备\n```shell\n[root@rhel6 ~]# ll /dev/sda\nbrw-rw----. 1 root disk 8, 0 Jan 14 14:51 /dev/sda\n```\n卸载导入的设备\n```shell\n[root@rhel6 nodes]# ll /dev/sd*\nbrw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda\nbrw-rw----. 1 root disk 8, 16 Jan 14 15:35 /dev/sdb\nbrw-rw----. 1 root disk 8, 17 Jan 14 15:35 /dev/sdb1\n\n[root@rhel6 nodes]# iscsiadm -m node -T iqn.2016-01-14.com.example.node4-f24:vdb1-1G -u\nLogging out of session [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260]\nLogout of [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260] successful.\n\n[root@rhel6 nodes]# ll /dev/sd*\nbrw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda\n```\n### 配置iSCSI的acl和验证\n\n在target主配置文件中添加如下两行\n```\n[root@rhel6 ~]# grep -v '#\\|^$' /etc/tgt/targets.conf\ndefault-driver iscsi\n<target iqn.2015-10.com.example-f30:vdb1-1g>\n  backing-store /dev/vdb1\n</target>\n\n<target iqn.2015-10.com.example-f30:vdb2-2g>\n  backing-store /dev/vdb2\n  initiator-address 172.25.30.0/24\n  incominguser xiemx uplooking\n</target>\n```\n重新加载配置文件\n```\n/etc/init.d/tgtd   reload\n/etc/init.d/tgtd   force-reload\n```\n \n\n查看配置导出的设备信息\n```shell\n[root@rhel6 ~]# tgtadm --lld iscsi --mode target --op show\nTarget 1: iqn.2015-10.com.example-f30:vdb1-1g\n  System information:\n​    Driver: iscsi\n​    State: ready\n  I_T nexus information:\n  LUN information:\n​    LUN: 0\n​      Type: controller\n​      SCSI ID: IET   00010000\n​      SCSI SN: beaf10\n​      Size: 0 MB, Block size: 1\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: null\n​      Backing store path: None\n​      Backing store flags:\n​    LUN: 1\n​      Type: disk\n​      SCSI ID: IET   00010001\n​      SCSI SN: beaf11\n​      Size: 1074 MB, Block size: 512\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: rdwr\n​      Backing store path: /dev/vdb1\n​      Backing store flags:\n  Account information:\n  ACL information:\n​    ALL\n Target 2: iqn.2015-10.com.example-f30:vdb2-2g\n  System information:\n​     Driver: iscsi\n​     State: ready\n  I_T nexus information:\n  LUN information:\n​    LUN: 0\n​      Type: controller\n​      SCSI ID: IET   00020000\n​      SCSI SN: beaf20\n​      Size: 0 MB, Block size: 1\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: null\n​      Backing store path: None\n​      Backing store flags:\n​    LUN: 1\n​      Type: disk\n​      SCSI ID: IET   00020001\n​      SCSI SN: beaf21\n​      Size: 2148 MB, Block size: 512\n​      Online: Yes\n​      Removable media: No\n​      Prevent removal: No\n​      Readonly: No\n​      Backing store type: rdwr\n​      Backing store path: /dev/vdb2\n​      Backing store flags:\n  Account information:\n​     xiemx\n  ACL information:\n​    172.25.30.0/24\n\n```\n\ninitiator端开启CHAP验证并配置用户密码\n\n```shell\n[root@rhel6 ~]grep -v '^#\\|^$' /etc/iscsi/iscsid.conf\niscsid.startup = /etc/rc.d/init.d/iscsid force-start\nnode.startup = automatic\nnode.leading_login = No\nnode.session.auth.authmethod = CHAP\nnode.session.auth.username = xiemx\nnode.session.auth.password = uplooking\nnode.session.timeo.replacement_timeout = 120\nnode.conn[0].timeo.login_timeout = 15\nnode.conn[0].timeo.logout_timeout = 15\nnode.conn[0].timeo.noop_out_interval = 5\nnode.conn[0].timeo.noop_out_timeout = 5\nnode.session.err_timeo.abort_timeout = 15\nnode.session.err_timeo.lu_reset_timeout = 30\nnode.session.err_timeo.tgt_reset_timeout = 30\nnode.session.initial_login_retry_max = 8\nnode.session.cmds_max = 128\nnode.session.queue_depth = 32\nnode.session.xmit_thread_priority = -20\nnode.session.iscsi.InitialR2T = No\nnode.session.iscsi.ImmediateData = Yes\nnode.session.iscsi.FirstBurstLength = 262144\nnode.session.iscsi.MaxBurstLength = 16776192\nnode.conn[0].iscsi.MaxRecvDataSegmentLength = 262144\nnode.conn[0].iscsi.MaxXmitDataSegmentLength = 0\ndiscovery.sendtargets.iscsi.MaxRecvDataSegmentLength = 32768\nnode.conn[0].iscsi.HeaderDigest = None\nnode.session.nr_sessions = 1\nnode.session.iscsi.FastAbort = Yes\n\n```\n\ninitiator重新发现并导入共享设备\n\n```shell\n[root@rhel6 nodes]# iscsiadm -m discovery -t st -p 172.25.30.10\n172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g\n172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb2-2g\n\n[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb1-1g -l\nLogging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)\nLogin to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.\n\n[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb2-2g -l\nLogging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] (multiple)\nLogin to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] successful.\n\n[root@rhel6 nodes]# ll /dev/sd*\nbrw-rw----. 1 root disk 8, 16 Jan 14 16:04 /dev/sdb\nbrw-rw----. 1 root disk 8, 32 Jan 14 16:04 /dev/sdc\n```","slug":"iscsi-store","updated":"2019-10-21T06:57:42.442Z","photos":[],"link":"","_id":"ck42dyid0001xu9ura4dhdhr0","content":"<p>iscsi的结构和san的结构</p>\n<p><a href=\"http://www.xiemx.com/wp-content/uploads/2016/02/san.png\"><img src=\"/images/san.png\" alt=\"san\"></a></p>\n<h4 id=\"iSCSI-通信端\"><a href=\"#iSCSI-通信端\" class=\"headerlink\" title=\"iSCSI 通信端\"></a>iSCSI 通信端</h4><ul>\n<li>发起 I/O 请求的启动设备(Initiator)</li>\n<li>响应请求并执行实际 I/O 操作的目标设备(Target)</li>\n</ul>\n<h4 id=\"iSCSI工作过程\"><a href=\"#iSCSI工作过程\" class=\"headerlink\" title=\"iSCSI工作过程\"></a>iSCSI工作过程</h4><ul>\n<li>target端导出共享设备</li>\n<li>initiator端发现设备</li>\n<li>initiator端导入设备</li>\n<li>initiator端分区、格式化、挂接设备</li>\n</ul>\n<h4 id=\"iSCSI实现套件\"><a href=\"#iSCSI实现套件\" class=\"headerlink\" title=\"iSCSI实现套件\"></a>iSCSI实现套件</h4><p>服务端（target）：scsi-target-utils软件包<br>客户端（initiator）：iscsi-initiator-utils软件包</p>\n<h3 id=\"部署过程：\"><a href=\"#部署过程：\" class=\"headerlink\" title=\"部署过程：\"></a>部署过程：</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">insitall </span><span class=\"keyword\">scsi-target-utils</span></span><br><span class=\"line\"><span class=\"keyword\">yum </span><span class=\"keyword\">insitall </span>iscsi-initiator-utils</span><br></pre></td></tr></table></figure>\n\n<p>服务器端导出共享设备： 配置文件如下</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root<span class=\"title\">@rhel6</span> ~]# grep -v '#\\|^$' /etc/tgt/targets.conf</span><br><span class=\"line\"><span class=\"keyword\">default</span>-driver iscsi</span><br><span class=\"line\">&lt;<span class=\"keyword\">target</span> iqn.<span class=\"number\">2015</span><span class=\"number\">-10</span>.com.example-f<span class=\"number\">30</span>:vdb<span class=\"number\">1</span><span class=\"number\">-1</span>g&gt;</span><br><span class=\"line\">  backing-<span class=\"keyword\">store</span> /dev/vdb<span class=\"number\">1</span></span><br><span class=\"line\">&lt;/<span class=\"keyword\">target</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p> 启动tgtd服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# /etc/init.d/tgtd start</span><br><span class=\"line\">Starting SCSI target daemon:                [ OK ]</span><br></pre></td></tr></table></figure>\n\n<p>查看客户端本地有无/dev/sda设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# ll /dev/sda</span><br><span class=\"line\">ls: cannot access /dev/sda: No such file or directory</span><br></pre></td></tr></table></figure>\n\n<p>搜索target端的共享设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# iscsiadm -m discovery -t st -p 172.25.30.10</span><br><span class=\"line\">172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g</span><br></pre></td></tr></table></figure>\n\n<p> 导入target端的共享设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# iscsiadm -m node -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.</span><br></pre></td></tr></table></figure>\n\n<p> 查看本地/dev/sda设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# ll /dev/sda</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 0 Jan 14 14:51 /dev/sda</span><br></pre></td></tr></table></figure>\n\n<p>卸载导入的设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 nodes]# ll /dev/sd*</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 16 Jan 14 15:35 /dev/sdb</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 17 Jan 14 15:35 /dev/sdb1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m node -T iqn.2016-01-14.com.example.node4-f24:vdb1-1G -u</span><br><span class=\"line\">Logging out of session [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260]</span><br><span class=\"line\">Logout of [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# ll /dev/sd*</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置iSCSI的acl和验证\"><a href=\"#配置iSCSI的acl和验证\" class=\"headerlink\" title=\"配置iSCSI的acl和验证\"></a>配置iSCSI的acl和验证</h3><p>在target主配置文件中添加如下两行</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>rhel6 ~]# grep -v <span class=\"string\">'#\\|^$'</span> /etc/tgt/targets.conf</span><br><span class=\"line\"><span class=\"keyword\">default</span>-driver iscsi</span><br><span class=\"line\">&lt;target iqn<span class=\"number\">.2015</span><span class=\"number\">-10.</span>com.example-f30:vdb1<span class=\"number\">-1</span>g&gt;</span><br><span class=\"line\">  backing-store /dev/vdb1</span><br><span class=\"line\">&lt;/target&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;target iqn<span class=\"number\">.2015</span><span class=\"number\">-10.</span>com.example-f30:vdb2<span class=\"number\">-2</span>g&gt;</span><br><span class=\"line\">  backing-store /dev/vdb2</span><br><span class=\"line\">  initiator-address <span class=\"number\">172.25</span><span class=\"number\">.30</span><span class=\"number\">.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\">  incominguser xiemx uplooking</span><br><span class=\"line\">&lt;/target&gt;</span><br></pre></td></tr></table></figure>\n\n<p>重新加载配置文件</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/etc/init.d/tgtd</span>   <span class=\"keyword\">reload</span></span><br><span class=\"line\"><span class=\"string\">/etc/init.d/tgtd</span>   force-reload</span><br></pre></td></tr></table></figure>\n\n\n\n<p>查看配置导出的设备信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# tgtadm --lld iscsi --mode target --op show</span><br><span class=\"line\">Target 1: iqn.2015-10.com.example-f30:vdb1-1g</span><br><span class=\"line\">  System information:</span><br><span class=\"line\">​    Driver: iscsi</span><br><span class=\"line\">​    State: ready</span><br><span class=\"line\">  I_T nexus information:</span><br><span class=\"line\">  LUN information:</span><br><span class=\"line\">​    LUN: 0</span><br><span class=\"line\">​      Type: controller</span><br><span class=\"line\">​      SCSI ID: IET   00010000</span><br><span class=\"line\">​      SCSI SN: beaf10</span><br><span class=\"line\">​      Size: 0 MB, Block size: 1</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: null</span><br><span class=\"line\">​      Backing store path: None</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">​    LUN: 1</span><br><span class=\"line\">​      Type: disk</span><br><span class=\"line\">​      SCSI ID: IET   00010001</span><br><span class=\"line\">​      SCSI SN: beaf11</span><br><span class=\"line\">​      Size: 1074 MB, Block size: 512</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: rdwr</span><br><span class=\"line\">​      Backing store path: /dev/vdb1</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">  Account information:</span><br><span class=\"line\">  ACL information:</span><br><span class=\"line\">​    ALL</span><br><span class=\"line\"> Target 2: iqn.2015-10.com.example-f30:vdb2-2g</span><br><span class=\"line\">  System information:</span><br><span class=\"line\">​     Driver: iscsi</span><br><span class=\"line\">​     State: ready</span><br><span class=\"line\">  I_T nexus information:</span><br><span class=\"line\">  LUN information:</span><br><span class=\"line\">​    LUN: 0</span><br><span class=\"line\">​      Type: controller</span><br><span class=\"line\">​      SCSI ID: IET   00020000</span><br><span class=\"line\">​      SCSI SN: beaf20</span><br><span class=\"line\">​      Size: 0 MB, Block size: 1</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: null</span><br><span class=\"line\">​      Backing store path: None</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">​    LUN: 1</span><br><span class=\"line\">​      Type: disk</span><br><span class=\"line\">​      SCSI ID: IET   00020001</span><br><span class=\"line\">​      SCSI SN: beaf21</span><br><span class=\"line\">​      Size: 2148 MB, Block size: 512</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: rdwr</span><br><span class=\"line\">​      Backing store path: /dev/vdb2</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">  Account information:</span><br><span class=\"line\">​     xiemx</span><br><span class=\"line\">  ACL information:</span><br><span class=\"line\">​    172.25.30.0/24</span><br></pre></td></tr></table></figure>\n\n<p>initiator端开启CHAP验证并配置用户密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]grep -v '^#\\|^$' /etc/iscsi/iscsid.conf</span><br><span class=\"line\">iscsid.startup = /etc/rc.d/init.d/iscsid force-start</span><br><span class=\"line\">node.startup = automatic</span><br><span class=\"line\">node.leading_login = No</span><br><span class=\"line\">node.session.auth.authmethod = CHAP</span><br><span class=\"line\">node.session.auth.username = xiemx</span><br><span class=\"line\">node.session.auth.password = uplooking</span><br><span class=\"line\">node.session.timeo.replacement_timeout = 120</span><br><span class=\"line\">node.conn[0].timeo.login_timeout = 15</span><br><span class=\"line\">node.conn[0].timeo.logout_timeout = 15</span><br><span class=\"line\">node.conn[0].timeo.noop_out_interval = 5</span><br><span class=\"line\">node.conn[0].timeo.noop_out_timeout = 5</span><br><span class=\"line\">node.session.err_timeo.abort_timeout = 15</span><br><span class=\"line\">node.session.err_timeo.lu_reset_timeout = 30</span><br><span class=\"line\">node.session.err_timeo.tgt_reset_timeout = 30</span><br><span class=\"line\">node.session.initial_login_retry_max = 8</span><br><span class=\"line\">node.session.cmds_max = 128</span><br><span class=\"line\">node.session.queue_depth = 32</span><br><span class=\"line\">node.session.xmit_thread_priority = -20</span><br><span class=\"line\">node.session.iscsi.InitialR2T = No</span><br><span class=\"line\">node.session.iscsi.ImmediateData = Yes</span><br><span class=\"line\">node.session.iscsi.FirstBurstLength = 262144</span><br><span class=\"line\">node.session.iscsi.MaxBurstLength = 16776192</span><br><span class=\"line\">node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144</span><br><span class=\"line\">node.conn[0].iscsi.MaxXmitDataSegmentLength = 0</span><br><span class=\"line\">discovery.sendtargets.iscsi.MaxRecvDataSegmentLength = 32768</span><br><span class=\"line\">node.conn[0].iscsi.HeaderDigest = None</span><br><span class=\"line\">node.session.nr_sessions = 1</span><br><span class=\"line\">node.session.iscsi.FastAbort = Yes</span><br></pre></td></tr></table></figure>\n\n<p>initiator重新发现并导入共享设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m discovery -t st -p 172.25.30.10</span><br><span class=\"line\">172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g</span><br><span class=\"line\">172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb2-2g</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb1-1g -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb2-2g -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# ll /dev/sd*</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 16 Jan 14 16:04 /dev/sdb</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 32 Jan 14 16:04 /dev/sdc</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>iscsi的结构和san的结构</p>\n<p><a href=\"http://www.xiemx.com/wp-content/uploads/2016/02/san.png\"><img src=\"/images/san.png\" alt=\"san\"></a></p>\n<h4 id=\"iSCSI-通信端\"><a href=\"#iSCSI-通信端\" class=\"headerlink\" title=\"iSCSI 通信端\"></a>iSCSI 通信端</h4><ul>\n<li>发起 I/O 请求的启动设备(Initiator)</li>\n<li>响应请求并执行实际 I/O 操作的目标设备(Target)</li>\n</ul>\n<h4 id=\"iSCSI工作过程\"><a href=\"#iSCSI工作过程\" class=\"headerlink\" title=\"iSCSI工作过程\"></a>iSCSI工作过程</h4><ul>\n<li>target端导出共享设备</li>\n<li>initiator端发现设备</li>\n<li>initiator端导入设备</li>\n<li>initiator端分区、格式化、挂接设备</li>\n</ul>\n<h4 id=\"iSCSI实现套件\"><a href=\"#iSCSI实现套件\" class=\"headerlink\" title=\"iSCSI实现套件\"></a>iSCSI实现套件</h4><p>服务端（target）：scsi-target-utils软件包<br>客户端（initiator）：iscsi-initiator-utils软件包</p>\n<h3 id=\"部署过程：\"><a href=\"#部署过程：\" class=\"headerlink\" title=\"部署过程：\"></a>部署过程：</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">insitall </span><span class=\"keyword\">scsi-target-utils</span></span><br><span class=\"line\"><span class=\"keyword\">yum </span><span class=\"keyword\">insitall </span>iscsi-initiator-utils</span><br></pre></td></tr></table></figure>\n\n<p>服务器端导出共享设备： 配置文件如下</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root<span class=\"title\">@rhel6</span> ~]# grep -v '#\\|^$' /etc/tgt/targets.conf</span><br><span class=\"line\"><span class=\"keyword\">default</span>-driver iscsi</span><br><span class=\"line\">&lt;<span class=\"keyword\">target</span> iqn.<span class=\"number\">2015</span><span class=\"number\">-10</span>.com.example-f<span class=\"number\">30</span>:vdb<span class=\"number\">1</span><span class=\"number\">-1</span>g&gt;</span><br><span class=\"line\">  backing-<span class=\"keyword\">store</span> /dev/vdb<span class=\"number\">1</span></span><br><span class=\"line\">&lt;/<span class=\"keyword\">target</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<p> 启动tgtd服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# /etc/init.d/tgtd start</span><br><span class=\"line\">Starting SCSI target daemon:                [ OK ]</span><br></pre></td></tr></table></figure>\n\n<p>查看客户端本地有无/dev/sda设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# ll /dev/sda</span><br><span class=\"line\">ls: cannot access /dev/sda: No such file or directory</span><br></pre></td></tr></table></figure>\n\n<p>搜索target端的共享设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# iscsiadm -m discovery -t st -p 172.25.30.10</span><br><span class=\"line\">172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g</span><br></pre></td></tr></table></figure>\n\n<p> 导入target端的共享设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# iscsiadm -m node -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.</span><br></pre></td></tr></table></figure>\n\n<p> 查看本地/dev/sda设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# ll /dev/sda</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 0 Jan 14 14:51 /dev/sda</span><br></pre></td></tr></table></figure>\n\n<p>卸载导入的设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 nodes]# ll /dev/sd*</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 16 Jan 14 15:35 /dev/sdb</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 17 Jan 14 15:35 /dev/sdb1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m node -T iqn.2016-01-14.com.example.node4-f24:vdb1-1G -u</span><br><span class=\"line\">Logging out of session [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260]</span><br><span class=\"line\">Logout of [sid: 2, target: iqn.2016-01-14.com.example.node4-f24:vdb1-1G, portal: 172.25.24.13,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# ll /dev/sd*</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 0 Jan 14 14:53 /dev/sda</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置iSCSI的acl和验证\"><a href=\"#配置iSCSI的acl和验证\" class=\"headerlink\" title=\"配置iSCSI的acl和验证\"></a>配置iSCSI的acl和验证</h3><p>在target主配置文件中添加如下两行</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>rhel6 ~]# grep -v <span class=\"string\">'#\\|^$'</span> /etc/tgt/targets.conf</span><br><span class=\"line\"><span class=\"keyword\">default</span>-driver iscsi</span><br><span class=\"line\">&lt;target iqn<span class=\"number\">.2015</span><span class=\"number\">-10.</span>com.example-f30:vdb1<span class=\"number\">-1</span>g&gt;</span><br><span class=\"line\">  backing-store /dev/vdb1</span><br><span class=\"line\">&lt;/target&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;target iqn<span class=\"number\">.2015</span><span class=\"number\">-10.</span>com.example-f30:vdb2<span class=\"number\">-2</span>g&gt;</span><br><span class=\"line\">  backing-store /dev/vdb2</span><br><span class=\"line\">  initiator-address <span class=\"number\">172.25</span><span class=\"number\">.30</span><span class=\"number\">.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\">  incominguser xiemx uplooking</span><br><span class=\"line\">&lt;/target&gt;</span><br></pre></td></tr></table></figure>\n\n<p>重新加载配置文件</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">/etc/init.d/tgtd</span>   <span class=\"keyword\">reload</span></span><br><span class=\"line\"><span class=\"string\">/etc/init.d/tgtd</span>   force-reload</span><br></pre></td></tr></table></figure>\n\n\n\n<p>查看配置导出的设备信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# tgtadm --lld iscsi --mode target --op show</span><br><span class=\"line\">Target 1: iqn.2015-10.com.example-f30:vdb1-1g</span><br><span class=\"line\">  System information:</span><br><span class=\"line\">​    Driver: iscsi</span><br><span class=\"line\">​    State: ready</span><br><span class=\"line\">  I_T nexus information:</span><br><span class=\"line\">  LUN information:</span><br><span class=\"line\">​    LUN: 0</span><br><span class=\"line\">​      Type: controller</span><br><span class=\"line\">​      SCSI ID: IET   00010000</span><br><span class=\"line\">​      SCSI SN: beaf10</span><br><span class=\"line\">​      Size: 0 MB, Block size: 1</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: null</span><br><span class=\"line\">​      Backing store path: None</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">​    LUN: 1</span><br><span class=\"line\">​      Type: disk</span><br><span class=\"line\">​      SCSI ID: IET   00010001</span><br><span class=\"line\">​      SCSI SN: beaf11</span><br><span class=\"line\">​      Size: 1074 MB, Block size: 512</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: rdwr</span><br><span class=\"line\">​      Backing store path: /dev/vdb1</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">  Account information:</span><br><span class=\"line\">  ACL information:</span><br><span class=\"line\">​    ALL</span><br><span class=\"line\"> Target 2: iqn.2015-10.com.example-f30:vdb2-2g</span><br><span class=\"line\">  System information:</span><br><span class=\"line\">​     Driver: iscsi</span><br><span class=\"line\">​     State: ready</span><br><span class=\"line\">  I_T nexus information:</span><br><span class=\"line\">  LUN information:</span><br><span class=\"line\">​    LUN: 0</span><br><span class=\"line\">​      Type: controller</span><br><span class=\"line\">​      SCSI ID: IET   00020000</span><br><span class=\"line\">​      SCSI SN: beaf20</span><br><span class=\"line\">​      Size: 0 MB, Block size: 1</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: null</span><br><span class=\"line\">​      Backing store path: None</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">​    LUN: 1</span><br><span class=\"line\">​      Type: disk</span><br><span class=\"line\">​      SCSI ID: IET   00020001</span><br><span class=\"line\">​      SCSI SN: beaf21</span><br><span class=\"line\">​      Size: 2148 MB, Block size: 512</span><br><span class=\"line\">​      Online: Yes</span><br><span class=\"line\">​      Removable media: No</span><br><span class=\"line\">​      Prevent removal: No</span><br><span class=\"line\">​      Readonly: No</span><br><span class=\"line\">​      Backing store type: rdwr</span><br><span class=\"line\">​      Backing store path: /dev/vdb2</span><br><span class=\"line\">​      Backing store flags:</span><br><span class=\"line\">  Account information:</span><br><span class=\"line\">​     xiemx</span><br><span class=\"line\">  ACL information:</span><br><span class=\"line\">​    172.25.30.0/24</span><br></pre></td></tr></table></figure>\n\n<p>initiator端开启CHAP验证并配置用户密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]grep -v '^#\\|^$' /etc/iscsi/iscsid.conf</span><br><span class=\"line\">iscsid.startup = /etc/rc.d/init.d/iscsid force-start</span><br><span class=\"line\">node.startup = automatic</span><br><span class=\"line\">node.leading_login = No</span><br><span class=\"line\">node.session.auth.authmethod = CHAP</span><br><span class=\"line\">node.session.auth.username = xiemx</span><br><span class=\"line\">node.session.auth.password = uplooking</span><br><span class=\"line\">node.session.timeo.replacement_timeout = 120</span><br><span class=\"line\">node.conn[0].timeo.login_timeout = 15</span><br><span class=\"line\">node.conn[0].timeo.logout_timeout = 15</span><br><span class=\"line\">node.conn[0].timeo.noop_out_interval = 5</span><br><span class=\"line\">node.conn[0].timeo.noop_out_timeout = 5</span><br><span class=\"line\">node.session.err_timeo.abort_timeout = 15</span><br><span class=\"line\">node.session.err_timeo.lu_reset_timeout = 30</span><br><span class=\"line\">node.session.err_timeo.tgt_reset_timeout = 30</span><br><span class=\"line\">node.session.initial_login_retry_max = 8</span><br><span class=\"line\">node.session.cmds_max = 128</span><br><span class=\"line\">node.session.queue_depth = 32</span><br><span class=\"line\">node.session.xmit_thread_priority = -20</span><br><span class=\"line\">node.session.iscsi.InitialR2T = No</span><br><span class=\"line\">node.session.iscsi.ImmediateData = Yes</span><br><span class=\"line\">node.session.iscsi.FirstBurstLength = 262144</span><br><span class=\"line\">node.session.iscsi.MaxBurstLength = 16776192</span><br><span class=\"line\">node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144</span><br><span class=\"line\">node.conn[0].iscsi.MaxXmitDataSegmentLength = 0</span><br><span class=\"line\">discovery.sendtargets.iscsi.MaxRecvDataSegmentLength = 32768</span><br><span class=\"line\">node.conn[0].iscsi.HeaderDigest = None</span><br><span class=\"line\">node.session.nr_sessions = 1</span><br><span class=\"line\">node.session.iscsi.FastAbort = Yes</span><br></pre></td></tr></table></figure>\n\n<p>initiator重新发现并导入共享设备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m discovery -t st -p 172.25.30.10</span><br><span class=\"line\">172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb1-1g</span><br><span class=\"line\">172.25.30.10:3260,1 iqn.2015-10.com.example-f30:vdb2-2g</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb1-1g -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2015-10.com.example-f30:vdb1-1g, portal: 172.25.30.10,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# iscsiadm -m node -T iqn.2015-10.com.example-f30:vdb2-2g -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2015-10.com.example-f30:vdb2-2g, portal: 172.25.30.10,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 nodes]# ll /dev/sd*</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 16 Jan 14 16:04 /dev/sdb</span><br><span class=\"line\">brw-rw----. 1 root disk 8, 32 Jan 14 16:04 /dev/sdc</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"如何在K8S环境中抓POD的包","published":1,"author":"xiemx","comments":1,"date":"2019-12-12T02:01:04.000Z","_content":"### 如何在K8S环境中抓POD的包\n\n1. kubectl get pod -o wide 获取pod所在的node信息\n```shell\n➜  Documents kubectl get pod -o wide \nNAME                                                 READY   STATUS             RESTARTS   AGE   IP             NODE                                              NOMINATED NODE\ninternal-nginx-ingress-controller-7fdf7f457d-bd59z   1/1     Running            0          42m   10.200.1.83    ip-10-200-1-202.ap-northeast-1.compute.internal   <none>\n\n2. kubectl describe pod/podname 获取pod的containid\n```shell\n➜  Documents k get pod -o jsonpath='{.status.containerStatuses[*].containerID}' internal-nginx-ingress-controller-7fdf7f457d-bd59z\ndocker://ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe\n```\n\n3. 登陆node节点，找到container查看eth0网卡的ID\n```shell\n[ec2-user@ip-10-200-1-202 net]$ docker exec -it ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe cat /sys/class/net/eth0/iflink\n88\n```\n\n4. 宿主机上查询对应ID的网卡设备号\n```\n[ec2-user@ip-10-200-1-202 net]$ cd /sys/class/net; for i in $(ls);do echo $i ;grep 88 $i/ifindex;done\neni0143b083c86\neni154a5470c40\neni1c162323f07\neni1d3e2ba2ce1\neni3fbceb3330b\neni457702aeb41\neni45f360a240e\neni50431e3a94f\neni619e29d4bac\neni66339821adf\neni6fe679d6356\neni79708a78f8b\neni7cc26b0b7d2\neni855ca0ba49b\neni8799376f27c\neni90208382a7b\neni909411bbf11\neni94c3d2bb833\nenia14f5f7c3e9\nenib70b44b2399\nenic2ad9523b38 ###容器所属网卡\n88\nenid60e48c6616\nenid8f13b5dd06\nenida858799e91\nenieee4f7696a1\nenif0d5e81d420\neth0\neth1\nlo\n```\n\n5. tcpdump 抓包即可\n```shell\n➜  ssh-keys git:(master) ✗ ssh -F ~/.matrix/jp/ssh.aux.config 10.200.1.202 -l ec2-user \"sudo tcpdump -vvv -i enic2ad9523b38 tcp port 80 -w -\" | wireshark -k -i -\nWarning: Permanently added '10.200.1.4' (ECDSA) to the list of known hosts.\nWarning: Permanently added '10.200.1.202' (ECDSA) to the list of known hosts.\ntcpdump: listening on eni86f5b593a42, link-type EN10MB (Ethernet), capture size 262144 bytes\ntcpdump: pcap_loop: The interface went down\n7408 packets captured\n7408 packets received by filter\n0 packets dropped by kernel\n```","source":"_posts/k8s-tcpdump.md","raw":"---\nlayout: post\ntitle: 如何在K8S环境中抓POD的包\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-12-12 10:01:04\ntags: [ k8s, tcpdump, linux, network]\ncategories:\n    - k8s\n---\n### 如何在K8S环境中抓POD的包\n\n1. kubectl get pod -o wide 获取pod所在的node信息\n```shell\n➜  Documents kubectl get pod -o wide \nNAME                                                 READY   STATUS             RESTARTS   AGE   IP             NODE                                              NOMINATED NODE\ninternal-nginx-ingress-controller-7fdf7f457d-bd59z   1/1     Running            0          42m   10.200.1.83    ip-10-200-1-202.ap-northeast-1.compute.internal   <none>\n\n2. kubectl describe pod/podname 获取pod的containid\n```shell\n➜  Documents k get pod -o jsonpath='{.status.containerStatuses[*].containerID}' internal-nginx-ingress-controller-7fdf7f457d-bd59z\ndocker://ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe\n```\n\n3. 登陆node节点，找到container查看eth0网卡的ID\n```shell\n[ec2-user@ip-10-200-1-202 net]$ docker exec -it ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe cat /sys/class/net/eth0/iflink\n88\n```\n\n4. 宿主机上查询对应ID的网卡设备号\n```\n[ec2-user@ip-10-200-1-202 net]$ cd /sys/class/net; for i in $(ls);do echo $i ;grep 88 $i/ifindex;done\neni0143b083c86\neni154a5470c40\neni1c162323f07\neni1d3e2ba2ce1\neni3fbceb3330b\neni457702aeb41\neni45f360a240e\neni50431e3a94f\neni619e29d4bac\neni66339821adf\neni6fe679d6356\neni79708a78f8b\neni7cc26b0b7d2\neni855ca0ba49b\neni8799376f27c\neni90208382a7b\neni909411bbf11\neni94c3d2bb833\nenia14f5f7c3e9\nenib70b44b2399\nenic2ad9523b38 ###容器所属网卡\n88\nenid60e48c6616\nenid8f13b5dd06\nenida858799e91\nenieee4f7696a1\nenif0d5e81d420\neth0\neth1\nlo\n```\n\n5. tcpdump 抓包即可\n```shell\n➜  ssh-keys git:(master) ✗ ssh -F ~/.matrix/jp/ssh.aux.config 10.200.1.202 -l ec2-user \"sudo tcpdump -vvv -i enic2ad9523b38 tcp port 80 -w -\" | wireshark -k -i -\nWarning: Permanently added '10.200.1.4' (ECDSA) to the list of known hosts.\nWarning: Permanently added '10.200.1.202' (ECDSA) to the list of known hosts.\ntcpdump: listening on eni86f5b593a42, link-type EN10MB (Ethernet), capture size 262144 bytes\ntcpdump: pcap_loop: The interface went down\n7408 packets captured\n7408 packets received by filter\n0 packets dropped by kernel\n```","slug":"k8s-tcpdump","updated":"2019-12-12T07:05:08.737Z","photos":[],"link":"","_id":"ck42dyid20020u9urrxn2hq0e","content":"<h3 id=\"如何在K8S环境中抓POD的包\"><a href=\"#如何在K8S环境中抓POD的包\" class=\"headerlink\" title=\"如何在K8S环境中抓POD的包\"></a>如何在K8S环境中抓POD的包</h3><ol>\n<li><p>kubectl get pod -o wide 获取pod所在的node信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  Documents kubectl get pod -o wide </span><br><span class=\"line\">NAME                                                 READY   STATUS             RESTARTS   AGE   IP             NODE                                              NOMINATED NODE</span><br><span class=\"line\">internal-nginx-ingress-controller-7fdf7f457d-bd59z   1/1     Running            0          42m   10.200.1.83    ip-10-200-1-202.ap-northeast-1.compute.internal   &lt;none&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">2. kubectl describe pod/podname 获取pod的containid</span><br><span class=\"line\">```shell</span><br><span class=\"line\">➜  Documents k get pod -o jsonpath='&#123;.status.containerStatuses[*].containerID&#125;' internal-nginx-ingress-controller-7fdf7f457d-bd59z</span><br><span class=\"line\">docker://ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>登陆node节点，找到container查看eth0网卡的ID</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ec2-user@ip-10-200-1-202 net]$ docker exec -it ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe cat /sys/class/net/eth0/iflink</span><br><span class=\"line\">88</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>宿主机上查询对应ID的网卡设备号</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ec<span class=\"number\">2</span>-user<span class=\"title\">@ip-10-200-1-202</span> net]$ cd /sys/class/net<span class=\"comment\">; for i in $(ls);do echo $i ;grep 88 $i/ifindex;done</span></span><br><span class=\"line\"><span class=\"comment\">eni0143b083c86</span></span><br><span class=\"line\"><span class=\"comment\">eni154a5470c40</span></span><br><span class=\"line\"><span class=\"comment\">eni1c162323f07</span></span><br><span class=\"line\"><span class=\"comment\">eni1d3e2ba2ce1</span></span><br><span class=\"line\"><span class=\"comment\">eni3fbceb3330b</span></span><br><span class=\"line\"><span class=\"comment\">eni457702aeb41</span></span><br><span class=\"line\"><span class=\"comment\">eni45f360a240e</span></span><br><span class=\"line\"><span class=\"comment\">eni50431e3a94f</span></span><br><span class=\"line\"><span class=\"comment\">eni619e29d4bac</span></span><br><span class=\"line\"><span class=\"comment\">eni66339821adf</span></span><br><span class=\"line\"><span class=\"comment\">eni6fe679d6356</span></span><br><span class=\"line\"><span class=\"comment\">eni79708a78f8b</span></span><br><span class=\"line\"><span class=\"comment\">eni7cc26b0b7d2</span></span><br><span class=\"line\"><span class=\"comment\">eni855ca0ba49b</span></span><br><span class=\"line\"><span class=\"comment\">eni8799376f27c</span></span><br><span class=\"line\"><span class=\"comment\">eni90208382a7b</span></span><br><span class=\"line\"><span class=\"comment\">eni909411bbf11</span></span><br><span class=\"line\"><span class=\"comment\">eni94c3d2bb833</span></span><br><span class=\"line\"><span class=\"comment\">enia14f5f7c3e9</span></span><br><span class=\"line\"><span class=\"comment\">enib70b44b2399</span></span><br><span class=\"line\"><span class=\"comment\">enic2ad9523b38 ###容器所属网卡</span></span><br><span class=\"line\"><span class=\"comment\">88</span></span><br><span class=\"line\"><span class=\"comment\">enid60e48c6616</span></span><br><span class=\"line\"><span class=\"comment\">enid8f13b5dd06</span></span><br><span class=\"line\"><span class=\"comment\">enida858799e91</span></span><br><span class=\"line\"><span class=\"comment\">enieee4f7696a1</span></span><br><span class=\"line\"><span class=\"comment\">enif0d5e81d420</span></span><br><span class=\"line\"><span class=\"comment\">eth0</span></span><br><span class=\"line\"><span class=\"comment\">eth1</span></span><br><span class=\"line\"><span class=\"comment\">lo</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>tcpdump 抓包即可</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ssh-keys git:(master) ✗ ssh -F ~/.matrix/jp/ssh.aux.config 10.200.1.202 -l ec2-user \"sudo tcpdump -vvv -i enic2ad9523b38 tcp port 80 -w -\" | wireshark -k -i -</span><br><span class=\"line\">Warning: Permanently added '10.200.1.4' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">Warning: Permanently added '10.200.1.202' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">tcpdump: listening on eni86f5b593a42, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class=\"line\">tcpdump: pcap_loop: The interface went down</span><br><span class=\"line\">7408 packets captured</span><br><span class=\"line\">7408 packets received by filter</span><br><span class=\"line\">0 packets dropped by kernel</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"如何在K8S环境中抓POD的包\"><a href=\"#如何在K8S环境中抓POD的包\" class=\"headerlink\" title=\"如何在K8S环境中抓POD的包\"></a>如何在K8S环境中抓POD的包</h3><ol>\n<li><p>kubectl get pod -o wide 获取pod所在的node信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  Documents kubectl get pod -o wide </span><br><span class=\"line\">NAME                                                 READY   STATUS             RESTARTS   AGE   IP             NODE                                              NOMINATED NODE</span><br><span class=\"line\">internal-nginx-ingress-controller-7fdf7f457d-bd59z   1/1     Running            0          42m   10.200.1.83    ip-10-200-1-202.ap-northeast-1.compute.internal   &lt;none&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">2. kubectl describe pod/podname 获取pod的containid</span><br><span class=\"line\">```shell</span><br><span class=\"line\">➜  Documents k get pod -o jsonpath='&#123;.status.containerStatuses[*].containerID&#125;' internal-nginx-ingress-controller-7fdf7f457d-bd59z</span><br><span class=\"line\">docker://ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>登陆node节点，找到container查看eth0网卡的ID</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ec2-user@ip-10-200-1-202 net]$ docker exec -it ae9a6df60584e797e56cc64d0df02e64d7731a0d852026fab0a76c920c608cbe cat /sys/class/net/eth0/iflink</span><br><span class=\"line\">88</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>宿主机上查询对应ID的网卡设备号</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ec<span class=\"number\">2</span>-user<span class=\"title\">@ip-10-200-1-202</span> net]$ cd /sys/class/net<span class=\"comment\">; for i in $(ls);do echo $i ;grep 88 $i/ifindex;done</span></span><br><span class=\"line\"><span class=\"comment\">eni0143b083c86</span></span><br><span class=\"line\"><span class=\"comment\">eni154a5470c40</span></span><br><span class=\"line\"><span class=\"comment\">eni1c162323f07</span></span><br><span class=\"line\"><span class=\"comment\">eni1d3e2ba2ce1</span></span><br><span class=\"line\"><span class=\"comment\">eni3fbceb3330b</span></span><br><span class=\"line\"><span class=\"comment\">eni457702aeb41</span></span><br><span class=\"line\"><span class=\"comment\">eni45f360a240e</span></span><br><span class=\"line\"><span class=\"comment\">eni50431e3a94f</span></span><br><span class=\"line\"><span class=\"comment\">eni619e29d4bac</span></span><br><span class=\"line\"><span class=\"comment\">eni66339821adf</span></span><br><span class=\"line\"><span class=\"comment\">eni6fe679d6356</span></span><br><span class=\"line\"><span class=\"comment\">eni79708a78f8b</span></span><br><span class=\"line\"><span class=\"comment\">eni7cc26b0b7d2</span></span><br><span class=\"line\"><span class=\"comment\">eni855ca0ba49b</span></span><br><span class=\"line\"><span class=\"comment\">eni8799376f27c</span></span><br><span class=\"line\"><span class=\"comment\">eni90208382a7b</span></span><br><span class=\"line\"><span class=\"comment\">eni909411bbf11</span></span><br><span class=\"line\"><span class=\"comment\">eni94c3d2bb833</span></span><br><span class=\"line\"><span class=\"comment\">enia14f5f7c3e9</span></span><br><span class=\"line\"><span class=\"comment\">enib70b44b2399</span></span><br><span class=\"line\"><span class=\"comment\">enic2ad9523b38 ###容器所属网卡</span></span><br><span class=\"line\"><span class=\"comment\">88</span></span><br><span class=\"line\"><span class=\"comment\">enid60e48c6616</span></span><br><span class=\"line\"><span class=\"comment\">enid8f13b5dd06</span></span><br><span class=\"line\"><span class=\"comment\">enida858799e91</span></span><br><span class=\"line\"><span class=\"comment\">enieee4f7696a1</span></span><br><span class=\"line\"><span class=\"comment\">enif0d5e81d420</span></span><br><span class=\"line\"><span class=\"comment\">eth0</span></span><br><span class=\"line\"><span class=\"comment\">eth1</span></span><br><span class=\"line\"><span class=\"comment\">lo</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>tcpdump 抓包即可</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ssh-keys git:(master) ✗ ssh -F ~/.matrix/jp/ssh.aux.config 10.200.1.202 -l ec2-user \"sudo tcpdump -vvv -i enic2ad9523b38 tcp port 80 -w -\" | wireshark -k -i -</span><br><span class=\"line\">Warning: Permanently added '10.200.1.4' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">Warning: Permanently added '10.200.1.202' (ECDSA) to the list of known hosts.</span><br><span class=\"line\">tcpdump: listening on eni86f5b593a42, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class=\"line\">tcpdump: pcap_loop: The interface went down</span><br><span class=\"line\">7408 packets captured</span><br><span class=\"line\">7408 packets received by filter</span><br><span class=\"line\">0 packets dropped by kernel</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"layout":"post","title":"keepalived配置多实例","published":1,"author":"xiemx","comments":1,"date":"2016-08-23T20:08:05.000Z","_content":"\n  \n安装keepalived\n\n1、 下载 wget http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\n  \n2、 解包 tar xf keepalived-1.2.23.tar.gz\n  \n3、 切换目录 cd keepalived-1.2.23\n  \n4、 配置 ./configure –prefix=/opt/keepalived 因为keepalived 运行在ipvs 之上，因此这两\n  \n个软件一定要安装在一个系统里面。如果configure 操作能正常进行，运行完毕后将有如下的汇总输出：\n```\nKeepalived configuration\n------------------------\nKeepalived version : 1.2.23\nCompiler : gcc\nCompiler flags : -g -O2\nExtra Lib : -lpopt -lssl -lcrypto\nUse IPVS Framework : Yes\nIPVS sync daemon support : Yes\nUse VRRP Framework : Yes\nUse LinkWatch : No\nUse Debug flags : No\n```\n5、 编译和安装 \nmake&&make install\n6、 环境配置\n```\ncd /opt/keepalived/\nmkdir /etc/keepalived/\ncp sbin/keepalived /usr/sbin/\ncp etc/keepalived/keepalived.conf /etc/keepalived/\ncp etc/sysconfig/keepalived /etc/sysconfig/\ncp etc/rc.d/init.d/keepalived /etc/init.d/\n```\n7、启动keepalived查看是否正常\n```\n[root@cluster-node1 keepalived]# /etc/init.d/keepalived start\nStarting keepalived (via systemctl):  [  OK  ]\n[root@cluster-node1 keepalived]# ps -ef | grep keepalived\nroot       4662      1  0 01:22 ?        00:00:00 keepalived -D\nroot       4664   4662  0 01:22 ?        00:00:00 keepalived -D\nroot       4665   4662  0 01:22 ?        00:00:00 keepalived -D\nroot      16435   2705  0 01:37 pts/0    00:00:00 grep --color=auto keepalived\n```\n8、修改配置文件\n```\n[root@cluster-node1 keepalived]# cat /etc/keepalived/keepalived.conf \n! Configuration File for keepalived\n\nglobal_defs {\n   notification_email {\n     acassen@firewall.loc\n     failover@firewall.loc\n     sysadmin@firewall.loc\n   }\n   notification_email_from Alexandre.Cassen@firewall.loc\n   smtp_server 192.168.200.1\n   smtp_connect_timeout 30\n   router_id node1\n   vrrp_skip_check_adv_addr\n   vrrp_strict\n   vrrp_garp_interval 0\n   vrrp_gna_interval 0\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface eno16777736 \n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.0.1/24\n    }\n}\nvrrp_instance VI_2 {\n    state BACKUP\n    interface eno16777736 \n    virtual_router_id 52\n    priority 50\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.1.1/24\n    }\n}\n```\n```\n[root@cluster-node2 keepalived]# cat /etc/keepalived/keepalived.conf \n! Configuration File for keepalived\n\nglobal_defs {\n   notification_email {\n     acassen@firewall.loc\n     failover@firewall.loc\n     sysadmin@firewall.loc\n   }\n   notification_email_from Alexandre.Cassen@firewall.loc\n   smtp_server 192.168.200.1\n   smtp_connect_timeout 30\n   router_id node2\n   vrrp_skip_check_adv_addr\n   vrrp_strict\n   vrrp_garp_interval 0\n   vrrp_gna_interval 0\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface eno16777736\n    virtual_router_id 51\n    priority 50\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.0.1/24\n    }\n}\nvrrp_instance VI_2 {\n    state MASTER\n    interface eno16777736\n    virtual_router_id 52\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.1.1/24\n    }\n}\n```\n9、重启keepalived，查看vip是否正常绑定\n```\n[root@cluster-node1 keepalived]# ip add | egrep  \"0.1|1.1\"\n    inet 127.0.0.1/8 scope host lo\n    inet6 ::1/128 scope host \n    inet 10.0.0.1/24 scope global eno16777736\n[root@cluster-node2 keepalived]# ip add | egrep  \"0.1|1.1\"\n    inet 127.0.0.1/8 scope host lo\n    inet6 ::1/128 scope host \n    inet 10.0.1.1/24 scope global eno16777736\n```\n","source":"_posts/keepalived-multi-server.md","raw":"---\nlayout: post\ntitle: keepalived配置多实例\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-24 04:08:05\ntags: [ keepalived, cluster]\ncategories:\n    - keepalived\n---\n\n  \n安装keepalived\n\n1、 下载 wget http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\n  \n2、 解包 tar xf keepalived-1.2.23.tar.gz\n  \n3、 切换目录 cd keepalived-1.2.23\n  \n4、 配置 ./configure –prefix=/opt/keepalived 因为keepalived 运行在ipvs 之上，因此这两\n  \n个软件一定要安装在一个系统里面。如果configure 操作能正常进行，运行完毕后将有如下的汇总输出：\n```\nKeepalived configuration\n------------------------\nKeepalived version : 1.2.23\nCompiler : gcc\nCompiler flags : -g -O2\nExtra Lib : -lpopt -lssl -lcrypto\nUse IPVS Framework : Yes\nIPVS sync daemon support : Yes\nUse VRRP Framework : Yes\nUse LinkWatch : No\nUse Debug flags : No\n```\n5、 编译和安装 \nmake&&make install\n6、 环境配置\n```\ncd /opt/keepalived/\nmkdir /etc/keepalived/\ncp sbin/keepalived /usr/sbin/\ncp etc/keepalived/keepalived.conf /etc/keepalived/\ncp etc/sysconfig/keepalived /etc/sysconfig/\ncp etc/rc.d/init.d/keepalived /etc/init.d/\n```\n7、启动keepalived查看是否正常\n```\n[root@cluster-node1 keepalived]# /etc/init.d/keepalived start\nStarting keepalived (via systemctl):  [  OK  ]\n[root@cluster-node1 keepalived]# ps -ef | grep keepalived\nroot       4662      1  0 01:22 ?        00:00:00 keepalived -D\nroot       4664   4662  0 01:22 ?        00:00:00 keepalived -D\nroot       4665   4662  0 01:22 ?        00:00:00 keepalived -D\nroot      16435   2705  0 01:37 pts/0    00:00:00 grep --color=auto keepalived\n```\n8、修改配置文件\n```\n[root@cluster-node1 keepalived]# cat /etc/keepalived/keepalived.conf \n! Configuration File for keepalived\n\nglobal_defs {\n   notification_email {\n     acassen@firewall.loc\n     failover@firewall.loc\n     sysadmin@firewall.loc\n   }\n   notification_email_from Alexandre.Cassen@firewall.loc\n   smtp_server 192.168.200.1\n   smtp_connect_timeout 30\n   router_id node1\n   vrrp_skip_check_adv_addr\n   vrrp_strict\n   vrrp_garp_interval 0\n   vrrp_gna_interval 0\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface eno16777736 \n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.0.1/24\n    }\n}\nvrrp_instance VI_2 {\n    state BACKUP\n    interface eno16777736 \n    virtual_router_id 52\n    priority 50\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.1.1/24\n    }\n}\n```\n```\n[root@cluster-node2 keepalived]# cat /etc/keepalived/keepalived.conf \n! Configuration File for keepalived\n\nglobal_defs {\n   notification_email {\n     acassen@firewall.loc\n     failover@firewall.loc\n     sysadmin@firewall.loc\n   }\n   notification_email_from Alexandre.Cassen@firewall.loc\n   smtp_server 192.168.200.1\n   smtp_connect_timeout 30\n   router_id node2\n   vrrp_skip_check_adv_addr\n   vrrp_strict\n   vrrp_garp_interval 0\n   vrrp_gna_interval 0\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface eno16777736\n    virtual_router_id 51\n    priority 50\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.0.1/24\n    }\n}\nvrrp_instance VI_2 {\n    state MASTER\n    interface eno16777736\n    virtual_router_id 52\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        10.0.1.1/24\n    }\n}\n```\n9、重启keepalived，查看vip是否正常绑定\n```\n[root@cluster-node1 keepalived]# ip add | egrep  \"0.1|1.1\"\n    inet 127.0.0.1/8 scope host lo\n    inet6 ::1/128 scope host \n    inet 10.0.0.1/24 scope global eno16777736\n[root@cluster-node2 keepalived]# ip add | egrep  \"0.1|1.1\"\n    inet 127.0.0.1/8 scope host lo\n    inet6 ::1/128 scope host \n    inet 10.0.1.1/24 scope global eno16777736\n```\n","slug":"keepalived-multi-server","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyid30024u9urt26wtcft","content":"<p>安装keepalived</p>\n<p>1、 下载 wget <a href=\"http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\" target=\"_blank\" rel=\"noopener\">http://www.keepalived.org/software/keepalived-1.2.23.tar.gz</a></p>\n<p>2、 解包 tar xf keepalived-1.2.23.tar.gz</p>\n<p>3、 切换目录 cd keepalived-1.2.23</p>\n<p>4、 配置 ./configure –prefix=/opt/keepalived 因为keepalived 运行在ipvs 之上，因此这两</p>\n<p>个软件一定要安装在一个系统里面。如果configure 操作能正常进行，运行完毕后将有如下的汇总输出：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Keepalived configuration</span><br><span class=\"line\">------------------------</span><br><span class=\"line\">Keepalived version : 1.2.23</span><br><span class=\"line\">Compiler : gcc</span><br><span class=\"line\">Compiler flags : -g -O2</span><br><span class=\"line\">Extra Lib : -lpopt -lssl -lcrypto</span><br><span class=\"line\">Use IPVS Framework : <span class=\"literal\">Yes</span></span><br><span class=\"line\">IPVS sync daemon support : <span class=\"literal\">Yes</span></span><br><span class=\"line\">Use<span class=\"built_in\"> VRRP </span>Framework : <span class=\"literal\">Yes</span></span><br><span class=\"line\">Use LinkWatch : <span class=\"literal\">No</span></span><br><span class=\"line\">Use <span class=\"builtin-name\">Debug</span> flags : <span class=\"literal\">No</span></span><br></pre></td></tr></table></figure>\n\n<p>5、 编译和安装<br>make&amp;&amp;make install<br>6、 环境配置</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd <span class=\"regexp\">/opt/</span>keepalived/</span><br><span class=\"line\">mkdir <span class=\"regexp\">/etc/</span>keepalived/</span><br><span class=\"line\">cp sbin<span class=\"regexp\">/keepalived /</span>usr<span class=\"regexp\">/sbin/</span></span><br><span class=\"line\">cp etc<span class=\"regexp\">/keepalived/</span>keepalived.conf <span class=\"regexp\">/etc/</span>keepalived/</span><br><span class=\"line\">cp etc<span class=\"regexp\">/sysconfig/</span>keepalived <span class=\"regexp\">/etc/</span>sysconfig/</span><br><span class=\"line\">cp etc<span class=\"regexp\">/rc.d/</span>init.d<span class=\"regexp\">/keepalived /</span>etc<span class=\"regexp\">/init.d/</span></span><br></pre></td></tr></table></figure>\n\n<p>7、启动keepalived查看是否正常</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node1 keepalived]# /etc/init.d/keepalived start</span><br><span class=\"line\">Starting keepalived (via systemctl):  [  OK  ]</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node1 keepalived]# ps -ef | grep keepalived</span><br><span class=\"line\">root       <span class=\"number\">4662</span>      <span class=\"number\">1</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">22</span> ?        <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> keepalived -D</span><br><span class=\"line\">root       <span class=\"number\">4664</span>   <span class=\"number\">4662</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">22</span> ?        <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> keepalived -D</span><br><span class=\"line\">root       <span class=\"number\">4665</span>   <span class=\"number\">4662</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">22</span> ?        <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> keepalived -D</span><br><span class=\"line\">root      <span class=\"number\">16435</span>   <span class=\"number\">2705</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">37</span> pts/<span class=\"number\">0</span>    <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> grep --color=<span class=\"built_in\">auto</span> keepalived</span><br></pre></td></tr></table></figure>\n\n<p>8、修改配置文件</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node1 keepalived]# cat /etc/keepalived/keepalived.conf </span><br><span class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   notification_email &#123;</span><br><span class=\"line\">     <span class=\"symbol\">acassen@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">failover@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">sysadmin@</span>firewall.loc</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   notification_email_from Alexandre.<span class=\"symbol\">Cassen@</span>firewall.loc</span><br><span class=\"line\">   smtp_server <span class=\"number\">192.168</span><span class=\"number\">.200</span><span class=\"number\">.1</span></span><br><span class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></span><br><span class=\"line\">   router_id node1</span><br><span class=\"line\">   vrrp_skip_check_adv_addr</span><br><span class=\"line\">   vrrp_strict</span><br><span class=\"line\">   vrrp_garp_interval <span class=\"number\">0</span></span><br><span class=\"line\">   vrrp_gna_interval <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span> </span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">51</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">100</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vrrp_instance VI_2 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span> </span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">52</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">50</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node2 keepalived]# cat /etc/keepalived/keepalived.conf </span><br><span class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   notification_email &#123;</span><br><span class=\"line\">     <span class=\"symbol\">acassen@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">failover@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">sysadmin@</span>firewall.loc</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   notification_email_from Alexandre.<span class=\"symbol\">Cassen@</span>firewall.loc</span><br><span class=\"line\">   smtp_server <span class=\"number\">192.168</span><span class=\"number\">.200</span><span class=\"number\">.1</span></span><br><span class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></span><br><span class=\"line\">   router_id node2</span><br><span class=\"line\">   vrrp_skip_check_adv_addr</span><br><span class=\"line\">   vrrp_strict</span><br><span class=\"line\">   vrrp_garp_interval <span class=\"number\">0</span></span><br><span class=\"line\">   vrrp_gna_interval <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span></span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">51</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">50</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vrrp_instance VI_2 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span></span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">52</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">100</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>9、重启keepalived，查看vip是否正常绑定</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@cluster-node1 keepalived]#<span class=\"built_in\"> ip </span><span class=\"builtin-name\">add</span> | egrep  <span class=\"string\">\"0.1|1.1\"</span></span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">    inet6 ::1/128 scope host </span><br><span class=\"line\">    inet 10.0.0.1/24 scope global eno16777736</span><br><span class=\"line\">[root@cluster-node2 keepalived]#<span class=\"built_in\"> ip </span><span class=\"builtin-name\">add</span> | egrep  <span class=\"string\">\"0.1|1.1\"</span></span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">    inet6 ::1/128 scope host </span><br><span class=\"line\">    inet 10.0.1.1/24 scope global eno16777736</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>安装keepalived</p>\n<p>1、 下载 wget <a href=\"http://www.keepalived.org/software/keepalived-1.2.23.tar.gz\" target=\"_blank\" rel=\"noopener\">http://www.keepalived.org/software/keepalived-1.2.23.tar.gz</a></p>\n<p>2、 解包 tar xf keepalived-1.2.23.tar.gz</p>\n<p>3、 切换目录 cd keepalived-1.2.23</p>\n<p>4、 配置 ./configure –prefix=/opt/keepalived 因为keepalived 运行在ipvs 之上，因此这两</p>\n<p>个软件一定要安装在一个系统里面。如果configure 操作能正常进行，运行完毕后将有如下的汇总输出：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Keepalived configuration</span><br><span class=\"line\">------------------------</span><br><span class=\"line\">Keepalived version : 1.2.23</span><br><span class=\"line\">Compiler : gcc</span><br><span class=\"line\">Compiler flags : -g -O2</span><br><span class=\"line\">Extra Lib : -lpopt -lssl -lcrypto</span><br><span class=\"line\">Use IPVS Framework : <span class=\"literal\">Yes</span></span><br><span class=\"line\">IPVS sync daemon support : <span class=\"literal\">Yes</span></span><br><span class=\"line\">Use<span class=\"built_in\"> VRRP </span>Framework : <span class=\"literal\">Yes</span></span><br><span class=\"line\">Use LinkWatch : <span class=\"literal\">No</span></span><br><span class=\"line\">Use <span class=\"builtin-name\">Debug</span> flags : <span class=\"literal\">No</span></span><br></pre></td></tr></table></figure>\n\n<p>5、 编译和安装<br>make&amp;&amp;make install<br>6、 环境配置</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd <span class=\"regexp\">/opt/</span>keepalived/</span><br><span class=\"line\">mkdir <span class=\"regexp\">/etc/</span>keepalived/</span><br><span class=\"line\">cp sbin<span class=\"regexp\">/keepalived /</span>usr<span class=\"regexp\">/sbin/</span></span><br><span class=\"line\">cp etc<span class=\"regexp\">/keepalived/</span>keepalived.conf <span class=\"regexp\">/etc/</span>keepalived/</span><br><span class=\"line\">cp etc<span class=\"regexp\">/sysconfig/</span>keepalived <span class=\"regexp\">/etc/</span>sysconfig/</span><br><span class=\"line\">cp etc<span class=\"regexp\">/rc.d/</span>init.d<span class=\"regexp\">/keepalived /</span>etc<span class=\"regexp\">/init.d/</span></span><br></pre></td></tr></table></figure>\n\n<p>7、启动keepalived查看是否正常</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node1 keepalived]# /etc/init.d/keepalived start</span><br><span class=\"line\">Starting keepalived (via systemctl):  [  OK  ]</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node1 keepalived]# ps -ef | grep keepalived</span><br><span class=\"line\">root       <span class=\"number\">4662</span>      <span class=\"number\">1</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">22</span> ?        <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> keepalived -D</span><br><span class=\"line\">root       <span class=\"number\">4664</span>   <span class=\"number\">4662</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">22</span> ?        <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> keepalived -D</span><br><span class=\"line\">root       <span class=\"number\">4665</span>   <span class=\"number\">4662</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">22</span> ?        <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> keepalived -D</span><br><span class=\"line\">root      <span class=\"number\">16435</span>   <span class=\"number\">2705</span>  <span class=\"number\">0</span> <span class=\"number\">01</span>:<span class=\"number\">37</span> pts/<span class=\"number\">0</span>    <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> grep --color=<span class=\"built_in\">auto</span> keepalived</span><br></pre></td></tr></table></figure>\n\n<p>8、修改配置文件</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node1 keepalived]# cat /etc/keepalived/keepalived.conf </span><br><span class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   notification_email &#123;</span><br><span class=\"line\">     <span class=\"symbol\">acassen@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">failover@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">sysadmin@</span>firewall.loc</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   notification_email_from Alexandre.<span class=\"symbol\">Cassen@</span>firewall.loc</span><br><span class=\"line\">   smtp_server <span class=\"number\">192.168</span><span class=\"number\">.200</span><span class=\"number\">.1</span></span><br><span class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></span><br><span class=\"line\">   router_id node1</span><br><span class=\"line\">   vrrp_skip_check_adv_addr</span><br><span class=\"line\">   vrrp_strict</span><br><span class=\"line\">   vrrp_garp_interval <span class=\"number\">0</span></span><br><span class=\"line\">   vrrp_gna_interval <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span> </span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">51</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">100</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vrrp_instance VI_2 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span> </span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">52</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">50</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>cluster-node2 keepalived]# cat /etc/keepalived/keepalived.conf </span><br><span class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   notification_email &#123;</span><br><span class=\"line\">     <span class=\"symbol\">acassen@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">failover@</span>firewall.loc</span><br><span class=\"line\">     <span class=\"symbol\">sysadmin@</span>firewall.loc</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   notification_email_from Alexandre.<span class=\"symbol\">Cassen@</span>firewall.loc</span><br><span class=\"line\">   smtp_server <span class=\"number\">192.168</span><span class=\"number\">.200</span><span class=\"number\">.1</span></span><br><span class=\"line\">   smtp_connect_timeout <span class=\"number\">30</span></span><br><span class=\"line\">   router_id node2</span><br><span class=\"line\">   vrrp_skip_check_adv_addr</span><br><span class=\"line\">   vrrp_strict</span><br><span class=\"line\">   vrrp_garp_interval <span class=\"number\">0</span></span><br><span class=\"line\">   vrrp_gna_interval <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span></span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">51</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">50</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vrrp_instance VI_2 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    <span class=\"keyword\">interface</span> <span class=\"symbol\">eno16777736</span></span><br><span class=\"line\">    <span class=\"symbol\">virtual_router_id</span> <span class=\"symbol\">52</span></span><br><span class=\"line\">    <span class=\"symbol\">priority</span> <span class=\"symbol\">100</span></span><br><span class=\"line\">    <span class=\"symbol\">advert_int</span> <span class=\"symbol\">1</span></span><br><span class=\"line\">    <span class=\"symbol\">authentication</span> &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass <span class=\"number\">1111</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        <span class=\"number\">10.0</span><span class=\"number\">.1</span><span class=\"number\">.1</span>/<span class=\"number\">24</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>9、重启keepalived，查看vip是否正常绑定</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@cluster-node1 keepalived]#<span class=\"built_in\"> ip </span><span class=\"builtin-name\">add</span> | egrep  <span class=\"string\">\"0.1|1.1\"</span></span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">    inet6 ::1/128 scope host </span><br><span class=\"line\">    inet 10.0.0.1/24 scope global eno16777736</span><br><span class=\"line\">[root@cluster-node2 keepalived]#<span class=\"built_in\"> ip </span><span class=\"builtin-name\">add</span> | egrep  <span class=\"string\">\"0.1|1.1\"</span></span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">    inet6 ::1/128 scope host </span><br><span class=\"line\">    inet 10.0.1.1/24 scope global eno16777736</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"keepalived不支持IPVS","published":1,"author":"xiemx","comments":1,"date":"2016-08-23T21:08:21.000Z","_content":"编译keepalived是遇到keepalived无法支持ip_vs，情况如下：\n  \nkeepalived默认编译时是在/usr/src/linux下找内核源代码。默认安装的源码在`/usr/src/kernels/$(uname -r)/`目录下（如果没有这个目录可以安装下kernel-devel包)。\n  \n解决办法：\n  ```\nln -s /usr/src/kernels/`uname -r`/  /usr/src/linux\n或者编译时指定 --with-kernel-dir=/usr/src/kernels/`uname -r`/\n然后重新编译keepalived，现在官方的最新版已经很少出现这种情况，暂时不知道是不是版本问题。\n```\n","source":"_posts/keepalived-not-support-IPVS.md","raw":"---\nlayout: post\ntitle: keepalived不支持IPVS\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-24 05:08:21\ntags: [ keepalived, cluster]\ncategories:\n    - keepalived\n---\n编译keepalived是遇到keepalived无法支持ip_vs，情况如下：\n  \nkeepalived默认编译时是在/usr/src/linux下找内核源代码。默认安装的源码在`/usr/src/kernels/$(uname -r)/`目录下（如果没有这个目录可以安装下kernel-devel包)。\n  \n解决办法：\n  ```\nln -s /usr/src/kernels/`uname -r`/  /usr/src/linux\n或者编译时指定 --with-kernel-dir=/usr/src/kernels/`uname -r`/\n然后重新编译keepalived，现在官方的最新版已经很少出现这种情况，暂时不知道是不是版本问题。\n```\n","slug":"keepalived-not-support-IPVS","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyid60027u9urhtb9rqg1","content":"<p>编译keepalived是遇到keepalived无法支持ip_vs，情况如下：</p>\n<p>keepalived默认编译时是在/usr/src/linux下找内核源代码。默认安装的源码在<code>/usr/src/kernels/$(uname -r)/</code>目录下（如果没有这个目录可以安装下kernel-devel包)。</p>\n<p>解决办法：<br>  <figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s <span class=\"regexp\">/usr/</span>src<span class=\"regexp\">/kernels/</span>`uname -r`<span class=\"regexp\">/  /</span>usr<span class=\"regexp\">/src/</span>linux</span><br><span class=\"line\">或者编译时指定 --with-kernel-dir=<span class=\"regexp\">/usr/</span>src<span class=\"regexp\">/kernels/</span>`uname -r`/</span><br><span class=\"line\">然后重新编译keepalived，现在官方的最新版已经很少出现这种情况，暂时不知道是不是版本问题。</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>编译keepalived是遇到keepalived无法支持ip_vs，情况如下：</p>\n<p>keepalived默认编译时是在/usr/src/linux下找内核源代码。默认安装的源码在<code>/usr/src/kernels/$(uname -r)/</code>目录下（如果没有这个目录可以安装下kernel-devel包)。</p>\n<p>解决办法：<br>  <figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s <span class=\"regexp\">/usr/</span>src<span class=\"regexp\">/kernels/</span>`uname -r`<span class=\"regexp\">/  /</span>usr<span class=\"regexp\">/src/</span>linux</span><br><span class=\"line\">或者编译时指定 --with-kernel-dir=<span class=\"regexp\">/usr/</span>src<span class=\"regexp\">/kernels/</span>`uname -r`/</span><br><span class=\"line\">然后重新编译keepalived，现在官方的最新版已经很少出现这种情况，暂时不知道是不是版本问题。</span><br></pre></td></tr></table></figure></p>\n"},{"layout":"post","title":"Linux启动过程","published":1,"author":"xiemx","comments":1,"date":"2015-11-14T20:11:22.000Z","_content":"1. 加载自检（post）、BIOS\n  \n当你打开计算机电源，计算机会对硬件设备加电，然后去检查cpu，内存，主板这些硬件设备。加点通过后加载BIOS信息，读取bios中存储的设备启动顺序信息，寻找启动设备一般都是硬盘、光盘、U盘等。\n\n2. 读取MBR\n  \n硬盘上第0磁道第一个扇区被称为MBR，也就是Master Boot Record，即主引导记录，大小是512字节，存放了446字节的boots loader、64字节的分区表信息和2字节的硬盘有效标记。\n  \n系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0×7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader，常用的boot loader 有grub、lilo。\n\n3. Boot Loader\n  \n系统读取内存中的grub配置信息（一般为menu.lst或grub.lst），并依照此配置信息来启动不同的操作系统。\n\n4. 加载内核\n  \n依据grub.conf配置文件中的配置文件，系统读取内核，挂载虚拟文件系统initrd。\n\n5. 启动init\n  \n内核被加载后运行第一个进程/sbin/init，读取配置文件/etc/init/rc.Scanf,根据此文件配置在找到/etc/rc.d/rc.sysinit开启系统初始化，在读取/etc/inittab文件，确定系统的启动级别。\n\n6. 运行inittab中规定级别的脚本程序\n  \n根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，/etc/rc.d/rcX.d/目录。\n\n7. 执行/etc/rc.d/rc.local\n  \n/etc/rc.d/rcX.d/中的脚本按照配置启动完成后，会启动rc.local。\n  \n8. 执行/bin/login\n  \n调用登录程序，启动登陆界面。\n\n以上只是简单的系统启动过程，具体详细的系统层面的启动从第boot loader之后的执行都可以参看系统中的配置文件。可以读取相对应的脚本和配置代码，根据文件中的规定一步步的理解系统的启动，理解系统启动的详细步骤。\n","source":"_posts/linux-boot-workflow.md","raw":"---\nlayout: post\ntitle: Linux启动过程\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-15 04:11:22\ntags: [ linux ]\ncategories:\n    - linux\n---\n1. 加载自检（post）、BIOS\n  \n当你打开计算机电源，计算机会对硬件设备加电，然后去检查cpu，内存，主板这些硬件设备。加点通过后加载BIOS信息，读取bios中存储的设备启动顺序信息，寻找启动设备一般都是硬盘、光盘、U盘等。\n\n2. 读取MBR\n  \n硬盘上第0磁道第一个扇区被称为MBR，也就是Master Boot Record，即主引导记录，大小是512字节，存放了446字节的boots loader、64字节的分区表信息和2字节的硬盘有效标记。\n  \n系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0×7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader，常用的boot loader 有grub、lilo。\n\n3. Boot Loader\n  \n系统读取内存中的grub配置信息（一般为menu.lst或grub.lst），并依照此配置信息来启动不同的操作系统。\n\n4. 加载内核\n  \n依据grub.conf配置文件中的配置文件，系统读取内核，挂载虚拟文件系统initrd。\n\n5. 启动init\n  \n内核被加载后运行第一个进程/sbin/init，读取配置文件/etc/init/rc.Scanf,根据此文件配置在找到/etc/rc.d/rc.sysinit开启系统初始化，在读取/etc/inittab文件，确定系统的启动级别。\n\n6. 运行inittab中规定级别的脚本程序\n  \n根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，/etc/rc.d/rcX.d/目录。\n\n7. 执行/etc/rc.d/rc.local\n  \n/etc/rc.d/rcX.d/中的脚本按照配置启动完成后，会启动rc.local。\n  \n8. 执行/bin/login\n  \n调用登录程序，启动登陆界面。\n\n以上只是简单的系统启动过程，具体详细的系统层面的启动从第boot loader之后的执行都可以参看系统中的配置文件。可以读取相对应的脚本和配置代码，根据文件中的规定一步步的理解系统的启动，理解系统启动的详细步骤。\n","slug":"linux-boot-workflow","updated":"2019-10-21T06:57:42.697Z","photos":[],"link":"","_id":"ck42dyid7002cu9urkz2saysu","content":"<ol>\n<li>加载自检（post）、BIOS</li>\n</ol>\n<p>当你打开计算机电源，计算机会对硬件设备加电，然后去检查cpu，内存，主板这些硬件设备。加点通过后加载BIOS信息，读取bios中存储的设备启动顺序信息，寻找启动设备一般都是硬盘、光盘、U盘等。</p>\n<ol start=\"2\">\n<li>读取MBR</li>\n</ol>\n<p>硬盘上第0磁道第一个扇区被称为MBR，也就是Master Boot Record，即主引导记录，大小是512字节，存放了446字节的boots loader、64字节的分区表信息和2字节的硬盘有效标记。</p>\n<p>系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0×7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader，常用的boot loader 有grub、lilo。</p>\n<ol start=\"3\">\n<li>Boot Loader</li>\n</ol>\n<p>系统读取内存中的grub配置信息（一般为menu.lst或grub.lst），并依照此配置信息来启动不同的操作系统。</p>\n<ol start=\"4\">\n<li>加载内核</li>\n</ol>\n<p>依据grub.conf配置文件中的配置文件，系统读取内核，挂载虚拟文件系统initrd。</p>\n<ol start=\"5\">\n<li>启动init</li>\n</ol>\n<p>内核被加载后运行第一个进程/sbin/init，读取配置文件/etc/init/rc.Scanf,根据此文件配置在找到/etc/rc.d/rc.sysinit开启系统初始化，在读取/etc/inittab文件，确定系统的启动级别。</p>\n<ol start=\"6\">\n<li>运行inittab中规定级别的脚本程序</li>\n</ol>\n<p>根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，/etc/rc.d/rcX.d/目录。</p>\n<ol start=\"7\">\n<li>执行/etc/rc.d/rc.local</li>\n</ol>\n<p>/etc/rc.d/rcX.d/中的脚本按照配置启动完成后，会启动rc.local。</p>\n<ol start=\"8\">\n<li>执行/bin/login</li>\n</ol>\n<p>调用登录程序，启动登陆界面。</p>\n<p>以上只是简单的系统启动过程，具体详细的系统层面的启动从第boot loader之后的执行都可以参看系统中的配置文件。可以读取相对应的脚本和配置代码，根据文件中的规定一步步的理解系统的启动，理解系统启动的详细步骤。</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>加载自检（post）、BIOS</li>\n</ol>\n<p>当你打开计算机电源，计算机会对硬件设备加电，然后去检查cpu，内存，主板这些硬件设备。加点通过后加载BIOS信息，读取bios中存储的设备启动顺序信息，寻找启动设备一般都是硬盘、光盘、U盘等。</p>\n<ol start=\"2\">\n<li>读取MBR</li>\n</ol>\n<p>硬盘上第0磁道第一个扇区被称为MBR，也就是Master Boot Record，即主引导记录，大小是512字节，存放了446字节的boots loader、64字节的分区表信息和2字节的硬盘有效标记。</p>\n<p>系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0×7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader，常用的boot loader 有grub、lilo。</p>\n<ol start=\"3\">\n<li>Boot Loader</li>\n</ol>\n<p>系统读取内存中的grub配置信息（一般为menu.lst或grub.lst），并依照此配置信息来启动不同的操作系统。</p>\n<ol start=\"4\">\n<li>加载内核</li>\n</ol>\n<p>依据grub.conf配置文件中的配置文件，系统读取内核，挂载虚拟文件系统initrd。</p>\n<ol start=\"5\">\n<li>启动init</li>\n</ol>\n<p>内核被加载后运行第一个进程/sbin/init，读取配置文件/etc/init/rc.Scanf,根据此文件配置在找到/etc/rc.d/rc.sysinit开启系统初始化，在读取/etc/inittab文件，确定系统的启动级别。</p>\n<ol start=\"6\">\n<li>运行inittab中规定级别的脚本程序</li>\n</ol>\n<p>根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，/etc/rc.d/rcX.d/目录。</p>\n<ol start=\"7\">\n<li>执行/etc/rc.d/rc.local</li>\n</ol>\n<p>/etc/rc.d/rcX.d/中的脚本按照配置启动完成后，会启动rc.local。</p>\n<ol start=\"8\">\n<li>执行/bin/login</li>\n</ol>\n<p>调用登录程序，启动登陆界面。</p>\n<p>以上只是简单的系统启动过程，具体详细的系统层面的启动从第boot loader之后的执行都可以参看系统中的配置文件。可以读取相对应的脚本和配置代码，根据文件中的规定一步步的理解系统的启动，理解系统启动的详细步骤。</p>\n"},{"layout":"post","title":"Linux计划任务","published":1,"author":"xiemx","comments":1,"date":"2015-11-28T03:11:05.000Z","_content":"计划任务种类：\n* 一次性计划任务（at）：由进程atd守护\n* 周期性计划任务（cron）：由进程crond守护\n\n#### 一次性计划任务（at）\n\n生成的文件存放在／var/spool/at/目录下，任务执行一次之后自动删除。一次性计划任务还可以用batch命令去执行。batch命令会在系统空闲的情况下执行任务，用法和at相同但优先级低延时执行。\n\n命令：\n```\n［root@localhost ~]# at  now + 5 minutes\n  at> /bin/mail  root -s \"testing at job\" < /root/.bashrc\n  at> <EOF>         <==输入 [ctrl] + d 结束编辑！此时会在／var/spool/at/目录下生成一个任务文件\n\n[root@localhost ~]# atq\n5 2015-11-25 23:00 a root\n[root@localhost ~]# atrm 5\n```\n一次性计划任务的时间写法支持很多可以查看man page！当我们制定计划任务之后，由于种种原因而要去取消计划任务我们可以使用atq去查询当前系统中有多少为执行的计划，每个计划的编号是多少。在通过atrm＋任务编号来删除这个任务。／etc/at.allow和／etc/at.deny文件规范了哪些用户可以使用at那些用户无法使用at。写在allow文件表明了写在此文件中的用户才可以使用at，deny文件中的用户无法使用。\n\n#### 周期性计划任务（cron）\n\n由进程crond守护，生成的任务文件存放在／var/spool/cron/目录下文件会以用户名命名。也采用了／etc/cron.allow和／etc/cron.deny的授权方式。配置文件为／etc/crontab 。周期性计划任务分为两种，一种是用户级别（通过crontab －e来制定），一种为系统级别（写在／etc/crontab文件中），建议使用crontab来制定。\n\n命令用法\n```\ncrontab   参数\n-u ：只有 root 才能进行这个任务，亦即帮其他使用者创建/移除 crontab 工作排程；\n-e ：编辑 crontab 的工作内容，同vi编辑文件相同（其实就是vi了一个新文件到／var/spool/cron下）\n-l ：查阅 crontab 的工作内容\n-r ：移除所有的 crontab 的工作内容，若仅要移除一项，请用 -e 去编辑。\n\n［root@localhost ～］#crontab  -u  testuser  -e    #为testuser用户制定计划任务，会打开vi的编辑界面，每一行就是一个任务\n```\n例：\n```\n###时间的写法基本就是\",\" \"-\" \"/\"三种符号来间隔,“＊”代表所有都匹配。\n30 * * * *           <==每小时的30分，输出hello\n*/10 ＊ *  *  *      <==每隔10分钟\n30 12 * * 1,3,5      <==每周1 3 5的12时30分\n30 12 1 3-5 *        <==每年的3 4 5月1日12时30分\n```\n\n同样的／etc/crontab 中的时间写法也是类似但`语法不同`cron每分钟都会去读一次计划任务同时也会读一次／etc/crontab文件，crontab文件中设置了4个文件夹（配置文件中的`run-parts`命令部分），系统会在不同的时间去读取运行其中的文件，我们可以将脚本文件放到对应的文件夹下也可以实现脚本的周期性执行。我们的locate数据库同步，logrotate等都是放在这些目录下来实现周期性的工作。\n```\n[root@localhost ~]# cat /etc/crontab\nSHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\nMAILTO=root\nHOME=/\n\n# run-parts\n01 * * * * root run-parts /etc/cron.hourly <==每小时执行一次\n02 4 * * * root run-parts /etc/cron.daily <==每天执行一次\n22 4 * * 0 root run-parts /etc/cron.weekly <==每周日执行一次\n42 4 1 * * root run-parts /etc/cron.monthly <==每个月 1 号执行一次\n\n###run-parts 我们可以通过which命令来查看其实是/usr/bin/run-parts命令，我们可以man一下这个命令，或者直接打开这个命令的脚本，会发现这个命令会将目录下的脚本全部执行一次。\n```\n","source":"_posts/linux-crontab-and-at.md","raw":"---\nlayout: post\ntitle: Linux计划任务\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-28 11:11:05\ntags: [ linux, command ]\ncategories:\n    - linux\n---\n计划任务种类：\n* 一次性计划任务（at）：由进程atd守护\n* 周期性计划任务（cron）：由进程crond守护\n\n#### 一次性计划任务（at）\n\n生成的文件存放在／var/spool/at/目录下，任务执行一次之后自动删除。一次性计划任务还可以用batch命令去执行。batch命令会在系统空闲的情况下执行任务，用法和at相同但优先级低延时执行。\n\n命令：\n```\n［root@localhost ~]# at  now + 5 minutes\n  at> /bin/mail  root -s \"testing at job\" < /root/.bashrc\n  at> <EOF>         <==输入 [ctrl] + d 结束编辑！此时会在／var/spool/at/目录下生成一个任务文件\n\n[root@localhost ~]# atq\n5 2015-11-25 23:00 a root\n[root@localhost ~]# atrm 5\n```\n一次性计划任务的时间写法支持很多可以查看man page！当我们制定计划任务之后，由于种种原因而要去取消计划任务我们可以使用atq去查询当前系统中有多少为执行的计划，每个计划的编号是多少。在通过atrm＋任务编号来删除这个任务。／etc/at.allow和／etc/at.deny文件规范了哪些用户可以使用at那些用户无法使用at。写在allow文件表明了写在此文件中的用户才可以使用at，deny文件中的用户无法使用。\n\n#### 周期性计划任务（cron）\n\n由进程crond守护，生成的任务文件存放在／var/spool/cron/目录下文件会以用户名命名。也采用了／etc/cron.allow和／etc/cron.deny的授权方式。配置文件为／etc/crontab 。周期性计划任务分为两种，一种是用户级别（通过crontab －e来制定），一种为系统级别（写在／etc/crontab文件中），建议使用crontab来制定。\n\n命令用法\n```\ncrontab   参数\n-u ：只有 root 才能进行这个任务，亦即帮其他使用者创建/移除 crontab 工作排程；\n-e ：编辑 crontab 的工作内容，同vi编辑文件相同（其实就是vi了一个新文件到／var/spool/cron下）\n-l ：查阅 crontab 的工作内容\n-r ：移除所有的 crontab 的工作内容，若仅要移除一项，请用 -e 去编辑。\n\n［root@localhost ～］#crontab  -u  testuser  -e    #为testuser用户制定计划任务，会打开vi的编辑界面，每一行就是一个任务\n```\n例：\n```\n###时间的写法基本就是\",\" \"-\" \"/\"三种符号来间隔,“＊”代表所有都匹配。\n30 * * * *           <==每小时的30分，输出hello\n*/10 ＊ *  *  *      <==每隔10分钟\n30 12 * * 1,3,5      <==每周1 3 5的12时30分\n30 12 1 3-5 *        <==每年的3 4 5月1日12时30分\n```\n\n同样的／etc/crontab 中的时间写法也是类似但`语法不同`cron每分钟都会去读一次计划任务同时也会读一次／etc/crontab文件，crontab文件中设置了4个文件夹（配置文件中的`run-parts`命令部分），系统会在不同的时间去读取运行其中的文件，我们可以将脚本文件放到对应的文件夹下也可以实现脚本的周期性执行。我们的locate数据库同步，logrotate等都是放在这些目录下来实现周期性的工作。\n```\n[root@localhost ~]# cat /etc/crontab\nSHELL=/bin/bash\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\nMAILTO=root\nHOME=/\n\n# run-parts\n01 * * * * root run-parts /etc/cron.hourly <==每小时执行一次\n02 4 * * * root run-parts /etc/cron.daily <==每天执行一次\n22 4 * * 0 root run-parts /etc/cron.weekly <==每周日执行一次\n42 4 1 * * root run-parts /etc/cron.monthly <==每个月 1 号执行一次\n\n###run-parts 我们可以通过which命令来查看其实是/usr/bin/run-parts命令，我们可以man一下这个命令，或者直接打开这个命令的脚本，会发现这个命令会将目录下的脚本全部执行一次。\n```\n","slug":"linux-crontab-and-at","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyid9002fu9urfuauibzy","content":"<p>计划任务种类：</p>\n<ul>\n<li>一次性计划任务（at）：由进程atd守护</li>\n<li>周期性计划任务（cron）：由进程crond守护</li>\n</ul>\n<h4 id=\"一次性计划任务（at）\"><a href=\"#一次性计划任务（at）\" class=\"headerlink\" title=\"一次性计划任务（at）\"></a>一次性计划任务（at）</h4><p>生成的文件存放在／var/spool/at/目录下，任务执行一次之后自动删除。一次性计划任务还可以用batch命令去执行。batch命令会在系统空闲的情况下执行任务，用法和at相同但优先级低延时执行。</p>\n<p>命令：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">［<span class=\"symbol\">root@</span>localhost ~]# at  now + <span class=\"number\">5</span> minutes</span><br><span class=\"line\">  at&gt; /bin/mail  root -s <span class=\"string\">\"testing at job\"</span> &lt; /root/.bashrc</span><br><span class=\"line\">  at&gt; &lt;EOF&gt;         &lt;==输入 [ctrl] + d 结束编辑！此时会在／var/spool/at/目录下生成一个任务文件</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# atq</span><br><span class=\"line\"><span class=\"number\">5</span> <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-25</span> <span class=\"number\">23</span>:<span class=\"number\">00</span> a root</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# atrm <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n\n<p>一次性计划任务的时间写法支持很多可以查看man page！当我们制定计划任务之后，由于种种原因而要去取消计划任务我们可以使用atq去查询当前系统中有多少为执行的计划，每个计划的编号是多少。在通过atrm＋任务编号来删除这个任务。／etc/at.allow和／etc/at.deny文件规范了哪些用户可以使用at那些用户无法使用at。写在allow文件表明了写在此文件中的用户才可以使用at，deny文件中的用户无法使用。</p>\n<h4 id=\"周期性计划任务（cron）\"><a href=\"#周期性计划任务（cron）\" class=\"headerlink\" title=\"周期性计划任务（cron）\"></a>周期性计划任务（cron）</h4><p>由进程crond守护，生成的任务文件存放在／var/spool/cron/目录下文件会以用户名命名。也采用了／etc/cron.allow和／etc/cron.deny的授权方式。配置文件为／etc/crontab 。周期性计划任务分为两种，一种是用户级别（通过crontab －e来制定），一种为系统级别（写在／etc/crontab文件中），建议使用crontab来制定。</p>\n<p>命令用法</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab   参数</span><br><span class=\"line\"><span class=\"deletion\">-u ：只有 root 才能进行这个任务，亦即帮其他使用者创建/移除 crontab 工作排程；</span></span><br><span class=\"line\"><span class=\"deletion\">-e ：编辑 crontab 的工作内容，同vi编辑文件相同（其实就是vi了一个新文件到／var/spool/cron下）</span></span><br><span class=\"line\"><span class=\"deletion\">-l ：查阅 crontab 的工作内容</span></span><br><span class=\"line\"><span class=\"deletion\">-r ：移除所有的 crontab 的工作内容，若仅要移除一项，请用 -e 去编辑。</span></span><br><span class=\"line\"></span><br><span class=\"line\">［root@localhost ～］#crontab  -u  testuser  -e    #为testuser用户制定计划任务，会打开vi的编辑界面，每一行就是一个任务</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###时间的写法基本就是<span class=\"string\">\",\"</span> <span class=\"string\">\"-\"</span> <span class=\"string\">\"/\"</span>三种符号来间隔,“＊”代表所有都匹配。</span><br><span class=\"line\"><span class=\"number\">30</span> * * * *           &lt;==每小时的<span class=\"number\">30</span>分，输出hello</span><br><span class=\"line\">*/<span class=\"number\">10</span> ＊ *  *  *      &lt;==每隔<span class=\"number\">10</span>分钟</span><br><span class=\"line\"><span class=\"number\">30</span> <span class=\"number\">12</span> * * <span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>      &lt;==每周<span class=\"number\">1</span> <span class=\"number\">3</span> <span class=\"number\">5</span>的<span class=\"number\">12</span>时<span class=\"number\">30</span>分</span><br><span class=\"line\"><span class=\"number\">30</span> <span class=\"number\">12</span> <span class=\"number\">1</span> <span class=\"number\">3</span><span class=\"number\">-5</span> *        &lt;==每年的<span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span>月<span class=\"number\">1</span>日<span class=\"number\">12</span>时<span class=\"number\">30</span>分</span><br></pre></td></tr></table></figure>\n\n<p>同样的／etc/crontab 中的时间写法也是类似但<code>语法不同</code>cron每分钟都会去读一次计划任务同时也会读一次／etc/crontab文件，crontab文件中设置了4个文件夹（配置文件中的<code>run-parts</code>命令部分），系统会在不同的时间去读取运行其中的文件，我们可以将脚本文件放到对应的文件夹下也可以实现脚本的周期性执行。我们的locate数据库同步，logrotate等都是放在这些目录下来实现周期性的工作。</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># cat /etc/crontab</span></span><br><span class=\"line\"><span class=\"keyword\">SHELL</span><span class=\"bash\">=/bin/bash</span></span><br><span class=\"line\">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class=\"line\">MAILTO=root</span><br><span class=\"line\">HOME=/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run-parts</span></span><br><span class=\"line\"><span class=\"number\">01</span> * * * * root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.hourly &lt;==每小时执行一次</span></span><br><span class=\"line\"><span class=\"number\">02</span> <span class=\"number\">4</span> * * * root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.daily &lt;==每天执行一次</span></span><br><span class=\"line\"><span class=\"number\">22</span> <span class=\"number\">4</span> * * <span class=\"number\">0</span> root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.weekly &lt;==每周日执行一次</span></span><br><span class=\"line\"><span class=\"number\">42</span> <span class=\"number\">4</span> <span class=\"number\">1</span> * * root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.monthly &lt;==每个月 1 号执行一次</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###run-parts 我们可以通过which命令来查看其实是/usr/bin/run-parts命令，我们可以man一下这个命令，或者直接打开这个命令的脚本，会发现这个命令会将目录下的脚本全部执行一次。</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>计划任务种类：</p>\n<ul>\n<li>一次性计划任务（at）：由进程atd守护</li>\n<li>周期性计划任务（cron）：由进程crond守护</li>\n</ul>\n<h4 id=\"一次性计划任务（at）\"><a href=\"#一次性计划任务（at）\" class=\"headerlink\" title=\"一次性计划任务（at）\"></a>一次性计划任务（at）</h4><p>生成的文件存放在／var/spool/at/目录下，任务执行一次之后自动删除。一次性计划任务还可以用batch命令去执行。batch命令会在系统空闲的情况下执行任务，用法和at相同但优先级低延时执行。</p>\n<p>命令：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">［<span class=\"symbol\">root@</span>localhost ~]# at  now + <span class=\"number\">5</span> minutes</span><br><span class=\"line\">  at&gt; /bin/mail  root -s <span class=\"string\">\"testing at job\"</span> &lt; /root/.bashrc</span><br><span class=\"line\">  at&gt; &lt;EOF&gt;         &lt;==输入 [ctrl] + d 结束编辑！此时会在／var/spool/at/目录下生成一个任务文件</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# atq</span><br><span class=\"line\"><span class=\"number\">5</span> <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-25</span> <span class=\"number\">23</span>:<span class=\"number\">00</span> a root</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# atrm <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n\n<p>一次性计划任务的时间写法支持很多可以查看man page！当我们制定计划任务之后，由于种种原因而要去取消计划任务我们可以使用atq去查询当前系统中有多少为执行的计划，每个计划的编号是多少。在通过atrm＋任务编号来删除这个任务。／etc/at.allow和／etc/at.deny文件规范了哪些用户可以使用at那些用户无法使用at。写在allow文件表明了写在此文件中的用户才可以使用at，deny文件中的用户无法使用。</p>\n<h4 id=\"周期性计划任务（cron）\"><a href=\"#周期性计划任务（cron）\" class=\"headerlink\" title=\"周期性计划任务（cron）\"></a>周期性计划任务（cron）</h4><p>由进程crond守护，生成的任务文件存放在／var/spool/cron/目录下文件会以用户名命名。也采用了／etc/cron.allow和／etc/cron.deny的授权方式。配置文件为／etc/crontab 。周期性计划任务分为两种，一种是用户级别（通过crontab －e来制定），一种为系统级别（写在／etc/crontab文件中），建议使用crontab来制定。</p>\n<p>命令用法</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab   参数</span><br><span class=\"line\"><span class=\"deletion\">-u ：只有 root 才能进行这个任务，亦即帮其他使用者创建/移除 crontab 工作排程；</span></span><br><span class=\"line\"><span class=\"deletion\">-e ：编辑 crontab 的工作内容，同vi编辑文件相同（其实就是vi了一个新文件到／var/spool/cron下）</span></span><br><span class=\"line\"><span class=\"deletion\">-l ：查阅 crontab 的工作内容</span></span><br><span class=\"line\"><span class=\"deletion\">-r ：移除所有的 crontab 的工作内容，若仅要移除一项，请用 -e 去编辑。</span></span><br><span class=\"line\"></span><br><span class=\"line\">［root@localhost ～］#crontab  -u  testuser  -e    #为testuser用户制定计划任务，会打开vi的编辑界面，每一行就是一个任务</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###时间的写法基本就是<span class=\"string\">\",\"</span> <span class=\"string\">\"-\"</span> <span class=\"string\">\"/\"</span>三种符号来间隔,“＊”代表所有都匹配。</span><br><span class=\"line\"><span class=\"number\">30</span> * * * *           &lt;==每小时的<span class=\"number\">30</span>分，输出hello</span><br><span class=\"line\">*/<span class=\"number\">10</span> ＊ *  *  *      &lt;==每隔<span class=\"number\">10</span>分钟</span><br><span class=\"line\"><span class=\"number\">30</span> <span class=\"number\">12</span> * * <span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>      &lt;==每周<span class=\"number\">1</span> <span class=\"number\">3</span> <span class=\"number\">5</span>的<span class=\"number\">12</span>时<span class=\"number\">30</span>分</span><br><span class=\"line\"><span class=\"number\">30</span> <span class=\"number\">12</span> <span class=\"number\">1</span> <span class=\"number\">3</span><span class=\"number\">-5</span> *        &lt;==每年的<span class=\"number\">3</span> <span class=\"number\">4</span> <span class=\"number\">5</span>月<span class=\"number\">1</span>日<span class=\"number\">12</span>时<span class=\"number\">30</span>分</span><br></pre></td></tr></table></figure>\n\n<p>同样的／etc/crontab 中的时间写法也是类似但<code>语法不同</code>cron每分钟都会去读一次计划任务同时也会读一次／etc/crontab文件，crontab文件中设置了4个文件夹（配置文件中的<code>run-parts</code>命令部分），系统会在不同的时间去读取运行其中的文件，我们可以将脚本文件放到对应的文件夹下也可以实现脚本的周期性执行。我们的locate数据库同步，logrotate等都是放在这些目录下来实现周期性的工作。</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># cat /etc/crontab</span></span><br><span class=\"line\"><span class=\"keyword\">SHELL</span><span class=\"bash\">=/bin/bash</span></span><br><span class=\"line\">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class=\"line\">MAILTO=root</span><br><span class=\"line\">HOME=/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># run-parts</span></span><br><span class=\"line\"><span class=\"number\">01</span> * * * * root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.hourly &lt;==每小时执行一次</span></span><br><span class=\"line\"><span class=\"number\">02</span> <span class=\"number\">4</span> * * * root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.daily &lt;==每天执行一次</span></span><br><span class=\"line\"><span class=\"number\">22</span> <span class=\"number\">4</span> * * <span class=\"number\">0</span> root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.weekly &lt;==每周日执行一次</span></span><br><span class=\"line\"><span class=\"number\">42</span> <span class=\"number\">4</span> <span class=\"number\">1</span> * * root <span class=\"keyword\">run</span><span class=\"bash\">-parts /etc/cron.monthly &lt;==每个月 1 号执行一次</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###run-parts 我们可以通过which命令来查看其实是/usr/bin/run-parts命令，我们可以man一下这个命令，或者直接打开这个命令的脚本，会发现这个命令会将目录下的脚本全部执行一次。</span></span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"arp_ignore和arp_announce参数说明","published":1,"author":"xiemx","comments":1,"date":"2016-08-10T20:08:15.000Z","_content":"lvsDR模式中需要对real server进行arp抑制，我们通常会在sysctl.conf文件中修改如下内核参数：\n```\nnet.ipv4.conf.lo.arp_ignore = 1\nnet.ipv4.conf.lo.arp_announce = 2\nnet.ipv4.conf.all.arp_ignore = 1\nnet.ipv4.conf.all.arp_announce = 2\narp_ignore:定义对目标地址为本地IP的ARP询问不同的应答模式0 \n\n0 - (默认值): 回应任何网络接口上对任何本地IP地址的arp查询请求 \n1 - 只回答目标IP地址是来访网络接口本地地址的ARP查询请求 \n2 -只回答目标IP地址是来访网络接口本地地址的ARP查询请求,且来访IP必须在该网络接口的子网段内 \n3 - 不回应该网络界面的arp请求，而只对设置的唯一和连接地址做出回应 \n4-7 - 保留未使用 \n8 -不回应所有（本地地址）的arp查询\n\narp_announce:对网络接口上，本地IP地址的发出的，ARP回应，作出相应级别的限制: 确定不同程度的限制,宣布对来自本地源IP地址发出Arp请求的接口 \n\n0 - (默认) 在任意网络接口（eth0,eth1，lo）上的任何本地地址 \n1 -尽量避免不在该网络接口子网段的本地地址做出arp回应. 当发起ARP请求的源IP地址是被设置应该经由路由达到此网络接口的时候很有用.此时会检查来访IP是否为所有接口上的子网段内ip之一.如果改来访IP不属于各个网络接口上的子网段内,那么将采用级别2的方式来进行处理. \n2 - 对查询目标使用最适当的本地地址.在此模式下将忽略这个IP数据包的源地址并尝试选择与能与该地址通信的本地地址.首要是选择所有的网络接口的子网中外出访问子网中包含该目标IP地址的本地地址. 如果没有合适的地址被发现,将选择当前的发送网络接口或其他的有可能接受到该ARP回应的网络接口来进行发送.\n```\n","source":"_posts/linux-disable-arp.md","raw":"---\nlayout: post\ntitle: arp_ignore和arp_announce参数说明\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-11 04:08:15\ntags: [ linux, arp ]\ncategories:\n    - linux\n---\nlvsDR模式中需要对real server进行arp抑制，我们通常会在sysctl.conf文件中修改如下内核参数：\n```\nnet.ipv4.conf.lo.arp_ignore = 1\nnet.ipv4.conf.lo.arp_announce = 2\nnet.ipv4.conf.all.arp_ignore = 1\nnet.ipv4.conf.all.arp_announce = 2\narp_ignore:定义对目标地址为本地IP的ARP询问不同的应答模式0 \n\n0 - (默认值): 回应任何网络接口上对任何本地IP地址的arp查询请求 \n1 - 只回答目标IP地址是来访网络接口本地地址的ARP查询请求 \n2 -只回答目标IP地址是来访网络接口本地地址的ARP查询请求,且来访IP必须在该网络接口的子网段内 \n3 - 不回应该网络界面的arp请求，而只对设置的唯一和连接地址做出回应 \n4-7 - 保留未使用 \n8 -不回应所有（本地地址）的arp查询\n\narp_announce:对网络接口上，本地IP地址的发出的，ARP回应，作出相应级别的限制: 确定不同程度的限制,宣布对来自本地源IP地址发出Arp请求的接口 \n\n0 - (默认) 在任意网络接口（eth0,eth1，lo）上的任何本地地址 \n1 -尽量避免不在该网络接口子网段的本地地址做出arp回应. 当发起ARP请求的源IP地址是被设置应该经由路由达到此网络接口的时候很有用.此时会检查来访IP是否为所有接口上的子网段内ip之一.如果改来访IP不属于各个网络接口上的子网段内,那么将采用级别2的方式来进行处理. \n2 - 对查询目标使用最适当的本地地址.在此模式下将忽略这个IP数据包的源地址并尝试选择与能与该地址通信的本地地址.首要是选择所有的网络接口的子网中外出访问子网中包含该目标IP地址的本地地址. 如果没有合适的地址被发现,将选择当前的发送网络接口或其他的有可能接受到该ARP回应的网络接口来进行发送.\n```\n","slug":"linux-disable-arp","updated":"2019-10-21T06:57:42.477Z","photos":[],"link":"","_id":"ck42dyidb002ju9uri74fw4sh","content":"<p>lvsDR模式中需要对real server进行arp抑制，我们通常会在sysctl.conf文件中修改如下内核参数：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.lo</span><span class=\"selector-class\">.arp_ignore</span> = <span class=\"number\">1</span></span><br><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.lo</span><span class=\"selector-class\">.arp_announce</span> = <span class=\"number\">2</span></span><br><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.all</span><span class=\"selector-class\">.arp_ignore</span> = <span class=\"number\">1</span></span><br><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.all</span><span class=\"selector-class\">.arp_announce</span> = <span class=\"number\">2</span></span><br><span class=\"line\">arp_ignore:定义对目标地址为本地IP的ARP询问不同的应答模式<span class=\"number\">0</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span> - (默认值): 回应任何网络接口上对任何本地IP地址的arp查询请求 </span><br><span class=\"line\"><span class=\"number\">1</span> - 只回答目标IP地址是来访网络接口本地地址的ARP查询请求 </span><br><span class=\"line\"><span class=\"number\">2</span> -只回答目标IP地址是来访网络接口本地地址的ARP查询请求,且来访IP必须在该网络接口的子网段内 </span><br><span class=\"line\"><span class=\"number\">3</span> - 不回应该网络界面的arp请求，而只对设置的唯一和连接地址做出回应 </span><br><span class=\"line\"><span class=\"number\">4</span>-<span class=\"number\">7</span> - 保留未使用 </span><br><span class=\"line\"><span class=\"number\">8</span> -不回应所有（本地地址）的arp查询</span><br><span class=\"line\"></span><br><span class=\"line\">arp_announce:对网络接口上，本地IP地址的发出的，ARP回应，作出相应级别的限制: 确定不同程度的限制,宣布对来自本地源IP地址发出Arp请求的接口 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span> - (默认) 在任意网络接口（eth0,eth1，lo）上的任何本地地址 </span><br><span class=\"line\"><span class=\"number\">1</span> -尽量避免不在该网络接口子网段的本地地址做出arp回应. 当发起ARP请求的源IP地址是被设置应该经由路由达到此网络接口的时候很有用.此时会检查来访IP是否为所有接口上的子网段内ip之一.如果改来访IP不属于各个网络接口上的子网段内,那么将采用级别<span class=\"number\">2</span>的方式来进行处理. </span><br><span class=\"line\"><span class=\"number\">2</span> - 对查询目标使用最适当的本地地址.在此模式下将忽略这个IP数据包的源地址并尝试选择与能与该地址通信的本地地址.首要是选择所有的网络接口的子网中外出访问子网中包含该目标IP地址的本地地址. 如果没有合适的地址被发现,将选择当前的发送网络接口或其他的有可能接受到该ARP回应的网络接口来进行发送.</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>lvsDR模式中需要对real server进行arp抑制，我们通常会在sysctl.conf文件中修改如下内核参数：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.lo</span><span class=\"selector-class\">.arp_ignore</span> = <span class=\"number\">1</span></span><br><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.lo</span><span class=\"selector-class\">.arp_announce</span> = <span class=\"number\">2</span></span><br><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.all</span><span class=\"selector-class\">.arp_ignore</span> = <span class=\"number\">1</span></span><br><span class=\"line\">net<span class=\"selector-class\">.ipv4</span><span class=\"selector-class\">.conf</span><span class=\"selector-class\">.all</span><span class=\"selector-class\">.arp_announce</span> = <span class=\"number\">2</span></span><br><span class=\"line\">arp_ignore:定义对目标地址为本地IP的ARP询问不同的应答模式<span class=\"number\">0</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span> - (默认值): 回应任何网络接口上对任何本地IP地址的arp查询请求 </span><br><span class=\"line\"><span class=\"number\">1</span> - 只回答目标IP地址是来访网络接口本地地址的ARP查询请求 </span><br><span class=\"line\"><span class=\"number\">2</span> -只回答目标IP地址是来访网络接口本地地址的ARP查询请求,且来访IP必须在该网络接口的子网段内 </span><br><span class=\"line\"><span class=\"number\">3</span> - 不回应该网络界面的arp请求，而只对设置的唯一和连接地址做出回应 </span><br><span class=\"line\"><span class=\"number\">4</span>-<span class=\"number\">7</span> - 保留未使用 </span><br><span class=\"line\"><span class=\"number\">8</span> -不回应所有（本地地址）的arp查询</span><br><span class=\"line\"></span><br><span class=\"line\">arp_announce:对网络接口上，本地IP地址的发出的，ARP回应，作出相应级别的限制: 确定不同程度的限制,宣布对来自本地源IP地址发出Arp请求的接口 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">0</span> - (默认) 在任意网络接口（eth0,eth1，lo）上的任何本地地址 </span><br><span class=\"line\"><span class=\"number\">1</span> -尽量避免不在该网络接口子网段的本地地址做出arp回应. 当发起ARP请求的源IP地址是被设置应该经由路由达到此网络接口的时候很有用.此时会检查来访IP是否为所有接口上的子网段内ip之一.如果改来访IP不属于各个网络接口上的子网段内,那么将采用级别<span class=\"number\">2</span>的方式来进行处理. </span><br><span class=\"line\"><span class=\"number\">2</span> - 对查询目标使用最适当的本地地址.在此模式下将忽略这个IP数据包的源地址并尝试选择与能与该地址通信的本地地址.首要是选择所有的网络接口的子网中外出访问子网中包含该目标IP地址的本地地址. 如果没有合适的地址被发现,将选择当前的发送网络接口或其他的有可能接受到该ARP回应的网络接口来进行发送.</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"Linux查找","published":1,"author":"xiemx","comments":1,"date":"2015-10-16T02:10:31.000Z","_content":"1. find\n\n功能强大，用法自行google\n\n2. locate\n\nlocate命令其实是\"find -name\"的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/mlocate/mlocate.db），这个数据库中含 有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可 以在使用locate之前，先使用updatedb命令，手动更新数据库。\n\n例：\n\nlocate /etc/sh* ——搜索etc目录下所有以sh开头的文件。\n\nlocate -i ~/m*——搜索用户主目录下，所有以m开头的文件，并且忽略大小写。\n\n3. whereis\n\nwhereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。\n\n4. which\n\nwhich命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。\n","source":"_posts/linux-find-commands.md","raw":"---\nlayout: post\ntitle: Linux查找\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-10-16 10:10:31\ntags: [ linux, command ]\ncategories:\n  - linux\n---\n1. find\n\n功能强大，用法自行google\n\n2. locate\n\nlocate命令其实是\"find -name\"的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/mlocate/mlocate.db），这个数据库中含 有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可 以在使用locate之前，先使用updatedb命令，手动更新数据库。\n\n例：\n\nlocate /etc/sh* ——搜索etc目录下所有以sh开头的文件。\n\nlocate -i ~/m*——搜索用户主目录下，所有以m开头的文件，并且忽略大小写。\n\n3. whereis\n\nwhereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。\n\n4. which\n\nwhich命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。\n","slug":"linux-find-commands","updated":"2019-10-21T06:57:42.716Z","photos":[],"link":"","_id":"ck42dyidc002mu9ur0c8xnl9e","content":"<ol>\n<li>find</li>\n</ol>\n<p>功能强大，用法自行google</p>\n<ol start=\"2\">\n<li>locate</li>\n</ol>\n<p>locate命令其实是”find -name”的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/mlocate/mlocate.db），这个数据库中含 有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可 以在使用locate之前，先使用updatedb命令，手动更新数据库。</p>\n<p>例：</p>\n<p>locate /etc/sh* ——搜索etc目录下所有以sh开头的文件。</p>\n<p>locate -i ~/m*——搜索用户主目录下，所有以m开头的文件，并且忽略大小写。</p>\n<ol start=\"3\">\n<li>whereis</li>\n</ol>\n<p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p>\n<ol start=\"4\">\n<li>which</li>\n</ol>\n<p>which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>find</li>\n</ol>\n<p>功能强大，用法自行google</p>\n<ol start=\"2\">\n<li>locate</li>\n</ol>\n<p>locate命令其实是”find -name”的另一种写法，但是要比后者快得多，原因在于它不搜索具体目录，而是搜索一个数据库（/var/lib/mlocate/mlocate.db），这个数据库中含 有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次，所以使用locate命令查不到最新变动过的文件。为了避免这种情况，可 以在使用locate之前，先使用updatedb命令，手动更新数据库。</p>\n<p>例：</p>\n<p>locate /etc/sh* ——搜索etc目录下所有以sh开头的文件。</p>\n<p>locate -i ~/m*——搜索用户主目录下，所有以m开头的文件，并且忽略大小写。</p>\n<ol start=\"3\">\n<li>whereis</li>\n</ol>\n<p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p>\n<ol start=\"4\">\n<li>which</li>\n</ol>\n<p>which命令的作用是，在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。也就是说，使用which命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>\n"},{"layout":"post","title":"Linux内核调优部分参数说明","published":1,"author":"xiemx","comments":1,"date":"2016-05-23T03:05:07.000Z","_content":"#接收套接字缓冲区大小的默认值(以字节为单位)。\nnet.core.rmem_default = 262144\n\n#接收套接字缓冲区大小的最大值(以字节为单位)。\n\nnet.core.rmem_max = 16777216\n\n#发送套接字缓冲区大小的默认值(以字节为单位)。\n\nnet.core.wmem_default = 262144\n\n#发送套接字缓冲区大小的最大值(以字节为单位)。\n\nnet.core.wmem_max = 16777216\n\n#用来限制监听(LISTEN)队列最大数据包的数量，超过这个数量就会导致链接超时或者触发重传机制。\n\nnet.core.somaxconn = 262144\n\n#当网卡接收数据包的速度大于内核处理的速度时，会有一个队列保存这些数据包。这个参数表示该队列的最大值。\n\nnet.core.netdev_max_backlog = 262144\n\n#表示系统中最多有多少TCP套接字不被关联到任何一个用户文件句柄上。如果超过这里设置的数字，连接就会复位并输出警告信息。这个限制仅仅是为了防止简单的DoS攻击。此值不能太小。\n\nnet.ipv4.tcp_max_orphans = 262144\n\n#表示那些尚未收到客户端确认信息的连接（SYN消息）队列的长度，默认为1024，加大队列长度为262144，可以容纳更多等待连接的网络连接数。\n\nnet.ipv4.tcp_max_syn_backlog = 262144\n\n#表示系统同时保持TIME_WAIT套接字的最大数量。如果超过此数，TIME_WAIT套接字会被立刻清除并且打印警告信息。之所以要设定这个限制，纯粹为了抵御那些简单的DoS攻击，不过，过多的TIME_WAIT套接字也会消耗服务器资源，甚至死机。\n\nnet.ipv4.tcp_max_tw_buckets = 10000\n\n#表示允许系统打开的端口范围。\n\nnet.ipv4.ip_local_port_range = 1024 65500\n\n#以下两参数可解决生产场景中大量连接的服务器中TIME_WAIT过多问题。\n\n#表示开启TCP连接中TIME_WAIT套接字的快速回收，默认为0，表示关闭。\n\nnet.ipv4.tcp_tw_recycle = 1\n\n#表示允许重用TIME_WAIT状态的套接字用于新的TCP连接,默认为0，表示关闭。\n\nnet.ipv4.tcp_tw_reuse = 1\n\n#当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭。\n\nnet.ipv4.tcp_syncookies = 1\n\n#表示系统允许SYN连接的重试次数。为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK包。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。\n\nnet.ipv4.tcp_synack_retries = 1\n\n#表示在内核放弃建立连接之前发送SYN包的数量。\n\nnet.ipv4.tcp_syn_retries = 1\n\n#减少处于FIN-WAIT-2连接状态的时间，使系统可以处理更多的连接。\n\nnet.ipv4.tcp_fin_timeout = 30\n\n#这个参数表示当keepalive启用时，TCP发送keepalive消息的频度。默认是2小时，若将其设置得小一些，可以更快地清理无效的连接。\n\nnet.ipv4.tcp_keepalive_time = 600\n\n#探测消息未获得响应时，重发该消息的间隔时间（秒）。系统默认75秒。\n\nnet.ipv4.tcp_keepalive_intvl = 30\n\n#在认定连接失效之前，发送多少个TCP的keepalive探测包。系统默认值是9。这个值乘以tcp_keepalive_intvl之后决定了，一个连接发送了keepalive探测包之后可以有多少时间没有回应。\n\nnet.ipv4.tcp_keepalive_probes = 3\n\n#确定TCP栈应该如何反映内存使用，每个值的单位都是内存页（通常是4KB）。第一个值是内存使用的下限；第二个值是内存压力模式开始对缓冲区使用应用压力的上限；第三个值是内存使用的上限。在这个层次上可以将报文丢弃，从而减少对内存的使用。示例中第一个值为7864324/1024/1024=3G，第二个值为10485764/1024/1024=4G，第三个值为1572864*4/1024/1024=6G。\n\nnet.ipv4.tcp_mem = 786432 1048576 1572864\n\n#此参数限制并发未完成的异步请求数目，应该设置避免I/O子系统故障。\n\nfs.aio-max-nr = 1048576\n\n#该参数决定了系统中所允许的文件句柄最大数目，文件句柄设置代表linux系统中可以打开的文件的数量。\n\nfs.file-max = 6815744\n\n#表示尽量使用内存，减少使用磁盘swap交换分区，内存速度明显高于磁盘一个数量级。\n\nvm.swappiness = 0","source":"_posts/linux-kernal-paramenter.md","raw":"---\nlayout: post\ntitle: Linux内核调优部分参数说明\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-05-23 11:05:07\ntags: [ linux, kernal]\ncategories:\n    - linux\n---\n#接收套接字缓冲区大小的默认值(以字节为单位)。\nnet.core.rmem_default = 262144\n\n#接收套接字缓冲区大小的最大值(以字节为单位)。\n\nnet.core.rmem_max = 16777216\n\n#发送套接字缓冲区大小的默认值(以字节为单位)。\n\nnet.core.wmem_default = 262144\n\n#发送套接字缓冲区大小的最大值(以字节为单位)。\n\nnet.core.wmem_max = 16777216\n\n#用来限制监听(LISTEN)队列最大数据包的数量，超过这个数量就会导致链接超时或者触发重传机制。\n\nnet.core.somaxconn = 262144\n\n#当网卡接收数据包的速度大于内核处理的速度时，会有一个队列保存这些数据包。这个参数表示该队列的最大值。\n\nnet.core.netdev_max_backlog = 262144\n\n#表示系统中最多有多少TCP套接字不被关联到任何一个用户文件句柄上。如果超过这里设置的数字，连接就会复位并输出警告信息。这个限制仅仅是为了防止简单的DoS攻击。此值不能太小。\n\nnet.ipv4.tcp_max_orphans = 262144\n\n#表示那些尚未收到客户端确认信息的连接（SYN消息）队列的长度，默认为1024，加大队列长度为262144，可以容纳更多等待连接的网络连接数。\n\nnet.ipv4.tcp_max_syn_backlog = 262144\n\n#表示系统同时保持TIME_WAIT套接字的最大数量。如果超过此数，TIME_WAIT套接字会被立刻清除并且打印警告信息。之所以要设定这个限制，纯粹为了抵御那些简单的DoS攻击，不过，过多的TIME_WAIT套接字也会消耗服务器资源，甚至死机。\n\nnet.ipv4.tcp_max_tw_buckets = 10000\n\n#表示允许系统打开的端口范围。\n\nnet.ipv4.ip_local_port_range = 1024 65500\n\n#以下两参数可解决生产场景中大量连接的服务器中TIME_WAIT过多问题。\n\n#表示开启TCP连接中TIME_WAIT套接字的快速回收，默认为0，表示关闭。\n\nnet.ipv4.tcp_tw_recycle = 1\n\n#表示允许重用TIME_WAIT状态的套接字用于新的TCP连接,默认为0，表示关闭。\n\nnet.ipv4.tcp_tw_reuse = 1\n\n#当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭。\n\nnet.ipv4.tcp_syncookies = 1\n\n#表示系统允许SYN连接的重试次数。为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK包。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。\n\nnet.ipv4.tcp_synack_retries = 1\n\n#表示在内核放弃建立连接之前发送SYN包的数量。\n\nnet.ipv4.tcp_syn_retries = 1\n\n#减少处于FIN-WAIT-2连接状态的时间，使系统可以处理更多的连接。\n\nnet.ipv4.tcp_fin_timeout = 30\n\n#这个参数表示当keepalive启用时，TCP发送keepalive消息的频度。默认是2小时，若将其设置得小一些，可以更快地清理无效的连接。\n\nnet.ipv4.tcp_keepalive_time = 600\n\n#探测消息未获得响应时，重发该消息的间隔时间（秒）。系统默认75秒。\n\nnet.ipv4.tcp_keepalive_intvl = 30\n\n#在认定连接失效之前，发送多少个TCP的keepalive探测包。系统默认值是9。这个值乘以tcp_keepalive_intvl之后决定了，一个连接发送了keepalive探测包之后可以有多少时间没有回应。\n\nnet.ipv4.tcp_keepalive_probes = 3\n\n#确定TCP栈应该如何反映内存使用，每个值的单位都是内存页（通常是4KB）。第一个值是内存使用的下限；第二个值是内存压力模式开始对缓冲区使用应用压力的上限；第三个值是内存使用的上限。在这个层次上可以将报文丢弃，从而减少对内存的使用。示例中第一个值为7864324/1024/1024=3G，第二个值为10485764/1024/1024=4G，第三个值为1572864*4/1024/1024=6G。\n\nnet.ipv4.tcp_mem = 786432 1048576 1572864\n\n#此参数限制并发未完成的异步请求数目，应该设置避免I/O子系统故障。\n\nfs.aio-max-nr = 1048576\n\n#该参数决定了系统中所允许的文件句柄最大数目，文件句柄设置代表linux系统中可以打开的文件的数量。\n\nfs.file-max = 6815744\n\n#表示尽量使用内存，减少使用磁盘swap交换分区，内存速度明显高于磁盘一个数量级。\n\nvm.swappiness = 0","slug":"linux-kernal-paramenter","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyide002qu9ur2bszti68","content":"<p>#接收套接字缓冲区大小的默认值(以字节为单位)。<br>net.core.rmem_default = 262144</p>\n<p>#接收套接字缓冲区大小的最大值(以字节为单位)。</p>\n<p>net.core.rmem_max = 16777216</p>\n<p>#发送套接字缓冲区大小的默认值(以字节为单位)。</p>\n<p>net.core.wmem_default = 262144</p>\n<p>#发送套接字缓冲区大小的最大值(以字节为单位)。</p>\n<p>net.core.wmem_max = 16777216</p>\n<p>#用来限制监听(LISTEN)队列最大数据包的数量，超过这个数量就会导致链接超时或者触发重传机制。</p>\n<p>net.core.somaxconn = 262144</p>\n<p>#当网卡接收数据包的速度大于内核处理的速度时，会有一个队列保存这些数据包。这个参数表示该队列的最大值。</p>\n<p>net.core.netdev_max_backlog = 262144</p>\n<p>#表示系统中最多有多少TCP套接字不被关联到任何一个用户文件句柄上。如果超过这里设置的数字，连接就会复位并输出警告信息。这个限制仅仅是为了防止简单的DoS攻击。此值不能太小。</p>\n<p>net.ipv4.tcp_max_orphans = 262144</p>\n<p>#表示那些尚未收到客户端确认信息的连接（SYN消息）队列的长度，默认为1024，加大队列长度为262144，可以容纳更多等待连接的网络连接数。</p>\n<p>net.ipv4.tcp_max_syn_backlog = 262144</p>\n<p>#表示系统同时保持TIME_WAIT套接字的最大数量。如果超过此数，TIME_WAIT套接字会被立刻清除并且打印警告信息。之所以要设定这个限制，纯粹为了抵御那些简单的DoS攻击，不过，过多的TIME_WAIT套接字也会消耗服务器资源，甚至死机。</p>\n<p>net.ipv4.tcp_max_tw_buckets = 10000</p>\n<p>#表示允许系统打开的端口范围。</p>\n<p>net.ipv4.ip_local_port_range = 1024 65500</p>\n<p>#以下两参数可解决生产场景中大量连接的服务器中TIME_WAIT过多问题。</p>\n<p>#表示开启TCP连接中TIME_WAIT套接字的快速回收，默认为0，表示关闭。</p>\n<p>net.ipv4.tcp_tw_recycle = 1</p>\n<p>#表示允许重用TIME_WAIT状态的套接字用于新的TCP连接,默认为0，表示关闭。</p>\n<p>net.ipv4.tcp_tw_reuse = 1</p>\n<p>#当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭。</p>\n<p>net.ipv4.tcp_syncookies = 1</p>\n<p>#表示系统允许SYN连接的重试次数。为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK包。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。</p>\n<p>net.ipv4.tcp_synack_retries = 1</p>\n<p>#表示在内核放弃建立连接之前发送SYN包的数量。</p>\n<p>net.ipv4.tcp_syn_retries = 1</p>\n<p>#减少处于FIN-WAIT-2连接状态的时间，使系统可以处理更多的连接。</p>\n<p>net.ipv4.tcp_fin_timeout = 30</p>\n<p>#这个参数表示当keepalive启用时，TCP发送keepalive消息的频度。默认是2小时，若将其设置得小一些，可以更快地清理无效的连接。</p>\n<p>net.ipv4.tcp_keepalive_time = 600</p>\n<p>#探测消息未获得响应时，重发该消息的间隔时间（秒）。系统默认75秒。</p>\n<p>net.ipv4.tcp_keepalive_intvl = 30</p>\n<p>#在认定连接失效之前，发送多少个TCP的keepalive探测包。系统默认值是9。这个值乘以tcp_keepalive_intvl之后决定了，一个连接发送了keepalive探测包之后可以有多少时间没有回应。</p>\n<p>net.ipv4.tcp_keepalive_probes = 3</p>\n<p>#确定TCP栈应该如何反映内存使用，每个值的单位都是内存页（通常是4KB）。第一个值是内存使用的下限；第二个值是内存压力模式开始对缓冲区使用应用压力的上限；第三个值是内存使用的上限。在这个层次上可以将报文丢弃，从而减少对内存的使用。示例中第一个值为7864324/1024/1024=3G，第二个值为10485764/1024/1024=4G，第三个值为1572864*4/1024/1024=6G。</p>\n<p>net.ipv4.tcp_mem = 786432 1048576 1572864</p>\n<p>#此参数限制并发未完成的异步请求数目，应该设置避免I/O子系统故障。</p>\n<p>fs.aio-max-nr = 1048576</p>\n<p>#该参数决定了系统中所允许的文件句柄最大数目，文件句柄设置代表linux系统中可以打开的文件的数量。</p>\n<p>fs.file-max = 6815744</p>\n<p>#表示尽量使用内存，减少使用磁盘swap交换分区，内存速度明显高于磁盘一个数量级。</p>\n<p>vm.swappiness = 0</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#接收套接字缓冲区大小的默认值(以字节为单位)。<br>net.core.rmem_default = 262144</p>\n<p>#接收套接字缓冲区大小的最大值(以字节为单位)。</p>\n<p>net.core.rmem_max = 16777216</p>\n<p>#发送套接字缓冲区大小的默认值(以字节为单位)。</p>\n<p>net.core.wmem_default = 262144</p>\n<p>#发送套接字缓冲区大小的最大值(以字节为单位)。</p>\n<p>net.core.wmem_max = 16777216</p>\n<p>#用来限制监听(LISTEN)队列最大数据包的数量，超过这个数量就会导致链接超时或者触发重传机制。</p>\n<p>net.core.somaxconn = 262144</p>\n<p>#当网卡接收数据包的速度大于内核处理的速度时，会有一个队列保存这些数据包。这个参数表示该队列的最大值。</p>\n<p>net.core.netdev_max_backlog = 262144</p>\n<p>#表示系统中最多有多少TCP套接字不被关联到任何一个用户文件句柄上。如果超过这里设置的数字，连接就会复位并输出警告信息。这个限制仅仅是为了防止简单的DoS攻击。此值不能太小。</p>\n<p>net.ipv4.tcp_max_orphans = 262144</p>\n<p>#表示那些尚未收到客户端确认信息的连接（SYN消息）队列的长度，默认为1024，加大队列长度为262144，可以容纳更多等待连接的网络连接数。</p>\n<p>net.ipv4.tcp_max_syn_backlog = 262144</p>\n<p>#表示系统同时保持TIME_WAIT套接字的最大数量。如果超过此数，TIME_WAIT套接字会被立刻清除并且打印警告信息。之所以要设定这个限制，纯粹为了抵御那些简单的DoS攻击，不过，过多的TIME_WAIT套接字也会消耗服务器资源，甚至死机。</p>\n<p>net.ipv4.tcp_max_tw_buckets = 10000</p>\n<p>#表示允许系统打开的端口范围。</p>\n<p>net.ipv4.ip_local_port_range = 1024 65500</p>\n<p>#以下两参数可解决生产场景中大量连接的服务器中TIME_WAIT过多问题。</p>\n<p>#表示开启TCP连接中TIME_WAIT套接字的快速回收，默认为0，表示关闭。</p>\n<p>net.ipv4.tcp_tw_recycle = 1</p>\n<p>#表示允许重用TIME_WAIT状态的套接字用于新的TCP连接,默认为0，表示关闭。</p>\n<p>net.ipv4.tcp_tw_reuse = 1</p>\n<p>#当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭。</p>\n<p>net.ipv4.tcp_syncookies = 1</p>\n<p>#表示系统允许SYN连接的重试次数。为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK包。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。</p>\n<p>net.ipv4.tcp_synack_retries = 1</p>\n<p>#表示在内核放弃建立连接之前发送SYN包的数量。</p>\n<p>net.ipv4.tcp_syn_retries = 1</p>\n<p>#减少处于FIN-WAIT-2连接状态的时间，使系统可以处理更多的连接。</p>\n<p>net.ipv4.tcp_fin_timeout = 30</p>\n<p>#这个参数表示当keepalive启用时，TCP发送keepalive消息的频度。默认是2小时，若将其设置得小一些，可以更快地清理无效的连接。</p>\n<p>net.ipv4.tcp_keepalive_time = 600</p>\n<p>#探测消息未获得响应时，重发该消息的间隔时间（秒）。系统默认75秒。</p>\n<p>net.ipv4.tcp_keepalive_intvl = 30</p>\n<p>#在认定连接失效之前，发送多少个TCP的keepalive探测包。系统默认值是9。这个值乘以tcp_keepalive_intvl之后决定了，一个连接发送了keepalive探测包之后可以有多少时间没有回应。</p>\n<p>net.ipv4.tcp_keepalive_probes = 3</p>\n<p>#确定TCP栈应该如何反映内存使用，每个值的单位都是内存页（通常是4KB）。第一个值是内存使用的下限；第二个值是内存压力模式开始对缓冲区使用应用压力的上限；第三个值是内存使用的上限。在这个层次上可以将报文丢弃，从而减少对内存的使用。示例中第一个值为7864324/1024/1024=3G，第二个值为10485764/1024/1024=4G，第三个值为1572864*4/1024/1024=6G。</p>\n<p>net.ipv4.tcp_mem = 786432 1048576 1572864</p>\n<p>#此参数限制并发未完成的异步请求数目，应该设置避免I/O子系统故障。</p>\n<p>fs.aio-max-nr = 1048576</p>\n<p>#该参数决定了系统中所允许的文件句柄最大数目，文件句柄设置代表linux系统中可以打开的文件的数量。</p>\n<p>fs.file-max = 6815744</p>\n<p>#表示尽量使用内存，减少使用磁盘swap交换分区，内存速度明显高于磁盘一个数量级。</p>\n<p>vm.swappiness = 0</p>\n"},{"layout":"post","title":"linux自带的限制策略","published":1,"author":"xiemx","comments":1,"date":"2016-07-11T01:07:34.000Z","_content":"```\n[root@iZ11eqvuvnqZ ~]# cat /etc/security/limits.conf \n# /etc/security/limits.conf\n#\n#This file sets the resource limits for the users logged in via PAM.\n#It does not affect resource limits of the system services.\n#\n#Also note that configuration files in /etc/security/limits.d directory,\n#which are read in alphabetical order, override the settings in this\n#file in case the domain is the same or more specific.\n#That means for example that setting a limit for wildcard domain here\n#can be overriden with a wildcard setting in a config file in the\n#subdirectory, but a user specific setting here can be overriden only\n#with a user specific setting in the subdirectory.\n#\n#Each line describes a limit for a user in the form:\n#\n#domain>       type>  item>  value>\n#\n#Where:\n#domain> can be:\n#        - a user name\n#        - a group name, with @group syntax\n#        - the wildcard *, for default entry\n#        - the wildcard %, can be also used with %group syntax,\n#                 for maxlogin limit\n#\n#type> can have the two values:\n#        - \"soft\" for enforcing the soft limits\n#        - \"hard\" for enforcing hard limits\n#\n#item> can be one of the following:\n#        - core - limits the core file size (KB)\n#        - data - max data size (KB)\n#        - fsize - maximum filesize (KB)\n#        - memlock - max locked-in-memory address space (KB)\n#        - nofile - max number of open files\n#        - rss - max resident set size (KB)\n#        - stack - max stack size (KB)\n#        - cpu - max CPU time (MIN)\n#        - nproc - max number of processes\n#        - as - address space limit (KB)\n#        - maxlogins - max number of logins for this user\n#        - maxsyslogins - max number of logins on the system\n#        - priority - the priority to run user process with\n#        - locks - max number of file locks the user can hold\n#        - sigpending - max number of pending signals\n#        - msgqueue - max memory used by POSIX message queues (bytes)\n#        - nice - max nice priority allowed to raise to values: [-20, 19]\n#        - rtprio - max realtime priority\n#\n#domain>      &lt;type>  &lt;item>         &lt;value>\n#\n\n#*               soft    core            0\n#*               hard    rss             10000\n#@student        hard    nproc           20\n#@faculty        soft    nproc           20\n#@faculty        hard    nproc           50\n#ftp             hard    nproc           0\n#@student        -       maxlogins       4\n\n# End of file\n* soft nofile 65535\n* hard nofile 65535\n\n\n``` ","source":"_posts/linux-limit-tools.md","raw":"---\nlayout: post\ntitle: linux自带的限制策略\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-07-11 09:07:34\ntags: [ linux, command]\ncategories:\n    - linux\n---\n```\n[root@iZ11eqvuvnqZ ~]# cat /etc/security/limits.conf \n# /etc/security/limits.conf\n#\n#This file sets the resource limits for the users logged in via PAM.\n#It does not affect resource limits of the system services.\n#\n#Also note that configuration files in /etc/security/limits.d directory,\n#which are read in alphabetical order, override the settings in this\n#file in case the domain is the same or more specific.\n#That means for example that setting a limit for wildcard domain here\n#can be overriden with a wildcard setting in a config file in the\n#subdirectory, but a user specific setting here can be overriden only\n#with a user specific setting in the subdirectory.\n#\n#Each line describes a limit for a user in the form:\n#\n#domain>       type>  item>  value>\n#\n#Where:\n#domain> can be:\n#        - a user name\n#        - a group name, with @group syntax\n#        - the wildcard *, for default entry\n#        - the wildcard %, can be also used with %group syntax,\n#                 for maxlogin limit\n#\n#type> can have the two values:\n#        - \"soft\" for enforcing the soft limits\n#        - \"hard\" for enforcing hard limits\n#\n#item> can be one of the following:\n#        - core - limits the core file size (KB)\n#        - data - max data size (KB)\n#        - fsize - maximum filesize (KB)\n#        - memlock - max locked-in-memory address space (KB)\n#        - nofile - max number of open files\n#        - rss - max resident set size (KB)\n#        - stack - max stack size (KB)\n#        - cpu - max CPU time (MIN)\n#        - nproc - max number of processes\n#        - as - address space limit (KB)\n#        - maxlogins - max number of logins for this user\n#        - maxsyslogins - max number of logins on the system\n#        - priority - the priority to run user process with\n#        - locks - max number of file locks the user can hold\n#        - sigpending - max number of pending signals\n#        - msgqueue - max memory used by POSIX message queues (bytes)\n#        - nice - max nice priority allowed to raise to values: [-20, 19]\n#        - rtprio - max realtime priority\n#\n#domain>      &lt;type>  &lt;item>         &lt;value>\n#\n\n#*               soft    core            0\n#*               hard    rss             10000\n#@student        hard    nproc           20\n#@faculty        soft    nproc           20\n#@faculty        hard    nproc           50\n#ftp             hard    nproc           0\n#@student        -       maxlogins       4\n\n# End of file\n* soft nofile 65535\n* hard nofile 65535\n\n\n``` ","slug":"linux-limit-tools","updated":"2019-10-21T06:57:42.327Z","photos":[],"link":"","_id":"ck42dyidf002uu9ur6jevtphs","content":"<pre><code>[root@iZ11eqvuvnqZ ~]# cat /etc/security/limits.conf \n# /etc/security/limits.conf\n#\n#This file sets the resource limits for the users logged in via PAM.\n#It does not affect resource limits of the system services.\n#\n#Also note that configuration files in /etc/security/limits.d directory,\n#which are read in alphabetical order, override the settings in this\n#file in case the domain is the same or more specific.\n#That means for example that setting a limit for wildcard domain here\n#can be overriden with a wildcard setting in a config file in the\n#subdirectory, but a user specific setting here can be overriden only\n#with a user specific setting in the subdirectory.\n#\n#Each line describes a limit for a user in the form:\n#\n#domain&gt;       type&gt;  item&gt;  value&gt;\n#\n#Where:\n#domain&gt; can be:\n#        - a user name\n#        - a group name, with @group syntax\n#        - the wildcard *, for default entry\n#        - the wildcard %, can be also used with %group syntax,\n#                 for maxlogin limit\n#\n#type&gt; can have the two values:\n#        - &quot;soft&quot; for enforcing the soft limits\n#        - &quot;hard&quot; for enforcing hard limits\n#\n#item&gt; can be one of the following:\n#        - core - limits the core file size (KB)\n#        - data - max data size (KB)\n#        - fsize - maximum filesize (KB)\n#        - memlock - max locked-in-memory address space (KB)\n#        - nofile - max number of open files\n#        - rss - max resident set size (KB)\n#        - stack - max stack size (KB)\n#        - cpu - max CPU time (MIN)\n#        - nproc - max number of processes\n#        - as - address space limit (KB)\n#        - maxlogins - max number of logins for this user\n#        - maxsyslogins - max number of logins on the system\n#        - priority - the priority to run user process with\n#        - locks - max number of file locks the user can hold\n#        - sigpending - max number of pending signals\n#        - msgqueue - max memory used by POSIX message queues (bytes)\n#        - nice - max nice priority allowed to raise to values: [-20, 19]\n#        - rtprio - max realtime priority\n#\n#domain&gt;      &amp;lt;type&gt;  &amp;lt;item&gt;         &amp;lt;value&gt;\n#\n\n#*               soft    core            0\n#*               hard    rss             10000\n#@student        hard    nproc           20\n#@faculty        soft    nproc           20\n#@faculty        hard    nproc           50\n#ftp             hard    nproc           0\n#@student        -       maxlogins       4\n\n# End of file\n* soft nofile 65535\n* hard nofile 65535\n\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>[root@iZ11eqvuvnqZ ~]# cat /etc/security/limits.conf \n# /etc/security/limits.conf\n#\n#This file sets the resource limits for the users logged in via PAM.\n#It does not affect resource limits of the system services.\n#\n#Also note that configuration files in /etc/security/limits.d directory,\n#which are read in alphabetical order, override the settings in this\n#file in case the domain is the same or more specific.\n#That means for example that setting a limit for wildcard domain here\n#can be overriden with a wildcard setting in a config file in the\n#subdirectory, but a user specific setting here can be overriden only\n#with a user specific setting in the subdirectory.\n#\n#Each line describes a limit for a user in the form:\n#\n#domain&gt;       type&gt;  item&gt;  value&gt;\n#\n#Where:\n#domain&gt; can be:\n#        - a user name\n#        - a group name, with @group syntax\n#        - the wildcard *, for default entry\n#        - the wildcard %, can be also used with %group syntax,\n#                 for maxlogin limit\n#\n#type&gt; can have the two values:\n#        - &quot;soft&quot; for enforcing the soft limits\n#        - &quot;hard&quot; for enforcing hard limits\n#\n#item&gt; can be one of the following:\n#        - core - limits the core file size (KB)\n#        - data - max data size (KB)\n#        - fsize - maximum filesize (KB)\n#        - memlock - max locked-in-memory address space (KB)\n#        - nofile - max number of open files\n#        - rss - max resident set size (KB)\n#        - stack - max stack size (KB)\n#        - cpu - max CPU time (MIN)\n#        - nproc - max number of processes\n#        - as - address space limit (KB)\n#        - maxlogins - max number of logins for this user\n#        - maxsyslogins - max number of logins on the system\n#        - priority - the priority to run user process with\n#        - locks - max number of file locks the user can hold\n#        - sigpending - max number of pending signals\n#        - msgqueue - max memory used by POSIX message queues (bytes)\n#        - nice - max nice priority allowed to raise to values: [-20, 19]\n#        - rtprio - max realtime priority\n#\n#domain&gt;      &amp;lt;type&gt;  &amp;lt;item&gt;         &amp;lt;value&gt;\n#\n\n#*               soft    core            0\n#*               hard    rss             10000\n#@student        hard    nproc           20\n#@faculty        soft    nproc           20\n#@faculty        hard    nproc           50\n#ftp             hard    nproc           0\n#@student        -       maxlogins       4\n\n# End of file\n* soft nofile 65535\n* hard nofile 65535\n\n</code></pre>"},{"layout":"post","title":"Linux链接文件（ln）","published":1,"author":"xiemx","comments":1,"date":"2015-11-05T01:11:15.000Z","_content":"Linux系统中,内核为每一个文件分配一个`inode` ，文件属性保存在inode里，在访问文件时，文件系统通过查找到文件的inode中关于文件的存放block，进而去相对应的block中读取文件内容。而链接是一种在共享文件和访问它的用户的若干目录项之间建立联系的一种方法，在系统中有相同的一份文件A和B两个用户都需要这个文件，传统模式下我们会直接复制文件分给2个用户，这样虽然能实现目的。但是两份文件占用了我们双倍的block和inode资源。如果这个文件非常大的话将造成资源的极大浪费。此时Linux引入链接的概念，我们可以通过链接的方式去将文件共享给两个用户。\n\n### 两种链接：\n* 硬链接(Hard Link)\n* 和软链接(Soft Link)，软链接又称为符号链接（Symbolic link）\n\n#### 硬链接\n\n硬链接文件可以理解为一个指针，指向文件的inode，系统不重新分配inode。硬链接文件中记录的是源文件的inode信息，所以硬链接文件的属性和源文件的属性相同只是在硬链接连接数上+1，硬链接文件。\n\n  创建方法：\n```\n  ln    源文件    目标文件\n```\n  例子：\n```\n  ln   /tmp/testdir/testdir2/testfile1   /tmp/testfile1\n  ls  -i   /tmp/testdir/testdir2/testfile1   /tmp/testfile1\n  1491138      -rw-r–r–       1         root     root     48        11-14 14:10       /tmp/testdir/testdir2/testfile1\n  1491138      -rw-r–r–       1         root     root     48        11-14 14:29       /tmp/testfile1\n```\n\n  注意事项：\n  1.硬链接文件无法跨文件系统，因为不同的文件系统inode信息记录的信息不同。\n  2.只能对文件设置硬链接\n  3.删除硬链接文件或源文件，只会使硬链接计数器-1，不会删除文件内容。直到硬链接计数器为1时，在删除文件，此时则会清除文件。\n  4.修改一个文件，其他文件同时被修改\n\n#### 软连接\n\n软连接通过存储源文件的路径来定位源文件。所以软连接文件的大小为路径的长度。软链接文件属性同源文件属性不同。\n\n  创建方法:\n```\n  ln    -s      源文件  目标文件\n```\n  例子：\n```\n  ln  -s    /tmp/testfile    /testfilesoft\n  ls   -i  /tmp/testfile   /testfilesoft\n  1491138      -rw-r–r–       1         root     root     48        11-14 14:17        /tmp/testfile 1491140      lrwxrwxrwx  1         root     root     13          11-14 14:24        /testfilesoft -> /tmp/testfile\n```\n  查看以上文件的输出结果，源文件和链接文件的属性不同。链接文件的大小为13字节，这13字节等于软连接的路径“/tmp/testfile\"的长度。\n\n  注意事项：\n\n  1.软连接文件记录的是文件路径因此可以跨文件系统创建\n  2.可针对目录设置软连接\n  3.删除软连接文件不影响其它链接文件的访问，删除源文件则所有软连接文件都无法访问。\n  4.修改任意文件，所有文件都会变动\n\nLinux系统中软硬链接的方式可使用的环境不同，其中软连接使用的最多","source":"_posts/linux-ln.md","raw":"---\nlayout: post\ntitle: Linux链接文件（ln）\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-05 09:11:15\ntags: [ linux, command ]\ncategories:\n    - linux\n---\nLinux系统中,内核为每一个文件分配一个`inode` ，文件属性保存在inode里，在访问文件时，文件系统通过查找到文件的inode中关于文件的存放block，进而去相对应的block中读取文件内容。而链接是一种在共享文件和访问它的用户的若干目录项之间建立联系的一种方法，在系统中有相同的一份文件A和B两个用户都需要这个文件，传统模式下我们会直接复制文件分给2个用户，这样虽然能实现目的。但是两份文件占用了我们双倍的block和inode资源。如果这个文件非常大的话将造成资源的极大浪费。此时Linux引入链接的概念，我们可以通过链接的方式去将文件共享给两个用户。\n\n### 两种链接：\n* 硬链接(Hard Link)\n* 和软链接(Soft Link)，软链接又称为符号链接（Symbolic link）\n\n#### 硬链接\n\n硬链接文件可以理解为一个指针，指向文件的inode，系统不重新分配inode。硬链接文件中记录的是源文件的inode信息，所以硬链接文件的属性和源文件的属性相同只是在硬链接连接数上+1，硬链接文件。\n\n  创建方法：\n```\n  ln    源文件    目标文件\n```\n  例子：\n```\n  ln   /tmp/testdir/testdir2/testfile1   /tmp/testfile1\n  ls  -i   /tmp/testdir/testdir2/testfile1   /tmp/testfile1\n  1491138      -rw-r–r–       1         root     root     48        11-14 14:10       /tmp/testdir/testdir2/testfile1\n  1491138      -rw-r–r–       1         root     root     48        11-14 14:29       /tmp/testfile1\n```\n\n  注意事项：\n  1.硬链接文件无法跨文件系统，因为不同的文件系统inode信息记录的信息不同。\n  2.只能对文件设置硬链接\n  3.删除硬链接文件或源文件，只会使硬链接计数器-1，不会删除文件内容。直到硬链接计数器为1时，在删除文件，此时则会清除文件。\n  4.修改一个文件，其他文件同时被修改\n\n#### 软连接\n\n软连接通过存储源文件的路径来定位源文件。所以软连接文件的大小为路径的长度。软链接文件属性同源文件属性不同。\n\n  创建方法:\n```\n  ln    -s      源文件  目标文件\n```\n  例子：\n```\n  ln  -s    /tmp/testfile    /testfilesoft\n  ls   -i  /tmp/testfile   /testfilesoft\n  1491138      -rw-r–r–       1         root     root     48        11-14 14:17        /tmp/testfile 1491140      lrwxrwxrwx  1         root     root     13          11-14 14:24        /testfilesoft -> /tmp/testfile\n```\n  查看以上文件的输出结果，源文件和链接文件的属性不同。链接文件的大小为13字节，这13字节等于软连接的路径“/tmp/testfile\"的长度。\n\n  注意事项：\n\n  1.软连接文件记录的是文件路径因此可以跨文件系统创建\n  2.可针对目录设置软连接\n  3.删除软连接文件不影响其它链接文件的访问，删除源文件则所有软连接文件都无法访问。\n  4.修改任意文件，所有文件都会变动\n\nLinux系统中软硬链接的方式可使用的环境不同，其中软连接使用的最多","slug":"linux-ln","updated":"2019-10-21T06:57:42.819Z","photos":[],"link":"","_id":"ck42dyidg002yu9urxu56xz59","content":"<p>Linux系统中,内核为每一个文件分配一个<code>inode</code> ，文件属性保存在inode里，在访问文件时，文件系统通过查找到文件的inode中关于文件的存放block，进而去相对应的block中读取文件内容。而链接是一种在共享文件和访问它的用户的若干目录项之间建立联系的一种方法，在系统中有相同的一份文件A和B两个用户都需要这个文件，传统模式下我们会直接复制文件分给2个用户，这样虽然能实现目的。但是两份文件占用了我们双倍的block和inode资源。如果这个文件非常大的话将造成资源的极大浪费。此时Linux引入链接的概念，我们可以通过链接的方式去将文件共享给两个用户。</p>\n<h3 id=\"两种链接：\"><a href=\"#两种链接：\" class=\"headerlink\" title=\"两种链接：\"></a>两种链接：</h3><ul>\n<li>硬链接(Hard Link)</li>\n<li>和软链接(Soft Link)，软链接又称为符号链接（Symbolic link）</li>\n</ul>\n<h4 id=\"硬链接\"><a href=\"#硬链接\" class=\"headerlink\" title=\"硬链接\"></a>硬链接</h4><p>硬链接文件可以理解为一个指针，指向文件的inode，系统不重新分配inode。硬链接文件中记录的是源文件的inode信息，所以硬链接文件的属性和源文件的属性相同只是在硬链接连接数上+1，硬链接文件。</p>\n<p>  创建方法：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span>    源文件    目标文件</span><br></pre></td></tr></table></figure>\n\n<p>  例子：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln   /tmp/testdir/testdir2/testfile1   /tmp/testfile1</span><br><span class=\"line\">ls  -i   /tmp/testdir/testdir2/testfile1   /tmp/testfile1</span><br><span class=\"line\"><span class=\"number\">1491138</span>      -rw-r–r–       <span class=\"number\">1</span>         root     root     <span class=\"number\">48</span>        <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">10</span>       /tmp/testdir/testdir2/testfile1</span><br><span class=\"line\"><span class=\"number\">1491138</span>      -rw-r–r–       <span class=\"number\">1</span>         root     root     <span class=\"number\">48</span>        <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">29</span>       /tmp/testfile1</span><br></pre></td></tr></table></figure>\n\n<p>  注意事项：<br>  1.硬链接文件无法跨文件系统，因为不同的文件系统inode信息记录的信息不同。<br>  2.只能对文件设置硬链接<br>  3.删除硬链接文件或源文件，只会使硬链接计数器-1，不会删除文件内容。直到硬链接计数器为1时，在删除文件，此时则会清除文件。<br>  4.修改一个文件，其他文件同时被修改</p>\n<h4 id=\"软连接\"><a href=\"#软连接\" class=\"headerlink\" title=\"软连接\"></a>软连接</h4><p>软连接通过存储源文件的路径来定位源文件。所以软连接文件的大小为路径的长度。软链接文件属性同源文件属性不同。</p>\n<p>  创建方法:</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span>    -s      源文件  目标文件</span><br></pre></td></tr></table></figure>\n\n<p>  例子：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln  -s    /tmp/testfile    /testfilesoft</span><br><span class=\"line\">ls   -i  /tmp/testfile   /testfilesoft</span><br><span class=\"line\"><span class=\"number\">1491138</span>      -rw-r–r–       <span class=\"number\">1</span>         root     root     <span class=\"number\">48</span>        <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">17</span>        /tmp/testfile <span class=\"number\">1491140</span>      lrwxrwxrwx  <span class=\"number\">1</span>         root     root     <span class=\"number\">13</span>          <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">24</span>        /testfilesoft -&gt; /tmp/testfile</span><br></pre></td></tr></table></figure>\n\n<p>  查看以上文件的输出结果，源文件和链接文件的属性不同。链接文件的大小为13字节，这13字节等于软连接的路径“/tmp/testfile”的长度。</p>\n<p>  注意事项：</p>\n<p>  1.软连接文件记录的是文件路径因此可以跨文件系统创建<br>  2.可针对目录设置软连接<br>  3.删除软连接文件不影响其它链接文件的访问，删除源文件则所有软连接文件都无法访问。<br>  4.修改任意文件，所有文件都会变动</p>\n<p>Linux系统中软硬链接的方式可使用的环境不同，其中软连接使用的最多</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Linux系统中,内核为每一个文件分配一个<code>inode</code> ，文件属性保存在inode里，在访问文件时，文件系统通过查找到文件的inode中关于文件的存放block，进而去相对应的block中读取文件内容。而链接是一种在共享文件和访问它的用户的若干目录项之间建立联系的一种方法，在系统中有相同的一份文件A和B两个用户都需要这个文件，传统模式下我们会直接复制文件分给2个用户，这样虽然能实现目的。但是两份文件占用了我们双倍的block和inode资源。如果这个文件非常大的话将造成资源的极大浪费。此时Linux引入链接的概念，我们可以通过链接的方式去将文件共享给两个用户。</p>\n<h3 id=\"两种链接：\"><a href=\"#两种链接：\" class=\"headerlink\" title=\"两种链接：\"></a>两种链接：</h3><ul>\n<li>硬链接(Hard Link)</li>\n<li>和软链接(Soft Link)，软链接又称为符号链接（Symbolic link）</li>\n</ul>\n<h4 id=\"硬链接\"><a href=\"#硬链接\" class=\"headerlink\" title=\"硬链接\"></a>硬链接</h4><p>硬链接文件可以理解为一个指针，指向文件的inode，系统不重新分配inode。硬链接文件中记录的是源文件的inode信息，所以硬链接文件的属性和源文件的属性相同只是在硬链接连接数上+1，硬链接文件。</p>\n<p>  创建方法：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span>    源文件    目标文件</span><br></pre></td></tr></table></figure>\n\n<p>  例子：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln   /tmp/testdir/testdir2/testfile1   /tmp/testfile1</span><br><span class=\"line\">ls  -i   /tmp/testdir/testdir2/testfile1   /tmp/testfile1</span><br><span class=\"line\"><span class=\"number\">1491138</span>      -rw-r–r–       <span class=\"number\">1</span>         root     root     <span class=\"number\">48</span>        <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">10</span>       /tmp/testdir/testdir2/testfile1</span><br><span class=\"line\"><span class=\"number\">1491138</span>      -rw-r–r–       <span class=\"number\">1</span>         root     root     <span class=\"number\">48</span>        <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">29</span>       /tmp/testfile1</span><br></pre></td></tr></table></figure>\n\n<p>  注意事项：<br>  1.硬链接文件无法跨文件系统，因为不同的文件系统inode信息记录的信息不同。<br>  2.只能对文件设置硬链接<br>  3.删除硬链接文件或源文件，只会使硬链接计数器-1，不会删除文件内容。直到硬链接计数器为1时，在删除文件，此时则会清除文件。<br>  4.修改一个文件，其他文件同时被修改</p>\n<h4 id=\"软连接\"><a href=\"#软连接\" class=\"headerlink\" title=\"软连接\"></a>软连接</h4><p>软连接通过存储源文件的路径来定位源文件。所以软连接文件的大小为路径的长度。软链接文件属性同源文件属性不同。</p>\n<p>  创建方法:</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span>    -s      源文件  目标文件</span><br></pre></td></tr></table></figure>\n\n<p>  例子：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln  -s    /tmp/testfile    /testfilesoft</span><br><span class=\"line\">ls   -i  /tmp/testfile   /testfilesoft</span><br><span class=\"line\"><span class=\"number\">1491138</span>      -rw-r–r–       <span class=\"number\">1</span>         root     root     <span class=\"number\">48</span>        <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">17</span>        /tmp/testfile <span class=\"number\">1491140</span>      lrwxrwxrwx  <span class=\"number\">1</span>         root     root     <span class=\"number\">13</span>          <span class=\"number\">11</span><span class=\"number\">-14</span> <span class=\"number\">14</span>:<span class=\"number\">24</span>        /testfilesoft -&gt; /tmp/testfile</span><br></pre></td></tr></table></figure>\n\n<p>  查看以上文件的输出结果，源文件和链接文件的属性不同。链接文件的大小为13字节，这13字节等于软连接的路径“/tmp/testfile”的长度。</p>\n<p>  注意事项：</p>\n<p>  1.软连接文件记录的是文件路径因此可以跨文件系统创建<br>  2.可针对目录设置软连接<br>  3.删除软连接文件不影响其它链接文件的访问，删除源文件则所有软连接文件都无法访问。<br>  4.修改任意文件，所有文件都会变动</p>\n<p>Linux系统中软硬链接的方式可使用的环境不同，其中软连接使用的最多</p>\n"},{"layout":"post","title":"Linux日志系统","published":1,"author":"xiemx","comments":1,"date":"2015-11-28T02:11:40.000Z","_content":"在Linux系统中，有三个主要的日志子系统：\n\n* 连接日志--由多个程序执行，把纪录写入到/var/log/wtmp和/var/run/utmp，login等程序更新wtmp和utmp文件，使系统管理员能够跟踪谁在何时登录到系统。\n* 进程统计--由系统内核执行。当一个进程终止时，为每个进程往进程统计文件（pacct或acct）中写一个纪录。进程统计的目的是为系统中的基本服务提供命令使用统计。\n* 错误日志--由syslogd（8）执行。各种系统守护进程、用户程序和内核通过syslog（3）向文件/var/log/messages报告值得注意的事件。另外有许多UNIX程序创建日志。像HTTP和FTP这样提供网络服务的服务器也保持详细的日志。\n\n大部分Linux系统都使用syslog管理日志，系统日志默认会写在/var/log目录下，syslog会依据/etc/syslog.conf文件中的配置将不同级别、不同类别的日志分门别类的纪录到不同的日志文件中去。/etc/syslog.conf中依照如下格式纪录日志配置：\n```\n日志对象.级别                  日志文件存放位置\nauthpriv.info                /var/log/secure\n```\n```\n［root@localhost ～］#cat /etc/syslog.conf\n\n//将info或更高级别的消息送到/var/log/messages，除了mail以外。\n//其中*是通配符，代表任何设备；none表示不对任何级别的信息进行记录。\n*.info;mail.none;authpriv.none /var/log/messages\n//将authpirv设备的任何级别的信息记录到/var/log/secure文件中，这主要是一些和认、权限使用相关的信息。\nauthpriv.* /var/log/secure\n//将mail设备中的任何级别的信息记录到/var/log/maillog文件中，这主要是和电子邮件相关的信息。\nmail.* /var/log/maillog\n//将cron设备中的任何级别的信息记录到/var/log/cron文件中，这主要是和系统中定期执行的任务相关的信息。\ncron.* /var/log/cron\n//将任何设备的emerg级别的信息发送给所有正在系统上的用户。\n*.emerg *\n//将uucp和news设备的crit级别的信息记录到/var/log/spooler文件中。\nuucp,news.crit /var/log/spooler\n//将和系统启动相关的信息记录到/var/log/boot.log文件中。\nlocal7.* /var/log/boot.log\n```\n##### 日志对象\n\nkern——内核\nUser——用户程序\nDamon——系统守护进程\nMail——电子邮件系统\nAuth——与安全权限相关的命令\nLpr——打印机\nNews——新闻组信息\nUucp——Uucp程序\nCron——记录当前登录的每个用户信息\nwtmp——一个用户每次登录进入和退出时间的永久记录\nAuthpriv——授权信息\n\n##### 日志的级别\n\nemerg——最高的紧急程度状态\nalert——紧急状态\nCirt——重要信息\nwarning——警告\nerr——错误\nnotice——通知\ninfo——一般性消息\nDebug——调试级信息\nNone——不记录任何日志信息常用的日志文件\n\n##### 常见的日志文件\n\ncron: crontab例行事务的日志\ndmesg: 内核启动时的检测信息,输出同 dmesg 命令\nlastlog: 所有帐号最后一次登录的相关信息，输出同 lastlog 命令\nmaillog: 邮件来往信息\nmessages ： 系统错误信息\nsecure ： 涉及到“输入口令”的操作，都会记录于此\nwtmp与faillog: 登录成功的用户信息(wtmp)和登录失败的用户信息(faillog)\nhttpd, samba等 ： 不同的网络服务用自己的定制的日志文件\nutmp、wtmp和lastlog日志文件是多数重用UNIX日志子系统的关键--保持用户登录进入和退出的纪录。有关当前登录用户的信息记录在文件utmp中；登录进入和退出纪录在文件wtmp中；最后一次登录文件可以用lastlog命令察看。数据交换、关机和重起也记录在wtmp文件中。通常，每次有一个用户登录时，login程序在文件lastlog中察看用户的UID。如果找到了，则把用户上次登录、退出时间和主机名写到标准输出中，然后login程序在lastlog中纪录新的登录时间。在新的lastlog纪录写入后，utmp文件打开并插入用户的utmp纪录。该纪录一直用到用户登录退出时删除。utmp文件被各种命令文件使用，包括who、w、users和finger。 下一步，login程序打开文件wtmp附加用户的utmp纪录。当用户登录退出时，具有更新时间戳的同一utmp纪录附加到文件中。wtmp文件被程序last和ac使用。\n\n### 日志轮替（logrotate）\n\n在系统用户众多的，或系统运行有访问量非常大的程序时，日志文件的增长会非常迅速，严重的会导致系统磁盘被写满数据无法被写入系统进程报错中止等。为了应对这个问题，Linux采取了日志轮替的方式来管理日志文件。logrotate程序会依据/etc/logrotate.conf和/etc/logrotate.d/中定义的轮替规则来裁剪、删除、备份日志文件。logrotate会在/etc/cron.daily目录下生成脚本，每天自动执行。\n```\n[root@localhost ~]# cat /etc/logrotate.conf\n\nweekly                        #默认每周进行一次日志清理\nrotate 4                      #保留的日志文件数量\ncreate                         #创建一个新的来存储\n#compress                #是否需要压缩\ninclude /etc/logrotate.d  #读取/etc/logrotate.d目录下的文件\n/var/log/wtmp {               #针对单个wtmp日志操作\nmonthly                              #每个月一次\nminsize 1M                         #超过1M整理\ncreate 0664 root utmp     #新加文件权限和用户组\nrotate 1                                #保留一个文件\n}\n```\n \n","source":"_posts/linux-log-system.md","raw":"---\nlayout: post\ntitle: Linux日志系统\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-28 10:11:40\ntags: [ linux ]\ncategories:\n    - linux\n---\n在Linux系统中，有三个主要的日志子系统：\n\n* 连接日志--由多个程序执行，把纪录写入到/var/log/wtmp和/var/run/utmp，login等程序更新wtmp和utmp文件，使系统管理员能够跟踪谁在何时登录到系统。\n* 进程统计--由系统内核执行。当一个进程终止时，为每个进程往进程统计文件（pacct或acct）中写一个纪录。进程统计的目的是为系统中的基本服务提供命令使用统计。\n* 错误日志--由syslogd（8）执行。各种系统守护进程、用户程序和内核通过syslog（3）向文件/var/log/messages报告值得注意的事件。另外有许多UNIX程序创建日志。像HTTP和FTP这样提供网络服务的服务器也保持详细的日志。\n\n大部分Linux系统都使用syslog管理日志，系统日志默认会写在/var/log目录下，syslog会依据/etc/syslog.conf文件中的配置将不同级别、不同类别的日志分门别类的纪录到不同的日志文件中去。/etc/syslog.conf中依照如下格式纪录日志配置：\n```\n日志对象.级别                  日志文件存放位置\nauthpriv.info                /var/log/secure\n```\n```\n［root@localhost ～］#cat /etc/syslog.conf\n\n//将info或更高级别的消息送到/var/log/messages，除了mail以外。\n//其中*是通配符，代表任何设备；none表示不对任何级别的信息进行记录。\n*.info;mail.none;authpriv.none /var/log/messages\n//将authpirv设备的任何级别的信息记录到/var/log/secure文件中，这主要是一些和认、权限使用相关的信息。\nauthpriv.* /var/log/secure\n//将mail设备中的任何级别的信息记录到/var/log/maillog文件中，这主要是和电子邮件相关的信息。\nmail.* /var/log/maillog\n//将cron设备中的任何级别的信息记录到/var/log/cron文件中，这主要是和系统中定期执行的任务相关的信息。\ncron.* /var/log/cron\n//将任何设备的emerg级别的信息发送给所有正在系统上的用户。\n*.emerg *\n//将uucp和news设备的crit级别的信息记录到/var/log/spooler文件中。\nuucp,news.crit /var/log/spooler\n//将和系统启动相关的信息记录到/var/log/boot.log文件中。\nlocal7.* /var/log/boot.log\n```\n##### 日志对象\n\nkern——内核\nUser——用户程序\nDamon——系统守护进程\nMail——电子邮件系统\nAuth——与安全权限相关的命令\nLpr——打印机\nNews——新闻组信息\nUucp——Uucp程序\nCron——记录当前登录的每个用户信息\nwtmp——一个用户每次登录进入和退出时间的永久记录\nAuthpriv——授权信息\n\n##### 日志的级别\n\nemerg——最高的紧急程度状态\nalert——紧急状态\nCirt——重要信息\nwarning——警告\nerr——错误\nnotice——通知\ninfo——一般性消息\nDebug——调试级信息\nNone——不记录任何日志信息常用的日志文件\n\n##### 常见的日志文件\n\ncron: crontab例行事务的日志\ndmesg: 内核启动时的检测信息,输出同 dmesg 命令\nlastlog: 所有帐号最后一次登录的相关信息，输出同 lastlog 命令\nmaillog: 邮件来往信息\nmessages ： 系统错误信息\nsecure ： 涉及到“输入口令”的操作，都会记录于此\nwtmp与faillog: 登录成功的用户信息(wtmp)和登录失败的用户信息(faillog)\nhttpd, samba等 ： 不同的网络服务用自己的定制的日志文件\nutmp、wtmp和lastlog日志文件是多数重用UNIX日志子系统的关键--保持用户登录进入和退出的纪录。有关当前登录用户的信息记录在文件utmp中；登录进入和退出纪录在文件wtmp中；最后一次登录文件可以用lastlog命令察看。数据交换、关机和重起也记录在wtmp文件中。通常，每次有一个用户登录时，login程序在文件lastlog中察看用户的UID。如果找到了，则把用户上次登录、退出时间和主机名写到标准输出中，然后login程序在lastlog中纪录新的登录时间。在新的lastlog纪录写入后，utmp文件打开并插入用户的utmp纪录。该纪录一直用到用户登录退出时删除。utmp文件被各种命令文件使用，包括who、w、users和finger。 下一步，login程序打开文件wtmp附加用户的utmp纪录。当用户登录退出时，具有更新时间戳的同一utmp纪录附加到文件中。wtmp文件被程序last和ac使用。\n\n### 日志轮替（logrotate）\n\n在系统用户众多的，或系统运行有访问量非常大的程序时，日志文件的增长会非常迅速，严重的会导致系统磁盘被写满数据无法被写入系统进程报错中止等。为了应对这个问题，Linux采取了日志轮替的方式来管理日志文件。logrotate程序会依据/etc/logrotate.conf和/etc/logrotate.d/中定义的轮替规则来裁剪、删除、备份日志文件。logrotate会在/etc/cron.daily目录下生成脚本，每天自动执行。\n```\n[root@localhost ~]# cat /etc/logrotate.conf\n\nweekly                        #默认每周进行一次日志清理\nrotate 4                      #保留的日志文件数量\ncreate                         #创建一个新的来存储\n#compress                #是否需要压缩\ninclude /etc/logrotate.d  #读取/etc/logrotate.d目录下的文件\n/var/log/wtmp {               #针对单个wtmp日志操作\nmonthly                              #每个月一次\nminsize 1M                         #超过1M整理\ncreate 0664 root utmp     #新加文件权限和用户组\nrotate 1                                #保留一个文件\n}\n```\n \n","slug":"linux-log-system","updated":"2019-10-21T06:57:42.910Z","photos":[],"link":"","_id":"ck42dyidi0032u9urmkcnrojw","content":"<p>在Linux系统中，有三个主要的日志子系统：</p>\n<ul>\n<li>连接日志–由多个程序执行，把纪录写入到/var/log/wtmp和/var/run/utmp，login等程序更新wtmp和utmp文件，使系统管理员能够跟踪谁在何时登录到系统。</li>\n<li>进程统计–由系统内核执行。当一个进程终止时，为每个进程往进程统计文件（pacct或acct）中写一个纪录。进程统计的目的是为系统中的基本服务提供命令使用统计。</li>\n<li>错误日志–由syslogd（8）执行。各种系统守护进程、用户程序和内核通过syslog（3）向文件/var/log/messages报告值得注意的事件。另外有许多UNIX程序创建日志。像HTTP和FTP这样提供网络服务的服务器也保持详细的日志。</li>\n</ul>\n<p>大部分Linux系统都使用syslog管理日志，系统日志默认会写在/var/log目录下，syslog会依据/etc/syslog.conf文件中的配置将不同级别、不同类别的日志分门别类的纪录到不同的日志文件中去。/etc/syslog.conf中依照如下格式纪录日志配置：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">日志对象.级别                  日志文件存放位置</span><br><span class=\"line\">authpriv.info                /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/secure</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">［root@localhost ～］#cat /etc/syslog.conf</span><br><span class=\"line\"></span><br><span class=\"line\">//将<span class=\"built_in\">info</span>或更高级别的消息送到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/messages，除了mail以外。</span><br><span class=\"line\">//其中*是通配符，代表任何设备；none表示不对任何级别的信息进行记录。</span><br><span class=\"line\">*.<span class=\"built_in\">info</span>;mail.none;authpriv.none /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/messages</span><br><span class=\"line\">//将authpirv设备的任何级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/secure文件中，这主要是一些和认、权限使用相关的信息。</span><br><span class=\"line\">authpriv.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/secure</span><br><span class=\"line\">//将mail设备中的任何级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/maillog文件中，这主要是和电子邮件相关的信息。</span><br><span class=\"line\">mail.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/maillog</span><br><span class=\"line\">//将cron设备中的任何级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/cron文件中，这主要是和系统中定期执行的任务相关的信息。</span><br><span class=\"line\">cron.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/cron</span><br><span class=\"line\">//将任何设备的emerg级别的信息发送给所有正在系统上的用户。</span><br><span class=\"line\">*.emerg *</span><br><span class=\"line\">//将uucp和news设备的crit级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/spooler文件中。</span><br><span class=\"line\">uucp,news.crit /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/spooler</span><br><span class=\"line\">//将和系统启动相关的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/boot.log文件中。</span><br><span class=\"line\">local7.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/boot.log</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"日志对象\"><a href=\"#日志对象\" class=\"headerlink\" title=\"日志对象\"></a>日志对象</h5><p>kern——内核<br>User——用户程序<br>Damon——系统守护进程<br>Mail——电子邮件系统<br>Auth——与安全权限相关的命令<br>Lpr——打印机<br>News——新闻组信息<br>Uucp——Uucp程序<br>Cron——记录当前登录的每个用户信息<br>wtmp——一个用户每次登录进入和退出时间的永久记录<br>Authpriv——授权信息</p>\n<h5 id=\"日志的级别\"><a href=\"#日志的级别\" class=\"headerlink\" title=\"日志的级别\"></a>日志的级别</h5><p>emerg——最高的紧急程度状态<br>alert——紧急状态<br>Cirt——重要信息<br>warning——警告<br>err——错误<br>notice——通知<br>info——一般性消息<br>Debug——调试级信息<br>None——不记录任何日志信息常用的日志文件</p>\n<h5 id=\"常见的日志文件\"><a href=\"#常见的日志文件\" class=\"headerlink\" title=\"常见的日志文件\"></a>常见的日志文件</h5><p>cron: crontab例行事务的日志<br>dmesg: 内核启动时的检测信息,输出同 dmesg 命令<br>lastlog: 所有帐号最后一次登录的相关信息，输出同 lastlog 命令<br>maillog: 邮件来往信息<br>messages ： 系统错误信息<br>secure ： 涉及到“输入口令”的操作，都会记录于此<br>wtmp与faillog: 登录成功的用户信息(wtmp)和登录失败的用户信息(faillog)<br>httpd, samba等 ： 不同的网络服务用自己的定制的日志文件<br>utmp、wtmp和lastlog日志文件是多数重用UNIX日志子系统的关键–保持用户登录进入和退出的纪录。有关当前登录用户的信息记录在文件utmp中；登录进入和退出纪录在文件wtmp中；最后一次登录文件可以用lastlog命令察看。数据交换、关机和重起也记录在wtmp文件中。通常，每次有一个用户登录时，login程序在文件lastlog中察看用户的UID。如果找到了，则把用户上次登录、退出时间和主机名写到标准输出中，然后login程序在lastlog中纪录新的登录时间。在新的lastlog纪录写入后，utmp文件打开并插入用户的utmp纪录。该纪录一直用到用户登录退出时删除。utmp文件被各种命令文件使用，包括who、w、users和finger。 下一步，login程序打开文件wtmp附加用户的utmp纪录。当用户登录退出时，具有更新时间戳的同一utmp纪录附加到文件中。wtmp文件被程序last和ac使用。</p>\n<h3 id=\"日志轮替（logrotate）\"><a href=\"#日志轮替（logrotate）\" class=\"headerlink\" title=\"日志轮替（logrotate）\"></a>日志轮替（logrotate）</h3><p>在系统用户众多的，或系统运行有访问量非常大的程序时，日志文件的增长会非常迅速，严重的会导致系统磁盘被写满数据无法被写入系统进程报错中止等。为了应对这个问题，Linux采取了日志轮替的方式来管理日志文件。logrotate程序会依据/etc/logrotate.conf和/etc/logrotate.d/中定义的轮替规则来裁剪、删除、备份日志文件。logrotate会在/etc/cron.daily目录下生成脚本，每天自动执行。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># cat /etc/logrotate.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">weekly                        <span class=\"comment\">#默认每周进行一次日志清理</span></span><br><span class=\"line\">rotate 4                      <span class=\"comment\">#保留的日志文件数量</span></span><br><span class=\"line\"><span class=\"keyword\">create</span>                         <span class=\"comment\">#创建一个新的来存储</span></span><br><span class=\"line\"><span class=\"comment\">#compress                #是否需要压缩</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> /etc/logrotate.d  <span class=\"comment\">#读取/etc/logrotate.d目录下的文件</span></span><br><span class=\"line\">/<span class=\"keyword\">var</span>/<span class=\"keyword\">log</span>/wtmp &#123;               <span class=\"comment\">#针对单个wtmp日志操作</span></span><br><span class=\"line\">monthly                              <span class=\"comment\">#每个月一次</span></span><br><span class=\"line\">minsize <span class=\"number\">1</span>M                         <span class=\"comment\">#超过1M整理</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"number\">0664</span> root utmp     <span class=\"comment\">#新加文件权限和用户组</span></span><br><span class=\"line\">rotate <span class=\"number\">1</span>                                <span class=\"comment\">#保留一个文件</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>在Linux系统中，有三个主要的日志子系统：</p>\n<ul>\n<li>连接日志–由多个程序执行，把纪录写入到/var/log/wtmp和/var/run/utmp，login等程序更新wtmp和utmp文件，使系统管理员能够跟踪谁在何时登录到系统。</li>\n<li>进程统计–由系统内核执行。当一个进程终止时，为每个进程往进程统计文件（pacct或acct）中写一个纪录。进程统计的目的是为系统中的基本服务提供命令使用统计。</li>\n<li>错误日志–由syslogd（8）执行。各种系统守护进程、用户程序和内核通过syslog（3）向文件/var/log/messages报告值得注意的事件。另外有许多UNIX程序创建日志。像HTTP和FTP这样提供网络服务的服务器也保持详细的日志。</li>\n</ul>\n<p>大部分Linux系统都使用syslog管理日志，系统日志默认会写在/var/log目录下，syslog会依据/etc/syslog.conf文件中的配置将不同级别、不同类别的日志分门别类的纪录到不同的日志文件中去。/etc/syslog.conf中依照如下格式纪录日志配置：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">日志对象.级别                  日志文件存放位置</span><br><span class=\"line\">authpriv.info                /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/secure</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">［root@localhost ～］#cat /etc/syslog.conf</span><br><span class=\"line\"></span><br><span class=\"line\">//将<span class=\"built_in\">info</span>或更高级别的消息送到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/messages，除了mail以外。</span><br><span class=\"line\">//其中*是通配符，代表任何设备；none表示不对任何级别的信息进行记录。</span><br><span class=\"line\">*.<span class=\"built_in\">info</span>;mail.none;authpriv.none /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/messages</span><br><span class=\"line\">//将authpirv设备的任何级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/secure文件中，这主要是一些和认、权限使用相关的信息。</span><br><span class=\"line\">authpriv.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/secure</span><br><span class=\"line\">//将mail设备中的任何级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/maillog文件中，这主要是和电子邮件相关的信息。</span><br><span class=\"line\">mail.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/maillog</span><br><span class=\"line\">//将cron设备中的任何级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/cron文件中，这主要是和系统中定期执行的任务相关的信息。</span><br><span class=\"line\">cron.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/cron</span><br><span class=\"line\">//将任何设备的emerg级别的信息发送给所有正在系统上的用户。</span><br><span class=\"line\">*.emerg *</span><br><span class=\"line\">//将uucp和news设备的crit级别的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/spooler文件中。</span><br><span class=\"line\">uucp,news.crit /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/spooler</span><br><span class=\"line\">//将和系统启动相关的信息记录到/<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/boot.log文件中。</span><br><span class=\"line\">local7.* /<span class=\"built_in\">var</span>/<span class=\"built_in\">log</span>/boot.log</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"日志对象\"><a href=\"#日志对象\" class=\"headerlink\" title=\"日志对象\"></a>日志对象</h5><p>kern——内核<br>User——用户程序<br>Damon——系统守护进程<br>Mail——电子邮件系统<br>Auth——与安全权限相关的命令<br>Lpr——打印机<br>News——新闻组信息<br>Uucp——Uucp程序<br>Cron——记录当前登录的每个用户信息<br>wtmp——一个用户每次登录进入和退出时间的永久记录<br>Authpriv——授权信息</p>\n<h5 id=\"日志的级别\"><a href=\"#日志的级别\" class=\"headerlink\" title=\"日志的级别\"></a>日志的级别</h5><p>emerg——最高的紧急程度状态<br>alert——紧急状态<br>Cirt——重要信息<br>warning——警告<br>err——错误<br>notice——通知<br>info——一般性消息<br>Debug——调试级信息<br>None——不记录任何日志信息常用的日志文件</p>\n<h5 id=\"常见的日志文件\"><a href=\"#常见的日志文件\" class=\"headerlink\" title=\"常见的日志文件\"></a>常见的日志文件</h5><p>cron: crontab例行事务的日志<br>dmesg: 内核启动时的检测信息,输出同 dmesg 命令<br>lastlog: 所有帐号最后一次登录的相关信息，输出同 lastlog 命令<br>maillog: 邮件来往信息<br>messages ： 系统错误信息<br>secure ： 涉及到“输入口令”的操作，都会记录于此<br>wtmp与faillog: 登录成功的用户信息(wtmp)和登录失败的用户信息(faillog)<br>httpd, samba等 ： 不同的网络服务用自己的定制的日志文件<br>utmp、wtmp和lastlog日志文件是多数重用UNIX日志子系统的关键–保持用户登录进入和退出的纪录。有关当前登录用户的信息记录在文件utmp中；登录进入和退出纪录在文件wtmp中；最后一次登录文件可以用lastlog命令察看。数据交换、关机和重起也记录在wtmp文件中。通常，每次有一个用户登录时，login程序在文件lastlog中察看用户的UID。如果找到了，则把用户上次登录、退出时间和主机名写到标准输出中，然后login程序在lastlog中纪录新的登录时间。在新的lastlog纪录写入后，utmp文件打开并插入用户的utmp纪录。该纪录一直用到用户登录退出时删除。utmp文件被各种命令文件使用，包括who、w、users和finger。 下一步，login程序打开文件wtmp附加用户的utmp纪录。当用户登录退出时，具有更新时间戳的同一utmp纪录附加到文件中。wtmp文件被程序last和ac使用。</p>\n<h3 id=\"日志轮替（logrotate）\"><a href=\"#日志轮替（logrotate）\" class=\"headerlink\" title=\"日志轮替（logrotate）\"></a>日志轮替（logrotate）</h3><p>在系统用户众多的，或系统运行有访问量非常大的程序时，日志文件的增长会非常迅速，严重的会导致系统磁盘被写满数据无法被写入系统进程报错中止等。为了应对这个问题，Linux采取了日志轮替的方式来管理日志文件。logrotate程序会依据/etc/logrotate.conf和/etc/logrotate.d/中定义的轮替规则来裁剪、删除、备份日志文件。logrotate会在/etc/cron.daily目录下生成脚本，每天自动执行。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># cat /etc/logrotate.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">weekly                        <span class=\"comment\">#默认每周进行一次日志清理</span></span><br><span class=\"line\">rotate 4                      <span class=\"comment\">#保留的日志文件数量</span></span><br><span class=\"line\"><span class=\"keyword\">create</span>                         <span class=\"comment\">#创建一个新的来存储</span></span><br><span class=\"line\"><span class=\"comment\">#compress                #是否需要压缩</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> /etc/logrotate.d  <span class=\"comment\">#读取/etc/logrotate.d目录下的文件</span></span><br><span class=\"line\">/<span class=\"keyword\">var</span>/<span class=\"keyword\">log</span>/wtmp &#123;               <span class=\"comment\">#针对单个wtmp日志操作</span></span><br><span class=\"line\">monthly                              <span class=\"comment\">#每个月一次</span></span><br><span class=\"line\">minsize <span class=\"number\">1</span>M                         <span class=\"comment\">#超过1M整理</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"number\">0664</span> root utmp     <span class=\"comment\">#新加文件权限和用户组</span></span><br><span class=\"line\">rotate <span class=\"number\">1</span>                                <span class=\"comment\">#保留一个文件</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n"},{"layout":"post","title":"nf_conntrack丢包","published":1,"author":"xiemx","comments":1,"date":"2016-12-19T17:12:44.000Z","_content":"#### 现象\n\n![img](/images/QQ20161220-0.png)\n\nnf_conntrack/ip_conntrack 跟 nat 有关，用来跟踪连接条目，它会使用一个哈希表来记录 established 的记录。如果该哈希表满了，就会出现问题。\n\n原因是nf_conntrack: table full, dropping packet，CONNTRACK_MAX 允许的最大跟踪连接条目超过了我们设置的阀值65535\n\n#### 解决：\n\n```\necho \"net.nf_conntrack_max=655350\" >> /etc/sysctl.conf&&sysctl -p \n```","source":"_posts/linux-nf-conntrack-drop-package.md","raw":"---\nlayout: post\ntitle: nf_conntrack丢包\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-12-20 01:12:44\ntags: [ linux, debug ]\ncategories:\n    - linux\n---\n#### 现象\n\n![img](/images/QQ20161220-0.png)\n\nnf_conntrack/ip_conntrack 跟 nat 有关，用来跟踪连接条目，它会使用一个哈希表来记录 established 的记录。如果该哈希表满了，就会出现问题。\n\n原因是nf_conntrack: table full, dropping packet，CONNTRACK_MAX 允许的最大跟踪连接条目超过了我们设置的阀值65535\n\n#### 解决：\n\n```\necho \"net.nf_conntrack_max=655350\" >> /etc/sysctl.conf&&sysctl -p \n```","slug":"linux-nf-conntrack-drop-package","updated":"2019-10-21T06:57:42.328Z","photos":[],"link":"","_id":"ck42dyidj0036u9ur6fqwfpt3","content":"<h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><p><img src=\"/images/QQ20161220-0.png\" alt=\"img\"></p>\n<p>nf_conntrack/ip_conntrack 跟 nat 有关，用来跟踪连接条目，它会使用一个哈希表来记录 established 的记录。如果该哈希表满了，就会出现问题。</p>\n<p>原因是nf_conntrack: table full, dropping packet，CONNTRACK_MAX 允许的最大跟踪连接条目超过了我们设置的阀值65535</p>\n<h4 id=\"解决：\"><a href=\"#解决：\" class=\"headerlink\" title=\"解决：\"></a>解决：</h4><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"string\">\"net.nf_conntrack_max=655350\"</span> &gt;&gt; <span class=\"meta-keyword\">/etc/</span>sysctl.conf&amp;<span class=\"variable\">&amp;sysctl</span> -p</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><p><img src=\"/images/QQ20161220-0.png\" alt=\"img\"></p>\n<p>nf_conntrack/ip_conntrack 跟 nat 有关，用来跟踪连接条目，它会使用一个哈希表来记录 established 的记录。如果该哈希表满了，就会出现问题。</p>\n<p>原因是nf_conntrack: table full, dropping packet，CONNTRACK_MAX 允许的最大跟踪连接条目超过了我们设置的阀值65535</p>\n<h4 id=\"解决：\"><a href=\"#解决：\" class=\"headerlink\" title=\"解决：\"></a>解决：</h4><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"string\">\"net.nf_conntrack_max=655350\"</span> &gt;&gt; <span class=\"meta-keyword\">/etc/</span>sysctl.conf&amp;<span class=\"variable\">&amp;sysctl</span> -p</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Linux特殊权限和acl访问控制列表","published":1,"author":"xiemx","comments":1,"date":"2015-11-05T01:11:28.000Z","_content":"### 特殊权限\n\nlinux中除了常见的读（r）、写（w）、执行（x）权限以外，还有3个特殊的权限，分别是setuid、setgid和stick bit。\n\n#### setuid\n只能设置文件，让普通用户拥有可以执行“**只有root权限才能执行**”的特殊权限，一般设置命令文件此属性。\n设置方法：\n```\nchmod u+s /tmp/testfile\nchmod u-s /tmp/testfile\n```\n如：\n```\n-rwsr-xr-x         1       root          root           22984          2015-11-04       /usr/bin/passwd\n```\n#### setgid\n可设置文件和目录，当目录设置此属性时在目录下创建的文件，默认所属组都会变为该目录的所属组。\n\n设置方法:\n```\nchmod g+s /tmp/test/\nchmod g-s /tmp/test/\n```\n如:\n```  \ndrwxr-sr-x         1       testuser         testadmin           22984          2015-11-04       /tmp/test/\n-rw-r--r--           1       root         testadmin          22984          2015-11-04       /tmp/test/file1  ——文件所属组自动继承test的所属组\n```\n#### sticky bit\n在目录下创建的文件，只有文件的拥有者和此目录的拥有者有编辑、删除权限\n\n设置方法：\n```\nchmod +t /tmp\nchmod -t /tmp\n```\n以上权限也可以通过数字的方式来设置特殊权限 setuid=4，setgid=2，sticky bit=1\n```\nchmod 4777 /test/file1 ——setuid\nchmod 2777 /test/file2 ——setgid\nchmod 1777 /test/      ——sticky bit\n```\n\n### attr权限（隐藏权限）\n\n用来设置特殊用户例如：root之类的权限。\n\n\n```\n设置方法：\nchattr  参数   文件\n\n+ ：在原有参数设定基础上，追加参数。\n- ：在原有参数设定基础上，移除参数。\n= ：更新为指定参数设定。\nA：文件或目录的 atime (access time)不可被修改(modified), 避免磁盘I/O读写占用资源。\nS：硬盘I/O同步选项，功能类似sync。\na：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。\nc：即compresse，设定文件是否经压缩后再存储。读取时需要经过自动解压操作。\nd：即no dump，设定文件不能成为dump程序的备份目标。\ni：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。\nj：即journal，设定此参数使得当通过mount参数：data=ordered 或者 data=writeback 挂 载的文件系统，文件在写入时会先被记录(在journal中)。如果filesystem被设定参数为 data=journal，则该参数自动失效。\ns：保密性地删除文件或目录，即文件的block、inode空间被全部清空收回。\nu：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。\n各参数选项中常用到的是a和i。a选项强制只可添加不可删除，多用于日志系统的安全设定。而i是更为严格的安全设定，只有superuser (root) 或具有CAP_LINUX_IMMUTABLE处理能力（标识）的进程能够施加该选项。\n```\n例：\n```\nchattr +i /tmp/testfile1  ——增加i权限\nchattr +a /tmp/testfile1 ——增加a权限\n\n查看文件的attr权限可使用lsattr命令\nlsattr /tmp/testfile1   ——查看文件隐藏权限\n```\n#### ACL(访问控制列表)\n\nLinux中`-rwxrwxrwx.`这种权限方式只能规范出三种类型的权限，在系统的使用中并不能完全的满足管理者对于用户权限的指定，因此Linux推出了ACL访问控制列表这种权限管理方法，此方法可以针对不同的用户和组来分配不同的权限配置不局限于原始的UGO权限类型。\n\nACL权限的种类\n* R——读权限\n* W——写权限\n* X——执行权限\n\nacl访问控制列表对于权限的规范和UGO类型的权限是一样的，也是通过RWX来组合控制用户权限。但设置方法不同具体如下\n\n设置方法：\n```\nsetfacl   参数    文件\n-m   设置acl规则\n-x   删除用户的acl规则\n-b    清空acl规则\n```\n例：\n```\nsetfacl  -m u:test:rwx /tmp/testfile1 ——赋予用户test对于文件testfile1有RWX权限\nsetfacl  -x u:test /tmp/testfile1     ——删除用户test对于文件testfile1的acl条目\nsetfacl  -b /tmp/testfile1            ——清空testfile1文件的acl条目\n```\n查看文件acl是否开启可以通过ls -l  查看文件权限字段 最后一位是否为+号。如：-rwxrwxrwx+则此文件开启了acl，也可通过命令getfacl  /tmp/testfile1来查看文件具体acl条目信息。","source":"_posts/linux-premissions-and-acl.md","raw":"---\nlayout: post\ntitle: Linux特殊权限和acl访问控制列表\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-05 09:11:28\ntags: [ linux, acl ]\ncategories:\n    - linux\n---\n### 特殊权限\n\nlinux中除了常见的读（r）、写（w）、执行（x）权限以外，还有3个特殊的权限，分别是setuid、setgid和stick bit。\n\n#### setuid\n只能设置文件，让普通用户拥有可以执行“**只有root权限才能执行**”的特殊权限，一般设置命令文件此属性。\n设置方法：\n```\nchmod u+s /tmp/testfile\nchmod u-s /tmp/testfile\n```\n如：\n```\n-rwsr-xr-x         1       root          root           22984          2015-11-04       /usr/bin/passwd\n```\n#### setgid\n可设置文件和目录，当目录设置此属性时在目录下创建的文件，默认所属组都会变为该目录的所属组。\n\n设置方法:\n```\nchmod g+s /tmp/test/\nchmod g-s /tmp/test/\n```\n如:\n```  \ndrwxr-sr-x         1       testuser         testadmin           22984          2015-11-04       /tmp/test/\n-rw-r--r--           1       root         testadmin          22984          2015-11-04       /tmp/test/file1  ——文件所属组自动继承test的所属组\n```\n#### sticky bit\n在目录下创建的文件，只有文件的拥有者和此目录的拥有者有编辑、删除权限\n\n设置方法：\n```\nchmod +t /tmp\nchmod -t /tmp\n```\n以上权限也可以通过数字的方式来设置特殊权限 setuid=4，setgid=2，sticky bit=1\n```\nchmod 4777 /test/file1 ——setuid\nchmod 2777 /test/file2 ——setgid\nchmod 1777 /test/      ——sticky bit\n```\n\n### attr权限（隐藏权限）\n\n用来设置特殊用户例如：root之类的权限。\n\n\n```\n设置方法：\nchattr  参数   文件\n\n+ ：在原有参数设定基础上，追加参数。\n- ：在原有参数设定基础上，移除参数。\n= ：更新为指定参数设定。\nA：文件或目录的 atime (access time)不可被修改(modified), 避免磁盘I/O读写占用资源。\nS：硬盘I/O同步选项，功能类似sync。\na：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。\nc：即compresse，设定文件是否经压缩后再存储。读取时需要经过自动解压操作。\nd：即no dump，设定文件不能成为dump程序的备份目标。\ni：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。\nj：即journal，设定此参数使得当通过mount参数：data=ordered 或者 data=writeback 挂 载的文件系统，文件在写入时会先被记录(在journal中)。如果filesystem被设定参数为 data=journal，则该参数自动失效。\ns：保密性地删除文件或目录，即文件的block、inode空间被全部清空收回。\nu：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。\n各参数选项中常用到的是a和i。a选项强制只可添加不可删除，多用于日志系统的安全设定。而i是更为严格的安全设定，只有superuser (root) 或具有CAP_LINUX_IMMUTABLE处理能力（标识）的进程能够施加该选项。\n```\n例：\n```\nchattr +i /tmp/testfile1  ——增加i权限\nchattr +a /tmp/testfile1 ——增加a权限\n\n查看文件的attr权限可使用lsattr命令\nlsattr /tmp/testfile1   ——查看文件隐藏权限\n```\n#### ACL(访问控制列表)\n\nLinux中`-rwxrwxrwx.`这种权限方式只能规范出三种类型的权限，在系统的使用中并不能完全的满足管理者对于用户权限的指定，因此Linux推出了ACL访问控制列表这种权限管理方法，此方法可以针对不同的用户和组来分配不同的权限配置不局限于原始的UGO权限类型。\n\nACL权限的种类\n* R——读权限\n* W——写权限\n* X——执行权限\n\nacl访问控制列表对于权限的规范和UGO类型的权限是一样的，也是通过RWX来组合控制用户权限。但设置方法不同具体如下\n\n设置方法：\n```\nsetfacl   参数    文件\n-m   设置acl规则\n-x   删除用户的acl规则\n-b    清空acl规则\n```\n例：\n```\nsetfacl  -m u:test:rwx /tmp/testfile1 ——赋予用户test对于文件testfile1有RWX权限\nsetfacl  -x u:test /tmp/testfile1     ——删除用户test对于文件testfile1的acl条目\nsetfacl  -b /tmp/testfile1            ——清空testfile1文件的acl条目\n```\n查看文件acl是否开启可以通过ls -l  查看文件权限字段 最后一位是否为+号。如：-rwxrwxrwx+则此文件开启了acl，也可通过命令getfacl  /tmp/testfile1来查看文件具体acl条目信息。","slug":"linux-premissions-and-acl","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyidk003au9urkecby50t","content":"<h3 id=\"特殊权限\"><a href=\"#特殊权限\" class=\"headerlink\" title=\"特殊权限\"></a>特殊权限</h3><p>linux中除了常见的读（r）、写（w）、执行（x）权限以外，还有3个特殊的权限，分别是setuid、setgid和stick bit。</p>\n<h4 id=\"setuid\"><a href=\"#setuid\" class=\"headerlink\" title=\"setuid\"></a>setuid</h4><p>只能设置文件，让普通用户拥有可以执行“<strong>只有root权限才能执行</strong>”的特殊权限，一般设置命令文件此属性。<br>设置方法：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+s <span class=\"regexp\">/tmp/</span>testfile</span><br><span class=\"line\">chmod u-s <span class=\"regexp\">/tmp/</span>testfile</span><br></pre></td></tr></table></figure>\n\n<p>如：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-rwsr-xr-x         <span class=\"number\">1</span>       root          root           <span class=\"number\">22984</span>          <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-04</span>       /usr/bin/passwd</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"setgid\"><a href=\"#setgid\" class=\"headerlink\" title=\"setgid\"></a>setgid</h4><p>可设置文件和目录，当目录设置此属性时在目录下创建的文件，默认所属组都会变为该目录的所属组。</p>\n<p>设置方法:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod g+s /tmp/<span class=\"built_in\">test</span>/</span><br><span class=\"line\">chmod g<span class=\"_\">-s</span> /tmp/<span class=\"built_in\">test</span>/</span><br></pre></td></tr></table></figure>\n\n<p>如:</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drwxr-sr-x         <span class=\"number\">1</span>       testuser         testadmin           <span class=\"number\">22984</span>          <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-04</span>       /tmp/test/</span><br><span class=\"line\">-rw-r--r--           <span class=\"number\">1</span>       root         testadmin          <span class=\"number\">22984</span>          <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-04</span>       /tmp/test/file1  ——文件所属组自动继承test的所属组</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"sticky-bit\"><a href=\"#sticky-bit\" class=\"headerlink\" title=\"sticky bit\"></a>sticky bit</h4><p>在目录下创建的文件，只有文件的拥有者和此目录的拥有者有编辑、删除权限</p>\n<p>设置方法：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +<span class=\"built_in\">t</span> /tmp</span><br><span class=\"line\">chmod -<span class=\"built_in\">t</span> /tmp</span><br></pre></td></tr></table></figure>\n\n<p>以上权限也可以通过数字的方式来设置特殊权限 setuid=4，setgid=2，sticky bit=1</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod <span class=\"number\">4777</span> /test/file1 ——setuid</span><br><span class=\"line\">chmod <span class=\"number\">2777</span> /test/file2 ——setgid</span><br><span class=\"line\">chmod <span class=\"number\">1777</span> /test/      ——sticky bit</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"attr权限（隐藏权限）\"><a href=\"#attr权限（隐藏权限）\" class=\"headerlink\" title=\"attr权限（隐藏权限）\"></a>attr权限（隐藏权限）</h3><p>用来设置特殊用户例如：root之类的权限。</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置方法：</span><br><span class=\"line\">chattr  参数   文件</span><br><span class=\"line\"></span><br><span class=\"line\">+ ：在原有参数设定基础上，追加参数。</span><br><span class=\"line\"><span class=\"bullet\">- </span>：在原有参数设定基础上，移除参数。</span><br><span class=\"line\"><span class=\"section\">= ：更新为指定参数设定。</span></span><br><span class=\"line\">A：文件或目录的 atime (access time)不可被修改(modified), 避免磁盘I/O读写占用资源。</span><br><span class=\"line\">S：硬盘I/O同步选项，功能类似sync。</span><br><span class=\"line\">a：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。</span><br><span class=\"line\">c：即compresse，设定文件是否经压缩后再存储。读取时需要经过自动解压操作。</span><br><span class=\"line\">d：即no dump，设定文件不能成为dump程序的备份目标。</span><br><span class=\"line\">i：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。</span><br><span class=\"line\">j：即journal，设定此参数使得当通过mount参数：data=ordered 或者 data=writeback 挂 载的文件系统，文件在写入时会先被记录(在journal中)。如果filesystem被设定参数为 data=journal，则该参数自动失效。</span><br><span class=\"line\">s：保密性地删除文件或目录，即文件的block、inode空间被全部清空收回。</span><br><span class=\"line\">u：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。</span><br><span class=\"line\">各参数选项中常用到的是a和i。a选项强制只可添加不可删除，多用于日志系统的安全设定。而i是更为严格的安全设定，只有superuser (root) 或具有CAP<span class=\"emphasis\">_LINUX_</span>IMMUTABLE处理能力（标识）的进程能够施加该选项。</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chattr +<span class=\"selector-tag\">i</span> /tmp/testfile1  ——增加i权限</span><br><span class=\"line\">chattr +<span class=\"selector-tag\">a</span> /tmp/testfile1 ——增加a权限</span><br><span class=\"line\"></span><br><span class=\"line\">查看文件的attr权限可使用lsattr命令</span><br><span class=\"line\">lsattr /tmp/testfile1   ——查看文件隐藏权限</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ACL-访问控制列表\"><a href=\"#ACL-访问控制列表\" class=\"headerlink\" title=\"ACL(访问控制列表)\"></a>ACL(访问控制列表)</h4><p>Linux中<code>-rwxrwxrwx.</code>这种权限方式只能规范出三种类型的权限，在系统的使用中并不能完全的满足管理者对于用户权限的指定，因此Linux推出了ACL访问控制列表这种权限管理方法，此方法可以针对不同的用户和组来分配不同的权限配置不局限于原始的UGO权限类型。</p>\n<p>ACL权限的种类</p>\n<ul>\n<li>R——读权限</li>\n<li>W——写权限</li>\n<li>X——执行权限</li>\n</ul>\n<p>acl访问控制列表对于权限的规范和UGO类型的权限是一样的，也是通过RWX来组合控制用户权限。但设置方法不同具体如下</p>\n<p>设置方法：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl   参数    文件</span><br><span class=\"line\"><span class=\"deletion\">-m   设置acl规则</span></span><br><span class=\"line\"><span class=\"deletion\">-x   删除用户的acl规则</span></span><br><span class=\"line\"><span class=\"deletion\">-b    清空acl规则</span></span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl  -m <span class=\"string\">u:</span><span class=\"string\">test:</span>rwx <span class=\"regexp\">/tmp/</span>testfile1 ——赋予用户test对于文件testfile1有RWX权限</span><br><span class=\"line\">setfacl  -x <span class=\"string\">u:</span>test <span class=\"regexp\">/tmp/</span>testfile1     ——删除用户test对于文件testfile1的acl条目</span><br><span class=\"line\">setfacl  -b <span class=\"regexp\">/tmp/</span>testfile1            ——清空testfile1文件的acl条目</span><br></pre></td></tr></table></figure>\n\n<p>查看文件acl是否开启可以通过ls -l  查看文件权限字段 最后一位是否为+号。如：-rwxrwxrwx+则此文件开启了acl，也可通过命令getfacl  /tmp/testfile1来查看文件具体acl条目信息。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"特殊权限\"><a href=\"#特殊权限\" class=\"headerlink\" title=\"特殊权限\"></a>特殊权限</h3><p>linux中除了常见的读（r）、写（w）、执行（x）权限以外，还有3个特殊的权限，分别是setuid、setgid和stick bit。</p>\n<h4 id=\"setuid\"><a href=\"#setuid\" class=\"headerlink\" title=\"setuid\"></a>setuid</h4><p>只能设置文件，让普通用户拥有可以执行“<strong>只有root权限才能执行</strong>”的特殊权限，一般设置命令文件此属性。<br>设置方法：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod u+s <span class=\"regexp\">/tmp/</span>testfile</span><br><span class=\"line\">chmod u-s <span class=\"regexp\">/tmp/</span>testfile</span><br></pre></td></tr></table></figure>\n\n<p>如：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-rwsr-xr-x         <span class=\"number\">1</span>       root          root           <span class=\"number\">22984</span>          <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-04</span>       /usr/bin/passwd</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"setgid\"><a href=\"#setgid\" class=\"headerlink\" title=\"setgid\"></a>setgid</h4><p>可设置文件和目录，当目录设置此属性时在目录下创建的文件，默认所属组都会变为该目录的所属组。</p>\n<p>设置方法:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod g+s /tmp/<span class=\"built_in\">test</span>/</span><br><span class=\"line\">chmod g<span class=\"_\">-s</span> /tmp/<span class=\"built_in\">test</span>/</span><br></pre></td></tr></table></figure>\n\n<p>如:</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drwxr-sr-x         <span class=\"number\">1</span>       testuser         testadmin           <span class=\"number\">22984</span>          <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-04</span>       /tmp/test/</span><br><span class=\"line\">-rw-r--r--           <span class=\"number\">1</span>       root         testadmin          <span class=\"number\">22984</span>          <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-04</span>       /tmp/test/file1  ——文件所属组自动继承test的所属组</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"sticky-bit\"><a href=\"#sticky-bit\" class=\"headerlink\" title=\"sticky bit\"></a>sticky bit</h4><p>在目录下创建的文件，只有文件的拥有者和此目录的拥有者有编辑、删除权限</p>\n<p>设置方法：</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +<span class=\"built_in\">t</span> /tmp</span><br><span class=\"line\">chmod -<span class=\"built_in\">t</span> /tmp</span><br></pre></td></tr></table></figure>\n\n<p>以上权限也可以通过数字的方式来设置特殊权限 setuid=4，setgid=2，sticky bit=1</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod <span class=\"number\">4777</span> /test/file1 ——setuid</span><br><span class=\"line\">chmod <span class=\"number\">2777</span> /test/file2 ——setgid</span><br><span class=\"line\">chmod <span class=\"number\">1777</span> /test/      ——sticky bit</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"attr权限（隐藏权限）\"><a href=\"#attr权限（隐藏权限）\" class=\"headerlink\" title=\"attr权限（隐藏权限）\"></a>attr权限（隐藏权限）</h3><p>用来设置特殊用户例如：root之类的权限。</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置方法：</span><br><span class=\"line\">chattr  参数   文件</span><br><span class=\"line\"></span><br><span class=\"line\">+ ：在原有参数设定基础上，追加参数。</span><br><span class=\"line\"><span class=\"bullet\">- </span>：在原有参数设定基础上，移除参数。</span><br><span class=\"line\"><span class=\"section\">= ：更新为指定参数设定。</span></span><br><span class=\"line\">A：文件或目录的 atime (access time)不可被修改(modified), 避免磁盘I/O读写占用资源。</span><br><span class=\"line\">S：硬盘I/O同步选项，功能类似sync。</span><br><span class=\"line\">a：即append，设定该参数后，只能向文件中添加数据，而不能删除，多用于服务器日志文件安全，只有root才能设定这个属性。</span><br><span class=\"line\">c：即compresse，设定文件是否经压缩后再存储。读取时需要经过自动解压操作。</span><br><span class=\"line\">d：即no dump，设定文件不能成为dump程序的备份目标。</span><br><span class=\"line\">i：设定文件不能被删除、改名、设定链接关系，同时不能写入或新增内容。i参数对于文件 系统的安全设置有很大帮助。</span><br><span class=\"line\">j：即journal，设定此参数使得当通过mount参数：data=ordered 或者 data=writeback 挂 载的文件系统，文件在写入时会先被记录(在journal中)。如果filesystem被设定参数为 data=journal，则该参数自动失效。</span><br><span class=\"line\">s：保密性地删除文件或目录，即文件的block、inode空间被全部清空收回。</span><br><span class=\"line\">u：与s相反，当设定为u时，数据内容其实还存在磁盘中，可以用于undeletion。</span><br><span class=\"line\">各参数选项中常用到的是a和i。a选项强制只可添加不可删除，多用于日志系统的安全设定。而i是更为严格的安全设定，只有superuser (root) 或具有CAP<span class=\"emphasis\">_LINUX_</span>IMMUTABLE处理能力（标识）的进程能够施加该选项。</span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chattr +<span class=\"selector-tag\">i</span> /tmp/testfile1  ——增加i权限</span><br><span class=\"line\">chattr +<span class=\"selector-tag\">a</span> /tmp/testfile1 ——增加a权限</span><br><span class=\"line\"></span><br><span class=\"line\">查看文件的attr权限可使用lsattr命令</span><br><span class=\"line\">lsattr /tmp/testfile1   ——查看文件隐藏权限</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ACL-访问控制列表\"><a href=\"#ACL-访问控制列表\" class=\"headerlink\" title=\"ACL(访问控制列表)\"></a>ACL(访问控制列表)</h4><p>Linux中<code>-rwxrwxrwx.</code>这种权限方式只能规范出三种类型的权限，在系统的使用中并不能完全的满足管理者对于用户权限的指定，因此Linux推出了ACL访问控制列表这种权限管理方法，此方法可以针对不同的用户和组来分配不同的权限配置不局限于原始的UGO权限类型。</p>\n<p>ACL权限的种类</p>\n<ul>\n<li>R——读权限</li>\n<li>W——写权限</li>\n<li>X——执行权限</li>\n</ul>\n<p>acl访问控制列表对于权限的规范和UGO类型的权限是一样的，也是通过RWX来组合控制用户权限。但设置方法不同具体如下</p>\n<p>设置方法：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl   参数    文件</span><br><span class=\"line\"><span class=\"deletion\">-m   设置acl规则</span></span><br><span class=\"line\"><span class=\"deletion\">-x   删除用户的acl规则</span></span><br><span class=\"line\"><span class=\"deletion\">-b    清空acl规则</span></span><br></pre></td></tr></table></figure>\n\n<p>例：</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl  -m <span class=\"string\">u:</span><span class=\"string\">test:</span>rwx <span class=\"regexp\">/tmp/</span>testfile1 ——赋予用户test对于文件testfile1有RWX权限</span><br><span class=\"line\">setfacl  -x <span class=\"string\">u:</span>test <span class=\"regexp\">/tmp/</span>testfile1     ——删除用户test对于文件testfile1的acl条目</span><br><span class=\"line\">setfacl  -b <span class=\"regexp\">/tmp/</span>testfile1            ——清空testfile1文件的acl条目</span><br></pre></td></tr></table></figure>\n\n<p>查看文件acl是否开启可以通过ls -l  查看文件权限字段 最后一位是否为+号。如：-rwxrwxrwx+则此文件开启了acl，也可通过命令getfacl  /tmp/testfile1来查看文件具体acl条目信息。</p>\n"},{"layout":"post","title":"进程状态","published":1,"author":"xiemx","comments":1,"date":"2017-03-29T02:03:05.000Z","_content":"```\nD  不能中断的进程（通常为IO）\nR  正在运行中的进程\nS  已经中断的进程，通常情况下，系统中大部分进程都是这个状态\nT  已经停止或者暂停的进程，如果我们正在运行一个命令，比如说sleep 10，如果我们按一下ctrl -z 让他暂停，那么我们用ps查看就会显示T这个状态\nW 这个好像是说，从内核2.6xx 以后，表示为没有足够的内存页分配\nX  已经死掉的进程（这个好像从来不会出现）\nZ  僵尸进程\n\n下面一些是BSD风格的参数\n<  高优先级进程\nN  低优先级进程\nL   在内存中被锁了内存分页\ns   主进程\nl   多线程进程\n+  代表在前台运行的进程\n```","source":"_posts/linux-process-status.md","raw":"---\nlayout: post\ntitle: 进程状态\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-03-29 10:03:05\ntags: [ linux ]\ncategories:\n    - linux\n---\n```\nD  不能中断的进程（通常为IO）\nR  正在运行中的进程\nS  已经中断的进程，通常情况下，系统中大部分进程都是这个状态\nT  已经停止或者暂停的进程，如果我们正在运行一个命令，比如说sleep 10，如果我们按一下ctrl -z 让他暂停，那么我们用ps查看就会显示T这个状态\nW 这个好像是说，从内核2.6xx 以后，表示为没有足够的内存页分配\nX  已经死掉的进程（这个好像从来不会出现）\nZ  僵尸进程\n\n下面一些是BSD风格的参数\n<  高优先级进程\nN  低优先级进程\nL   在内存中被锁了内存分页\ns   主进程\nl   多线程进程\n+  代表在前台运行的进程\n```","slug":"linux-process-status","updated":"2019-10-21T06:57:42.805Z","photos":[],"link":"","_id":"ck42dyidm003eu9urqv3w1lov","content":"<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">D</span>  <span class=\"string\">不能中断的进程（通常为IO）</span></span><br><span class=\"line\"><span class=\"attr\">R</span>  <span class=\"string\">正在运行中的进程</span></span><br><span class=\"line\"><span class=\"attr\">S</span>  <span class=\"string\">已经中断的进程，通常情况下，系统中大部分进程都是这个状态</span></span><br><span class=\"line\"><span class=\"attr\">T</span>  <span class=\"string\">已经停止或者暂停的进程，如果我们正在运行一个命令，比如说sleep 10，如果我们按一下ctrl -z 让他暂停，那么我们用ps查看就会显示T这个状态</span></span><br><span class=\"line\"><span class=\"attr\">W</span> <span class=\"string\">这个好像是说，从内核2.6xx 以后，表示为没有足够的内存页分配</span></span><br><span class=\"line\"><span class=\"attr\">X</span>  <span class=\"string\">已经死掉的进程（这个好像从来不会出现）</span></span><br><span class=\"line\"><span class=\"attr\">Z</span>  <span class=\"string\">僵尸进程</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">下面一些是BSD风格的参数</span></span><br><span class=\"line\"><span class=\"meta\">&lt;</span>  <span class=\"string\">高优先级进程</span></span><br><span class=\"line\"><span class=\"attr\">N</span>  <span class=\"string\">低优先级进程</span></span><br><span class=\"line\"><span class=\"attr\">L</span>   <span class=\"string\">在内存中被锁了内存分页</span></span><br><span class=\"line\"><span class=\"attr\">s</span>   <span class=\"string\">主进程</span></span><br><span class=\"line\"><span class=\"attr\">l</span>   <span class=\"string\">多线程进程</span></span><br><span class=\"line\"><span class=\"meta\">+</span>  <span class=\"string\">代表在前台运行的进程</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">D</span>  <span class=\"string\">不能中断的进程（通常为IO）</span></span><br><span class=\"line\"><span class=\"attr\">R</span>  <span class=\"string\">正在运行中的进程</span></span><br><span class=\"line\"><span class=\"attr\">S</span>  <span class=\"string\">已经中断的进程，通常情况下，系统中大部分进程都是这个状态</span></span><br><span class=\"line\"><span class=\"attr\">T</span>  <span class=\"string\">已经停止或者暂停的进程，如果我们正在运行一个命令，比如说sleep 10，如果我们按一下ctrl -z 让他暂停，那么我们用ps查看就会显示T这个状态</span></span><br><span class=\"line\"><span class=\"attr\">W</span> <span class=\"string\">这个好像是说，从内核2.6xx 以后，表示为没有足够的内存页分配</span></span><br><span class=\"line\"><span class=\"attr\">X</span>  <span class=\"string\">已经死掉的进程（这个好像从来不会出现）</span></span><br><span class=\"line\"><span class=\"attr\">Z</span>  <span class=\"string\">僵尸进程</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">下面一些是BSD风格的参数</span></span><br><span class=\"line\"><span class=\"meta\">&lt;</span>  <span class=\"string\">高优先级进程</span></span><br><span class=\"line\"><span class=\"attr\">N</span>  <span class=\"string\">低优先级进程</span></span><br><span class=\"line\"><span class=\"attr\">L</span>   <span class=\"string\">在内存中被锁了内存分页</span></span><br><span class=\"line\"><span class=\"attr\">s</span>   <span class=\"string\">主进程</span></span><br><span class=\"line\"><span class=\"attr\">l</span>   <span class=\"string\">多线程进程</span></span><br><span class=\"line\"><span class=\"meta\">+</span>  <span class=\"string\">代表在前台运行的进程</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"start-stop-daemon 用法","published":1,"author":"xiemx","comments":1,"date":"2017-01-07T03:01:59.000Z","_content":"start-stop-daemon，用来启动停止系统中的守护进程，/etc/init.d/下的脚本中会用到这个命令去启动、停止、查询这个命令。可以查询学习下高玩的用法。\n```\n参数：\n-S|--start -- <argument> ... 开启一个系统守护程序，并传递参数给它 \n-K|--stop 停止一个程序 \n-T|--status 得到程序的状态 \n-H|--help 显示帮助信息 \n-V|--version 打印版本信息 \nMatching options (at least one is required): \n-p|--pidfile <pid-file> pid file to check \n-x|--exec <executable> program to start/check if it is running \n-n|--name <process-name> process name to check \n-u|--user <username|uid> process owner to check \nOptions: \n-g|--group <group|gid> 按指定用户组权限运行程序 \n-c|--chuid <name|uid[:group|gid]> \n按指定用户、用户组权限运行程序 \n-s|--signal <signal> signal to send (default TERM) \n-a|--startas <pathname> program to start (default is <executable>) \n-r|--chroot <directory> chroot to <directory> before starting \n-d|--chdir <directory> change to <directory> (default is /) \n-N|--nicelevel <incr> add incr to the process' nice level \n-P|--procsched <policy[:prio]> \nuse <policy> with <prio> for the kernel \nprocess scheduler (default prio is 0) \n-I|--iosched <class[:prio]> use <class> with <prio> to set the IO \nscheduler (default prio is 4) \n-k|--umask <mask> 在开始运行前设置<mask> \n-b|--background 后台运行 \n-m|--make-pidfile 当命令本身不创建pidfile时，由start-stop-daemon创建 \n-R|--retry <schedule> 等待timeout的时间，检查进程是否停止，如果没有发送KILL信号； \n-t|--test 测试模式 \n-o|--oknodo exit status 0 (not 1) if nothing done \n-q|--quiet 不要输出警告 \n-v|--verbose 显示运行过程信息 \n```\n\n开启一个daemon进程 \n```\nstart-stop-daemon --start --background --exec /test.py  -- -c /test.conf  \n# -- 后的参数会传递给 /test.py,相当于/test.py -c /test.conf\n```\n\n关闭一个daemon进程 \n```\nstart-stop-daemon --stop --name proxy.py\n```","source":"_posts/linux-start-stop-daemon.md","raw":"---\nlayout: post\ntitle: start-stop-daemon 用法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-01-07 11:01:59\ntags: [ linux ]\ncategories:\n    - linux\n---\nstart-stop-daemon，用来启动停止系统中的守护进程，/etc/init.d/下的脚本中会用到这个命令去启动、停止、查询这个命令。可以查询学习下高玩的用法。\n```\n参数：\n-S|--start -- <argument> ... 开启一个系统守护程序，并传递参数给它 \n-K|--stop 停止一个程序 \n-T|--status 得到程序的状态 \n-H|--help 显示帮助信息 \n-V|--version 打印版本信息 \nMatching options (at least one is required): \n-p|--pidfile <pid-file> pid file to check \n-x|--exec <executable> program to start/check if it is running \n-n|--name <process-name> process name to check \n-u|--user <username|uid> process owner to check \nOptions: \n-g|--group <group|gid> 按指定用户组权限运行程序 \n-c|--chuid <name|uid[:group|gid]> \n按指定用户、用户组权限运行程序 \n-s|--signal <signal> signal to send (default TERM) \n-a|--startas <pathname> program to start (default is <executable>) \n-r|--chroot <directory> chroot to <directory> before starting \n-d|--chdir <directory> change to <directory> (default is /) \n-N|--nicelevel <incr> add incr to the process' nice level \n-P|--procsched <policy[:prio]> \nuse <policy> with <prio> for the kernel \nprocess scheduler (default prio is 0) \n-I|--iosched <class[:prio]> use <class> with <prio> to set the IO \nscheduler (default prio is 4) \n-k|--umask <mask> 在开始运行前设置<mask> \n-b|--background 后台运行 \n-m|--make-pidfile 当命令本身不创建pidfile时，由start-stop-daemon创建 \n-R|--retry <schedule> 等待timeout的时间，检查进程是否停止，如果没有发送KILL信号； \n-t|--test 测试模式 \n-o|--oknodo exit status 0 (not 1) if nothing done \n-q|--quiet 不要输出警告 \n-v|--verbose 显示运行过程信息 \n```\n\n开启一个daemon进程 \n```\nstart-stop-daemon --start --background --exec /test.py  -- -c /test.conf  \n# -- 后的参数会传递给 /test.py,相当于/test.py -c /test.conf\n```\n\n关闭一个daemon进程 \n```\nstart-stop-daemon --stop --name proxy.py\n```","slug":"linux-start-stop-daemon","updated":"2019-10-21T06:57:42.835Z","photos":[],"link":"","_id":"ck42dyidn003hu9ur36j4sbko","content":"<p>start-stop-daemon，用来启动停止系统中的守护进程，/etc/init.d/下的脚本中会用到这个命令去启动、停止、查询这个命令。可以查询学习下高玩的用法。</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数：</span><br><span class=\"line\">-<span class=\"ruby\">S<span class=\"params\">|--start -- &lt;argument&gt; ... 开启一个系统守护程序，并传递参数给它 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-K<span class=\"params\">|--stop 停止一个程序 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-T<span class=\"params\">|--status 得到程序的状态 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-H<span class=\"params\">|--help 显示帮助信息 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-V<span class=\"params\">|--version 打印版本信息 </span></span></span><br><span class=\"line\"><span class=\"ruby\">Matching options (at least one is required): </span></span><br><span class=\"line\"><span class=\"ruby\">-p<span class=\"params\">|--pidfile &lt;pid-file&gt; pid file to check </span></span></span><br><span class=\"line\"><span class=\"ruby\">-x<span class=\"params\">|--exec &lt;executable&gt; program to start/check <span class=\"keyword\">if</span> it is running </span></span></span><br><span class=\"line\"><span class=\"ruby\">-n<span class=\"params\">|--name &lt;process-name&gt; process name to check </span></span></span><br><span class=\"line\"><span class=\"ruby\">-u<span class=\"params\">|--user &lt;username|</span>uid&gt; process owner to check </span></span><br><span class=\"line\"><span class=\"ruby\"><span class=\"symbol\">Options:</span> </span></span><br><span class=\"line\"><span class=\"ruby\">-g<span class=\"params\">|--group &lt;group|</span>gid&gt; 按指定用户组权限运行程序 </span></span><br><span class=\"line\"><span class=\"ruby\">-c<span class=\"params\">|--chuid &lt;name|</span>uid[<span class=\"symbol\">:group|gid</span>]&gt; </span></span><br><span class=\"line\"><span class=\"ruby\">按指定用户、用户组权限运行程序 </span></span><br><span class=\"line\"><span class=\"ruby\">-s<span class=\"params\">|--signal &lt;signal&gt; signal to send (default TERM) </span></span></span><br><span class=\"line\"><span class=\"ruby\">-a<span class=\"params\">|--startas &lt;pathname&gt; program to start (default is &lt;executable&gt;) </span></span></span><br><span class=\"line\"><span class=\"ruby\">-r<span class=\"params\">|--chroot &lt;directory&gt; chroot to &lt;directory&gt; before starting </span></span></span><br><span class=\"line\"><span class=\"ruby\">-d<span class=\"params\">|--chdir &lt;directory&gt; change to &lt;directory&gt; (default is /) </span></span></span><br><span class=\"line\"><span class=\"ruby\">-N<span class=\"params\">|--nicelevel &lt;incr&gt; add incr to the process' nice level </span></span></span><br><span class=\"line\"><span class=\"ruby\">-P<span class=\"params\">|--procsched &lt;policy[:prio]&gt; </span></span></span><br><span class=\"line\"><span class=\"ruby\">use &lt;policy&gt; with &lt;prio&gt; <span class=\"keyword\">for</span> the kernel </span></span><br><span class=\"line\"><span class=\"ruby\">process scheduler (default prio is <span class=\"number\">0</span>) </span></span><br><span class=\"line\"><span class=\"ruby\">-I<span class=\"params\">|--iosched &lt;<span class=\"keyword\">class</span>[:prio]&gt; use &lt;<span class=\"keyword\">class</span>&gt; with &lt;prio&gt; to set the IO </span></span></span><br><span class=\"line\"><span class=\"ruby\">scheduler (default prio is <span class=\"number\">4</span>) </span></span><br><span class=\"line\"><span class=\"ruby\">-k<span class=\"params\">|--umask &lt;mask&gt; 在开始运行前设置&lt;mask&gt; </span></span></span><br><span class=\"line\"><span class=\"ruby\">-b<span class=\"params\">|--background 后台运行 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-m<span class=\"params\">|--make-pidfile 当命令本身不创建pidfile时，由start-stop-daemon创建 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-R<span class=\"params\">|--<span class=\"keyword\">retry</span> &lt;schedule&gt; 等待timeout的时间，检查进程是否停止，如果没有发送KILL信号； </span></span></span><br><span class=\"line\"><span class=\"ruby\">-t<span class=\"params\">|--test 测试模式 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-o<span class=\"params\">|--oknodo exit status 0 (<span class=\"keyword\">not</span> 1) <span class=\"keyword\">if</span> nothing done </span></span></span><br><span class=\"line\"><span class=\"ruby\">-q<span class=\"params\">|--quiet 不要输出警告 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-v<span class=\"params\">|--verbose 显示运行过程信息</span></span></span><br></pre></td></tr></table></figure>\n\n<p>开启一个daemon进程 </p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start-stop-daemon --start --background --exec /<span class=\"keyword\">test</span>.py  -- -c /<span class=\"keyword\">test</span>.<span class=\"keyword\">conf</span>  </span><br><span class=\"line\"># -- 后的参数会传递给 /<span class=\"keyword\">test</span>.py,相当于/<span class=\"keyword\">test</span>.py -c /<span class=\"keyword\">test</span>.<span class=\"keyword\">conf</span></span><br></pre></td></tr></table></figure>\n\n<p>关闭一个daemon进程 </p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">start</span>-<span class=\"literal\">stop</span>-daemon --<span class=\"literal\">stop</span> --name proxy.py</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>start-stop-daemon，用来启动停止系统中的守护进程，/etc/init.d/下的脚本中会用到这个命令去启动、停止、查询这个命令。可以查询学习下高玩的用法。</p>\n<figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数：</span><br><span class=\"line\">-<span class=\"ruby\">S<span class=\"params\">|--start -- &lt;argument&gt; ... 开启一个系统守护程序，并传递参数给它 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-K<span class=\"params\">|--stop 停止一个程序 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-T<span class=\"params\">|--status 得到程序的状态 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-H<span class=\"params\">|--help 显示帮助信息 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-V<span class=\"params\">|--version 打印版本信息 </span></span></span><br><span class=\"line\"><span class=\"ruby\">Matching options (at least one is required): </span></span><br><span class=\"line\"><span class=\"ruby\">-p<span class=\"params\">|--pidfile &lt;pid-file&gt; pid file to check </span></span></span><br><span class=\"line\"><span class=\"ruby\">-x<span class=\"params\">|--exec &lt;executable&gt; program to start/check <span class=\"keyword\">if</span> it is running </span></span></span><br><span class=\"line\"><span class=\"ruby\">-n<span class=\"params\">|--name &lt;process-name&gt; process name to check </span></span></span><br><span class=\"line\"><span class=\"ruby\">-u<span class=\"params\">|--user &lt;username|</span>uid&gt; process owner to check </span></span><br><span class=\"line\"><span class=\"ruby\"><span class=\"symbol\">Options:</span> </span></span><br><span class=\"line\"><span class=\"ruby\">-g<span class=\"params\">|--group &lt;group|</span>gid&gt; 按指定用户组权限运行程序 </span></span><br><span class=\"line\"><span class=\"ruby\">-c<span class=\"params\">|--chuid &lt;name|</span>uid[<span class=\"symbol\">:group|gid</span>]&gt; </span></span><br><span class=\"line\"><span class=\"ruby\">按指定用户、用户组权限运行程序 </span></span><br><span class=\"line\"><span class=\"ruby\">-s<span class=\"params\">|--signal &lt;signal&gt; signal to send (default TERM) </span></span></span><br><span class=\"line\"><span class=\"ruby\">-a<span class=\"params\">|--startas &lt;pathname&gt; program to start (default is &lt;executable&gt;) </span></span></span><br><span class=\"line\"><span class=\"ruby\">-r<span class=\"params\">|--chroot &lt;directory&gt; chroot to &lt;directory&gt; before starting </span></span></span><br><span class=\"line\"><span class=\"ruby\">-d<span class=\"params\">|--chdir &lt;directory&gt; change to &lt;directory&gt; (default is /) </span></span></span><br><span class=\"line\"><span class=\"ruby\">-N<span class=\"params\">|--nicelevel &lt;incr&gt; add incr to the process' nice level </span></span></span><br><span class=\"line\"><span class=\"ruby\">-P<span class=\"params\">|--procsched &lt;policy[:prio]&gt; </span></span></span><br><span class=\"line\"><span class=\"ruby\">use &lt;policy&gt; with &lt;prio&gt; <span class=\"keyword\">for</span> the kernel </span></span><br><span class=\"line\"><span class=\"ruby\">process scheduler (default prio is <span class=\"number\">0</span>) </span></span><br><span class=\"line\"><span class=\"ruby\">-I<span class=\"params\">|--iosched &lt;<span class=\"keyword\">class</span>[:prio]&gt; use &lt;<span class=\"keyword\">class</span>&gt; with &lt;prio&gt; to set the IO </span></span></span><br><span class=\"line\"><span class=\"ruby\">scheduler (default prio is <span class=\"number\">4</span>) </span></span><br><span class=\"line\"><span class=\"ruby\">-k<span class=\"params\">|--umask &lt;mask&gt; 在开始运行前设置&lt;mask&gt; </span></span></span><br><span class=\"line\"><span class=\"ruby\">-b<span class=\"params\">|--background 后台运行 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-m<span class=\"params\">|--make-pidfile 当命令本身不创建pidfile时，由start-stop-daemon创建 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-R<span class=\"params\">|--<span class=\"keyword\">retry</span> &lt;schedule&gt; 等待timeout的时间，检查进程是否停止，如果没有发送KILL信号； </span></span></span><br><span class=\"line\"><span class=\"ruby\">-t<span class=\"params\">|--test 测试模式 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-o<span class=\"params\">|--oknodo exit status 0 (<span class=\"keyword\">not</span> 1) <span class=\"keyword\">if</span> nothing done </span></span></span><br><span class=\"line\"><span class=\"ruby\">-q<span class=\"params\">|--quiet 不要输出警告 </span></span></span><br><span class=\"line\"><span class=\"ruby\">-v<span class=\"params\">|--verbose 显示运行过程信息</span></span></span><br></pre></td></tr></table></figure>\n\n<p>开启一个daemon进程 </p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start-stop-daemon --start --background --exec /<span class=\"keyword\">test</span>.py  -- -c /<span class=\"keyword\">test</span>.<span class=\"keyword\">conf</span>  </span><br><span class=\"line\"># -- 后的参数会传递给 /<span class=\"keyword\">test</span>.py,相当于/<span class=\"keyword\">test</span>.py -c /<span class=\"keyword\">test</span>.<span class=\"keyword\">conf</span></span><br></pre></td></tr></table></figure>\n\n<p>关闭一个daemon进程 </p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">start</span>-<span class=\"literal\">stop</span>-daemon --<span class=\"literal\">stop</span> --name proxy.py</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Linux标准输入输出重定向","published":1,"author":"xiemx","comments":1,"date":"2015-11-06T21:11:17.000Z","_content":"一个命令执行前，先会准备好所有输入输出，默认分别绑定（stdin,stdout,stderr)，如果这个时候出现错误，命令将终止，不会执行。执行成功会将结果输出到屏幕上，执行错误时也会将错误信息输出到屏幕。这些默认的输出，输入都是linux系统内定的，我们在使用过程中，有时候并不希望执行结果输出到屏幕。我想输出到文件或其它设备。这个时候我们就需要进行输出重定向了。这些标准输入输出对应的文件如下：\n\n```\n[root@localhost ~]# ll /dev/stdin /dev/stdout /dev/stderr\nlrwxrwxrwx. 1 root root 15 Nov 8 01:03 /dev/stderr -> /proc/self/fd/2 \nlrwxrwxrwx. 1 root root 15 Nov 8 01:03 /dev/stdin -> /proc/self/fd/0 \nlrwxrwxrwx. 1 root root 15 Nov 8 01:03 /dev/stdout -> /proc/self/fd/1\n```\n\n由这些管道文件可以看到linux shell下常用输入输出操作符是：\n\n1.  标准输入   (stdin) ：代码为 0 ，使用 < \n2.  标准输出   (stdout)：代码为 1 ，使用 > 或 >> \n3.  标准错误输出(stderr)：代码为 2 ，使用 2> 或 2>> \n\n当我们执行命令时我们不想要程序将结果输出到屏幕时我们就可以调用`>` `>>`重定向操作符来重定向数据流的输出位置\n```shell\nls -l > testfile1  ##查看当前目录下的文件属性，但不输出到屏幕，输出到testfile1的文件中。\n\necho 123qwe321|passwd --stdin testuse\n###输出字符串123qwe321，并将字符串通过标准输入设备传递给passwd程序去修改testuser用户的密码。\n###--stdin代表标准输入设备，也可以用/dev/stdin来代替。(stdin前是双横杠)\n\n重定向时要注意\n## >重定向输出到文件中时会清空文件中的内容\n## >>不会清空文件内容会在文件最后追加输出内容\n###由于>会清空文件在写入输出内容，因此常用来清空文件\n\necho \"\" > /tmp/testfile1   ##清空testfile1文件。\n```","source":"_posts/linux-stdin-stdout-stderr.md","raw":"---\nlayout: post\ntitle: Linux标准输入输出重定向\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-07 05:11:17\ntags: [ linux ]\ncategories:\n    - linux\n---\n一个命令执行前，先会准备好所有输入输出，默认分别绑定（stdin,stdout,stderr)，如果这个时候出现错误，命令将终止，不会执行。执行成功会将结果输出到屏幕上，执行错误时也会将错误信息输出到屏幕。这些默认的输出，输入都是linux系统内定的，我们在使用过程中，有时候并不希望执行结果输出到屏幕。我想输出到文件或其它设备。这个时候我们就需要进行输出重定向了。这些标准输入输出对应的文件如下：\n\n```\n[root@localhost ~]# ll /dev/stdin /dev/stdout /dev/stderr\nlrwxrwxrwx. 1 root root 15 Nov 8 01:03 /dev/stderr -> /proc/self/fd/2 \nlrwxrwxrwx. 1 root root 15 Nov 8 01:03 /dev/stdin -> /proc/self/fd/0 \nlrwxrwxrwx. 1 root root 15 Nov 8 01:03 /dev/stdout -> /proc/self/fd/1\n```\n\n由这些管道文件可以看到linux shell下常用输入输出操作符是：\n\n1.  标准输入   (stdin) ：代码为 0 ，使用 < \n2.  标准输出   (stdout)：代码为 1 ，使用 > 或 >> \n3.  标准错误输出(stderr)：代码为 2 ，使用 2> 或 2>> \n\n当我们执行命令时我们不想要程序将结果输出到屏幕时我们就可以调用`>` `>>`重定向操作符来重定向数据流的输出位置\n```shell\nls -l > testfile1  ##查看当前目录下的文件属性，但不输出到屏幕，输出到testfile1的文件中。\n\necho 123qwe321|passwd --stdin testuse\n###输出字符串123qwe321，并将字符串通过标准输入设备传递给passwd程序去修改testuser用户的密码。\n###--stdin代表标准输入设备，也可以用/dev/stdin来代替。(stdin前是双横杠)\n\n重定向时要注意\n## >重定向输出到文件中时会清空文件中的内容\n## >>不会清空文件内容会在文件最后追加输出内容\n###由于>会清空文件在写入输出内容，因此常用来清空文件\n\necho \"\" > /tmp/testfile1   ##清空testfile1文件。\n```","slug":"linux-stdin-stdout-stderr","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyido003mu9ur15upc9gp","content":"<p>一个命令执行前，先会准备好所有输入输出，默认分别绑定（stdin,stdout,stderr)，如果这个时候出现错误，命令将终止，不会执行。执行成功会将结果输出到屏幕上，执行错误时也会将错误信息输出到屏幕。这些默认的输出，输入都是linux系统内定的，我们在使用过程中，有时候并不希望执行结果输出到屏幕。我想输出到文件或其它设备。这个时候我们就需要进行输出重定向了。这些标准输入输出对应的文件如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ll /dev/stdin /dev/stdout /dev/stderr</span><br><span class=\"line\">lrwxrwxrwx. <span class=\"number\">1</span> root root <span class=\"number\">15</span> Nov <span class=\"number\">8</span> <span class=\"number\">01</span>:<span class=\"number\">03</span> /dev/stderr -&gt; /proc/self/fd/<span class=\"number\">2</span> </span><br><span class=\"line\">lrwxrwxrwx. <span class=\"number\">1</span> root root <span class=\"number\">15</span> Nov <span class=\"number\">8</span> <span class=\"number\">01</span>:<span class=\"number\">03</span> /dev/stdin -&gt; /proc/self/fd/<span class=\"number\">0</span> </span><br><span class=\"line\">lrwxrwxrwx. <span class=\"number\">1</span> root root <span class=\"number\">15</span> Nov <span class=\"number\">8</span> <span class=\"number\">01</span>:<span class=\"number\">03</span> /dev/stdout -&gt; /proc/self/fd/<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>由这些管道文件可以看到linux shell下常用输入输出操作符是：</p>\n<ol>\n<li>标准输入   (stdin) ：代码为 0 ，使用 &lt; </li>\n<li>标准输出   (stdout)：代码为 1 ，使用 &gt; 或 &gt;&gt; </li>\n<li>标准错误输出(stderr)：代码为 2 ，使用 2&gt; 或 2&gt;&gt; </li>\n</ol>\n<p>当我们执行命令时我们不想要程序将结果输出到屏幕时我们就可以调用<code>&gt;</code> <code>&gt;&gt;</code>重定向操作符来重定向数据流的输出位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l &gt; testfile1  ##查看当前目录下的文件属性，但不输出到屏幕，输出到testfile1的文件中。</span><br><span class=\"line\"></span><br><span class=\"line\">echo 123qwe321|passwd --stdin testuse</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##输出字符串123qwe321，并将字符串通过标准输入设备传递给passwd程序去修改testuser用户的密码。</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##--stdin代表标准输入设备，也可以用/dev/stdin来代替。(stdin前是双横杠)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">重定向时要注意</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># &gt;重定向输出到文件中时会清空文件中的内容</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># &gt;&gt;不会清空文件内容会在文件最后追加输出内容</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##由于&gt;会清空文件在写入输出内容，因此常用来清空文件</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">echo \"\" &gt; /tmp/testfile1   ##清空testfile1文件。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>一个命令执行前，先会准备好所有输入输出，默认分别绑定（stdin,stdout,stderr)，如果这个时候出现错误，命令将终止，不会执行。执行成功会将结果输出到屏幕上，执行错误时也会将错误信息输出到屏幕。这些默认的输出，输入都是linux系统内定的，我们在使用过程中，有时候并不希望执行结果输出到屏幕。我想输出到文件或其它设备。这个时候我们就需要进行输出重定向了。这些标准输入输出对应的文件如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ll /dev/stdin /dev/stdout /dev/stderr</span><br><span class=\"line\">lrwxrwxrwx. <span class=\"number\">1</span> root root <span class=\"number\">15</span> Nov <span class=\"number\">8</span> <span class=\"number\">01</span>:<span class=\"number\">03</span> /dev/stderr -&gt; /proc/self/fd/<span class=\"number\">2</span> </span><br><span class=\"line\">lrwxrwxrwx. <span class=\"number\">1</span> root root <span class=\"number\">15</span> Nov <span class=\"number\">8</span> <span class=\"number\">01</span>:<span class=\"number\">03</span> /dev/stdin -&gt; /proc/self/fd/<span class=\"number\">0</span> </span><br><span class=\"line\">lrwxrwxrwx. <span class=\"number\">1</span> root root <span class=\"number\">15</span> Nov <span class=\"number\">8</span> <span class=\"number\">01</span>:<span class=\"number\">03</span> /dev/stdout -&gt; /proc/self/fd/<span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>由这些管道文件可以看到linux shell下常用输入输出操作符是：</p>\n<ol>\n<li>标准输入   (stdin) ：代码为 0 ，使用 &lt; </li>\n<li>标准输出   (stdout)：代码为 1 ，使用 &gt; 或 &gt;&gt; </li>\n<li>标准错误输出(stderr)：代码为 2 ，使用 2&gt; 或 2&gt;&gt; </li>\n</ol>\n<p>当我们执行命令时我们不想要程序将结果输出到屏幕时我们就可以调用<code>&gt;</code> <code>&gt;&gt;</code>重定向操作符来重定向数据流的输出位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l &gt; testfile1  ##查看当前目录下的文件属性，但不输出到屏幕，输出到testfile1的文件中。</span><br><span class=\"line\"></span><br><span class=\"line\">echo 123qwe321|passwd --stdin testuse</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##输出字符串123qwe321，并将字符串通过标准输入设备传递给passwd程序去修改testuser用户的密码。</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##--stdin代表标准输入设备，也可以用/dev/stdin来代替。(stdin前是双横杠)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">重定向时要注意</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># &gt;重定向输出到文件中时会清空文件中的内容</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># &gt;&gt;不会清空文件内容会在文件最后追加输出内容</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##由于&gt;会清空文件在写入输出内容，因此常用来清空文件</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">echo \"\" &gt; /tmp/testfile1   ##清空testfile1文件。</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Linux目录结构","published":1,"author":"xiemx","comments":1,"date":"2015-11-07T04:11:03.000Z","_content":"```\n[root@localhost ~]# ls /\nbin    dev       home        lost+found      mnt       proc         sbin         srv         tmp        var\nboot          etc      lib        media       opt       root       selinux       sys       usr\n\n/bin bin是Binary的缩写。这个目录存放着最经常使用的命令。\n/boot 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。\n/dev dev是Device(设备)的缩写。该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。\n/etc 这个目录用来存放所有的系统管理所需要的配置文件和子目录。\n/home 用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。\n/lib 这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。\n/lost+found ext文件系统创建，这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。\n/media Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。\n/mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。\n/opt 这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。\n/proc 这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。\n/root 该目录为系统管理员，也称作超级权限者的用户主目录。\n/sbin 系统管理员使用的系统管理程序。\n/selinux 这个目录是Redhat/CentOS所特有的目录，Selinux是一个安全机制，类似于windows的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。\n/srv 该目录存放一些服务启动之后需要提取的数据。\n/sys 这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs ，sysfs文件系统集成了下面3种文件系统的信息：针对进程信息的proc文件系统、针对设备的devfs文件系统以及针对伪终端的devpts文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统种被创建。\n/tmp 这个目录是用来存放一些临时文件的。\n/usr 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录。\n/usr/bin 系统用户使用的应用程序。\n/usr/sbin 超级用户使用的比较高级的管理程序和系统守护程序。\n/usr/src 内核源代码默认的放置目录。\n/var 经常被修改的目录放在这个目录下。包括各种日志文件。\n```","source":"_posts/linux-tree.md","raw":"---\nlayout: post\ntitle: Linux目录结构\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-07 12:11:03\ntags: [ linux ]\ncategories:\n    - linux\n---\n```\n[root@localhost ~]# ls /\nbin    dev       home        lost+found      mnt       proc         sbin         srv         tmp        var\nboot          etc      lib        media       opt       root       selinux       sys       usr\n\n/bin bin是Binary的缩写。这个目录存放着最经常使用的命令。\n/boot 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。\n/dev dev是Device(设备)的缩写。该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。\n/etc 这个目录用来存放所有的系统管理所需要的配置文件和子目录。\n/home 用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。\n/lib 这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。\n/lost+found ext文件系统创建，这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。\n/media Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。\n/mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。\n/opt 这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。\n/proc 这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。\n/root 该目录为系统管理员，也称作超级权限者的用户主目录。\n/sbin 系统管理员使用的系统管理程序。\n/selinux 这个目录是Redhat/CentOS所特有的目录，Selinux是一个安全机制，类似于windows的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。\n/srv 该目录存放一些服务启动之后需要提取的数据。\n/sys 这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs ，sysfs文件系统集成了下面3种文件系统的信息：针对进程信息的proc文件系统、针对设备的devfs文件系统以及针对伪终端的devpts文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统种被创建。\n/tmp 这个目录是用来存放一些临时文件的。\n/usr 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录。\n/usr/bin 系统用户使用的应用程序。\n/usr/sbin 超级用户使用的比较高级的管理程序和系统守护程序。\n/usr/src 内核源代码默认的放置目录。\n/var 经常被修改的目录放在这个目录下。包括各种日志文件。\n```","slug":"linux-tree","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyidp003pu9urmqwa37dg","content":"<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ls /</span></span><br><span class=\"line\">bin    dev       home        lost+found      mnt       proc         sbin         srv         tmp        var</span><br><span class=\"line\">boot          etc      <span class=\"class\"><span class=\"keyword\">lib</span>        <span class=\"title\">media</span>       <span class=\"title\">opt</span>       <span class=\"title\">root</span>       <span class=\"title\">selinux</span>       <span class=\"title\">sys</span>       <span class=\"title\">usr</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">/bin bin是Binary的缩写。这个目录存放着最经常使用的命令。</span><br><span class=\"line\">/boot 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</span><br><span class=\"line\">/dev dev是Device(设备)的缩写。该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</span><br><span class=\"line\">/etc 这个目录用来存放所有的系统管理所需要的配置文件和子目录。</span><br><span class=\"line\">/home 用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</span><br><span class=\"line\">/<span class=\"class\"><span class=\"keyword\">lib</span> 这个目录里存放着系统最基本的动态连接共享库，其作用类似于<span class=\"title\">Windows</span>里的<span class=\"title\">DLL</span>文件。几乎所有的应用程序都需要用到这些共享库。</span></span><br><span class=\"line\">/lost+found ext文件系统创建，这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</span><br><span class=\"line\">/media Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。</span><br><span class=\"line\">/mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。</span><br><span class=\"line\">/opt 这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</span><br><span class=\"line\">/proc 这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。</span><br><span class=\"line\">/root 该目录为系统管理员，也称作超级权限者的用户主目录。</span><br><span class=\"line\">/sbin 系统管理员使用的系统管理程序。</span><br><span class=\"line\">/selinux 这个目录是Redhat/CentOS所特有的目录，Selinux是一个安全机制，类似于windows的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</span><br><span class=\"line\">/srv 该目录存放一些服务启动之后需要提取的数据。</span><br><span class=\"line\">/sys 这是linux2.<span class=\"number\">6</span>内核的一个很大的变化。该目录下安装了<span class=\"number\">2.6</span>内核中新出现的一个文件系统 sysfs ，sysfs文件系统集成了下面<span class=\"number\">3</span>种文件系统的信息：针对进程信息的proc文件系统、针对设备的devfs文件系统以及针对伪终端的devpts文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统种被创建。</span><br><span class=\"line\">/tmp 这个目录是用来存放一些临时文件的。</span><br><span class=\"line\">/usr 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录。</span><br><span class=\"line\">/usr/bin 系统用户使用的应用程序。</span><br><span class=\"line\">/usr/sbin 超级用户使用的比较高级的管理程序和系统守护程序。</span><br><span class=\"line\">/usr/src 内核源代码默认的放置目录。</span><br><span class=\"line\">/var 经常被修改的目录放在这个目录下。包括各种日志文件。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight crystal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ls /</span></span><br><span class=\"line\">bin    dev       home        lost+found      mnt       proc         sbin         srv         tmp        var</span><br><span class=\"line\">boot          etc      <span class=\"class\"><span class=\"keyword\">lib</span>        <span class=\"title\">media</span>       <span class=\"title\">opt</span>       <span class=\"title\">root</span>       <span class=\"title\">selinux</span>       <span class=\"title\">sys</span>       <span class=\"title\">usr</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">/bin bin是Binary的缩写。这个目录存放着最经常使用的命令。</span><br><span class=\"line\">/boot 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</span><br><span class=\"line\">/dev dev是Device(设备)的缩写。该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</span><br><span class=\"line\">/etc 这个目录用来存放所有的系统管理所需要的配置文件和子目录。</span><br><span class=\"line\">/home 用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</span><br><span class=\"line\">/<span class=\"class\"><span class=\"keyword\">lib</span> 这个目录里存放着系统最基本的动态连接共享库，其作用类似于<span class=\"title\">Windows</span>里的<span class=\"title\">DLL</span>文件。几乎所有的应用程序都需要用到这些共享库。</span></span><br><span class=\"line\">/lost+found ext文件系统创建，这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</span><br><span class=\"line\">/media Linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux会把识别的设备挂载到这个目录下。</span><br><span class=\"line\">/mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里的内容了。</span><br><span class=\"line\">/opt 这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</span><br><span class=\"line\">/proc 这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。</span><br><span class=\"line\">/root 该目录为系统管理员，也称作超级权限者的用户主目录。</span><br><span class=\"line\">/sbin 系统管理员使用的系统管理程序。</span><br><span class=\"line\">/selinux 这个目录是Redhat/CentOS所特有的目录，Selinux是一个安全机制，类似于windows的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</span><br><span class=\"line\">/srv 该目录存放一些服务启动之后需要提取的数据。</span><br><span class=\"line\">/sys 这是linux2.<span class=\"number\">6</span>内核的一个很大的变化。该目录下安装了<span class=\"number\">2.6</span>内核中新出现的一个文件系统 sysfs ，sysfs文件系统集成了下面<span class=\"number\">3</span>种文件系统的信息：针对进程信息的proc文件系统、针对设备的devfs文件系统以及针对伪终端的devpts文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统种被创建。</span><br><span class=\"line\">/tmp 这个目录是用来存放一些临时文件的。</span><br><span class=\"line\">/usr 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录。</span><br><span class=\"line\">/usr/bin 系统用户使用的应用程序。</span><br><span class=\"line\">/usr/sbin 超级用户使用的比较高级的管理程序和系统守护程序。</span><br><span class=\"line\">/usr/src 内核源代码默认的放置目录。</span><br><span class=\"line\">/var 经常被修改的目录放在这个目录下。包括各种日志文件。</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Linux用户和组","published":1,"author":"xiemx","comments":1,"date":"2015-11-04T23:11:13.000Z","_content":"### 用户和组的配置文件\n在linux中，用户帐号，用户密码，用户组信息和用户组密码均是存放在不同的配置文件中的。\n* `/etc/passwd`存放用户配置信息\n* `/etc/shadow`存放用户密码和密码策略\n* `/etc/group`存放组配置信息\n* `/etc/gshadow`存放组配置信息\n\n\n#### /etc/passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\n* **用户帐号:密码占位符:用户ID:用户组ID:描述:用户主目录:用户所使用的shell**\n\n```shell\n[mingxu.xie@cn-aux-cc ~]$ cat /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n```\n#### /etc/shadow文件对应passwd文件分9段，具体信息如下\n* **用户名:密码:最近修改时间:最短有效时间:最长有效时间:过期提醒日期:过期后宽限时间:账户失效时间:保留字段**\n```shell\n[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/shadow\nroot:*LOCK*:14600::::::\nbin:*:16323:0:99999:7:::\ndaemon:*:16323:0:99999:7:::\nadm:*:16323:0:99999:7:::\nlp:*:16323:0:99999:7:::\ntest:$6$getqHfvX$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:18185:0:99999:7:::\n```\n\n#### /etc/group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\n\n* **组名:密码占位符:组ID:组成员**\n```shell\n[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/group\nroot:x:0:\nbin:x:1:bin,daemon\ndaemon:x:2:bin,daemon\nsys:x:3:bin,adm\nadm:x:4:adm,daemon\ntty:x:5:\ndisk:x:6:\nlp:x:7:daemon\nmem:x:8:\nkmem:x:9:\nwheel:x:10:ec2-user,test\n```\n\n#### /etc/gshadow文件对应group文件，分4段，具体信息如下\n\n* **组名:口令:组管理者:组内用户列表**\n```shell\n[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/gshadow\nroot:::\nbin:::bin,daemon\ndaemon:::bin,daemon\nsys:::bin,adm\nadm:::adm,daemon\n```\n**修改以上文件可以完成对用户和组属性和配置的改变，/sbin/nologin的shell可以使用户不可登陆等等。也可以通过命令来修改用户属性，但实质也是修改此配置文件中的参数。**\n\n### 用户和组的操作\n```shell\n1、添加新用户\n  useradd 选项 用户名 \n\n  其中各选项含义如下： \n  -c comment 指定一段注释性描述。\n  -d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，能创建主目录。 \n  -g 指定用户所属的用户组。 \n  -G 指定用户所属的附加组。 \n  -s  指定用户的登录Shell。 \n  -u 指定用户的用户号，如果同时有-o选项，则能重复使用其他用户的标识号。\n\nuseradd  -G bin -g root -s /sbin/noloing -u 101   testuser\n\n2、添加组\n  用法：groupadd    选项    用户名 \n  其中各选项含义如下： \n  -g 指定用户组ID\n\ngroupadd  -g 40000  testgrp\n\n3、修改用户属性和组属性\n  groupmod  ——修改组属性\n  usermod     ——修改用户属性\n  参数、语法和创建时使用的相同。\n\n4、删除用户和组\n  userdel testuser   ——默认删除testuser用户的配置但不删除家目录和邮件需手工删除\n  userdel -r testuser  ——删除用户同时删除家目录文件和邮件\n  groupdel testgrp  ——删除组\n\n5、修改用户密码策略\n\n[mingxu.xie@cn-aux-cc ~]$ chage --help\nUsage: chage [options] [LOGIN]\n\nOptions:\n  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY\n  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\n  -h, --help                    display this help message and exit\n  -I, --inactive INACTIVE       set password inactive after expiration\n                                to INACTIVE\n  -l, --list                    show account aging information\n  -m, --mindays MIN_DAYS        set minimum number of days before password\n                                change to MIN_DAYS\n  -M, --maxdays MAX_DAYS        set maximim number of days before password\n                                change to MAX_DAYS\n  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS\n系统添加用户时如果没有规定用户的详细属性，则系统默认参照/etc/login.defs  和/etc/default/useradd来配置用户的属性！修改此处文档可以设置默认用户添加时的属性。\n\n```","source":"_posts/linux-user-and-group.md","raw":"---\nlayout: post\ntitle: Linux用户和组\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-05 07:11:13\ntags: [ linux, commands]\ncategories:\n    - linux\n---\n### 用户和组的配置文件\n在linux中，用户帐号，用户密码，用户组信息和用户组密码均是存放在不同的配置文件中的。\n* `/etc/passwd`存放用户配置信息\n* `/etc/shadow`存放用户密码和密码策略\n* `/etc/group`存放组配置信息\n* `/etc/gshadow`存放组配置信息\n\n\n#### /etc/passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\n* **用户帐号:密码占位符:用户ID:用户组ID:描述:用户主目录:用户所使用的shell**\n\n```shell\n[mingxu.xie@cn-aux-cc ~]$ cat /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n```\n#### /etc/shadow文件对应passwd文件分9段，具体信息如下\n* **用户名:密码:最近修改时间:最短有效时间:最长有效时间:过期提醒日期:过期后宽限时间:账户失效时间:保留字段**\n```shell\n[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/shadow\nroot:*LOCK*:14600::::::\nbin:*:16323:0:99999:7:::\ndaemon:*:16323:0:99999:7:::\nadm:*:16323:0:99999:7:::\nlp:*:16323:0:99999:7:::\ntest:$6$getqHfvX$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:18185:0:99999:7:::\n```\n\n#### /etc/group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\n\n* **组名:密码占位符:组ID:组成员**\n```shell\n[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/group\nroot:x:0:\nbin:x:1:bin,daemon\ndaemon:x:2:bin,daemon\nsys:x:3:bin,adm\nadm:x:4:adm,daemon\ntty:x:5:\ndisk:x:6:\nlp:x:7:daemon\nmem:x:8:\nkmem:x:9:\nwheel:x:10:ec2-user,test\n```\n\n#### /etc/gshadow文件对应group文件，分4段，具体信息如下\n\n* **组名:口令:组管理者:组内用户列表**\n```shell\n[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/gshadow\nroot:::\nbin:::bin,daemon\ndaemon:::bin,daemon\nsys:::bin,adm\nadm:::adm,daemon\n```\n**修改以上文件可以完成对用户和组属性和配置的改变，/sbin/nologin的shell可以使用户不可登陆等等。也可以通过命令来修改用户属性，但实质也是修改此配置文件中的参数。**\n\n### 用户和组的操作\n```shell\n1、添加新用户\n  useradd 选项 用户名 \n\n  其中各选项含义如下： \n  -c comment 指定一段注释性描述。\n  -d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，能创建主目录。 \n  -g 指定用户所属的用户组。 \n  -G 指定用户所属的附加组。 \n  -s  指定用户的登录Shell。 \n  -u 指定用户的用户号，如果同时有-o选项，则能重复使用其他用户的标识号。\n\nuseradd  -G bin -g root -s /sbin/noloing -u 101   testuser\n\n2、添加组\n  用法：groupadd    选项    用户名 \n  其中各选项含义如下： \n  -g 指定用户组ID\n\ngroupadd  -g 40000  testgrp\n\n3、修改用户属性和组属性\n  groupmod  ——修改组属性\n  usermod     ——修改用户属性\n  参数、语法和创建时使用的相同。\n\n4、删除用户和组\n  userdel testuser   ——默认删除testuser用户的配置但不删除家目录和邮件需手工删除\n  userdel -r testuser  ——删除用户同时删除家目录文件和邮件\n  groupdel testgrp  ——删除组\n\n5、修改用户密码策略\n\n[mingxu.xie@cn-aux-cc ~]$ chage --help\nUsage: chage [options] [LOGIN]\n\nOptions:\n  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY\n  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE\n  -h, --help                    display this help message and exit\n  -I, --inactive INACTIVE       set password inactive after expiration\n                                to INACTIVE\n  -l, --list                    show account aging information\n  -m, --mindays MIN_DAYS        set minimum number of days before password\n                                change to MIN_DAYS\n  -M, --maxdays MAX_DAYS        set maximim number of days before password\n                                change to MAX_DAYS\n  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS\n系统添加用户时如果没有规定用户的详细属性，则系统默认参照/etc/login.defs  和/etc/default/useradd来配置用户的属性！修改此处文档可以设置默认用户添加时的属性。\n\n```","slug":"linux-user-and-group","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyidr003tu9ur1ps5pf9f","content":"<h3 id=\"用户和组的配置文件\"><a href=\"#用户和组的配置文件\" class=\"headerlink\" title=\"用户和组的配置文件\"></a>用户和组的配置文件</h3><p>在linux中，用户帐号，用户密码，用户组信息和用户组密码均是存放在不同的配置文件中的。</p>\n<ul>\n<li><code>/etc/passwd</code>存放用户配置信息</li>\n<li><code>/etc/shadow</code>存放用户密码和密码策略</li>\n<li><code>/etc/group</code>存放组配置信息</li>\n<li><code>/etc/gshadow</code>存放组配置信息</li>\n</ul>\n<h4 id=\"etc-passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\"><a href=\"#etc-passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\" class=\"headerlink\" title=\"/etc/passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\"></a>/etc/passwd文件中每行存储一个用户信息以：分割分7段具体含义如下</h4><ul>\n<li><strong>用户帐号:密码占位符:用户ID:用户组ID:描述:用户主目录:用户所使用的shell</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ cat /etc/passwd</span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class=\"line\">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class=\"line\">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class=\"line\">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"etc-shadow文件对应passwd文件分9段，具体信息如下\"><a href=\"#etc-shadow文件对应passwd文件分9段，具体信息如下\" class=\"headerlink\" title=\"/etc/shadow文件对应passwd文件分9段，具体信息如下\"></a>/etc/shadow文件对应passwd文件分9段，具体信息如下</h4><ul>\n<li><strong>用户名:密码:最近修改时间:最短有效时间:最长有效时间:过期提醒日期:过期后宽限时间:账户失效时间:保留字段</strong><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/shadow</span><br><span class=\"line\">root:*LOCK*:14600::::::</span><br><span class=\"line\">bin:*:16323:0:99999:7:::</span><br><span class=\"line\">daemon:*:16323:0:99999:7:::</span><br><span class=\"line\">adm:*:16323:0:99999:7:::</span><br><span class=\"line\">lp:*:16323:0:99999:7:::</span><br><span class=\"line\">test:$6$getqHfvX$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:18185:0:99999:7:::</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"etc-group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\"><a href=\"#etc-group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\" class=\"headerlink\" title=\"/etc/group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\"></a>/etc/group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下</h4><ul>\n<li><strong>组名:密码占位符:组ID:组成员</strong><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/group</span><br><span class=\"line\">root:x:0:</span><br><span class=\"line\">bin:x:1:bin,daemon</span><br><span class=\"line\">daemon:x:2:bin,daemon</span><br><span class=\"line\">sys:x:3:bin,adm</span><br><span class=\"line\">adm:x:4:adm,daemon</span><br><span class=\"line\">tty:x:5:</span><br><span class=\"line\">disk:x:6:</span><br><span class=\"line\">lp:x:7:daemon</span><br><span class=\"line\">mem:x:8:</span><br><span class=\"line\">kmem:x:9:</span><br><span class=\"line\">wheel:x:10:ec2-user,test</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"etc-gshadow文件对应group文件，分4段，具体信息如下\"><a href=\"#etc-gshadow文件对应group文件，分4段，具体信息如下\" class=\"headerlink\" title=\"/etc/gshadow文件对应group文件，分4段，具体信息如下\"></a>/etc/gshadow文件对应group文件，分4段，具体信息如下</h4><ul>\n<li><strong>组名:口令:组管理者:组内用户列表</strong><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/gshadow</span><br><span class=\"line\">root:::</span><br><span class=\"line\">bin:::bin,daemon</span><br><span class=\"line\">daemon:::bin,daemon</span><br><span class=\"line\">sys:::bin,adm</span><br><span class=\"line\">adm:::adm,daemon</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><strong>修改以上文件可以完成对用户和组属性和配置的改变，/sbin/nologin的shell可以使用户不可登陆等等。也可以通过命令来修改用户属性，但实质也是修改此配置文件中的参数。</strong></p>\n<h3 id=\"用户和组的操作\"><a href=\"#用户和组的操作\" class=\"headerlink\" title=\"用户和组的操作\"></a>用户和组的操作</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、添加新用户</span><br><span class=\"line\">  useradd 选项 用户名 </span><br><span class=\"line\"></span><br><span class=\"line\">  其中各选项含义如下： </span><br><span class=\"line\">  -c comment 指定一段注释性描述。</span><br><span class=\"line\">  -d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，能创建主目录。 </span><br><span class=\"line\">  -g 指定用户所属的用户组。 </span><br><span class=\"line\">  -G 指定用户所属的附加组。 </span><br><span class=\"line\">  -s  指定用户的登录Shell。 </span><br><span class=\"line\">  -u 指定用户的用户号，如果同时有-o选项，则能重复使用其他用户的标识号。</span><br><span class=\"line\"></span><br><span class=\"line\">useradd  -G bin -g root -s /sbin/noloing -u 101   testuser</span><br><span class=\"line\"></span><br><span class=\"line\">2、添加组</span><br><span class=\"line\">  用法：groupadd    选项    用户名 </span><br><span class=\"line\">  其中各选项含义如下： </span><br><span class=\"line\">  -g 指定用户组ID</span><br><span class=\"line\"></span><br><span class=\"line\">groupadd  -g 40000  testgrp</span><br><span class=\"line\"></span><br><span class=\"line\">3、修改用户属性和组属性</span><br><span class=\"line\">  groupmod  ——修改组属性</span><br><span class=\"line\">  usermod     ——修改用户属性</span><br><span class=\"line\">  参数、语法和创建时使用的相同。</span><br><span class=\"line\"></span><br><span class=\"line\">4、删除用户和组</span><br><span class=\"line\">  userdel testuser   ——默认删除testuser用户的配置但不删除家目录和邮件需手工删除</span><br><span class=\"line\">  userdel -r testuser  ——删除用户同时删除家目录文件和邮件</span><br><span class=\"line\">  groupdel testgrp  ——删除组</span><br><span class=\"line\"></span><br><span class=\"line\">5、修改用户密码策略</span><br><span class=\"line\"></span><br><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ chage --help</span><br><span class=\"line\">Usage: chage [options] [LOGIN]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY</span><br><span class=\"line\">  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE</span><br><span class=\"line\">  -h, --help                    display this help message and exit</span><br><span class=\"line\">  -I, --inactive INACTIVE       set password inactive after expiration</span><br><span class=\"line\">                                to INACTIVE</span><br><span class=\"line\">  -l, --list                    show account aging information</span><br><span class=\"line\">  -m, --mindays MIN_DAYS        set minimum number of days before password</span><br><span class=\"line\">                                change to MIN_DAYS</span><br><span class=\"line\">  -M, --maxdays MAX_DAYS        set maximim number of days before password</span><br><span class=\"line\">                                change to MAX_DAYS</span><br><span class=\"line\">  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS</span><br><span class=\"line\">系统添加用户时如果没有规定用户的详细属性，则系统默认参照/etc/login.defs  和/etc/default/useradd来配置用户的属性！修改此处文档可以设置默认用户添加时的属性。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"用户和组的配置文件\"><a href=\"#用户和组的配置文件\" class=\"headerlink\" title=\"用户和组的配置文件\"></a>用户和组的配置文件</h3><p>在linux中，用户帐号，用户密码，用户组信息和用户组密码均是存放在不同的配置文件中的。</p>\n<ul>\n<li><code>/etc/passwd</code>存放用户配置信息</li>\n<li><code>/etc/shadow</code>存放用户密码和密码策略</li>\n<li><code>/etc/group</code>存放组配置信息</li>\n<li><code>/etc/gshadow</code>存放组配置信息</li>\n</ul>\n<h4 id=\"etc-passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\"><a href=\"#etc-passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\" class=\"headerlink\" title=\"/etc/passwd文件中每行存储一个用户信息以：分割分7段具体含义如下\"></a>/etc/passwd文件中每行存储一个用户信息以：分割分7段具体含义如下</h4><ul>\n<li><strong>用户帐号:密码占位符:用户ID:用户组ID:描述:用户主目录:用户所使用的shell</strong></li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ cat /etc/passwd</span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class=\"line\">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class=\"line\">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class=\"line\">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"etc-shadow文件对应passwd文件分9段，具体信息如下\"><a href=\"#etc-shadow文件对应passwd文件分9段，具体信息如下\" class=\"headerlink\" title=\"/etc/shadow文件对应passwd文件分9段，具体信息如下\"></a>/etc/shadow文件对应passwd文件分9段，具体信息如下</h4><ul>\n<li><strong>用户名:密码:最近修改时间:最短有效时间:最长有效时间:过期提醒日期:过期后宽限时间:账户失效时间:保留字段</strong><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/shadow</span><br><span class=\"line\">root:*LOCK*:14600::::::</span><br><span class=\"line\">bin:*:16323:0:99999:7:::</span><br><span class=\"line\">daemon:*:16323:0:99999:7:::</span><br><span class=\"line\">adm:*:16323:0:99999:7:::</span><br><span class=\"line\">lp:*:16323:0:99999:7:::</span><br><span class=\"line\">test:$6$getqHfvX$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:18185:0:99999:7:::</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"etc-group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\"><a href=\"#etc-group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\" class=\"headerlink\" title=\"/etc/group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下\"></a>/etc/group文件保存了所有组的信息。文件中每一行表示一个组由3个冒号分隔成4段，具体信息如下</h4><ul>\n<li><strong>组名:密码占位符:组ID:组成员</strong><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/group</span><br><span class=\"line\">root:x:0:</span><br><span class=\"line\">bin:x:1:bin,daemon</span><br><span class=\"line\">daemon:x:2:bin,daemon</span><br><span class=\"line\">sys:x:3:bin,adm</span><br><span class=\"line\">adm:x:4:adm,daemon</span><br><span class=\"line\">tty:x:5:</span><br><span class=\"line\">disk:x:6:</span><br><span class=\"line\">lp:x:7:daemon</span><br><span class=\"line\">mem:x:8:</span><br><span class=\"line\">kmem:x:9:</span><br><span class=\"line\">wheel:x:10:ec2-user,test</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h4 id=\"etc-gshadow文件对应group文件，分4段，具体信息如下\"><a href=\"#etc-gshadow文件对应group文件，分4段，具体信息如下\" class=\"headerlink\" title=\"/etc/gshadow文件对应group文件，分4段，具体信息如下\"></a>/etc/gshadow文件对应group文件，分4段，具体信息如下</h4><ul>\n<li><strong>组名:口令:组管理者:组内用户列表</strong><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ sudo cat /etc/gshadow</span><br><span class=\"line\">root:::</span><br><span class=\"line\">bin:::bin,daemon</span><br><span class=\"line\">daemon:::bin,daemon</span><br><span class=\"line\">sys:::bin,adm</span><br><span class=\"line\">adm:::adm,daemon</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><strong>修改以上文件可以完成对用户和组属性和配置的改变，/sbin/nologin的shell可以使用户不可登陆等等。也可以通过命令来修改用户属性，但实质也是修改此配置文件中的参数。</strong></p>\n<h3 id=\"用户和组的操作\"><a href=\"#用户和组的操作\" class=\"headerlink\" title=\"用户和组的操作\"></a>用户和组的操作</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、添加新用户</span><br><span class=\"line\">  useradd 选项 用户名 </span><br><span class=\"line\"></span><br><span class=\"line\">  其中各选项含义如下： </span><br><span class=\"line\">  -c comment 指定一段注释性描述。</span><br><span class=\"line\">  -d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，能创建主目录。 </span><br><span class=\"line\">  -g 指定用户所属的用户组。 </span><br><span class=\"line\">  -G 指定用户所属的附加组。 </span><br><span class=\"line\">  -s  指定用户的登录Shell。 </span><br><span class=\"line\">  -u 指定用户的用户号，如果同时有-o选项，则能重复使用其他用户的标识号。</span><br><span class=\"line\"></span><br><span class=\"line\">useradd  -G bin -g root -s /sbin/noloing -u 101   testuser</span><br><span class=\"line\"></span><br><span class=\"line\">2、添加组</span><br><span class=\"line\">  用法：groupadd    选项    用户名 </span><br><span class=\"line\">  其中各选项含义如下： </span><br><span class=\"line\">  -g 指定用户组ID</span><br><span class=\"line\"></span><br><span class=\"line\">groupadd  -g 40000  testgrp</span><br><span class=\"line\"></span><br><span class=\"line\">3、修改用户属性和组属性</span><br><span class=\"line\">  groupmod  ——修改组属性</span><br><span class=\"line\">  usermod     ——修改用户属性</span><br><span class=\"line\">  参数、语法和创建时使用的相同。</span><br><span class=\"line\"></span><br><span class=\"line\">4、删除用户和组</span><br><span class=\"line\">  userdel testuser   ——默认删除testuser用户的配置但不删除家目录和邮件需手工删除</span><br><span class=\"line\">  userdel -r testuser  ——删除用户同时删除家目录文件和邮件</span><br><span class=\"line\">  groupdel testgrp  ——删除组</span><br><span class=\"line\"></span><br><span class=\"line\">5、修改用户密码策略</span><br><span class=\"line\"></span><br><span class=\"line\">[mingxu.xie@cn-aux-cc ~]$ chage --help</span><br><span class=\"line\">Usage: chage [options] [LOGIN]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY</span><br><span class=\"line\">  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE</span><br><span class=\"line\">  -h, --help                    display this help message and exit</span><br><span class=\"line\">  -I, --inactive INACTIVE       set password inactive after expiration</span><br><span class=\"line\">                                to INACTIVE</span><br><span class=\"line\">  -l, --list                    show account aging information</span><br><span class=\"line\">  -m, --mindays MIN_DAYS        set minimum number of days before password</span><br><span class=\"line\">                                change to MIN_DAYS</span><br><span class=\"line\">  -M, --maxdays MAX_DAYS        set maximim number of days before password</span><br><span class=\"line\">                                change to MAX_DAYS</span><br><span class=\"line\">  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS</span><br><span class=\"line\">系统添加用户时如果没有规定用户的详细属性，则系统默认参照/etc/login.defs  和/etc/default/useradd来配置用户的属性！修改此处文档可以设置默认用户添加时的属性。</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Linux包管理yum仓库配置","published":1,"author":"xiemx","comments":1,"date":"2015-11-08T23:11:22.000Z","_content":"Rhel中使用传统的rpm包安装会存在依存关系问题，虽然rpm为我们列出了依存关系，但是并没有为我们自动解决这个问题，依旧需要我们手动的去安装依存包。这样使得软件的安装非常麻烦，由此Linux中出现了yum工具，yum通过预读取软件的依存关系然后生存缓存，以后我们通过yum去安装软件是yum会根据缓存的关系表自动去识别rpm包的依存关系，为我们自动处理依存关系，使得软件的安装的工作变得简单。yum安装软件需要一个软件仓，yum会读取/etc/yum.repos.d/xxxxxxx.repo的仓库配置文件去仓库中提取软件来安装。我们可以通过修改仓配置文件，来修改仓库位置，使用本地或者速度快的仓，加速软件安装。\n\n配置文件内容：\n```\n[base]\nname=CentOS-$releasever - Base - mirrors.aliyun.com\nbaseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/\nenabled=1\ngpgcheck=1\ngpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-6\n```\n以上是阿里云的开源镜像站的yum源配置。\n\n\n配置文件中：\n[ ]内的是仓库的名字\nname是仓库的描述也可以说是名字\nbaseurl 仓库的位置\nenabled 是否启用这个仓库，1为起用，0为禁用\ngpgcheck 是否检查GPG签名（用来验证要安装的包是不是REDHAT官方的）\ngpgkey gpgkey的存放地址我们开启gpgcheck=1才使用这项功能\n\n由以上的配置文件我们可以看出只要修改baseurl我们就可以修改仓的位置，因此我们也可以使用本地的仓库。只要配置baseurl指向相对应的仓即可。如下\n```\n[xiemx] \nname=xiemx \nbaseurl=file:///yumdatebase \nenabled=1 \ngpgcheck=0\n```\n在运行下yum clear all清空下缓存 yum  makecache制作新的缓存。以上的baseurl我们是将系统安装盘的内容复制到本机的/yumdatebase下，由于是光盘的源系统由此也不需要校验程序的安全性所以关闭gpgcheck。也可以使用其它协议来链接仓库如ftp://xxxxxxxxx。\n\n\n","source":"_posts/linux-yum-repo.md","raw":"---\nlayout: post\ntitle: Linux包管理yum仓库配置\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-09 07:11:22\ntags: [ linux, yum]\ncategories:\n    - linux\n---\nRhel中使用传统的rpm包安装会存在依存关系问题，虽然rpm为我们列出了依存关系，但是并没有为我们自动解决这个问题，依旧需要我们手动的去安装依存包。这样使得软件的安装非常麻烦，由此Linux中出现了yum工具，yum通过预读取软件的依存关系然后生存缓存，以后我们通过yum去安装软件是yum会根据缓存的关系表自动去识别rpm包的依存关系，为我们自动处理依存关系，使得软件的安装的工作变得简单。yum安装软件需要一个软件仓，yum会读取/etc/yum.repos.d/xxxxxxx.repo的仓库配置文件去仓库中提取软件来安装。我们可以通过修改仓配置文件，来修改仓库位置，使用本地或者速度快的仓，加速软件安装。\n\n配置文件内容：\n```\n[base]\nname=CentOS-$releasever - Base - mirrors.aliyun.com\nbaseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/\nenabled=1\ngpgcheck=1\ngpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-6\n```\n以上是阿里云的开源镜像站的yum源配置。\n\n\n配置文件中：\n[ ]内的是仓库的名字\nname是仓库的描述也可以说是名字\nbaseurl 仓库的位置\nenabled 是否启用这个仓库，1为起用，0为禁用\ngpgcheck 是否检查GPG签名（用来验证要安装的包是不是REDHAT官方的）\ngpgkey gpgkey的存放地址我们开启gpgcheck=1才使用这项功能\n\n由以上的配置文件我们可以看出只要修改baseurl我们就可以修改仓的位置，因此我们也可以使用本地的仓库。只要配置baseurl指向相对应的仓即可。如下\n```\n[xiemx] \nname=xiemx \nbaseurl=file:///yumdatebase \nenabled=1 \ngpgcheck=0\n```\n在运行下yum clear all清空下缓存 yum  makecache制作新的缓存。以上的baseurl我们是将系统安装盘的内容复制到本机的/yumdatebase下，由于是光盘的源系统由此也不需要校验程序的安全性所以关闭gpgcheck。也可以使用其它协议来链接仓库如ftp://xxxxxxxxx。\n\n\n","slug":"linux-yum-repo","updated":"2019-10-21T06:57:43.060Z","photos":[],"link":"","_id":"ck42dyidu003xu9urmzmktedr","content":"<p>Rhel中使用传统的rpm包安装会存在依存关系问题，虽然rpm为我们列出了依存关系，但是并没有为我们自动解决这个问题，依旧需要我们手动的去安装依存包。这样使得软件的安装非常麻烦，由此Linux中出现了yum工具，yum通过预读取软件的依存关系然后生存缓存，以后我们通过yum去安装软件是yum会根据缓存的关系表自动去识别rpm包的依存关系，为我们自动处理依存关系，使得软件的安装的工作变得简单。yum安装软件需要一个软件仓，yum会读取/etc/yum.repos.d/xxxxxxx.repo的仓库配置文件去仓库中提取软件来安装。我们可以通过修改仓配置文件，来修改仓库位置，使用本地或者速度快的仓，加速软件安装。</p>\n<p>配置文件内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[base]</span></span><br><span class=\"line\"><span class=\"attr\">name</span>=CentOS-<span class=\"variable\">$releasever</span> - Base - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"attr\">baseurl</span>=http://mirrors.aliyun.com/centos/<span class=\"variable\">$releasever</span>/os/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\"><span class=\"attr\">enabled</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">gpgcheck</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">gpgkey</span>=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-<span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n\n<p>以上是阿里云的开源镜像站的yum源配置。</p>\n<p>配置文件中：<br>[ ]内的是仓库的名字<br>name是仓库的描述也可以说是名字<br>baseurl 仓库的位置<br>enabled 是否启用这个仓库，1为起用，0为禁用<br>gpgcheck 是否检查GPG签名（用来验证要安装的包是不是REDHAT官方的）<br>gpgkey gpgkey的存放地址我们开启gpgcheck=1才使用这项功能</p>\n<p>由以上的配置文件我们可以看出只要修改baseurl我们就可以修改仓的位置，因此我们也可以使用本地的仓库。只要配置baseurl指向相对应的仓即可。如下</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[xiemx]</span> </span><br><span class=\"line\"><span class=\"attr\">name</span>=xiemx </span><br><span class=\"line\"><span class=\"attr\">baseurl</span>=file:///yumdatebase </span><br><span class=\"line\"><span class=\"attr\">enabled</span>=<span class=\"number\">1</span> </span><br><span class=\"line\"><span class=\"attr\">gpgcheck</span>=<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>在运行下yum clear all清空下缓存 yum  makecache制作新的缓存。以上的baseurl我们是将系统安装盘的内容复制到本机的/yumdatebase下，由于是光盘的源系统由此也不需要校验程序的安全性所以关闭gpgcheck。也可以使用其它协议来链接仓库如<a href=\"ftp://xxxxxxxxx。\" target=\"_blank\" rel=\"noopener\">ftp://xxxxxxxxx。</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Rhel中使用传统的rpm包安装会存在依存关系问题，虽然rpm为我们列出了依存关系，但是并没有为我们自动解决这个问题，依旧需要我们手动的去安装依存包。这样使得软件的安装非常麻烦，由此Linux中出现了yum工具，yum通过预读取软件的依存关系然后生存缓存，以后我们通过yum去安装软件是yum会根据缓存的关系表自动去识别rpm包的依存关系，为我们自动处理依存关系，使得软件的安装的工作变得简单。yum安装软件需要一个软件仓，yum会读取/etc/yum.repos.d/xxxxxxx.repo的仓库配置文件去仓库中提取软件来安装。我们可以通过修改仓配置文件，来修改仓库位置，使用本地或者速度快的仓，加速软件安装。</p>\n<p>配置文件内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[base]</span></span><br><span class=\"line\"><span class=\"attr\">name</span>=CentOS-<span class=\"variable\">$releasever</span> - Base - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"attr\">baseurl</span>=http://mirrors.aliyun.com/centos/<span class=\"variable\">$releasever</span>/os/<span class=\"variable\">$basearch</span>/</span><br><span class=\"line\"><span class=\"attr\">enabled</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">gpgcheck</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">gpgkey</span>=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-<span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n\n<p>以上是阿里云的开源镜像站的yum源配置。</p>\n<p>配置文件中：<br>[ ]内的是仓库的名字<br>name是仓库的描述也可以说是名字<br>baseurl 仓库的位置<br>enabled 是否启用这个仓库，1为起用，0为禁用<br>gpgcheck 是否检查GPG签名（用来验证要安装的包是不是REDHAT官方的）<br>gpgkey gpgkey的存放地址我们开启gpgcheck=1才使用这项功能</p>\n<p>由以上的配置文件我们可以看出只要修改baseurl我们就可以修改仓的位置，因此我们也可以使用本地的仓库。只要配置baseurl指向相对应的仓即可。如下</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[xiemx]</span> </span><br><span class=\"line\"><span class=\"attr\">name</span>=xiemx </span><br><span class=\"line\"><span class=\"attr\">baseurl</span>=file:///yumdatebase </span><br><span class=\"line\"><span class=\"attr\">enabled</span>=<span class=\"number\">1</span> </span><br><span class=\"line\"><span class=\"attr\">gpgcheck</span>=<span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>在运行下yum clear all清空下缓存 yum  makecache制作新的缓存。以上的baseurl我们是将系统安装盘的内容复制到本机的/yumdatebase下，由于是光盘的源系统由此也不需要校验程序的安全性所以关闭gpgcheck。也可以使用其它协议来链接仓库如<a href=\"ftp://xxxxxxxxx。\" target=\"_blank\" rel=\"noopener\">ftp://xxxxxxxxx。</a></p>\n"},{"layout":"post","title":"LVS-DR集群构建","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T20:02:11.000Z","_content":"设置端口标记的规则\n```shell\n#!/bin/bash\nVIP=$1\nIPTABLES=/sbin/iptables\n$IPTABLES -t mangle -A PREROUTING -p tcp -d $VIP --dport 80 -j MARK --set-mark 100\n$IPTABLES -t mangle -A PREROUTING -p tcp -d $VIP --dport 443 -j MARK --set-mark 100\n```\nARP防火墙设置\n```shell\n#!/bin/bash\nVIP=192.168.0.100\nRIP=192.168.0.x\nDGW=172.25.0.254\nDGWMAC=52:54:00:00:00:fe\narptables -F\narptables -A IN -d $VIP -j DROP\narptables -A OUT -s $VIP -j mangle --mangle-ip-s $RIP\n/sbin/ifconfig eth0:1 $VIP broadcast $VIP netmask 255.255.255.0 up\narp -s $DGW  $DGWMAC\n/sbin/route add default gw $DGW\n```\n 检测脚本\n```shell\n#!/bin/bash\n/usr/bin/links -dump 1 $1 >/dev/null 2>&1\nif [ 0 -eq $? ] ; then\n    echo ok\nelse\n    echo fail\nfi\n```\n主配置文件\n```conf\n[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf\nserial_no = 25\nprimary = 172.25.30.14\nprimary_private = 192.168.122.246\nservice = lvs\nbackup_active = 1\nbackup = 172.25.30.15\nbackup_private = 192.168.122.247\nheartbeat = 1\nheartbeat_port = 539\nkeepalive = 6\ndeadtime = 18\nnetwork = direct\ndebug_level = NONE\nmonitor_links = 0\nsyncdaemon = 0\nsyncd_iface = eth0\n\nvirtual http {\n     active = 1\n     address = 172.25.30.100 eth0:1\n     vip_nmask = 255.255.255.0\n     fwmark = 100\n     port = 80\n     send = \"GET / HTTP/1.0\\r\\n\\r\\n\"\n     expect = \"ok\"\n     use_regex = 0\n     send_program = \"/bin/testlink %h\"\n     load_monitor = none\n     scheduler = wlc\n     protocol = tcp\n     timeout = 6\n     reentry = 15\n     quiesce_server = 0\n\n     server node1 {\n         address = 192.168.122.224\n         active = 1\n         port = 80\n         weight = 1\n     }\n\n     server node2 {\n         address = 192.168.122.245\n         active = 1\n         port = 80\n         weight = 1\n     }\n}\n\nvirtual https {\n     active = 1\n     address = 172.25.30.100 eth0:1\n     vip_nmask = 255.255.255.0\n     fwmark = 100\n     port = 443\n     send = \"GET / HTTP/1.0\\r\\n\\r\\n\"\n     expect = \"HTTP\"\n     use_regex = 0\n     load_monitor = none\n     scheduler = wlc\n     protocol = tcp\n     timeout = 6\n     reentry = 15\n     quiesce_server = 0\n\n     server node1 {\n         address = 192.168.122.224\n         active = 1\n         port = 443\n         weight = 1\n     }\n\n     server node2 {\n         address = 192.168.122.245\n         active = 1\n         port = 443\n         weight = 1\n     }\n}\n```","source":"_posts/lvs-dr.md","raw":"---\nlayout: post\ntitle: LVS-DR集群构建\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 04:02:11\ntags: [ lvs, cluster ]\ncategories:\n    - lvs\n---\n设置端口标记的规则\n```shell\n#!/bin/bash\nVIP=$1\nIPTABLES=/sbin/iptables\n$IPTABLES -t mangle -A PREROUTING -p tcp -d $VIP --dport 80 -j MARK --set-mark 100\n$IPTABLES -t mangle -A PREROUTING -p tcp -d $VIP --dport 443 -j MARK --set-mark 100\n```\nARP防火墙设置\n```shell\n#!/bin/bash\nVIP=192.168.0.100\nRIP=192.168.0.x\nDGW=172.25.0.254\nDGWMAC=52:54:00:00:00:fe\narptables -F\narptables -A IN -d $VIP -j DROP\narptables -A OUT -s $VIP -j mangle --mangle-ip-s $RIP\n/sbin/ifconfig eth0:1 $VIP broadcast $VIP netmask 255.255.255.0 up\narp -s $DGW  $DGWMAC\n/sbin/route add default gw $DGW\n```\n 检测脚本\n```shell\n#!/bin/bash\n/usr/bin/links -dump 1 $1 >/dev/null 2>&1\nif [ 0 -eq $? ] ; then\n    echo ok\nelse\n    echo fail\nfi\n```\n主配置文件\n```conf\n[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf\nserial_no = 25\nprimary = 172.25.30.14\nprimary_private = 192.168.122.246\nservice = lvs\nbackup_active = 1\nbackup = 172.25.30.15\nbackup_private = 192.168.122.247\nheartbeat = 1\nheartbeat_port = 539\nkeepalive = 6\ndeadtime = 18\nnetwork = direct\ndebug_level = NONE\nmonitor_links = 0\nsyncdaemon = 0\nsyncd_iface = eth0\n\nvirtual http {\n     active = 1\n     address = 172.25.30.100 eth0:1\n     vip_nmask = 255.255.255.0\n     fwmark = 100\n     port = 80\n     send = \"GET / HTTP/1.0\\r\\n\\r\\n\"\n     expect = \"ok\"\n     use_regex = 0\n     send_program = \"/bin/testlink %h\"\n     load_monitor = none\n     scheduler = wlc\n     protocol = tcp\n     timeout = 6\n     reentry = 15\n     quiesce_server = 0\n\n     server node1 {\n         address = 192.168.122.224\n         active = 1\n         port = 80\n         weight = 1\n     }\n\n     server node2 {\n         address = 192.168.122.245\n         active = 1\n         port = 80\n         weight = 1\n     }\n}\n\nvirtual https {\n     active = 1\n     address = 172.25.30.100 eth0:1\n     vip_nmask = 255.255.255.0\n     fwmark = 100\n     port = 443\n     send = \"GET / HTTP/1.0\\r\\n\\r\\n\"\n     expect = \"HTTP\"\n     use_regex = 0\n     load_monitor = none\n     scheduler = wlc\n     protocol = tcp\n     timeout = 6\n     reentry = 15\n     quiesce_server = 0\n\n     server node1 {\n         address = 192.168.122.224\n         active = 1\n         port = 443\n         weight = 1\n     }\n\n     server node2 {\n         address = 192.168.122.245\n         active = 1\n         port = 443\n         weight = 1\n     }\n}\n```","slug":"lvs-dr","updated":"2019-10-21T06:57:43.047Z","photos":[],"link":"","_id":"ck42dyidv0041u9urxy1z098x","content":"<p>设置端口标记的规则</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">VIP=$1</span><br><span class=\"line\">IPTABLES=/sbin/iptables</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">IPTABLES -t mangle -A PREROUTING -p tcp -d <span class=\"variable\">$VIP</span> --dport 80 -j MARK --<span class=\"built_in\">set</span>-mark 100</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">IPTABLES -t mangle -A PREROUTING -p tcp -d <span class=\"variable\">$VIP</span> --dport 443 -j MARK --<span class=\"built_in\">set</span>-mark 100</span></span><br></pre></td></tr></table></figure>\n\n<p>ARP防火墙设置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">VIP=192.168.0.100</span><br><span class=\"line\">RIP=192.168.0.x</span><br><span class=\"line\">DGW=172.25.0.254</span><br><span class=\"line\">DGWMAC=52:54:00:00:00:fe</span><br><span class=\"line\">arptables -F</span><br><span class=\"line\">arptables -A IN -d $VIP -j DROP</span><br><span class=\"line\">arptables -A OUT -s $VIP -j mangle --mangle-ip-s $RIP</span><br><span class=\"line\">/sbin/ifconfig eth0:1 $VIP broadcast $VIP netmask 255.255.255.0 up</span><br><span class=\"line\">arp -s $DGW  $DGWMAC</span><br><span class=\"line\">/sbin/route add default gw $DGW</span><br></pre></td></tr></table></figure>\n\n<p> 检测脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/links -dump 1 $1 &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">if [ 0 -eq $? ] ; then</span><br><span class=\"line\">    echo ok</span><br><span class=\"line\">else</span><br><span class=\"line\">    echo fail</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<p>主配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf</span><br><span class=\"line\">serial_no = 25</span><br><span class=\"line\">primary = 172.25.30.14</span><br><span class=\"line\">primary_private = 192.168.122.246</span><br><span class=\"line\">service = lvs</span><br><span class=\"line\">backup_active = 1</span><br><span class=\"line\">backup = 172.25.30.15</span><br><span class=\"line\">backup_private = 192.168.122.247</span><br><span class=\"line\">heartbeat = 1</span><br><span class=\"line\">heartbeat_port = 539</span><br><span class=\"line\">keepalive = 6</span><br><span class=\"line\">deadtime = 18</span><br><span class=\"line\">network = direct</span><br><span class=\"line\">debug_level = NONE</span><br><span class=\"line\">monitor_links = 0</span><br><span class=\"line\">syncdaemon = 0</span><br><span class=\"line\">syncd_iface = eth0</span><br><span class=\"line\"></span><br><span class=\"line\">virtual http &#123;</span><br><span class=\"line\">     active = 1</span><br><span class=\"line\">     address = 172.25.30.100 eth0:1</span><br><span class=\"line\">     vip_nmask = 255.255.255.0</span><br><span class=\"line\">     fwmark = 100</span><br><span class=\"line\">     port = 80</span><br><span class=\"line\">     send = &quot;GET / HTTP/1.0\\r\\n\\r\\n&quot;</span><br><span class=\"line\">     expect = &quot;ok&quot;</span><br><span class=\"line\">     use_regex = 0</span><br><span class=\"line\">     send_program = &quot;/bin/testlink %h&quot;</span><br><span class=\"line\">     load_monitor = none</span><br><span class=\"line\">     scheduler = wlc</span><br><span class=\"line\">     protocol = tcp</span><br><span class=\"line\">     timeout = 6</span><br><span class=\"line\">     reentry = 15</span><br><span class=\"line\">     quiesce_server = 0</span><br><span class=\"line\"></span><br><span class=\"line\">     server node1 &#123;</span><br><span class=\"line\">         address = 192.168.122.224</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 80</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     server node2 &#123;</span><br><span class=\"line\">         address = 192.168.122.245</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 80</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual https &#123;</span><br><span class=\"line\">     active = 1</span><br><span class=\"line\">     address = 172.25.30.100 eth0:1</span><br><span class=\"line\">     vip_nmask = 255.255.255.0</span><br><span class=\"line\">     fwmark = 100</span><br><span class=\"line\">     port = 443</span><br><span class=\"line\">     send = &quot;GET / HTTP/1.0\\r\\n\\r\\n&quot;</span><br><span class=\"line\">     expect = &quot;HTTP&quot;</span><br><span class=\"line\">     use_regex = 0</span><br><span class=\"line\">     load_monitor = none</span><br><span class=\"line\">     scheduler = wlc</span><br><span class=\"line\">     protocol = tcp</span><br><span class=\"line\">     timeout = 6</span><br><span class=\"line\">     reentry = 15</span><br><span class=\"line\">     quiesce_server = 0</span><br><span class=\"line\"></span><br><span class=\"line\">     server node1 &#123;</span><br><span class=\"line\">         address = 192.168.122.224</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 443</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     server node2 &#123;</span><br><span class=\"line\">         address = 192.168.122.245</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 443</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>设置端口标记的规则</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">VIP=$1</span><br><span class=\"line\">IPTABLES=/sbin/iptables</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">IPTABLES -t mangle -A PREROUTING -p tcp -d <span class=\"variable\">$VIP</span> --dport 80 -j MARK --<span class=\"built_in\">set</span>-mark 100</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">IPTABLES -t mangle -A PREROUTING -p tcp -d <span class=\"variable\">$VIP</span> --dport 443 -j MARK --<span class=\"built_in\">set</span>-mark 100</span></span><br></pre></td></tr></table></figure>\n\n<p>ARP防火墙设置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">VIP=192.168.0.100</span><br><span class=\"line\">RIP=192.168.0.x</span><br><span class=\"line\">DGW=172.25.0.254</span><br><span class=\"line\">DGWMAC=52:54:00:00:00:fe</span><br><span class=\"line\">arptables -F</span><br><span class=\"line\">arptables -A IN -d $VIP -j DROP</span><br><span class=\"line\">arptables -A OUT -s $VIP -j mangle --mangle-ip-s $RIP</span><br><span class=\"line\">/sbin/ifconfig eth0:1 $VIP broadcast $VIP netmask 255.255.255.0 up</span><br><span class=\"line\">arp -s $DGW  $DGWMAC</span><br><span class=\"line\">/sbin/route add default gw $DGW</span><br></pre></td></tr></table></figure>\n\n<p> 检测脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/links -dump 1 $1 &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">if [ 0 -eq $? ] ; then</span><br><span class=\"line\">    echo ok</span><br><span class=\"line\">else</span><br><span class=\"line\">    echo fail</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<p>主配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf</span><br><span class=\"line\">serial_no = 25</span><br><span class=\"line\">primary = 172.25.30.14</span><br><span class=\"line\">primary_private = 192.168.122.246</span><br><span class=\"line\">service = lvs</span><br><span class=\"line\">backup_active = 1</span><br><span class=\"line\">backup = 172.25.30.15</span><br><span class=\"line\">backup_private = 192.168.122.247</span><br><span class=\"line\">heartbeat = 1</span><br><span class=\"line\">heartbeat_port = 539</span><br><span class=\"line\">keepalive = 6</span><br><span class=\"line\">deadtime = 18</span><br><span class=\"line\">network = direct</span><br><span class=\"line\">debug_level = NONE</span><br><span class=\"line\">monitor_links = 0</span><br><span class=\"line\">syncdaemon = 0</span><br><span class=\"line\">syncd_iface = eth0</span><br><span class=\"line\"></span><br><span class=\"line\">virtual http &#123;</span><br><span class=\"line\">     active = 1</span><br><span class=\"line\">     address = 172.25.30.100 eth0:1</span><br><span class=\"line\">     vip_nmask = 255.255.255.0</span><br><span class=\"line\">     fwmark = 100</span><br><span class=\"line\">     port = 80</span><br><span class=\"line\">     send = &quot;GET / HTTP/1.0\\r\\n\\r\\n&quot;</span><br><span class=\"line\">     expect = &quot;ok&quot;</span><br><span class=\"line\">     use_regex = 0</span><br><span class=\"line\">     send_program = &quot;/bin/testlink %h&quot;</span><br><span class=\"line\">     load_monitor = none</span><br><span class=\"line\">     scheduler = wlc</span><br><span class=\"line\">     protocol = tcp</span><br><span class=\"line\">     timeout = 6</span><br><span class=\"line\">     reentry = 15</span><br><span class=\"line\">     quiesce_server = 0</span><br><span class=\"line\"></span><br><span class=\"line\">     server node1 &#123;</span><br><span class=\"line\">         address = 192.168.122.224</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 80</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     server node2 &#123;</span><br><span class=\"line\">         address = 192.168.122.245</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 80</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual https &#123;</span><br><span class=\"line\">     active = 1</span><br><span class=\"line\">     address = 172.25.30.100 eth0:1</span><br><span class=\"line\">     vip_nmask = 255.255.255.0</span><br><span class=\"line\">     fwmark = 100</span><br><span class=\"line\">     port = 443</span><br><span class=\"line\">     send = &quot;GET / HTTP/1.0\\r\\n\\r\\n&quot;</span><br><span class=\"line\">     expect = &quot;HTTP&quot;</span><br><span class=\"line\">     use_regex = 0</span><br><span class=\"line\">     load_monitor = none</span><br><span class=\"line\">     scheduler = wlc</span><br><span class=\"line\">     protocol = tcp</span><br><span class=\"line\">     timeout = 6</span><br><span class=\"line\">     reentry = 15</span><br><span class=\"line\">     quiesce_server = 0</span><br><span class=\"line\"></span><br><span class=\"line\">     server node1 &#123;</span><br><span class=\"line\">         address = 192.168.122.224</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 443</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     server node2 &#123;</span><br><span class=\"line\">         address = 192.168.122.245</span><br><span class=\"line\">         active = 1</span><br><span class=\"line\">         port = 443</span><br><span class=\"line\">         weight = 1</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"LVS-NAT集群构建","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T19:02:13.000Z","_content":"\n由于lvs基于内核实现的负载均衡技术，因此主要是在内核层面配置，软件层面需要配置的东西很少。我们是通过软件生成配置文件，再讲配置文件刷到内核中。\n\n```shell\n#安装组包\nyum groupinstall \"Load Balancer\"\n\n#启动图形化服务\n/etc/init.d/piranha-gui start\n\n#创建piranha用户密码\npiranha-passwd\n\n#通过图形化创建的配置文件存放在\n/etc/sysconfig/ha/lvs.cf\n\n#将配置刷到内核模块中ip_vs和ip_vs*\n/etc/init.d/pulse start\n```\n```shell\n#测试脚本/bin/testlink\n[root@lvs-f30 ~]# cat /bin/testlink\n#!/bin/bash\n/usr/bin/links -dump 1 $1 >/dev/null 2>&1\nif [ 0 -eq $? ] ; then\necho ok\nelse\necho fail\nfi\n```\n```conf\n[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf\nserial_no = 30\nprimary = 172.25.30.14\nprimary_private = 192.168.122.246\nservice = lvs\nbackup_active = 1\nbackup = 172.25.30.15\nbackup_private = 192.168.122.247\nheartbeat = 1\nheartbeat_port = 539\nkeepalive = 6\ndeadtime = 18\nnetwork = nat\nnat_router = 192.168.122.254 eth2\nnat_nmask = 255.255.255.255\ndebug_level = NONE\nmonitor_links = 0\nsyncdaemon = 0\nsyncd_iface = eth2\n\nvirtual http {\n\n    active = 1\n    address = 172.25.30.100 eth0:1\n    vip_nmask = 255.255.255.0\n    port = 80\n    send = \"GET / HTTP/1.0\\r\\n\\r\\n\"\n    expect = \"ok\"\n    use_regex = 0\n    send_program = \"/bin/testlink %h\"\n    load_monitor = none\n    scheduler = wlc\n    protocol = tcp\n    timeout = 6\n    reentry = 15\n    quiesce_server = 0\n\n    server node1 {\n\n        address = 192.168.122.224\n        active = 1\n        port = 80\n        weight = 1\n\n    }\n\n    server node2 {\n\n        address = 192.168.122.245\n        active = 1\n        port = 80\n        weight = 1\n\n    ​}\n\n}\n```\n[![lvsnat](/images/lvsnat.png)](lvsnat.png)","source":"_posts/lvs-nat-cluster.md","raw":"---\nlayout: post\ntitle: LVS-NAT集群构建\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 03:02:13\ntags: [ lvs, cluster ]\ncategories:\n    - lvs\n#permalink: '/2016/02/18/vs-nat-cluster'\n---\n\n由于lvs基于内核实现的负载均衡技术，因此主要是在内核层面配置，软件层面需要配置的东西很少。我们是通过软件生成配置文件，再讲配置文件刷到内核中。\n\n```shell\n#安装组包\nyum groupinstall \"Load Balancer\"\n\n#启动图形化服务\n/etc/init.d/piranha-gui start\n\n#创建piranha用户密码\npiranha-passwd\n\n#通过图形化创建的配置文件存放在\n/etc/sysconfig/ha/lvs.cf\n\n#将配置刷到内核模块中ip_vs和ip_vs*\n/etc/init.d/pulse start\n```\n```shell\n#测试脚本/bin/testlink\n[root@lvs-f30 ~]# cat /bin/testlink\n#!/bin/bash\n/usr/bin/links -dump 1 $1 >/dev/null 2>&1\nif [ 0 -eq $? ] ; then\necho ok\nelse\necho fail\nfi\n```\n```conf\n[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf\nserial_no = 30\nprimary = 172.25.30.14\nprimary_private = 192.168.122.246\nservice = lvs\nbackup_active = 1\nbackup = 172.25.30.15\nbackup_private = 192.168.122.247\nheartbeat = 1\nheartbeat_port = 539\nkeepalive = 6\ndeadtime = 18\nnetwork = nat\nnat_router = 192.168.122.254 eth2\nnat_nmask = 255.255.255.255\ndebug_level = NONE\nmonitor_links = 0\nsyncdaemon = 0\nsyncd_iface = eth2\n\nvirtual http {\n\n    active = 1\n    address = 172.25.30.100 eth0:1\n    vip_nmask = 255.255.255.0\n    port = 80\n    send = \"GET / HTTP/1.0\\r\\n\\r\\n\"\n    expect = \"ok\"\n    use_regex = 0\n    send_program = \"/bin/testlink %h\"\n    load_monitor = none\n    scheduler = wlc\n    protocol = tcp\n    timeout = 6\n    reentry = 15\n    quiesce_server = 0\n\n    server node1 {\n\n        address = 192.168.122.224\n        active = 1\n        port = 80\n        weight = 1\n\n    }\n\n    server node2 {\n\n        address = 192.168.122.245\n        active = 1\n        port = 80\n        weight = 1\n\n    ​}\n\n}\n```\n[![lvsnat](/images/lvsnat.png)](lvsnat.png)","slug":"lvs-nat-cluster","updated":"2019-10-21T06:57:42.819Z","photos":[],"link":"","_id":"ck42dyidw0045u9urcfwyebxy","content":"<p>由于lvs基于内核实现的负载均衡技术，因此主要是在内核层面配置，软件层面需要配置的东西很少。我们是通过软件生成配置文件，再讲配置文件刷到内核中。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装组包</span></span><br><span class=\"line\">yum groupinstall \"Load Balancer\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动图形化服务</span></span><br><span class=\"line\">/etc/init.d/piranha-gui start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建piranha用户密码</span></span><br><span class=\"line\">piranha-passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">通过图形化创建的配置文件存放在</span></span><br><span class=\"line\">/etc/sysconfig/ha/lvs.cf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">将配置刷到内核模块中ip_vs和ip_vs*</span></span><br><span class=\"line\">/etc/init.d/pulse start</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">测试脚本/bin/testlink</span></span><br><span class=\"line\">[root@lvs-f30 ~]# cat /bin/testlink</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/links -dump 1 $1 &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">if [ 0 -eq $? ] ; then</span><br><span class=\"line\">echo ok</span><br><span class=\"line\">else</span><br><span class=\"line\">echo fail</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf</span><br><span class=\"line\">serial_no = 30</span><br><span class=\"line\">primary = 172.25.30.14</span><br><span class=\"line\">primary_private = 192.168.122.246</span><br><span class=\"line\">service = lvs</span><br><span class=\"line\">backup_active = 1</span><br><span class=\"line\">backup = 172.25.30.15</span><br><span class=\"line\">backup_private = 192.168.122.247</span><br><span class=\"line\">heartbeat = 1</span><br><span class=\"line\">heartbeat_port = 539</span><br><span class=\"line\">keepalive = 6</span><br><span class=\"line\">deadtime = 18</span><br><span class=\"line\">network = nat</span><br><span class=\"line\">nat_router = 192.168.122.254 eth2</span><br><span class=\"line\">nat_nmask = 255.255.255.255</span><br><span class=\"line\">debug_level = NONE</span><br><span class=\"line\">monitor_links = 0</span><br><span class=\"line\">syncdaemon = 0</span><br><span class=\"line\">syncd_iface = eth2</span><br><span class=\"line\"></span><br><span class=\"line\">virtual http &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    active = 1</span><br><span class=\"line\">    address = 172.25.30.100 eth0:1</span><br><span class=\"line\">    vip_nmask = 255.255.255.0</span><br><span class=\"line\">    port = 80</span><br><span class=\"line\">    send = &quot;GET / HTTP/1.0\\r\\n\\r\\n&quot;</span><br><span class=\"line\">    expect = &quot;ok&quot;</span><br><span class=\"line\">    use_regex = 0</span><br><span class=\"line\">    send_program = &quot;/bin/testlink %h&quot;</span><br><span class=\"line\">    load_monitor = none</span><br><span class=\"line\">    scheduler = wlc</span><br><span class=\"line\">    protocol = tcp</span><br><span class=\"line\">    timeout = 6</span><br><span class=\"line\">    reentry = 15</span><br><span class=\"line\">    quiesce_server = 0</span><br><span class=\"line\"></span><br><span class=\"line\">    server node1 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        address = 192.168.122.224</span><br><span class=\"line\">        active = 1</span><br><span class=\"line\">        port = 80</span><br><span class=\"line\">        weight = 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server node2 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        address = 192.168.122.245</span><br><span class=\"line\">        active = 1</span><br><span class=\"line\">        port = 80</span><br><span class=\"line\">        weight = 1</span><br><span class=\"line\"></span><br><span class=\"line\">    ​&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"lvsnat.png\"><img src=\"/images/lvsnat.png\" alt=\"lvsnat\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>由于lvs基于内核实现的负载均衡技术，因此主要是在内核层面配置，软件层面需要配置的东西很少。我们是通过软件生成配置文件，再讲配置文件刷到内核中。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">安装组包</span></span><br><span class=\"line\">yum groupinstall \"Load Balancer\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动图形化服务</span></span><br><span class=\"line\">/etc/init.d/piranha-gui start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">创建piranha用户密码</span></span><br><span class=\"line\">piranha-passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">通过图形化创建的配置文件存放在</span></span><br><span class=\"line\">/etc/sysconfig/ha/lvs.cf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">将配置刷到内核模块中ip_vs和ip_vs*</span></span><br><span class=\"line\">/etc/init.d/pulse start</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">测试脚本/bin/testlink</span></span><br><span class=\"line\">[root@lvs-f30 ~]# cat /bin/testlink</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/links -dump 1 $1 &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\">if [ 0 -eq $? ] ; then</span><br><span class=\"line\">echo ok</span><br><span class=\"line\">else</span><br><span class=\"line\">echo fail</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf</span><br><span class=\"line\">serial_no = 30</span><br><span class=\"line\">primary = 172.25.30.14</span><br><span class=\"line\">primary_private = 192.168.122.246</span><br><span class=\"line\">service = lvs</span><br><span class=\"line\">backup_active = 1</span><br><span class=\"line\">backup = 172.25.30.15</span><br><span class=\"line\">backup_private = 192.168.122.247</span><br><span class=\"line\">heartbeat = 1</span><br><span class=\"line\">heartbeat_port = 539</span><br><span class=\"line\">keepalive = 6</span><br><span class=\"line\">deadtime = 18</span><br><span class=\"line\">network = nat</span><br><span class=\"line\">nat_router = 192.168.122.254 eth2</span><br><span class=\"line\">nat_nmask = 255.255.255.255</span><br><span class=\"line\">debug_level = NONE</span><br><span class=\"line\">monitor_links = 0</span><br><span class=\"line\">syncdaemon = 0</span><br><span class=\"line\">syncd_iface = eth2</span><br><span class=\"line\"></span><br><span class=\"line\">virtual http &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    active = 1</span><br><span class=\"line\">    address = 172.25.30.100 eth0:1</span><br><span class=\"line\">    vip_nmask = 255.255.255.0</span><br><span class=\"line\">    port = 80</span><br><span class=\"line\">    send = &quot;GET / HTTP/1.0\\r\\n\\r\\n&quot;</span><br><span class=\"line\">    expect = &quot;ok&quot;</span><br><span class=\"line\">    use_regex = 0</span><br><span class=\"line\">    send_program = &quot;/bin/testlink %h&quot;</span><br><span class=\"line\">    load_monitor = none</span><br><span class=\"line\">    scheduler = wlc</span><br><span class=\"line\">    protocol = tcp</span><br><span class=\"line\">    timeout = 6</span><br><span class=\"line\">    reentry = 15</span><br><span class=\"line\">    quiesce_server = 0</span><br><span class=\"line\"></span><br><span class=\"line\">    server node1 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        address = 192.168.122.224</span><br><span class=\"line\">        active = 1</span><br><span class=\"line\">        port = 80</span><br><span class=\"line\">        weight = 1</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server node2 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        address = 192.168.122.245</span><br><span class=\"line\">        active = 1</span><br><span class=\"line\">        port = 80</span><br><span class=\"line\">        weight = 1</span><br><span class=\"line\"></span><br><span class=\"line\">    ​&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"lvsnat.png\"><img src=\"/images/lvsnat.png\" alt=\"lvsnat\"></a></p>\n"},{"layout":"post","title":"LVS的三种路由技术","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T19:02:10.000Z","_content":"\n目前LVS的三种路由方式\n\n\n  1. Virtual Server via Network Address Translation（VS-NAT） \n  2. Virtual Server via Direct Routing（VS-DR） \n  3. Virtual Server via IP Tunneling（VS-TUN）\n\n","source":"_posts/lvs-three-mode.md","raw":"---\nlayout: post\ntitle: LVS的三种路由技术\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 03:02:10\ntags: [ lvs, cluster ]\ncategories:\n    - lvs\n---\n\n目前LVS的三种路由方式\n\n\n  1. Virtual Server via Network Address Translation（VS-NAT） \n  2. Virtual Server via Direct Routing（VS-DR） \n  3. Virtual Server via IP Tunneling（VS-TUN）\n\n","slug":"lvs-three-mode","updated":"2019-10-21T06:57:42.620Z","photos":[],"link":"","_id":"ck42dyidx0049u9urmn2e8brx","content":"<p>目前LVS的三种路由方式</p>\n<ol>\n<li>Virtual Server via Network Address Translation（VS-NAT） </li>\n<li>Virtual Server via Direct Routing（VS-DR） </li>\n<li>Virtual Server via IP Tunneling（VS-TUN）</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>目前LVS的三种路由方式</p>\n<ol>\n<li>Virtual Server via Network Address Translation（VS-NAT） </li>\n<li>Virtual Server via Direct Routing（VS-DR） </li>\n<li>Virtual Server via IP Tunneling（VS-TUN）</li>\n</ol>\n"},{"layout":"post","title":"magent构建memcache集群","published":1,"author":"xiemx","comments":1,"date":"2017-02-08T23:02:18.000Z","_content":"magent功能相当于一个proxy调度器，通过一定的算法将数据存到不同后端。magent只是一个调度器，不处理数据同步问题。（另外一个由twitter开源的twemproxy，功能作用类似。可参考：[twemproxy安装配置](/2017/02/09/2017-02-09-twemproxu/)）\n\n部署：\n  \nmemcached部署自行百度。\n  \nmagent参考：[repcache＋magent构建高可用memcache](/2017/02/09/2017-02-09-repcache-magent/)\n\n1. 启动3个Memcached进程,端口11221、11222、11223.\n```shell\n# memcached -u xiemx -d -p 11221\n# memcached -u xiemx -d -p 11222\n# memcached -u xiemx -d -p 11223\n\n```\n2. 启动magent进程，端口11211，11221、11222为master，11223为backup；\n```shell\nmagent -p 12000 -s 127.0.0.1:11221 -s127.0.0.1:11222 -b 127.0.0.1:11223\n```\n\n3. telnet 11211的magent，set key1和set key2，根据算法，key1/key2将被分配到11221/11222和11213端口的Memcached；\n```shell\n[root@memcache ~]# telnet 127.0.0.1 11211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nstats\nmemcached agent v0.4\nmatrix 1 -> 127.0.0.1:11221, pool size 0\nmatrix 2 -> 127.0.0.1:11222, pool size 0\nEND\nset key1 0 0 1\n1\nSTORED\nset key2 0 0 1\n2\nSTORED\nquit\nConnection closed by foreign host.\n\n[root@memcache ~]# telnet 127.0.0.1 11221\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nEND\nget key2\nVALUE key2 0 1\n2\nEND\nquit\nConnection closed by foreign host.\n\n[root@memcache ~]# telnet 127.0.0.1 11222\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nVALUE key1 0 1\n1\nEND\nget key2\nEND\nquit\nConnection closed by foreign host.\n\n[root@memcache ~]# telnet 127.0.0.1 11223\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nVALUE key1 0 1\n1\nEND\nget key2\nVALUE key2 0 1\n2\nEND\nquit\nConnection closed by foreign host.\n```\n4. 模拟11211、11212端口的Memcached挂掉  \n```shell\n[root@memcache ~]# ps -ef | grep memcached\nroot       6589    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11221\nroot       6591    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11222\nroot       6593    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11223\nroot       6609   6509   001:44 pts/0     00:00:00 grep memcached\n[root@memcache ~]# kill -9 6589\n[root@memcache ~]# kill -9 6591\n[root@memcache ~]# telnet 127.0.0.1 11211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1 \nVALUE key1 0 1\n1\nEND\nget key2\nVALUE key2 0 1\n2\nEND\nquit\nConnection closed by foreign host.\n```\n\n5. 模拟11211、11212端口的Memcached重启复活(恢复后的memcache是没有数据的，需要逻辑处理启动后导入数据)\n```shell\n[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11221\n[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11222\n[root@memcache ~]# telnet 127.0.0.1 11211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nEND\nget key2\nEND\nquit\nConnection closed by foreign host.\n```","source":"_posts/magent-create-memcache-cluster.md","raw":"---\nlayout: post\ntitle: magent构建memcache集群\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-09 07:02:18\ntags: [ memcached, database, cluster ]\ncategories:\n    - memcached\n---\nmagent功能相当于一个proxy调度器，通过一定的算法将数据存到不同后端。magent只是一个调度器，不处理数据同步问题。（另外一个由twitter开源的twemproxy，功能作用类似。可参考：[twemproxy安装配置](/2017/02/09/2017-02-09-twemproxu/)）\n\n部署：\n  \nmemcached部署自行百度。\n  \nmagent参考：[repcache＋magent构建高可用memcache](/2017/02/09/2017-02-09-repcache-magent/)\n\n1. 启动3个Memcached进程,端口11221、11222、11223.\n```shell\n# memcached -u xiemx -d -p 11221\n# memcached -u xiemx -d -p 11222\n# memcached -u xiemx -d -p 11223\n\n```\n2. 启动magent进程，端口11211，11221、11222为master，11223为backup；\n```shell\nmagent -p 12000 -s 127.0.0.1:11221 -s127.0.0.1:11222 -b 127.0.0.1:11223\n```\n\n3. telnet 11211的magent，set key1和set key2，根据算法，key1/key2将被分配到11221/11222和11213端口的Memcached；\n```shell\n[root@memcache ~]# telnet 127.0.0.1 11211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nstats\nmemcached agent v0.4\nmatrix 1 -> 127.0.0.1:11221, pool size 0\nmatrix 2 -> 127.0.0.1:11222, pool size 0\nEND\nset key1 0 0 1\n1\nSTORED\nset key2 0 0 1\n2\nSTORED\nquit\nConnection closed by foreign host.\n\n[root@memcache ~]# telnet 127.0.0.1 11221\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nEND\nget key2\nVALUE key2 0 1\n2\nEND\nquit\nConnection closed by foreign host.\n\n[root@memcache ~]# telnet 127.0.0.1 11222\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nVALUE key1 0 1\n1\nEND\nget key2\nEND\nquit\nConnection closed by foreign host.\n\n[root@memcache ~]# telnet 127.0.0.1 11223\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nVALUE key1 0 1\n1\nEND\nget key2\nVALUE key2 0 1\n2\nEND\nquit\nConnection closed by foreign host.\n```\n4. 模拟11211、11212端口的Memcached挂掉  \n```shell\n[root@memcache ~]# ps -ef | grep memcached\nroot       6589    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11221\nroot       6591    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11222\nroot       6593    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11223\nroot       6609   6509   001:44 pts/0     00:00:00 grep memcached\n[root@memcache ~]# kill -9 6589\n[root@memcache ~]# kill -9 6591\n[root@memcache ~]# telnet 127.0.0.1 11211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1 \nVALUE key1 0 1\n1\nEND\nget key2\nVALUE key2 0 1\n2\nEND\nquit\nConnection closed by foreign host.\n```\n\n5. 模拟11211、11212端口的Memcached重启复活(恢复后的memcache是没有数据的，需要逻辑处理启动后导入数据)\n```shell\n[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11221\n[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11222\n[root@memcache ~]# telnet 127.0.0.1 11211\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nget key1\nEND\nget key2\nEND\nquit\nConnection closed by foreign host.\n```","slug":"magent-create-memcache-cluster","updated":"2019-10-21T06:57:42.620Z","photos":[],"link":"","_id":"ck42dyidy004du9uri286utzh","content":"<p>magent功能相当于一个proxy调度器，通过一定的算法将数据存到不同后端。magent只是一个调度器，不处理数据同步问题。（另外一个由twitter开源的twemproxy，功能作用类似。可参考：<a href=\"/2017/02/09/2017-02-09-twemproxu/\">twemproxy安装配置</a>）</p>\n<p>部署：</p>\n<p>memcached部署自行百度。</p>\n<p>magent参考：<a href=\"/2017/02/09/2017-02-09-repcache-magent/\">repcache＋magent构建高可用memcache</a></p>\n<ol>\n<li><p>启动3个Memcached进程,端口11221、11222、11223.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> memcached -u xiemx -d -p 11221</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> memcached -u xiemx -d -p 11222</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> memcached -u xiemx -d -p 11223</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动magent进程，端口11211，11221、11222为master，11223为backup；</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">magent -p 12000 -s 127.0.0.1:11221 -s127.0.0.1:11222 -b 127.0.0.1:11223</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>telnet 11211的magent，set key1和set key2，根据算法，key1/key2将被分配到11221/11222和11213端口的Memcached；</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">stats</span><br><span class=\"line\">memcached agent v0.4</span><br><span class=\"line\">matrix 1 -&gt; 127.0.0.1:11221, pool size 0</span><br><span class=\"line\">matrix 2 -&gt; 127.0.0.1:11222, pool size 0</span><br><span class=\"line\">END</span><br><span class=\"line\">set key1 0 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">STORED</span><br><span class=\"line\">set key2 0 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">STORED</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11221</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">VALUE key2 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11222</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">VALUE key1 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11223</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">VALUE key1 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">VALUE key2 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模拟11211、11212端口的Memcached挂掉  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@memcache ~]# ps -ef | grep memcached</span><br><span class=\"line\">root       6589    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11221</span><br><span class=\"line\">root       6591    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11222</span><br><span class=\"line\">root       6593    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11223</span><br><span class=\"line\">root       6609   6509   001:44 pts/0     00:00:00 grep memcached</span><br><span class=\"line\">[root@memcache ~]# kill -9 6589</span><br><span class=\"line\">[root@memcache ~]# kill -9 6591</span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1 </span><br><span class=\"line\">VALUE key1 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">VALUE key2 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模拟11211、11212端口的Memcached重启复活(恢复后的memcache是没有数据的，需要逻辑处理启动后导入数据)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11221</span><br><span class=\"line\">[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11222</span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>magent功能相当于一个proxy调度器，通过一定的算法将数据存到不同后端。magent只是一个调度器，不处理数据同步问题。（另外一个由twitter开源的twemproxy，功能作用类似。可参考：<a href=\"/2017/02/09/2017-02-09-twemproxu/\">twemproxy安装配置</a>）</p>\n<p>部署：</p>\n<p>memcached部署自行百度。</p>\n<p>magent参考：<a href=\"/2017/02/09/2017-02-09-repcache-magent/\">repcache＋magent构建高可用memcache</a></p>\n<ol>\n<li><p>启动3个Memcached进程,端口11221、11222、11223.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> memcached -u xiemx -d -p 11221</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> memcached -u xiemx -d -p 11222</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> memcached -u xiemx -d -p 11223</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动magent进程，端口11211，11221、11222为master，11223为backup；</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">magent -p 12000 -s 127.0.0.1:11221 -s127.0.0.1:11222 -b 127.0.0.1:11223</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>telnet 11211的magent，set key1和set key2，根据算法，key1/key2将被分配到11221/11222和11213端口的Memcached；</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">stats</span><br><span class=\"line\">memcached agent v0.4</span><br><span class=\"line\">matrix 1 -&gt; 127.0.0.1:11221, pool size 0</span><br><span class=\"line\">matrix 2 -&gt; 127.0.0.1:11222, pool size 0</span><br><span class=\"line\">END</span><br><span class=\"line\">set key1 0 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">STORED</span><br><span class=\"line\">set key2 0 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">STORED</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11221</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">VALUE key2 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11222</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">VALUE key1 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11223</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">VALUE key1 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">VALUE key2 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模拟11211、11212端口的Memcached挂掉  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@memcache ~]# ps -ef | grep memcached</span><br><span class=\"line\">root       6589    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11221</span><br><span class=\"line\">root       6591    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11222</span><br><span class=\"line\">root       6593    1   0 01:25 ?        00:00:00 memcached -u xiemx -d -p 11223</span><br><span class=\"line\">root       6609   6509   001:44 pts/0     00:00:00 grep memcached</span><br><span class=\"line\">[root@memcache ~]# kill -9 6589</span><br><span class=\"line\">[root@memcache ~]# kill -9 6591</span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1 </span><br><span class=\"line\">VALUE key1 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">VALUE key2 0 1</span><br><span class=\"line\">2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模拟11211、11212端口的Memcached重启复活(恢复后的memcache是没有数据的，需要逻辑处理启动后导入数据)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11221</span><br><span class=\"line\">[root@memcache ~]# memcached -m 1 -u root -d -l 127.0.0.1 -p 11222</span><br><span class=\"line\">[root@memcache ~]# telnet 127.0.0.1 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to 127.0.0.1.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">get key1</span><br><span class=\"line\">END</span><br><span class=\"line\">get key2</span><br><span class=\"line\">END</span><br><span class=\"line\">quit</span><br><span class=\"line\">Connection closed by foreign host.</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"layout":"post","title":"常见MIME类型设置方法","published":1,"author":"xiemx","comments":1,"date":"2015-08-20T17:08:58.000Z","_content":"### 常见MIME类型和设置方法\n当前列举了常用的MIME类型，查询详细：[MIME Type](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types)\n\n#### MIME类型\n\n| 扩展名 | 文档类型 | MIME 类型 |\n| :----- | :------ | ----: |\n| .aac | AAC audio | audio/aac |\n| .abw | AbiWord document | application/x-abiword |\n| .arc | Archive document (multiple files embedded) | application/x-freearc |\n| .avi | AVI: Audio Video Interleave | video/x-msvideo |\n| .azw | Amazon Kindle eBook format | application/vnd.amazon.ebook |\n| .bin | Any kind of binary data | application/octet-stream |\n| .bmp | Windows OS/2 Bitmap Graphics | image/bmp |\n| .bz | BZip archive | application/x-bzip |\n| .bz2 | BZip2 archive | application/x-bzip2 |\n| .csh | C-Shell script | application/x-csh |\n| .css | Cascading Style Sheets (CSS) | text/css |\n| .csv | Comma-separated values (CSV) | text/csv |\n| .doc | Microsoft Word | application/msword |\n| .epub | Electronic publication (EPUB) | application/epub+zip |\n| .gif | Graphics Interchange Format (GIF) | image/gif |\n| .html | HyperText Markup Language (HTML) | text/html |\n| .ico | Icon format | image/vnd.microsoft.icon |\n| .ics | iCalendar format | text/calendar |\n| .jar | Java Archive (JAR) | application/java-archive |\n| .jpeg | JPEG images | image/jpeg |\n| .js | JavaScript | text/javascript |\n| .json | JSON format | application/json |\n| .mjs | JavaScript module | text/javascript |\n| .mp3 | MP3 audio | audio/mpeg |\n| .mpeg | MPEG Video | video/mpeg |\n| .oga | OGG audio | audio/ogg |\n| .ogv | OGG video | video/ogg |\n| .ogx | OGG | application/ogg |\n| .otf | OpenType font | font/otf |\n| .png | Portable Network Graphics | image/png |\n| .pdf | Adobe Portable Document Format (PDF) | application/pdf |\n| .rar | RAR archive | application/x-rar-compressed |\n| .rtf | Rich Text Format (RTF) | application/rtf |\n| .sh | Bourne shell script | application/x-sh |\n| .svg | Scalable Vector Graphics (SVG) | image/svg+xml |\n| .tar | Tape Archive (TAR) | application/x-tar |\n| .tiff | Tagged Image File Format (TIFF) | image/tiff |\n| .ttf | TrueType Font | font/ttf |\n| .txt | Text, (generally ASCII or ISO 8859-n) | text/plain |\n| .vsd | Microsoft Visio | application/vnd.visio |\n| .wav | Waveform Audio Format | audio/wav |\n| .woff | Web Open Font Format (WOFF) | font/woff |\n| .woff2 | Web Open Font Format (WOFF) | font/woff2 |\n| .xhtml | XHTML | application/xhtml+xml |\n| .xls | Microsoft Excel | application/vnd.ms-excel |\n| .xml | XML | application/xml|\n| .zip | ZIP archive | application/zip |\n| .3gp | 3GPP audio/video container | video/3gpp |\n| .3g2 | 3GPP2 audio/video container | video/3gpp2 |\n| .7z | 7-zip archive | application/x-7z-compressed |\n\n#### 设置方法\n```markdown\n# IIS\n默认网站属性-->http 头-->MIME映射-->文件类型-->新类型\n\n# nginx\nconf/mime.types\n```","source":"_posts/mime-type.md","raw":"---\nlayout: post\ntitle: 常见MIME类型设置方法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-08-21 01:08:58\ntags: [ http, mime-type ]\ncategories:\n    - 'http'\n    - 'mime-type'\n# permalink: '/2015/08/21/mime-type'\n---\n### 常见MIME类型和设置方法\n当前列举了常用的MIME类型，查询详细：[MIME Type](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types)\n\n#### MIME类型\n\n| 扩展名 | 文档类型 | MIME 类型 |\n| :----- | :------ | ----: |\n| .aac | AAC audio | audio/aac |\n| .abw | AbiWord document | application/x-abiword |\n| .arc | Archive document (multiple files embedded) | application/x-freearc |\n| .avi | AVI: Audio Video Interleave | video/x-msvideo |\n| .azw | Amazon Kindle eBook format | application/vnd.amazon.ebook |\n| .bin | Any kind of binary data | application/octet-stream |\n| .bmp | Windows OS/2 Bitmap Graphics | image/bmp |\n| .bz | BZip archive | application/x-bzip |\n| .bz2 | BZip2 archive | application/x-bzip2 |\n| .csh | C-Shell script | application/x-csh |\n| .css | Cascading Style Sheets (CSS) | text/css |\n| .csv | Comma-separated values (CSV) | text/csv |\n| .doc | Microsoft Word | application/msword |\n| .epub | Electronic publication (EPUB) | application/epub+zip |\n| .gif | Graphics Interchange Format (GIF) | image/gif |\n| .html | HyperText Markup Language (HTML) | text/html |\n| .ico | Icon format | image/vnd.microsoft.icon |\n| .ics | iCalendar format | text/calendar |\n| .jar | Java Archive (JAR) | application/java-archive |\n| .jpeg | JPEG images | image/jpeg |\n| .js | JavaScript | text/javascript |\n| .json | JSON format | application/json |\n| .mjs | JavaScript module | text/javascript |\n| .mp3 | MP3 audio | audio/mpeg |\n| .mpeg | MPEG Video | video/mpeg |\n| .oga | OGG audio | audio/ogg |\n| .ogv | OGG video | video/ogg |\n| .ogx | OGG | application/ogg |\n| .otf | OpenType font | font/otf |\n| .png | Portable Network Graphics | image/png |\n| .pdf | Adobe Portable Document Format (PDF) | application/pdf |\n| .rar | RAR archive | application/x-rar-compressed |\n| .rtf | Rich Text Format (RTF) | application/rtf |\n| .sh | Bourne shell script | application/x-sh |\n| .svg | Scalable Vector Graphics (SVG) | image/svg+xml |\n| .tar | Tape Archive (TAR) | application/x-tar |\n| .tiff | Tagged Image File Format (TIFF) | image/tiff |\n| .ttf | TrueType Font | font/ttf |\n| .txt | Text, (generally ASCII or ISO 8859-n) | text/plain |\n| .vsd | Microsoft Visio | application/vnd.visio |\n| .wav | Waveform Audio Format | audio/wav |\n| .woff | Web Open Font Format (WOFF) | font/woff |\n| .woff2 | Web Open Font Format (WOFF) | font/woff2 |\n| .xhtml | XHTML | application/xhtml+xml |\n| .xls | Microsoft Excel | application/vnd.ms-excel |\n| .xml | XML | application/xml|\n| .zip | ZIP archive | application/zip |\n| .3gp | 3GPP audio/video container | video/3gpp |\n| .3g2 | 3GPP2 audio/video container | video/3gpp2 |\n| .7z | 7-zip archive | application/x-7z-compressed |\n\n#### 设置方法\n```markdown\n# IIS\n默认网站属性-->http 头-->MIME映射-->文件类型-->新类型\n\n# nginx\nconf/mime.types\n```","slug":"mime-type","updated":"2019-10-21T09:00:13.031Z","photos":[],"link":"","_id":"ck42dyidz004hu9ur32sytjrf","content":"<h3 id=\"常见MIME类型和设置方法\"><a href=\"#常见MIME类型和设置方法\" class=\"headerlink\" title=\"常见MIME类型和设置方法\"></a>常见MIME类型和设置方法</h3><p>当前列举了常用的MIME类型，查询详细：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\" target=\"_blank\" rel=\"noopener\">MIME Type</a></p>\n<h4 id=\"MIME类型\"><a href=\"#MIME类型\" class=\"headerlink\" title=\"MIME类型\"></a>MIME类型</h4><table>\n<thead>\n<tr>\n<th align=\"left\">扩展名</th>\n<th align=\"left\">文档类型</th>\n<th align=\"right\">MIME 类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">.aac</td>\n<td align=\"left\">AAC audio</td>\n<td align=\"right\">audio/aac</td>\n</tr>\n<tr>\n<td align=\"left\">.abw</td>\n<td align=\"left\">AbiWord document</td>\n<td align=\"right\">application/x-abiword</td>\n</tr>\n<tr>\n<td align=\"left\">.arc</td>\n<td align=\"left\">Archive document (multiple files embedded)</td>\n<td align=\"right\">application/x-freearc</td>\n</tr>\n<tr>\n<td align=\"left\">.avi</td>\n<td align=\"left\">AVI: Audio Video Interleave</td>\n<td align=\"right\">video/x-msvideo</td>\n</tr>\n<tr>\n<td align=\"left\">.azw</td>\n<td align=\"left\">Amazon Kindle eBook format</td>\n<td align=\"right\">application/vnd.amazon.ebook</td>\n</tr>\n<tr>\n<td align=\"left\">.bin</td>\n<td align=\"left\">Any kind of binary data</td>\n<td align=\"right\">application/octet-stream</td>\n</tr>\n<tr>\n<td align=\"left\">.bmp</td>\n<td align=\"left\">Windows OS/2 Bitmap Graphics</td>\n<td align=\"right\">image/bmp</td>\n</tr>\n<tr>\n<td align=\"left\">.bz</td>\n<td align=\"left\">BZip archive</td>\n<td align=\"right\">application/x-bzip</td>\n</tr>\n<tr>\n<td align=\"left\">.bz2</td>\n<td align=\"left\">BZip2 archive</td>\n<td align=\"right\">application/x-bzip2</td>\n</tr>\n<tr>\n<td align=\"left\">.csh</td>\n<td align=\"left\">C-Shell script</td>\n<td align=\"right\">application/x-csh</td>\n</tr>\n<tr>\n<td align=\"left\">.css</td>\n<td align=\"left\">Cascading Style Sheets (CSS)</td>\n<td align=\"right\">text/css</td>\n</tr>\n<tr>\n<td align=\"left\">.csv</td>\n<td align=\"left\">Comma-separated values (CSV)</td>\n<td align=\"right\">text/csv</td>\n</tr>\n<tr>\n<td align=\"left\">.doc</td>\n<td align=\"left\">Microsoft Word</td>\n<td align=\"right\">application/msword</td>\n</tr>\n<tr>\n<td align=\"left\">.epub</td>\n<td align=\"left\">Electronic publication (EPUB)</td>\n<td align=\"right\">application/epub+zip</td>\n</tr>\n<tr>\n<td align=\"left\">.gif</td>\n<td align=\"left\">Graphics Interchange Format (GIF)</td>\n<td align=\"right\">image/gif</td>\n</tr>\n<tr>\n<td align=\"left\">.html</td>\n<td align=\"left\">HyperText Markup Language (HTML)</td>\n<td align=\"right\">text/html</td>\n</tr>\n<tr>\n<td align=\"left\">.ico</td>\n<td align=\"left\">Icon format</td>\n<td align=\"right\">image/vnd.microsoft.icon</td>\n</tr>\n<tr>\n<td align=\"left\">.ics</td>\n<td align=\"left\">iCalendar format</td>\n<td align=\"right\">text/calendar</td>\n</tr>\n<tr>\n<td align=\"left\">.jar</td>\n<td align=\"left\">Java Archive (JAR)</td>\n<td align=\"right\">application/java-archive</td>\n</tr>\n<tr>\n<td align=\"left\">.jpeg</td>\n<td align=\"left\">JPEG images</td>\n<td align=\"right\">image/jpeg</td>\n</tr>\n<tr>\n<td align=\"left\">.js</td>\n<td align=\"left\">JavaScript</td>\n<td align=\"right\">text/javascript</td>\n</tr>\n<tr>\n<td align=\"left\">.json</td>\n<td align=\"left\">JSON format</td>\n<td align=\"right\">application/json</td>\n</tr>\n<tr>\n<td align=\"left\">.mjs</td>\n<td align=\"left\">JavaScript module</td>\n<td align=\"right\">text/javascript</td>\n</tr>\n<tr>\n<td align=\"left\">.mp3</td>\n<td align=\"left\">MP3 audio</td>\n<td align=\"right\">audio/mpeg</td>\n</tr>\n<tr>\n<td align=\"left\">.mpeg</td>\n<td align=\"left\">MPEG Video</td>\n<td align=\"right\">video/mpeg</td>\n</tr>\n<tr>\n<td align=\"left\">.oga</td>\n<td align=\"left\">OGG audio</td>\n<td align=\"right\">audio/ogg</td>\n</tr>\n<tr>\n<td align=\"left\">.ogv</td>\n<td align=\"left\">OGG video</td>\n<td align=\"right\">video/ogg</td>\n</tr>\n<tr>\n<td align=\"left\">.ogx</td>\n<td align=\"left\">OGG</td>\n<td align=\"right\">application/ogg</td>\n</tr>\n<tr>\n<td align=\"left\">.otf</td>\n<td align=\"left\">OpenType font</td>\n<td align=\"right\">font/otf</td>\n</tr>\n<tr>\n<td align=\"left\">.png</td>\n<td align=\"left\">Portable Network Graphics</td>\n<td align=\"right\">image/png</td>\n</tr>\n<tr>\n<td align=\"left\">.pdf</td>\n<td align=\"left\">Adobe Portable Document Format (PDF)</td>\n<td align=\"right\">application/pdf</td>\n</tr>\n<tr>\n<td align=\"left\">.rar</td>\n<td align=\"left\">RAR archive</td>\n<td align=\"right\">application/x-rar-compressed</td>\n</tr>\n<tr>\n<td align=\"left\">.rtf</td>\n<td align=\"left\">Rich Text Format (RTF)</td>\n<td align=\"right\">application/rtf</td>\n</tr>\n<tr>\n<td align=\"left\">.sh</td>\n<td align=\"left\">Bourne shell script</td>\n<td align=\"right\">application/x-sh</td>\n</tr>\n<tr>\n<td align=\"left\">.svg</td>\n<td align=\"left\">Scalable Vector Graphics (SVG)</td>\n<td align=\"right\">image/svg+xml</td>\n</tr>\n<tr>\n<td align=\"left\">.tar</td>\n<td align=\"left\">Tape Archive (TAR)</td>\n<td align=\"right\">application/x-tar</td>\n</tr>\n<tr>\n<td align=\"left\">.tiff</td>\n<td align=\"left\">Tagged Image File Format (TIFF)</td>\n<td align=\"right\">image/tiff</td>\n</tr>\n<tr>\n<td align=\"left\">.ttf</td>\n<td align=\"left\">TrueType Font</td>\n<td align=\"right\">font/ttf</td>\n</tr>\n<tr>\n<td align=\"left\">.txt</td>\n<td align=\"left\">Text, (generally ASCII or ISO 8859-n)</td>\n<td align=\"right\">text/plain</td>\n</tr>\n<tr>\n<td align=\"left\">.vsd</td>\n<td align=\"left\">Microsoft Visio</td>\n<td align=\"right\">application/vnd.visio</td>\n</tr>\n<tr>\n<td align=\"left\">.wav</td>\n<td align=\"left\">Waveform Audio Format</td>\n<td align=\"right\">audio/wav</td>\n</tr>\n<tr>\n<td align=\"left\">.woff</td>\n<td align=\"left\">Web Open Font Format (WOFF)</td>\n<td align=\"right\">font/woff</td>\n</tr>\n<tr>\n<td align=\"left\">.woff2</td>\n<td align=\"left\">Web Open Font Format (WOFF)</td>\n<td align=\"right\">font/woff2</td>\n</tr>\n<tr>\n<td align=\"left\">.xhtml</td>\n<td align=\"left\">XHTML</td>\n<td align=\"right\">application/xhtml+xml</td>\n</tr>\n<tr>\n<td align=\"left\">.xls</td>\n<td align=\"left\">Microsoft Excel</td>\n<td align=\"right\">application/vnd.ms-excel</td>\n</tr>\n<tr>\n<td align=\"left\">.xml</td>\n<td align=\"left\">XML</td>\n<td align=\"right\">application/xml</td>\n</tr>\n<tr>\n<td align=\"left\">.zip</td>\n<td align=\"left\">ZIP archive</td>\n<td align=\"right\">application/zip</td>\n</tr>\n<tr>\n<td align=\"left\">.3gp</td>\n<td align=\"left\">3GPP audio/video container</td>\n<td align=\"right\">video/3gpp</td>\n</tr>\n<tr>\n<td align=\"left\">.3g2</td>\n<td align=\"left\">3GPP2 audio/video container</td>\n<td align=\"right\">video/3gpp2</td>\n</tr>\n<tr>\n<td align=\"left\">.7z</td>\n<td align=\"left\">7-zip archive</td>\n<td align=\"right\">application/x-7z-compressed</td>\n</tr>\n</tbody></table>\n<h4 id=\"设置方法\"><a href=\"#设置方法\" class=\"headerlink\" title=\"设置方法\"></a>设置方法</h4><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># IIS</span></span><br><span class=\"line\">默认网站属性--&gt;http 头--&gt;MIME映射--&gt;文件类型--&gt;新类型</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># nginx</span></span><br><span class=\"line\">conf/mime.types</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"常见MIME类型和设置方法\"><a href=\"#常见MIME类型和设置方法\" class=\"headerlink\" title=\"常见MIME类型和设置方法\"></a>常见MIME类型和设置方法</h3><p>当前列举了常用的MIME类型，查询详细：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\" target=\"_blank\" rel=\"noopener\">MIME Type</a></p>\n<h4 id=\"MIME类型\"><a href=\"#MIME类型\" class=\"headerlink\" title=\"MIME类型\"></a>MIME类型</h4><table>\n<thead>\n<tr>\n<th align=\"left\">扩展名</th>\n<th align=\"left\">文档类型</th>\n<th align=\"right\">MIME 类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">.aac</td>\n<td align=\"left\">AAC audio</td>\n<td align=\"right\">audio/aac</td>\n</tr>\n<tr>\n<td align=\"left\">.abw</td>\n<td align=\"left\">AbiWord document</td>\n<td align=\"right\">application/x-abiword</td>\n</tr>\n<tr>\n<td align=\"left\">.arc</td>\n<td align=\"left\">Archive document (multiple files embedded)</td>\n<td align=\"right\">application/x-freearc</td>\n</tr>\n<tr>\n<td align=\"left\">.avi</td>\n<td align=\"left\">AVI: Audio Video Interleave</td>\n<td align=\"right\">video/x-msvideo</td>\n</tr>\n<tr>\n<td align=\"left\">.azw</td>\n<td align=\"left\">Amazon Kindle eBook format</td>\n<td align=\"right\">application/vnd.amazon.ebook</td>\n</tr>\n<tr>\n<td align=\"left\">.bin</td>\n<td align=\"left\">Any kind of binary data</td>\n<td align=\"right\">application/octet-stream</td>\n</tr>\n<tr>\n<td align=\"left\">.bmp</td>\n<td align=\"left\">Windows OS/2 Bitmap Graphics</td>\n<td align=\"right\">image/bmp</td>\n</tr>\n<tr>\n<td align=\"left\">.bz</td>\n<td align=\"left\">BZip archive</td>\n<td align=\"right\">application/x-bzip</td>\n</tr>\n<tr>\n<td align=\"left\">.bz2</td>\n<td align=\"left\">BZip2 archive</td>\n<td align=\"right\">application/x-bzip2</td>\n</tr>\n<tr>\n<td align=\"left\">.csh</td>\n<td align=\"left\">C-Shell script</td>\n<td align=\"right\">application/x-csh</td>\n</tr>\n<tr>\n<td align=\"left\">.css</td>\n<td align=\"left\">Cascading Style Sheets (CSS)</td>\n<td align=\"right\">text/css</td>\n</tr>\n<tr>\n<td align=\"left\">.csv</td>\n<td align=\"left\">Comma-separated values (CSV)</td>\n<td align=\"right\">text/csv</td>\n</tr>\n<tr>\n<td align=\"left\">.doc</td>\n<td align=\"left\">Microsoft Word</td>\n<td align=\"right\">application/msword</td>\n</tr>\n<tr>\n<td align=\"left\">.epub</td>\n<td align=\"left\">Electronic publication (EPUB)</td>\n<td align=\"right\">application/epub+zip</td>\n</tr>\n<tr>\n<td align=\"left\">.gif</td>\n<td align=\"left\">Graphics Interchange Format (GIF)</td>\n<td align=\"right\">image/gif</td>\n</tr>\n<tr>\n<td align=\"left\">.html</td>\n<td align=\"left\">HyperText Markup Language (HTML)</td>\n<td align=\"right\">text/html</td>\n</tr>\n<tr>\n<td align=\"left\">.ico</td>\n<td align=\"left\">Icon format</td>\n<td align=\"right\">image/vnd.microsoft.icon</td>\n</tr>\n<tr>\n<td align=\"left\">.ics</td>\n<td align=\"left\">iCalendar format</td>\n<td align=\"right\">text/calendar</td>\n</tr>\n<tr>\n<td align=\"left\">.jar</td>\n<td align=\"left\">Java Archive (JAR)</td>\n<td align=\"right\">application/java-archive</td>\n</tr>\n<tr>\n<td align=\"left\">.jpeg</td>\n<td align=\"left\">JPEG images</td>\n<td align=\"right\">image/jpeg</td>\n</tr>\n<tr>\n<td align=\"left\">.js</td>\n<td align=\"left\">JavaScript</td>\n<td align=\"right\">text/javascript</td>\n</tr>\n<tr>\n<td align=\"left\">.json</td>\n<td align=\"left\">JSON format</td>\n<td align=\"right\">application/json</td>\n</tr>\n<tr>\n<td align=\"left\">.mjs</td>\n<td align=\"left\">JavaScript module</td>\n<td align=\"right\">text/javascript</td>\n</tr>\n<tr>\n<td align=\"left\">.mp3</td>\n<td align=\"left\">MP3 audio</td>\n<td align=\"right\">audio/mpeg</td>\n</tr>\n<tr>\n<td align=\"left\">.mpeg</td>\n<td align=\"left\">MPEG Video</td>\n<td align=\"right\">video/mpeg</td>\n</tr>\n<tr>\n<td align=\"left\">.oga</td>\n<td align=\"left\">OGG audio</td>\n<td align=\"right\">audio/ogg</td>\n</tr>\n<tr>\n<td align=\"left\">.ogv</td>\n<td align=\"left\">OGG video</td>\n<td align=\"right\">video/ogg</td>\n</tr>\n<tr>\n<td align=\"left\">.ogx</td>\n<td align=\"left\">OGG</td>\n<td align=\"right\">application/ogg</td>\n</tr>\n<tr>\n<td align=\"left\">.otf</td>\n<td align=\"left\">OpenType font</td>\n<td align=\"right\">font/otf</td>\n</tr>\n<tr>\n<td align=\"left\">.png</td>\n<td align=\"left\">Portable Network Graphics</td>\n<td align=\"right\">image/png</td>\n</tr>\n<tr>\n<td align=\"left\">.pdf</td>\n<td align=\"left\">Adobe Portable Document Format (PDF)</td>\n<td align=\"right\">application/pdf</td>\n</tr>\n<tr>\n<td align=\"left\">.rar</td>\n<td align=\"left\">RAR archive</td>\n<td align=\"right\">application/x-rar-compressed</td>\n</tr>\n<tr>\n<td align=\"left\">.rtf</td>\n<td align=\"left\">Rich Text Format (RTF)</td>\n<td align=\"right\">application/rtf</td>\n</tr>\n<tr>\n<td align=\"left\">.sh</td>\n<td align=\"left\">Bourne shell script</td>\n<td align=\"right\">application/x-sh</td>\n</tr>\n<tr>\n<td align=\"left\">.svg</td>\n<td align=\"left\">Scalable Vector Graphics (SVG)</td>\n<td align=\"right\">image/svg+xml</td>\n</tr>\n<tr>\n<td align=\"left\">.tar</td>\n<td align=\"left\">Tape Archive (TAR)</td>\n<td align=\"right\">application/x-tar</td>\n</tr>\n<tr>\n<td align=\"left\">.tiff</td>\n<td align=\"left\">Tagged Image File Format (TIFF)</td>\n<td align=\"right\">image/tiff</td>\n</tr>\n<tr>\n<td align=\"left\">.ttf</td>\n<td align=\"left\">TrueType Font</td>\n<td align=\"right\">font/ttf</td>\n</tr>\n<tr>\n<td align=\"left\">.txt</td>\n<td align=\"left\">Text, (generally ASCII or ISO 8859-n)</td>\n<td align=\"right\">text/plain</td>\n</tr>\n<tr>\n<td align=\"left\">.vsd</td>\n<td align=\"left\">Microsoft Visio</td>\n<td align=\"right\">application/vnd.visio</td>\n</tr>\n<tr>\n<td align=\"left\">.wav</td>\n<td align=\"left\">Waveform Audio Format</td>\n<td align=\"right\">audio/wav</td>\n</tr>\n<tr>\n<td align=\"left\">.woff</td>\n<td align=\"left\">Web Open Font Format (WOFF)</td>\n<td align=\"right\">font/woff</td>\n</tr>\n<tr>\n<td align=\"left\">.woff2</td>\n<td align=\"left\">Web Open Font Format (WOFF)</td>\n<td align=\"right\">font/woff2</td>\n</tr>\n<tr>\n<td align=\"left\">.xhtml</td>\n<td align=\"left\">XHTML</td>\n<td align=\"right\">application/xhtml+xml</td>\n</tr>\n<tr>\n<td align=\"left\">.xls</td>\n<td align=\"left\">Microsoft Excel</td>\n<td align=\"right\">application/vnd.ms-excel</td>\n</tr>\n<tr>\n<td align=\"left\">.xml</td>\n<td align=\"left\">XML</td>\n<td align=\"right\">application/xml</td>\n</tr>\n<tr>\n<td align=\"left\">.zip</td>\n<td align=\"left\">ZIP archive</td>\n<td align=\"right\">application/zip</td>\n</tr>\n<tr>\n<td align=\"left\">.3gp</td>\n<td align=\"left\">3GPP audio/video container</td>\n<td align=\"right\">video/3gpp</td>\n</tr>\n<tr>\n<td align=\"left\">.3g2</td>\n<td align=\"left\">3GPP2 audio/video container</td>\n<td align=\"right\">video/3gpp2</td>\n</tr>\n<tr>\n<td align=\"left\">.7z</td>\n<td align=\"left\">7-zip archive</td>\n<td align=\"right\">application/x-7z-compressed</td>\n</tr>\n</tbody></table>\n<h4 id=\"设置方法\"><a href=\"#设置方法\" class=\"headerlink\" title=\"设置方法\"></a>设置方法</h4><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># IIS</span></span><br><span class=\"line\">默认网站属性--&gt;http 头--&gt;MIME映射--&gt;文件类型--&gt;新类型</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\"># nginx</span></span><br><span class=\"line\">conf/mime.types</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"MSSQL数据库 阻止保存要求重新创建表的更改","published":1,"author":"xiemx","comments":1,"date":"2015-08-21T02:08:42.000Z","_content":"\nMSSQL2008以上\n\n工具菜单----选项----Designers(设计器)----阻止保存要求重新创建表的更改 取消勾选即可\n\n[![1](/images/1.png)](1.png)\n\nMSSql2005下 添加excute权限\n\n[![clipboard](/images/clipboard.png)](clipboard.png)\n\n","source":"_posts/mssql-deny-save.md","raw":"---\nlayout: post\ntitle: MSSQL数据库 阻止保存要求重新创建表的更改\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-08-21 10:08:42\ntags: [ mssql, database, debug]\ncategories:\n    - mssql\n---\n\nMSSQL2008以上\n\n工具菜单----选项----Designers(设计器)----阻止保存要求重新创建表的更改 取消勾选即可\n\n[![1](/images/1.png)](1.png)\n\nMSSql2005下 添加excute权限\n\n[![clipboard](/images/clipboard.png)](clipboard.png)\n\n","slug":"mssql-deny-save","updated":"2019-10-21T09:00:21.279Z","photos":[],"link":"","_id":"ck42dyie1004lu9ura4wmfdg4","content":"<p>MSSQL2008以上</p>\n<p>工具菜单—-选项—-Designers(设计器)—-阻止保存要求重新创建表的更改 取消勾选即可</p>\n<p><a href=\"1.png\"><img src=\"/images/1.png\" alt=\"1\"></a></p>\n<p>MSSql2005下 添加excute权限</p>\n<p><a href=\"clipboard.png\"><img src=\"/images/clipboard.png\" alt=\"clipboard\"></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>MSSQL2008以上</p>\n<p>工具菜单—-选项—-Designers(设计器)—-阻止保存要求重新创建表的更改 取消勾选即可</p>\n<p><a href=\"1.png\"><img src=\"/images/1.png\" alt=\"1\"></a></p>\n<p>MSSql2005下 添加excute权限</p>\n<p><a href=\"clipboard.png\"><img src=\"/images/clipboard.png\" alt=\"clipboard\"></a></p>\n"},{"layout":"post","title":"Tomcat多实例运行","published":1,"author":"xiemx","comments":1,"date":"2016-01-29T21:01:29.000Z","_content":"一个程序默认在系统中都是维护一个进程（或一个主进程多个子进程），这样的结构在进程出错终止时会导致该进程下所有的网站都会打不开。但tomcat我们可以通过调整启动时指定的tomcat程序位置来启动多个tomcat程序，分属不同的进程这样在某个进程终止时也不会影响到其他进程，不会导致其它网站无法访问。但一个端口只能被一个进程监听，当我们启动多进程就不能同时监听8080端口，我们可以依次监听8081，8082等，如果要实现直接输入域名访问可以在前段增加nginx来做代理即可。\n\n```shell\n[root@serverc ~]# /etc/init.d/tomcat stop\n[root@serverc ~]# cd /home/tomcat/\n[root@serverc tomcat]# mkdir tomcat1 tomcat2\n[root@serverc tomcat]# cd apache-tomcat-8.0.24/\n[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat1.com/ work/ webapps/ conf/ ../tomcat1/\n[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat2.com/ work/ webapps/ conf/ ../tomcat2/\n[root@serverc apache-tomcat-8.0.24]# rm -rf LICENSE NOTICE RELEASE-NOTES RUNNING.txt conf logs tomcat1.com tomcat2.com webapps\n[root@serverc apache-tomcat-8.0.24]# ls\nbin lib temp work\n[root@serverc apache-tomcat-8.0.24]# cd ../tomcat1/\n[root@serverc tomcat1]# vim conf/server.xml\n<Host name=\"www.tomcat1.com\" appBase=\"tomcat1.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n</Host>\n\n[root@serverc tomcat1]# cd ../tomcat2/\n[root@serverc tomcat2]# vim conf/server.xml\n<Host name=\"www.tomcat2.com\" appBase=\"tomcat2.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n</Host>\n=============================================================================\n<Connector port=\"8081\" protocol=\"HTTP/1.1\"\nconnectionTimeout=\"20000\"\nredirectPort=\"8443\" />\n=============================================================================\n<Connector port=\"8010\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n\n[root@serverc tomcat2]# cd /etc/init.d/\n[root@serverc init.d]# mv tomcat tomcat1\n[root@serverc init.d]# vim tomcat1\nexport CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"\nexport CATALINA_BASE=\"/home/tomcat/tomcat1\"\n\n[root@serverc init.d]# cp tomcat1 tomcat2\n[root@serverc init.d]# vim tomcat2\nexport CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"\nexport CATALINA_BASE=\"/home/tomcat/tomcat2\"\n\n[root@serverc init.d]# /etc/init.d/tomcat1 start\n[root@serverc init.d]# /etc/init.d/tomcat2 start\n[root@serverc init.d]# netstat -ltunp | grep 8080\ntcp6 0 0 :::8080 :::* LISTEN 5749/jsvc.exec\n[root@serverc init.d]# netstat -ltunp | grep 8081\ntcp6 0 0 :::8081 :::* LISTEN 5782/jsvc.exec\n```","source":"_posts/multi-tomcat-server.md","raw":"---\nlayout: post\ntitle: Tomcat多实例运行\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-30 05:01:29\ntags: [ tomcat, webserver, http ]\ncategories:\n    - tomcat\n# permalink: '/2016/01/30/multi-tomcat-server'\n---\n一个程序默认在系统中都是维护一个进程（或一个主进程多个子进程），这样的结构在进程出错终止时会导致该进程下所有的网站都会打不开。但tomcat我们可以通过调整启动时指定的tomcat程序位置来启动多个tomcat程序，分属不同的进程这样在某个进程终止时也不会影响到其他进程，不会导致其它网站无法访问。但一个端口只能被一个进程监听，当我们启动多进程就不能同时监听8080端口，我们可以依次监听8081，8082等，如果要实现直接输入域名访问可以在前段增加nginx来做代理即可。\n\n```shell\n[root@serverc ~]# /etc/init.d/tomcat stop\n[root@serverc ~]# cd /home/tomcat/\n[root@serverc tomcat]# mkdir tomcat1 tomcat2\n[root@serverc tomcat]# cd apache-tomcat-8.0.24/\n[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat1.com/ work/ webapps/ conf/ ../tomcat1/\n[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat2.com/ work/ webapps/ conf/ ../tomcat2/\n[root@serverc apache-tomcat-8.0.24]# rm -rf LICENSE NOTICE RELEASE-NOTES RUNNING.txt conf logs tomcat1.com tomcat2.com webapps\n[root@serverc apache-tomcat-8.0.24]# ls\nbin lib temp work\n[root@serverc apache-tomcat-8.0.24]# cd ../tomcat1/\n[root@serverc tomcat1]# vim conf/server.xml\n<Host name=\"www.tomcat1.com\" appBase=\"tomcat1.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n</Host>\n\n[root@serverc tomcat1]# cd ../tomcat2/\n[root@serverc tomcat2]# vim conf/server.xml\n<Host name=\"www.tomcat2.com\" appBase=\"tomcat2.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t &quot;%r&quot; %s %b\" />\n</Host>\n=============================================================================\n<Connector port=\"8081\" protocol=\"HTTP/1.1\"\nconnectionTimeout=\"20000\"\nredirectPort=\"8443\" />\n=============================================================================\n<Connector port=\"8010\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n\n[root@serverc tomcat2]# cd /etc/init.d/\n[root@serverc init.d]# mv tomcat tomcat1\n[root@serverc init.d]# vim tomcat1\nexport CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"\nexport CATALINA_BASE=\"/home/tomcat/tomcat1\"\n\n[root@serverc init.d]# cp tomcat1 tomcat2\n[root@serverc init.d]# vim tomcat2\nexport CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"\nexport CATALINA_BASE=\"/home/tomcat/tomcat2\"\n\n[root@serverc init.d]# /etc/init.d/tomcat1 start\n[root@serverc init.d]# /etc/init.d/tomcat2 start\n[root@serverc init.d]# netstat -ltunp | grep 8080\ntcp6 0 0 :::8080 :::* LISTEN 5749/jsvc.exec\n[root@serverc init.d]# netstat -ltunp | grep 8081\ntcp6 0 0 :::8081 :::* LISTEN 5782/jsvc.exec\n```","slug":"multi-tomcat-server","updated":"2019-10-21T06:57:43.013Z","photos":[],"link":"","_id":"ck42dyie2004pu9ur600ottdx","content":"<p>一个程序默认在系统中都是维护一个进程（或一个主进程多个子进程），这样的结构在进程出错终止时会导致该进程下所有的网站都会打不开。但tomcat我们可以通过调整启动时指定的tomcat程序位置来启动多个tomcat程序，分属不同的进程这样在某个进程终止时也不会影响到其他进程，不会导致其它网站无法访问。但一个端口只能被一个进程监听，当我们启动多进程就不能同时监听8080端口，我们可以依次监听8081，8082等，如果要实现直接输入域名访问可以在前段增加nginx来做代理即可。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc ~]# /etc/init.d/tomcat stop</span><br><span class=\"line\">[root@serverc ~]# cd /home/tomcat/</span><br><span class=\"line\">[root@serverc tomcat]# mkdir tomcat1 tomcat2</span><br><span class=\"line\">[root@serverc tomcat]# cd apache-tomcat-8.0.24/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat1.com/ work/ webapps/ conf/ ../tomcat1/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat2.com/ work/ webapps/ conf/ ../tomcat2/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# rm -rf LICENSE NOTICE RELEASE-NOTES RUNNING.txt conf logs tomcat1.com tomcat2.com webapps</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# ls</span><br><span class=\"line\">bin lib temp work</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cd ../tomcat1/</span><br><span class=\"line\">[root@serverc tomcat1]# vim conf/server.xml</span><br><span class=\"line\">&lt;Host name=\"www.tomcat1.com\" appBase=\"tomcat1.com\"</span><br><span class=\"line\">unpackWARs=\"true\" autoDeploy=\"true\"&gt;</span><br><span class=\"line\">&lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"</span><br><span class=\"line\">prefix=\"localhost_access_log\" suffix=\".txt\"</span><br><span class=\"line\">pattern=\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\" /&gt;</span><br><span class=\"line\">&lt;/Host&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc tomcat1]# cd ../tomcat2/</span><br><span class=\"line\">[root@serverc tomcat2]# vim conf/server.xml</span><br><span class=\"line\">&lt;Host name=\"www.tomcat2.com\" appBase=\"tomcat2.com\"</span><br><span class=\"line\">unpackWARs=\"true\" autoDeploy=\"true\"&gt;</span><br><span class=\"line\">&lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"</span><br><span class=\"line\">prefix=\"localhost_access_log\" suffix=\".txt\"</span><br><span class=\"line\">pattern=\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\" /&gt;</span><br><span class=\"line\">&lt;/Host&gt;</span><br><span class=\"line\">=============================================================================</span><br><span class=\"line\">&lt;Connector port=\"8081\" protocol=\"HTTP/1.1\"</span><br><span class=\"line\">connectionTimeout=\"20000\"</span><br><span class=\"line\">redirectPort=\"8443\" /&gt;</span><br><span class=\"line\">=============================================================================</span><br><span class=\"line\">&lt;Connector port=\"8010\" protocol=\"AJP/1.3\" redirectPort=\"8443\" /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc tomcat2]# cd /etc/init.d/</span><br><span class=\"line\">[root@serverc init.d]# mv tomcat tomcat1</span><br><span class=\"line\">[root@serverc init.d]# vim tomcat1</span><br><span class=\"line\">export CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">export CATALINA_BASE=\"/home/tomcat/tomcat1\"</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc init.d]# cp tomcat1 tomcat2</span><br><span class=\"line\">[root@serverc init.d]# vim tomcat2</span><br><span class=\"line\">export CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">export CATALINA_BASE=\"/home/tomcat/tomcat2\"</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc init.d]# /etc/init.d/tomcat1 start</span><br><span class=\"line\">[root@serverc init.d]# /etc/init.d/tomcat2 start</span><br><span class=\"line\">[root@serverc init.d]# netstat -ltunp | grep 8080</span><br><span class=\"line\">tcp6 0 0 :::8080 :::* LISTEN 5749/jsvc.exec</span><br><span class=\"line\">[root@serverc init.d]# netstat -ltunp | grep 8081</span><br><span class=\"line\">tcp6 0 0 :::8081 :::* LISTEN 5782/jsvc.exec</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>一个程序默认在系统中都是维护一个进程（或一个主进程多个子进程），这样的结构在进程出错终止时会导致该进程下所有的网站都会打不开。但tomcat我们可以通过调整启动时指定的tomcat程序位置来启动多个tomcat程序，分属不同的进程这样在某个进程终止时也不会影响到其他进程，不会导致其它网站无法访问。但一个端口只能被一个进程监听，当我们启动多进程就不能同时监听8080端口，我们可以依次监听8081，8082等，如果要实现直接输入域名访问可以在前段增加nginx来做代理即可。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc ~]# /etc/init.d/tomcat stop</span><br><span class=\"line\">[root@serverc ~]# cd /home/tomcat/</span><br><span class=\"line\">[root@serverc tomcat]# mkdir tomcat1 tomcat2</span><br><span class=\"line\">[root@serverc tomcat]# cd apache-tomcat-8.0.24/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat1.com/ work/ webapps/ conf/ ../tomcat1/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cp -rp logs/ temp/ tomcat2.com/ work/ webapps/ conf/ ../tomcat2/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# rm -rf LICENSE NOTICE RELEASE-NOTES RUNNING.txt conf logs tomcat1.com tomcat2.com webapps</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# ls</span><br><span class=\"line\">bin lib temp work</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cd ../tomcat1/</span><br><span class=\"line\">[root@serverc tomcat1]# vim conf/server.xml</span><br><span class=\"line\">&lt;Host name=\"www.tomcat1.com\" appBase=\"tomcat1.com\"</span><br><span class=\"line\">unpackWARs=\"true\" autoDeploy=\"true\"&gt;</span><br><span class=\"line\">&lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"</span><br><span class=\"line\">prefix=\"localhost_access_log\" suffix=\".txt\"</span><br><span class=\"line\">pattern=\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\" /&gt;</span><br><span class=\"line\">&lt;/Host&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc tomcat1]# cd ../tomcat2/</span><br><span class=\"line\">[root@serverc tomcat2]# vim conf/server.xml</span><br><span class=\"line\">&lt;Host name=\"www.tomcat2.com\" appBase=\"tomcat2.com\"</span><br><span class=\"line\">unpackWARs=\"true\" autoDeploy=\"true\"&gt;</span><br><span class=\"line\">&lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"</span><br><span class=\"line\">prefix=\"localhost_access_log\" suffix=\".txt\"</span><br><span class=\"line\">pattern=\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\" /&gt;</span><br><span class=\"line\">&lt;/Host&gt;</span><br><span class=\"line\">=============================================================================</span><br><span class=\"line\">&lt;Connector port=\"8081\" protocol=\"HTTP/1.1\"</span><br><span class=\"line\">connectionTimeout=\"20000\"</span><br><span class=\"line\">redirectPort=\"8443\" /&gt;</span><br><span class=\"line\">=============================================================================</span><br><span class=\"line\">&lt;Connector port=\"8010\" protocol=\"AJP/1.3\" redirectPort=\"8443\" /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc tomcat2]# cd /etc/init.d/</span><br><span class=\"line\">[root@serverc init.d]# mv tomcat tomcat1</span><br><span class=\"line\">[root@serverc init.d]# vim tomcat1</span><br><span class=\"line\">export CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">export CATALINA_BASE=\"/home/tomcat/tomcat1\"</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc init.d]# cp tomcat1 tomcat2</span><br><span class=\"line\">[root@serverc init.d]# vim tomcat2</span><br><span class=\"line\">export CATALINA_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">export CATALINA_BASE=\"/home/tomcat/tomcat2\"</span><br><span class=\"line\"></span><br><span class=\"line\">[root@serverc init.d]# /etc/init.d/tomcat1 start</span><br><span class=\"line\">[root@serverc init.d]# /etc/init.d/tomcat2 start</span><br><span class=\"line\">[root@serverc init.d]# netstat -ltunp | grep 8080</span><br><span class=\"line\">tcp6 0 0 :::8080 :::* LISTEN 5749/jsvc.exec</span><br><span class=\"line\">[root@serverc init.d]# netstat -ltunp | grep 8081</span><br><span class=\"line\">tcp6 0 0 :::8081 :::* LISTEN 5782/jsvc.exec</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"mysql binlog恢复数据","published":1,"author":"xiemx","comments":1,"date":"2016-01-30T03:01:53.000Z","_content":"```shell\n[root@localhost mysql]# cat /etc/my.cnf\n[mysqld]\ndatadir=/var/lib/mysql\nlog-bin=/var/log/mysql/binlog   开启二进制日志\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\nlog-slow-queries=/var/log/mysql/slowlog\nsymbolic-links=0\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\n[root@localhost mysql]# cd /var/log/mysql\n[root@localhost mysql]# ls\nbinlog.000001  binlog.000002  binlog.000003  binlog.index             二进制生成的文件\n```\n查看数据库的日志相关设置：\n```sql\nmysql> SHOW  GLOBAL VARIABLES LIKE '%log%';\n+-----------------------------------------+----------------------------+\n| Variable_name                           | Value                      |\n+-----------------------------------------+----------------------------+\n| back_log                                | 50                         |\n| binlog_cache_size                       | 32768                      |\n| binlog_direct_non_transactional_updates | OFF                        |\n| binlog_format                           | STATEMENT                  |\n| expire_logs_days                        | 0                          |\n| general_log                             | OFF                        |\n| general_log_file                        | /var/run/mysqld/mysqld.log |\n| innodb_flush_log_at_trx_commit          | 1                          |\n| innodb_locks_unsafe_for_binlog          | OFF                        |\n| innodb_log_buffer_size                  | 1048576                    |\n| innodb_log_file_size                    | 5242880                    |\n| innodb_log_files_in_group               | 2                          |\n| innodb_log_group_home_dir               | ./                         |\n| innodb_mirrored_log_groups              | 1                          |\n| log                                     | OFF                        |\n| log_bin                                 | ON                         |    查看二进制日志是否开启\n| log_bin_trust_function_creators         | OFF                        |\n| log_bin_trust_routine_creators          | OFF                        |\n| log_error                               | /var/log/mysqld.log        |   错误日志\n| log_output                              | FILE                       |\n| log_queries_not_using_indexes           | OFF                        |\n| log_slave_updates                       | OFF                        |\n| log_slow_queries                        | ON                         |\n| log_warnings                            | 1                          |\n| max_binlog_cache_size                   | 18446744073709547520       |\n| max_binlog_size                         | 1073741824                 |\n| max_relay_log_size                      | 0                          |\n| relay_log                               |                            |   中继日志\n| relay_log_index                         |                            |\n| relay_log_info_file                     | relay-log.info             |\n| relay_log_purge                         | ON                         |\n| relay_log_space_limit                   | 0                          |\n| slow_query_log                          | ON                         |   慢查询日志\n| slow_query_log_file                     | /var/log/mysql/slowlog     |\n| sql_log_bin                             | ON                         |\n| sql_log_off                             | OFF                        |\n| sql_log_update                          | ON                         |\n| sync_binlog                             | 0                          |\n+-----------------------------------------+----------------------------+\n38 rows in set (0.00 sec)\n\n```\n\n查看二进制日志文件：二进制文件不是文本文档无法使用cat等于都文本的命令查看，需使用mysqlbinlog命令查看。\n```sql\n[root@localhost mysql]# mysqlbinlog binlog.000003\n/*!40019 SET @@session.max_insert_delayed_threads=0*/;\n/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/;\nDELIMITER /*!*/;\n# at 4\n#160110 16:41:49 server id 1  end_log_pos 106     Start: binlog v 4, server v 5.1.73-log created 160110 16:41:49 at startup\n# Warning: this binlog is either in use or was not closed properly.\nROLLBACK/*!*/;\nBINLOG '\nTRmSVg8BAAAAZgAAAGoAAAABAAQANS4xLjczLWxvZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAABNGZJWEzgNAAgAEgAEBAQEEgAAUwAEGggAAAAICAgC\n'/*!*/;\n# at 106                 position号标记\n#160110 17:26:15 server id 1  end_log_pos 191     Query    thread_id=3    exec_time=0    error_code=0    时间标记160110表示2016-01-10\nSET TIMESTAMP=1452417975/*!*/;\nSET @@session.pseudo_thread_id=3/*!*/;\nSET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=1, @@session.unique_checks=1, @@session.autocommit=1/*!*/;\nSET @@session.sql_mode=0/*!*/;\nSET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/;\n/*!\\C latin1 *//*!*/;\nSET @@session.character_set_client=8,@@session.collation_connection=8,@@session.collation_server=8/*!*/;\nSET @@session.lc_time_names=0/*!*/;\nSET @@session.collation_database=DEFAULT/*!*/;\ncreate database xiemx     对数据库的操作记录\n/*!*/;\nDELIMITER ;\n# End of log file\nROLLBACK /* added by mysqlbinlog */;\n/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/;\n```\n\n二进制恢复命令：\n```\n[root @server1 mysql ] #mysqlbinlog --start-date=\"2015-06-18 9:55:00\" --stop-date=\"2015-06-18 10:05:00\" /var/log/mysql/binlog.000006 | mysql -uroot -p\n\n从二进制日志binlog.000006的2015-06-18 9:55:00这个时间到2015-06-18 10:05:00之间的操作\n\n[root @server1 mysql ] #mysqlbinlog --stop-position=\"368312\" /var/log/mysql/binlog.000006 | mysql -u root -p  从二进制日志binlog.000006的开头恢复到368312这个position标记结束\n\n[root @server1 mysql ] #mysqlbinlog --start-position=\"368315\" /var/log/mysql/bin.000006 | mysql -u root -p     从二进制日志binlog.000006的368315这个position标记恢复到日志结束\n```\n在使用二进制恢复数据库时可以使用position标记和时间标记，假设我们在数据库操作中误执行了错误的操作我们可以用position和时间标记来跳 过错误的操作不执行，恢复出数据库。二进制日志恢复数据库是基于某个完整备份的基础上。因此在备份数据库时我们可以使用flush log命令来刷新二进制文件，记录下文件名。这样下次数据库出现问题我们就可以用手上的二进制文件和备份来恢复数据。\n\n ","source":"_posts/mysql-binlog-recovery-data.md","raw":"---\nlayout: post\ntitle: mysql binlog恢复数据\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-30 11:01:53\ntags: [ mysql, binlog ]\ncategories:\n    - mysql\n---\n```shell\n[root@localhost mysql]# cat /etc/my.cnf\n[mysqld]\ndatadir=/var/lib/mysql\nlog-bin=/var/log/mysql/binlog   开启二进制日志\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\nlog-slow-queries=/var/log/mysql/slowlog\nsymbolic-links=0\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\n[root@localhost mysql]# cd /var/log/mysql\n[root@localhost mysql]# ls\nbinlog.000001  binlog.000002  binlog.000003  binlog.index             二进制生成的文件\n```\n查看数据库的日志相关设置：\n```sql\nmysql> SHOW  GLOBAL VARIABLES LIKE '%log%';\n+-----------------------------------------+----------------------------+\n| Variable_name                           | Value                      |\n+-----------------------------------------+----------------------------+\n| back_log                                | 50                         |\n| binlog_cache_size                       | 32768                      |\n| binlog_direct_non_transactional_updates | OFF                        |\n| binlog_format                           | STATEMENT                  |\n| expire_logs_days                        | 0                          |\n| general_log                             | OFF                        |\n| general_log_file                        | /var/run/mysqld/mysqld.log |\n| innodb_flush_log_at_trx_commit          | 1                          |\n| innodb_locks_unsafe_for_binlog          | OFF                        |\n| innodb_log_buffer_size                  | 1048576                    |\n| innodb_log_file_size                    | 5242880                    |\n| innodb_log_files_in_group               | 2                          |\n| innodb_log_group_home_dir               | ./                         |\n| innodb_mirrored_log_groups              | 1                          |\n| log                                     | OFF                        |\n| log_bin                                 | ON                         |    查看二进制日志是否开启\n| log_bin_trust_function_creators         | OFF                        |\n| log_bin_trust_routine_creators          | OFF                        |\n| log_error                               | /var/log/mysqld.log        |   错误日志\n| log_output                              | FILE                       |\n| log_queries_not_using_indexes           | OFF                        |\n| log_slave_updates                       | OFF                        |\n| log_slow_queries                        | ON                         |\n| log_warnings                            | 1                          |\n| max_binlog_cache_size                   | 18446744073709547520       |\n| max_binlog_size                         | 1073741824                 |\n| max_relay_log_size                      | 0                          |\n| relay_log                               |                            |   中继日志\n| relay_log_index                         |                            |\n| relay_log_info_file                     | relay-log.info             |\n| relay_log_purge                         | ON                         |\n| relay_log_space_limit                   | 0                          |\n| slow_query_log                          | ON                         |   慢查询日志\n| slow_query_log_file                     | /var/log/mysql/slowlog     |\n| sql_log_bin                             | ON                         |\n| sql_log_off                             | OFF                        |\n| sql_log_update                          | ON                         |\n| sync_binlog                             | 0                          |\n+-----------------------------------------+----------------------------+\n38 rows in set (0.00 sec)\n\n```\n\n查看二进制日志文件：二进制文件不是文本文档无法使用cat等于都文本的命令查看，需使用mysqlbinlog命令查看。\n```sql\n[root@localhost mysql]# mysqlbinlog binlog.000003\n/*!40019 SET @@session.max_insert_delayed_threads=0*/;\n/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/;\nDELIMITER /*!*/;\n# at 4\n#160110 16:41:49 server id 1  end_log_pos 106     Start: binlog v 4, server v 5.1.73-log created 160110 16:41:49 at startup\n# Warning: this binlog is either in use or was not closed properly.\nROLLBACK/*!*/;\nBINLOG '\nTRmSVg8BAAAAZgAAAGoAAAABAAQANS4xLjczLWxvZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAABNGZJWEzgNAAgAEgAEBAQEEgAAUwAEGggAAAAICAgC\n'/*!*/;\n# at 106                 position号标记\n#160110 17:26:15 server id 1  end_log_pos 191     Query    thread_id=3    exec_time=0    error_code=0    时间标记160110表示2016-01-10\nSET TIMESTAMP=1452417975/*!*/;\nSET @@session.pseudo_thread_id=3/*!*/;\nSET @@session.foreign_key_checks=1, @@session.sql_auto_is_null=1, @@session.unique_checks=1, @@session.autocommit=1/*!*/;\nSET @@session.sql_mode=0/*!*/;\nSET @@session.auto_increment_increment=1, @@session.auto_increment_offset=1/*!*/;\n/*!\\C latin1 *//*!*/;\nSET @@session.character_set_client=8,@@session.collation_connection=8,@@session.collation_server=8/*!*/;\nSET @@session.lc_time_names=0/*!*/;\nSET @@session.collation_database=DEFAULT/*!*/;\ncreate database xiemx     对数据库的操作记录\n/*!*/;\nDELIMITER ;\n# End of log file\nROLLBACK /* added by mysqlbinlog */;\n/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/;\n```\n\n二进制恢复命令：\n```\n[root @server1 mysql ] #mysqlbinlog --start-date=\"2015-06-18 9:55:00\" --stop-date=\"2015-06-18 10:05:00\" /var/log/mysql/binlog.000006 | mysql -uroot -p\n\n从二进制日志binlog.000006的2015-06-18 9:55:00这个时间到2015-06-18 10:05:00之间的操作\n\n[root @server1 mysql ] #mysqlbinlog --stop-position=\"368312\" /var/log/mysql/binlog.000006 | mysql -u root -p  从二进制日志binlog.000006的开头恢复到368312这个position标记结束\n\n[root @server1 mysql ] #mysqlbinlog --start-position=\"368315\" /var/log/mysql/bin.000006 | mysql -u root -p     从二进制日志binlog.000006的368315这个position标记恢复到日志结束\n```\n在使用二进制恢复数据库时可以使用position标记和时间标记，假设我们在数据库操作中误执行了错误的操作我们可以用position和时间标记来跳 过错误的操作不执行，恢复出数据库。二进制日志恢复数据库是基于某个完整备份的基础上。因此在备份数据库时我们可以使用flush log命令来刷新二进制文件，记录下文件名。这样下次数据库出现问题我们就可以用手上的二进制文件和备份来恢复数据。\n\n ","slug":"mysql-binlog-recovery-data","updated":"2019-10-21T06:57:42.910Z","photos":[],"link":"","_id":"ck42dyie3004tu9ure1sybbb2","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql]# cat /etc/my.cnf</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">datadir=/var/lib/mysql</span><br><span class=\"line\">log-bin=/var/log/mysql/binlog   开启二进制日志</span><br><span class=\"line\">socket=/var/lib/mysql/mysql.sock</span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">log-slow-queries=/var/log/mysql/slowlog</span><br><span class=\"line\">symbolic-links=0</span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mysql]# cd /var/log/mysql</span><br><span class=\"line\">[root@localhost mysql]# ls</span><br><span class=\"line\">binlog.000001  binlog.000002  binlog.000003  binlog.index             二进制生成的文件</span><br></pre></td></tr></table></figure>\n\n<p>查看数据库的日志相关设置：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW  GLOBAL VARIABLES LIKE '%log%';</span><br><span class=\"line\">+<span class=\"comment\">-----------------------------------------+----------------------------+</span></span><br><span class=\"line\">| Variable_name                           | Value                      |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------------------------+----------------------------+</span></span><br><span class=\"line\">| back_log                                | 50                         |</span><br><span class=\"line\">| binlog_cache_size                       | 32768                      |</span><br><span class=\"line\">| binlog_direct_non_transactional_updates | OFF                        |</span><br><span class=\"line\">| binlog_format                           | STATEMENT                  |</span><br><span class=\"line\">| expire_logs_days                        | 0                          |</span><br><span class=\"line\">| general_log                             | OFF                        |</span><br><span class=\"line\">| general_log_file                        | /var/run/mysqld/mysqld.log |</span><br><span class=\"line\">| innodb_flush_log_at_trx_commit          | 1                          |</span><br><span class=\"line\">| innodb_locks_unsafe_for_binlog          | OFF                        |</span><br><span class=\"line\">| innodb_log_buffer_size                  | 1048576                    |</span><br><span class=\"line\">| innodb_log_file_size                    | 5242880                    |</span><br><span class=\"line\">| innodb_log_files_in_group               | 2                          |</span><br><span class=\"line\">| innodb_log_group_home_dir               | ./                         |</span><br><span class=\"line\">| innodb_mirrored_log_groups              | 1                          |</span><br><span class=\"line\">| log                                     | OFF                        |</span><br><span class=\"line\">| log_bin                                 | ON                         |    查看二进制日志是否开启</span><br><span class=\"line\">| log_bin_trust_function_creators         | OFF                        |</span><br><span class=\"line\">| log_bin_trust_routine_creators          | OFF                        |</span><br><span class=\"line\">| log_error                               | /var/log/mysqld.log        |   错误日志</span><br><span class=\"line\">| log_output                              | FILE                       |</span><br><span class=\"line\">| log_queries_not_using_indexes           | OFF                        |</span><br><span class=\"line\">| log_slave_updates                       | OFF                        |</span><br><span class=\"line\">| log_slow_queries                        | ON                         |</span><br><span class=\"line\">| log_warnings                            | 1                          |</span><br><span class=\"line\">| max_binlog_cache_size                   | 18446744073709547520       |</span><br><span class=\"line\">| max_binlog_size                         | 1073741824                 |</span><br><span class=\"line\">| max_relay_log_size                      | 0                          |</span><br><span class=\"line\">| relay_log                               |                            |   中继日志</span><br><span class=\"line\">| relay_log_index                         |                            |</span><br><span class=\"line\">| relay_log_info_file                     | relay-log.info             |</span><br><span class=\"line\">| relay_log_purge                         | ON                         |</span><br><span class=\"line\">| relay_log_space_limit                   | 0                          |</span><br><span class=\"line\">| slow_query_log                          | ON                         |   慢查询日志</span><br><span class=\"line\">| slow_query_log_file                     | /var/log/mysql/slowlog     |</span><br><span class=\"line\">| sql_log_bin                             | ON                         |</span><br><span class=\"line\">| sql_log_off                             | OFF                        |</span><br><span class=\"line\">| sql_log_update                          | ON                         |</span><br><span class=\"line\">| sync_binlog                             | 0                          |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------------------------+----------------------------+</span></span><br><span class=\"line\">38 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>查看二进制日志文件：二进制文件不是文本文档无法使用cat等于都文本的命令查看，需使用mysqlbinlog命令查看。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql]<span class=\"comment\"># mysqlbinlog binlog.000003</span></span><br><span class=\"line\"><span class=\"comment\">/*!40019 SET @@session.max_insert_delayed_threads=0*/</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/</span>;</span><br><span class=\"line\">DELIMITER <span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"comment\"># at 4</span></span><br><span class=\"line\"><span class=\"comment\">#160110 16:41:49 server id 1  end_log_pos 106     Start: binlog v 4, server v 5.1.73-log created 160110 16:41:49 at startup</span></span><br><span class=\"line\"><span class=\"comment\"># Warning: this binlog is either in use or was not closed properly.</span></span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\">BINLOG '</span><br><span class=\"line\">TRmSVg8BAAAAZgAAAGoAAAABAAQANS4xLjczLWxvZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class=\"line\">AAAAAAAAAAAAAAAAAABNGZJWEzgNAAgAEgAEBAQEEgAAUwAEGggAAAAICAgC</span><br><span class=\"line\">'<span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"comment\"># at 106                 position号标记</span></span><br><span class=\"line\"><span class=\"comment\">#160110 17:26:15 server id 1  end_log_pos 191     Query    thread_id=3    exec_time=0    error_code=0    时间标记160110表示2016-01-10</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"built_in\">TIMESTAMP</span>=<span class=\"number\">1452417975</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.pseudo_thread_id=<span class=\"number\">3</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.foreign_key_checks=<span class=\"number\">1</span>, @@session.sql_auto_is_null=<span class=\"number\">1</span>, @@session.unique_checks=<span class=\"number\">1</span>, @@session.autocommit=<span class=\"number\">1</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.sql_mode=<span class=\"number\">0</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.auto_increment_increment=<span class=\"number\">1</span>, @@session.auto_increment_offset=<span class=\"number\">1</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!\\C latin1 */</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.character_set_client=<span class=\"number\">8</span>,@@session.collation_connection=<span class=\"number\">8</span>,@@session.collation_server=<span class=\"number\">8</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.lc_time_names=<span class=\"number\">0</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.collation_database=<span class=\"keyword\">DEFAULT</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> xiemx     对数据库的操作记录</span><br><span class=\"line\"><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\">DELIMITER ;</span><br><span class=\"line\"><span class=\"comment\"># End of log file</span></span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span> <span class=\"comment\">/* added by mysqlbinlog */</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/</span>;</span><br></pre></td></tr></table></figure>\n\n<p>二进制恢复命令：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root @server1 mysql ] #mysqlbinlog --start-date=<span class=\"string\">\"2015-06-18 9:55:00\"</span> --stop-date=<span class=\"string\">\"2015-06-18 10:05:00\"</span> /var/log/mysql/binlog<span class=\"number\">.000006</span> | mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\">从二进制日志binlog<span class=\"number\">.000006</span>的<span class=\"number\">2015</span><span class=\"number\">-06</span><span class=\"number\">-18</span> <span class=\"number\">9</span>:<span class=\"number\">55</span>:<span class=\"number\">00</span>这个时间到<span class=\"number\">2015</span><span class=\"number\">-06</span><span class=\"number\">-18</span> <span class=\"number\">10</span>:<span class=\"number\">05</span>:<span class=\"number\">00</span>之间的操作</span><br><span class=\"line\"></span><br><span class=\"line\">[root @server1 mysql ] #mysqlbinlog --stop-position=<span class=\"string\">\"368312\"</span> /var/log/mysql/binlog<span class=\"number\">.000006</span> | mysql -u root -p  从二进制日志binlog<span class=\"number\">.000006</span>的开头恢复到<span class=\"number\">368312</span>这个position标记结束</span><br><span class=\"line\"></span><br><span class=\"line\">[root @server1 mysql ] #mysqlbinlog --start-position=<span class=\"string\">\"368315\"</span> /var/log/mysql/bin<span class=\"number\">.000006</span> | mysql -u root -p     从二进制日志binlog<span class=\"number\">.000006</span>的<span class=\"number\">368315</span>这个position标记恢复到日志结束</span><br></pre></td></tr></table></figure>\n\n<p>在使用二进制恢复数据库时可以使用position标记和时间标记，假设我们在数据库操作中误执行了错误的操作我们可以用position和时间标记来跳 过错误的操作不执行，恢复出数据库。二进制日志恢复数据库是基于某个完整备份的基础上。因此在备份数据库时我们可以使用flush log命令来刷新二进制文件，记录下文件名。这样下次数据库出现问题我们就可以用手上的二进制文件和备份来恢复数据。</p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql]# cat /etc/my.cnf</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">datadir=/var/lib/mysql</span><br><span class=\"line\">log-bin=/var/log/mysql/binlog   开启二进制日志</span><br><span class=\"line\">socket=/var/lib/mysql/mysql.sock</span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">log-slow-queries=/var/log/mysql/slowlog</span><br><span class=\"line\">symbolic-links=0</span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mysql]# cd /var/log/mysql</span><br><span class=\"line\">[root@localhost mysql]# ls</span><br><span class=\"line\">binlog.000001  binlog.000002  binlog.000003  binlog.index             二进制生成的文件</span><br></pre></td></tr></table></figure>\n\n<p>查看数据库的日志相关设置：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW  GLOBAL VARIABLES LIKE '%log%';</span><br><span class=\"line\">+<span class=\"comment\">-----------------------------------------+----------------------------+</span></span><br><span class=\"line\">| Variable_name                           | Value                      |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------------------------+----------------------------+</span></span><br><span class=\"line\">| back_log                                | 50                         |</span><br><span class=\"line\">| binlog_cache_size                       | 32768                      |</span><br><span class=\"line\">| binlog_direct_non_transactional_updates | OFF                        |</span><br><span class=\"line\">| binlog_format                           | STATEMENT                  |</span><br><span class=\"line\">| expire_logs_days                        | 0                          |</span><br><span class=\"line\">| general_log                             | OFF                        |</span><br><span class=\"line\">| general_log_file                        | /var/run/mysqld/mysqld.log |</span><br><span class=\"line\">| innodb_flush_log_at_trx_commit          | 1                          |</span><br><span class=\"line\">| innodb_locks_unsafe_for_binlog          | OFF                        |</span><br><span class=\"line\">| innodb_log_buffer_size                  | 1048576                    |</span><br><span class=\"line\">| innodb_log_file_size                    | 5242880                    |</span><br><span class=\"line\">| innodb_log_files_in_group               | 2                          |</span><br><span class=\"line\">| innodb_log_group_home_dir               | ./                         |</span><br><span class=\"line\">| innodb_mirrored_log_groups              | 1                          |</span><br><span class=\"line\">| log                                     | OFF                        |</span><br><span class=\"line\">| log_bin                                 | ON                         |    查看二进制日志是否开启</span><br><span class=\"line\">| log_bin_trust_function_creators         | OFF                        |</span><br><span class=\"line\">| log_bin_trust_routine_creators          | OFF                        |</span><br><span class=\"line\">| log_error                               | /var/log/mysqld.log        |   错误日志</span><br><span class=\"line\">| log_output                              | FILE                       |</span><br><span class=\"line\">| log_queries_not_using_indexes           | OFF                        |</span><br><span class=\"line\">| log_slave_updates                       | OFF                        |</span><br><span class=\"line\">| log_slow_queries                        | ON                         |</span><br><span class=\"line\">| log_warnings                            | 1                          |</span><br><span class=\"line\">| max_binlog_cache_size                   | 18446744073709547520       |</span><br><span class=\"line\">| max_binlog_size                         | 1073741824                 |</span><br><span class=\"line\">| max_relay_log_size                      | 0                          |</span><br><span class=\"line\">| relay_log                               |                            |   中继日志</span><br><span class=\"line\">| relay_log_index                         |                            |</span><br><span class=\"line\">| relay_log_info_file                     | relay-log.info             |</span><br><span class=\"line\">| relay_log_purge                         | ON                         |</span><br><span class=\"line\">| relay_log_space_limit                   | 0                          |</span><br><span class=\"line\">| slow_query_log                          | ON                         |   慢查询日志</span><br><span class=\"line\">| slow_query_log_file                     | /var/log/mysql/slowlog     |</span><br><span class=\"line\">| sql_log_bin                             | ON                         |</span><br><span class=\"line\">| sql_log_off                             | OFF                        |</span><br><span class=\"line\">| sql_log_update                          | ON                         |</span><br><span class=\"line\">| sync_binlog                             | 0                          |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------------------------+----------------------------+</span></span><br><span class=\"line\">38 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>查看二进制日志文件：二进制文件不是文本文档无法使用cat等于都文本的命令查看，需使用mysqlbinlog命令查看。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql]<span class=\"comment\"># mysqlbinlog binlog.000003</span></span><br><span class=\"line\"><span class=\"comment\">/*!40019 SET @@session.max_insert_delayed_threads=0*/</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/</span>;</span><br><span class=\"line\">DELIMITER <span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"comment\"># at 4</span></span><br><span class=\"line\"><span class=\"comment\">#160110 16:41:49 server id 1  end_log_pos 106     Start: binlog v 4, server v 5.1.73-log created 160110 16:41:49 at startup</span></span><br><span class=\"line\"><span class=\"comment\"># Warning: this binlog is either in use or was not closed properly.</span></span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\">BINLOG '</span><br><span class=\"line\">TRmSVg8BAAAAZgAAAGoAAAABAAQANS4xLjczLWxvZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class=\"line\">AAAAAAAAAAAAAAAAAABNGZJWEzgNAAgAEgAEBAQEEgAAUwAEGggAAAAICAgC</span><br><span class=\"line\">'<span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"comment\"># at 106                 position号标记</span></span><br><span class=\"line\"><span class=\"comment\">#160110 17:26:15 server id 1  end_log_pos 191     Query    thread_id=3    exec_time=0    error_code=0    时间标记160110表示2016-01-10</span></span><br><span class=\"line\"><span class=\"keyword\">SET</span> <span class=\"built_in\">TIMESTAMP</span>=<span class=\"number\">1452417975</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.pseudo_thread_id=<span class=\"number\">3</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.foreign_key_checks=<span class=\"number\">1</span>, @@session.sql_auto_is_null=<span class=\"number\">1</span>, @@session.unique_checks=<span class=\"number\">1</span>, @@session.autocommit=<span class=\"number\">1</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.sql_mode=<span class=\"number\">0</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.auto_increment_increment=<span class=\"number\">1</span>, @@session.auto_increment_offset=<span class=\"number\">1</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!\\C latin1 */</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.character_set_client=<span class=\"number\">8</span>,@@session.collation_connection=<span class=\"number\">8</span>,@@session.collation_server=<span class=\"number\">8</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.lc_time_names=<span class=\"number\">0</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> @@session.collation_database=<span class=\"keyword\">DEFAULT</span><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> xiemx     对数据库的操作记录</span><br><span class=\"line\"><span class=\"comment\">/*!*/</span>;</span><br><span class=\"line\">DELIMITER ;</span><br><span class=\"line\"><span class=\"comment\"># End of log file</span></span><br><span class=\"line\"><span class=\"keyword\">ROLLBACK</span> <span class=\"comment\">/* added by mysqlbinlog */</span>;</span><br><span class=\"line\"><span class=\"comment\">/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/</span>;</span><br></pre></td></tr></table></figure>\n\n<p>二进制恢复命令：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root @server1 mysql ] #mysqlbinlog --start-date=<span class=\"string\">\"2015-06-18 9:55:00\"</span> --stop-date=<span class=\"string\">\"2015-06-18 10:05:00\"</span> /var/log/mysql/binlog<span class=\"number\">.000006</span> | mysql -uroot -p</span><br><span class=\"line\"></span><br><span class=\"line\">从二进制日志binlog<span class=\"number\">.000006</span>的<span class=\"number\">2015</span><span class=\"number\">-06</span><span class=\"number\">-18</span> <span class=\"number\">9</span>:<span class=\"number\">55</span>:<span class=\"number\">00</span>这个时间到<span class=\"number\">2015</span><span class=\"number\">-06</span><span class=\"number\">-18</span> <span class=\"number\">10</span>:<span class=\"number\">05</span>:<span class=\"number\">00</span>之间的操作</span><br><span class=\"line\"></span><br><span class=\"line\">[root @server1 mysql ] #mysqlbinlog --stop-position=<span class=\"string\">\"368312\"</span> /var/log/mysql/binlog<span class=\"number\">.000006</span> | mysql -u root -p  从二进制日志binlog<span class=\"number\">.000006</span>的开头恢复到<span class=\"number\">368312</span>这个position标记结束</span><br><span class=\"line\"></span><br><span class=\"line\">[root @server1 mysql ] #mysqlbinlog --start-position=<span class=\"string\">\"368315\"</span> /var/log/mysql/bin<span class=\"number\">.000006</span> | mysql -u root -p     从二进制日志binlog<span class=\"number\">.000006</span>的<span class=\"number\">368315</span>这个position标记恢复到日志结束</span><br></pre></td></tr></table></figure>\n\n<p>在使用二进制恢复数据库时可以使用position标记和时间标记，假设我们在数据库操作中误执行了错误的操作我们可以用position和时间标记来跳 过错误的操作不执行，恢复出数据库。二进制日志恢复数据库是基于某个完整备份的基础上。因此在备份数据库时我们可以使用flush log命令来刷新二进制文件，记录下文件名。这样下次数据库出现问题我们就可以用手上的二进制文件和备份来恢复数据。</p>\n"},{"layout":"post","title":"mysql锁表解决","published":1,"author":"xiemx","comments":1,"date":"2016-08-01T18:08:56.000Z","_content":"1、查询是否锁表\n```sql\nshow OPEN TABLES where In_use > 0;\n```\n2、查询进程\n```\nshow processlist 查询到相对应的ID\n```\n3、杀死进程\n```\nkill id\n```\nother:\n```\n查看正在锁的事务\nSELECT * FROMINFORMATION_SCHEMA.INNODB_LOCKS; \n\n查看等待锁的事务\nSELECT * FROMINFORMATION_SCHEMA.INNODB_LOCK_WAITS;\n```","source":"_posts/mysql-lock-table.md","raw":"---\nlayout: post\ntitle: mysql锁表解决\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-02 02:08:56\ntags: [ mysql, debug, database ]\ncategories:\n    - mysql\n# permalink: '/2016/08/02/mysql%e9%94%81%e8%a1%a8%e8%a7%a3%e5%86%b3'\n---\n1、查询是否锁表\n```sql\nshow OPEN TABLES where In_use > 0;\n```\n2、查询进程\n```\nshow processlist 查询到相对应的ID\n```\n3、杀死进程\n```\nkill id\n```\nother:\n```\n查看正在锁的事务\nSELECT * FROMINFORMATION_SCHEMA.INNODB_LOCKS; \n\n查看等待锁的事务\nSELECT * FROMINFORMATION_SCHEMA.INNODB_LOCK_WAITS;\n```","slug":"mysql-lock-table","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyie5004xu9ur4n2tr699","content":"<p>1、查询是否锁表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">OPEN</span> <span class=\"keyword\">TABLES</span> <span class=\"keyword\">where</span> In_use &gt; <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<p>2、查询进程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">processlist</span> 查询到相对应的<span class=\"keyword\">ID</span></span><br></pre></td></tr></table></figure>\n\n<p>3、杀死进程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">kill</span> <span class=\"keyword\">id</span></span><br></pre></td></tr></table></figure>\n\n<p>other:</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看正在锁的事务</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * FROMINFORMATION_SCHEMA.INNODB_LOCKS; </span><br><span class=\"line\"></span><br><span class=\"line\">查看等待锁的事务</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * FROMINFORMATION_SCHEMA.INNODB_LOCK_WAITS;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>1、查询是否锁表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">OPEN</span> <span class=\"keyword\">TABLES</span> <span class=\"keyword\">where</span> In_use &gt; <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<p>2、查询进程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">processlist</span> 查询到相对应的<span class=\"keyword\">ID</span></span><br></pre></td></tr></table></figure>\n\n<p>3、杀死进程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">kill</span> <span class=\"keyword\">id</span></span><br></pre></td></tr></table></figure>\n\n<p>other:</p>\n<figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看正在锁的事务</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * FROMINFORMATION_SCHEMA.INNODB_LOCKS; </span><br><span class=\"line\"></span><br><span class=\"line\">查看等待锁的事务</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * FROMINFORMATION_SCHEMA.INNODB_LOCK_WAITS;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"mysql master-master","published":1,"author":"xiemx","comments":1,"date":"2016-01-31T04:01:23.000Z","_content":"\n原理同单向主从相同，都是salve获取master的二进制日志来重演数据，在互为主从的架构中，servera既是master又是slave，通用的serverb也是master和slave，servera回去同步serverb的数据，serverb也会去同步servera的操作。已达到数据的一致性。\n\n由原理可以得知：\n\n* servera需要开启二进制日志授权serverb来同步，servera需要change master指向serverb\n\n* serverb需要开启二进制日志授权servera来同步，serverb需要change master指向servera，另外serverb的数据是通过master来同步到中继日志中来重演生成的，因此需要在开启将中继日志写入二进制日志功能`log_slave_update=1`\n\n需要注意的是，在设置双向主从时，我们是先设置一条单向主从(servera-serverb)，在设置另一条单向主从(serverb-servera)。我们在设置完第一条单向主从(servera-serverb)成功时，slave(serverb)上是不能执行任何非查询语句的，因此第二条单向主从(serverb-servera)在serverb上设置servera的同步账户时grant授权语句需要通过(servera-serverb)这条单向主从的master(servera)来传递给salve(serverb)。\n\n#### 操作步骤\n\n1. 设置server-id，开启二进制日志，serverb需要开启中继日志写入二进制日志功能\n```shell\n[root@localhost mysql]# cat /etc/my.cnf\n[mysqld]\nserver-id=1            master/slave数字不可重复\ndatadir=/var/lib/mysql\nlog-bin=/var/log/mysql/binlog\nsocket=/var/lib/mysql/mysql.sock\nlog_slave_update=1              serverb上添加此项\nlog-slow-queries=/var/log/mysql/slowlog\nsymbolic-links=0\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n```\n2. servera创建同步用户，并授权\n```sql\nmysql>grant   replication  slave on *.*  to xiemx1@‘172.25.30.%’ identified by '123123';flush privileges;\n```\n3. serverb指定master信息\n```\nmysql>change master to master_host='172.25.30.10',master_user='xiemx1',master_password='123123',master_log_file=\"binlog.000003\"，master_log_pos=245;\n\nmysql>slave start；\n\nmysql>show slave status\\G;查看io和sql是否yes，在测试主从是否生效，在保障主从生效的情况下执行下列操作。\n```\n4. servera上授权第二条单向的同步账户\n```\nmysql>grant   replication  slave on *.*  to xiemx2@‘172.25.30.%’ identified by '123123';flush privileges;\n```\n5. servera指定master信息\n```\nmysql>change master to master_host='172.25.30.11',master_user='xiemx2',master_password='123123',master_log_file=\"binlog.000001\"，master_log_pos=245;\n\nmysql>slave start；\n\nmysql>show slave status\\G;查看io和sql是否为yes\n```\n6. 在servera上创建一个库看serverb是否会自动生成，在serverb上创建库看servera是否会自动生成。\n如果都没有问题的话说明设置成功。\n`show master status\\G;` 可以查看当前的二进制日志文件和position号","source":"_posts/mysql-master-master.md","raw":"---\nlayout: post\ntitle: mysql master-master\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-31 12:01:23\ntags: [ mysql ]\ncategories:\n    - mysql\n---\n\n原理同单向主从相同，都是salve获取master的二进制日志来重演数据，在互为主从的架构中，servera既是master又是slave，通用的serverb也是master和slave，servera回去同步serverb的数据，serverb也会去同步servera的操作。已达到数据的一致性。\n\n由原理可以得知：\n\n* servera需要开启二进制日志授权serverb来同步，servera需要change master指向serverb\n\n* serverb需要开启二进制日志授权servera来同步，serverb需要change master指向servera，另外serverb的数据是通过master来同步到中继日志中来重演生成的，因此需要在开启将中继日志写入二进制日志功能`log_slave_update=1`\n\n需要注意的是，在设置双向主从时，我们是先设置一条单向主从(servera-serverb)，在设置另一条单向主从(serverb-servera)。我们在设置完第一条单向主从(servera-serverb)成功时，slave(serverb)上是不能执行任何非查询语句的，因此第二条单向主从(serverb-servera)在serverb上设置servera的同步账户时grant授权语句需要通过(servera-serverb)这条单向主从的master(servera)来传递给salve(serverb)。\n\n#### 操作步骤\n\n1. 设置server-id，开启二进制日志，serverb需要开启中继日志写入二进制日志功能\n```shell\n[root@localhost mysql]# cat /etc/my.cnf\n[mysqld]\nserver-id=1            master/slave数字不可重复\ndatadir=/var/lib/mysql\nlog-bin=/var/log/mysql/binlog\nsocket=/var/lib/mysql/mysql.sock\nlog_slave_update=1              serverb上添加此项\nlog-slow-queries=/var/log/mysql/slowlog\nsymbolic-links=0\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n```\n2. servera创建同步用户，并授权\n```sql\nmysql>grant   replication  slave on *.*  to xiemx1@‘172.25.30.%’ identified by '123123';flush privileges;\n```\n3. serverb指定master信息\n```\nmysql>change master to master_host='172.25.30.10',master_user='xiemx1',master_password='123123',master_log_file=\"binlog.000003\"，master_log_pos=245;\n\nmysql>slave start；\n\nmysql>show slave status\\G;查看io和sql是否yes，在测试主从是否生效，在保障主从生效的情况下执行下列操作。\n```\n4. servera上授权第二条单向的同步账户\n```\nmysql>grant   replication  slave on *.*  to xiemx2@‘172.25.30.%’ identified by '123123';flush privileges;\n```\n5. servera指定master信息\n```\nmysql>change master to master_host='172.25.30.11',master_user='xiemx2',master_password='123123',master_log_file=\"binlog.000001\"，master_log_pos=245;\n\nmysql>slave start；\n\nmysql>show slave status\\G;查看io和sql是否为yes\n```\n6. 在servera上创建一个库看serverb是否会自动生成，在serverb上创建库看servera是否会自动生成。\n如果都没有问题的话说明设置成功。\n`show master status\\G;` 可以查看当前的二进制日志文件和position号","slug":"mysql-master-master","updated":"2019-10-21T06:57:43.060Z","photos":[],"link":"","_id":"ck42dyie60051u9uray962bxi","content":"<p>原理同单向主从相同，都是salve获取master的二进制日志来重演数据，在互为主从的架构中，servera既是master又是slave，通用的serverb也是master和slave，servera回去同步serverb的数据，serverb也会去同步servera的操作。已达到数据的一致性。</p>\n<p>由原理可以得知：</p>\n<ul>\n<li><p>servera需要开启二进制日志授权serverb来同步，servera需要change master指向serverb</p>\n</li>\n<li><p>serverb需要开启二进制日志授权servera来同步，serverb需要change master指向servera，另外serverb的数据是通过master来同步到中继日志中来重演生成的，因此需要在开启将中继日志写入二进制日志功能<code>log_slave_update=1</code></p>\n</li>\n</ul>\n<p>需要注意的是，在设置双向主从时，我们是先设置一条单向主从(servera-serverb)，在设置另一条单向主从(serverb-servera)。我们在设置完第一条单向主从(servera-serverb)成功时，slave(serverb)上是不能执行任何非查询语句的，因此第二条单向主从(serverb-servera)在serverb上设置servera的同步账户时grant授权语句需要通过(servera-serverb)这条单向主从的master(servera)来传递给salve(serverb)。</p>\n<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><ol>\n<li><p>设置server-id，开启二进制日志，serverb需要开启中继日志写入二进制日志功能</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql]# cat /etc/my.cnf</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">server-id=1            master/slave数字不可重复</span><br><span class=\"line\">datadir=/var/lib/mysql</span><br><span class=\"line\">log-bin=/var/log/mysql/binlog</span><br><span class=\"line\">socket=/var/lib/mysql/mysql.sock</span><br><span class=\"line\">log_slave_update=1              serverb上添加此项</span><br><span class=\"line\">log-slow-queries=/var/log/mysql/slowlog</span><br><span class=\"line\">symbolic-links=0</span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">pid-file=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>servera创建同步用户，并授权</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;grant   replication  slave on *.*  to xiemx1@‘172.25.30.%’ identified by '123123';flush privileges;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>serverb指定master信息</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;change master <span class=\"keyword\">to</span> master_host=<span class=\"string\">'172.25.30.10'</span>,master_user=<span class=\"string\">'xiemx1'</span>,master_password=<span class=\"string\">'123123'</span>,master_log_file=\"binlog.000003\"，master_log_pos=<span class=\"number\">245</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;slave <span class=\"keyword\">start</span>；</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;<span class=\"keyword\">show</span> slave status\\G;查看io和<span class=\"keyword\">sql</span>是否yes，在测试主从是否生效，在保障主从生效的情况下执行下列操作。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>servera上授权第二条单向的同步账户</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;<span class=\"keyword\">grant</span>   <span class=\"keyword\">replication</span>  slave <span class=\"keyword\">on</span> *.*  <span class=\"keyword\">to</span> xiemx2@‘<span class=\"number\">172.25</span><span class=\"number\">.30</span>.%’ identified <span class=\"keyword\">by</span> <span class=\"string\">'123123'</span>;flush <span class=\"keyword\">privileges</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>servera指定master信息</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;change master <span class=\"keyword\">to</span> master_host=<span class=\"string\">'172.25.30.11'</span>,master_user=<span class=\"string\">'xiemx2'</span>,master_password=<span class=\"string\">'123123'</span>,master_log_file=\"binlog.000001\"，master_log_pos=<span class=\"number\">245</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;slave <span class=\"keyword\">start</span>；</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;<span class=\"keyword\">show</span> slave status\\G;查看io和<span class=\"keyword\">sql</span>是否为yes</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在servera上创建一个库看serverb是否会自动生成，在serverb上创建库看servera是否会自动生成。<br>如果都没有问题的话说明设置成功。<br><code>show master status\\G;</code> 可以查看当前的二进制日志文件和position号</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>原理同单向主从相同，都是salve获取master的二进制日志来重演数据，在互为主从的架构中，servera既是master又是slave，通用的serverb也是master和slave，servera回去同步serverb的数据，serverb也会去同步servera的操作。已达到数据的一致性。</p>\n<p>由原理可以得知：</p>\n<ul>\n<li><p>servera需要开启二进制日志授权serverb来同步，servera需要change master指向serverb</p>\n</li>\n<li><p>serverb需要开启二进制日志授权servera来同步，serverb需要change master指向servera，另外serverb的数据是通过master来同步到中继日志中来重演生成的，因此需要在开启将中继日志写入二进制日志功能<code>log_slave_update=1</code></p>\n</li>\n</ul>\n<p>需要注意的是，在设置双向主从时，我们是先设置一条单向主从(servera-serverb)，在设置另一条单向主从(serverb-servera)。我们在设置完第一条单向主从(servera-serverb)成功时，slave(serverb)上是不能执行任何非查询语句的，因此第二条单向主从(serverb-servera)在serverb上设置servera的同步账户时grant授权语句需要通过(servera-serverb)这条单向主从的master(servera)来传递给salve(serverb)。</p>\n<h4 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h4><ol>\n<li><p>设置server-id，开启二进制日志，serverb需要开启中继日志写入二进制日志功能</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mysql]# cat /etc/my.cnf</span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">server-id=1            master/slave数字不可重复</span><br><span class=\"line\">datadir=/var/lib/mysql</span><br><span class=\"line\">log-bin=/var/log/mysql/binlog</span><br><span class=\"line\">socket=/var/lib/mysql/mysql.sock</span><br><span class=\"line\">log_slave_update=1              serverb上添加此项</span><br><span class=\"line\">log-slow-queries=/var/log/mysql/slowlog</span><br><span class=\"line\">symbolic-links=0</span><br><span class=\"line\">[mysqld_safe]</span><br><span class=\"line\">log-error=/var/log/mysqld.log</span><br><span class=\"line\">pid-file=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>servera创建同步用户，并授权</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;grant   replication  slave on *.*  to xiemx1@‘172.25.30.%’ identified by '123123';flush privileges;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>serverb指定master信息</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;change master <span class=\"keyword\">to</span> master_host=<span class=\"string\">'172.25.30.10'</span>,master_user=<span class=\"string\">'xiemx1'</span>,master_password=<span class=\"string\">'123123'</span>,master_log_file=\"binlog.000003\"，master_log_pos=<span class=\"number\">245</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;slave <span class=\"keyword\">start</span>；</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;<span class=\"keyword\">show</span> slave status\\G;查看io和<span class=\"keyword\">sql</span>是否yes，在测试主从是否生效，在保障主从生效的情况下执行下列操作。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>servera上授权第二条单向的同步账户</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;<span class=\"keyword\">grant</span>   <span class=\"keyword\">replication</span>  slave <span class=\"keyword\">on</span> *.*  <span class=\"keyword\">to</span> xiemx2@‘<span class=\"number\">172.25</span><span class=\"number\">.30</span>.%’ identified <span class=\"keyword\">by</span> <span class=\"string\">'123123'</span>;flush <span class=\"keyword\">privileges</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>servera指定master信息</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;change master <span class=\"keyword\">to</span> master_host=<span class=\"string\">'172.25.30.11'</span>,master_user=<span class=\"string\">'xiemx2'</span>,master_password=<span class=\"string\">'123123'</span>,master_log_file=\"binlog.000001\"，master_log_pos=<span class=\"number\">245</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;slave <span class=\"keyword\">start</span>；</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;<span class=\"keyword\">show</span> slave status\\G;查看io和<span class=\"keyword\">sql</span>是否为yes</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在servera上创建一个库看serverb是否会自动生成，在serverb上创建库看servera是否会自动生成。<br>如果都没有问题的话说明设置成功。<br><code>show master status\\G;</code> 可以查看当前的二进制日志文件和position号</p>\n</li>\n</ol>\n"},{"layout":"post","title":"mysql master-slave","published":1,"author":"xiemx","comments":1,"date":"2016-01-31T04:01:41.000Z","_content":"Mysql复制（replication）是一个异步的复制，从一个Mysql 实例（Master）复制到另一个Mysql 实例（Slave）。实现整个主从复制，需要由Master服务器上的IO进程，和Slave服务器上的Sql进程和IO进程共从完成。要实现主从复制，首先必须打开Master端的binary log（bin-log）功能，因为整个 MySQL 复制过程实际上就是Slave从Master端获取相应的二进制日志，然后再在自己slave端完全顺序的执行日志中所记录的各种操作。 （二进制日志几乎记录了除select以外的所有针对数据库的sql操作语句）主从同步也称之为AB复制。\n\n基本过程：\n\n* Slave端的IO进程连接上Master，向Master请求指定日志文件的指定position后的日志内容；\n* Master接收到来自Slave的IO进程的请求后，负责复制的IO进程根据Slave的请求信息，读取相应日志内容，返回给Slave的IO进程。并将本次请求读取的bin-log文件名及位置一起返回给Slave端。\n* Slave的IO进程接收到信息后，将接收到的日志内容依次添加到Slave端的relay-log文件的最末端，并将读取到的Master端的bin-log的文件名和位置记录到master-info文件中，以便在下一次读取的时候能够清楚的告诉Master“我需要从某个bin-log的哪个位置开始往后的日志内容，请发给我”。\n* Slave的Sql进程检测到relay-log中新增加了内容后，会解析relay-log的内容成为在Master端真实执行时候的那些可执行的内容，并在自身执行。\n\n###数据库主从同步：\n```\n主：servera 172.25.30.10     \n从：serverb 172.25.30.11\n```\n\n数据库的主从同步（AB复制），要保证数据的一致性，首先将主上的数据库备份出来，在从机上恢复一下保证基础的数据相同。从上述过程中我们可以得知slave是通过获取master的二进制日志来重演来达到数据同步的，因此master需要开启二进制日志，slave来获取二进制日志时使用什么账户，账号具有什么权限需要在master端定义，salve需要知道谁是master，用什么账户、同步哪个二进制文件、从二进制文件的哪个position开始同步。另外还需要设置下主从的server id。\n\n由上推导出操作步骤\n\n1. master/slave先设置server-id，master在开启二进制日志功能log-bin\n```\n[root@localhost mysql]# cat /etc/my.cnf\n[mysqld]\nserver-id=1            server-id数字任选，但不可重复\ndatadir=/var/lib/mysql\nlog-bin=/var/log/mysql/binlog          slave不需要开启此功能\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\nlog-slow-queries=/var/log/mysql/slowlog\nsymbolic-links=0\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n```\n2. master创建同步用户，并授权\n```sql\nmysql>grant   replication  slave on *.*  to xiemx@‘172.25.30.%’ identified by '123123';flush privileges;\n```\n3. slave端指定master信息\n```\nmysql>change master to master_host='172.25.30.10',master_user='xiemx',master_password='123123',master_log_file=\"binlog.000003\"，master_log_pos=245;\n\nmysql>slave start；\n```\n4. 查看salve状态信息；\n```sql\nmysql> show slave status \\G;           \\G表示将行和列翻转过来显示\n*************************** 1. row ***************************\nSlave_IO_State: Waiting for master to send event\nMaster_Host: 172.25.30.11\nMaster_User: xiemx\nMaster_Port: 4331\nConnect_Retry: 60\nMaster_Log_File: binlog.000003\nRead_Master_Log_Pos: 245\nRelay_Log_File: mysqld-relay-bin.000001           中继日志\nRelay_Log_Pos: 245\nSlave_IO_Running: Yes               slave的io是否正常运行\nSlave_SQL_Running: Yes              slave的sql是否正常运行，需要注意两个都为yes也不一定正常。但有一个no肯定不正常。我们需要在测试下读写。\nReplicate_Do_DB:\nReplicate_Ignore_DB: mysql\nReplicate_Do_Table:\nReplicate_Ignore_Table:\nReplicate_Wild_Do_Table: photo.%\nReplicate_Wild_Ignore_Table: mysql.%\nLast_Errno: 0\nLast_Error:\nSkip_Counter: 0\nExec_Master_Log_Pos: 13456620\nRelay_Log_Space: 36764898503\nUntil_Condition: None\nUntil_Log_File:\nUntil_Log_Pos: 0\nMaster_SSL_Allowed: No\nMaster_SSL_CA_File:\nMaster_SSL_CA_Path:\nMaster_SSL_Cert:\nMaster_SSL_Cipher:\nMaster_SSL_Key:\nSeconds_Behind_Master: 249904\n××××××××××××××××××××××××××××××××××××××××××××××××××××××××××\n```\n5. 测试主从是否同步\n\n由于slave是从master获取二进制日志来同步数据的，因此在slave上不应该有任何非查询类的sql语句执行，如果slave执行了sql语句操作了某个数据，当master操作这个数据时，salve通过二进制日志重演去操作时发生报错，会导致主从断开。如果主从断开我们就需要重新change master来建立主从。因此切记在单向主从同步的环境中，不可操作slave去执行非查询类操作。\n\n我们在master上创建一个xiemx数据库，查看下slave是否会自动创建出来。\n```\nmysql> create database  xiemx；show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| test               |\n| xiemx              |\n+--------------------+\n4 rows in set (0.00 sec)\n```\n如果如果在slave上show databases；结果和上面相同的则说明主从同步设置成功。","source":"_posts/mysql-master-slave.md","raw":"---\nlayout: post\ntitle: mysql master-slave\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-31 12:01:41\ntags: [ mysql ]\ncategories:\n    - mysql\n---\nMysql复制（replication）是一个异步的复制，从一个Mysql 实例（Master）复制到另一个Mysql 实例（Slave）。实现整个主从复制，需要由Master服务器上的IO进程，和Slave服务器上的Sql进程和IO进程共从完成。要实现主从复制，首先必须打开Master端的binary log（bin-log）功能，因为整个 MySQL 复制过程实际上就是Slave从Master端获取相应的二进制日志，然后再在自己slave端完全顺序的执行日志中所记录的各种操作。 （二进制日志几乎记录了除select以外的所有针对数据库的sql操作语句）主从同步也称之为AB复制。\n\n基本过程：\n\n* Slave端的IO进程连接上Master，向Master请求指定日志文件的指定position后的日志内容；\n* Master接收到来自Slave的IO进程的请求后，负责复制的IO进程根据Slave的请求信息，读取相应日志内容，返回给Slave的IO进程。并将本次请求读取的bin-log文件名及位置一起返回给Slave端。\n* Slave的IO进程接收到信息后，将接收到的日志内容依次添加到Slave端的relay-log文件的最末端，并将读取到的Master端的bin-log的文件名和位置记录到master-info文件中，以便在下一次读取的时候能够清楚的告诉Master“我需要从某个bin-log的哪个位置开始往后的日志内容，请发给我”。\n* Slave的Sql进程检测到relay-log中新增加了内容后，会解析relay-log的内容成为在Master端真实执行时候的那些可执行的内容，并在自身执行。\n\n###数据库主从同步：\n```\n主：servera 172.25.30.10     \n从：serverb 172.25.30.11\n```\n\n数据库的主从同步（AB复制），要保证数据的一致性，首先将主上的数据库备份出来，在从机上恢复一下保证基础的数据相同。从上述过程中我们可以得知slave是通过获取master的二进制日志来重演来达到数据同步的，因此master需要开启二进制日志，slave来获取二进制日志时使用什么账户，账号具有什么权限需要在master端定义，salve需要知道谁是master，用什么账户、同步哪个二进制文件、从二进制文件的哪个position开始同步。另外还需要设置下主从的server id。\n\n由上推导出操作步骤\n\n1. master/slave先设置server-id，master在开启二进制日志功能log-bin\n```\n[root@localhost mysql]# cat /etc/my.cnf\n[mysqld]\nserver-id=1            server-id数字任选，但不可重复\ndatadir=/var/lib/mysql\nlog-bin=/var/log/mysql/binlog          slave不需要开启此功能\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\nlog-slow-queries=/var/log/mysql/slowlog\nsymbolic-links=0\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n```\n2. master创建同步用户，并授权\n```sql\nmysql>grant   replication  slave on *.*  to xiemx@‘172.25.30.%’ identified by '123123';flush privileges;\n```\n3. slave端指定master信息\n```\nmysql>change master to master_host='172.25.30.10',master_user='xiemx',master_password='123123',master_log_file=\"binlog.000003\"，master_log_pos=245;\n\nmysql>slave start；\n```\n4. 查看salve状态信息；\n```sql\nmysql> show slave status \\G;           \\G表示将行和列翻转过来显示\n*************************** 1. row ***************************\nSlave_IO_State: Waiting for master to send event\nMaster_Host: 172.25.30.11\nMaster_User: xiemx\nMaster_Port: 4331\nConnect_Retry: 60\nMaster_Log_File: binlog.000003\nRead_Master_Log_Pos: 245\nRelay_Log_File: mysqld-relay-bin.000001           中继日志\nRelay_Log_Pos: 245\nSlave_IO_Running: Yes               slave的io是否正常运行\nSlave_SQL_Running: Yes              slave的sql是否正常运行，需要注意两个都为yes也不一定正常。但有一个no肯定不正常。我们需要在测试下读写。\nReplicate_Do_DB:\nReplicate_Ignore_DB: mysql\nReplicate_Do_Table:\nReplicate_Ignore_Table:\nReplicate_Wild_Do_Table: photo.%\nReplicate_Wild_Ignore_Table: mysql.%\nLast_Errno: 0\nLast_Error:\nSkip_Counter: 0\nExec_Master_Log_Pos: 13456620\nRelay_Log_Space: 36764898503\nUntil_Condition: None\nUntil_Log_File:\nUntil_Log_Pos: 0\nMaster_SSL_Allowed: No\nMaster_SSL_CA_File:\nMaster_SSL_CA_Path:\nMaster_SSL_Cert:\nMaster_SSL_Cipher:\nMaster_SSL_Key:\nSeconds_Behind_Master: 249904\n××××××××××××××××××××××××××××××××××××××××××××××××××××××××××\n```\n5. 测试主从是否同步\n\n由于slave是从master获取二进制日志来同步数据的，因此在slave上不应该有任何非查询类的sql语句执行，如果slave执行了sql语句操作了某个数据，当master操作这个数据时，salve通过二进制日志重演去操作时发生报错，会导致主从断开。如果主从断开我们就需要重新change master来建立主从。因此切记在单向主从同步的环境中，不可操作slave去执行非查询类操作。\n\n我们在master上创建一个xiemx数据库，查看下slave是否会自动创建出来。\n```\nmysql> create database  xiemx；show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| test               |\n| xiemx              |\n+--------------------+\n4 rows in set (0.00 sec)\n```\n如果如果在slave上show databases；结果和上面相同的则说明主从同步设置成功。","slug":"mysql-master-slave","updated":"2019-10-21T06:57:42.697Z","photos":[],"link":"","_id":"ck42dyie70055u9urf3937v88","content":"<p>Mysql复制（replication）是一个异步的复制，从一个Mysql 实例（Master）复制到另一个Mysql 实例（Slave）。实现整个主从复制，需要由Master服务器上的IO进程，和Slave服务器上的Sql进程和IO进程共从完成。要实现主从复制，首先必须打开Master端的binary log（bin-log）功能，因为整个 MySQL 复制过程实际上就是Slave从Master端获取相应的二进制日志，然后再在自己slave端完全顺序的执行日志中所记录的各种操作。 （二进制日志几乎记录了除select以外的所有针对数据库的sql操作语句）主从同步也称之为AB复制。</p>\n<p>基本过程：</p>\n<ul>\n<li>Slave端的IO进程连接上Master，向Master请求指定日志文件的指定position后的日志内容；</li>\n<li>Master接收到来自Slave的IO进程的请求后，负责复制的IO进程根据Slave的请求信息，读取相应日志内容，返回给Slave的IO进程。并将本次请求读取的bin-log文件名及位置一起返回给Slave端。</li>\n<li>Slave的IO进程接收到信息后，将接收到的日志内容依次添加到Slave端的relay-log文件的最末端，并将读取到的Master端的bin-log的文件名和位置记录到master-info文件中，以便在下一次读取的时候能够清楚的告诉Master“我需要从某个bin-log的哪个位置开始往后的日志内容，请发给我”。</li>\n<li>Slave的Sql进程检测到relay-log中新增加了内容后，会解析relay-log的内容成为在Master端真实执行时候的那些可执行的内容，并在自身执行。</li>\n</ul>\n<p>###数据库主从同步：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主：servera <span class=\"number\">172.25</span><span class=\"number\">.30</span><span class=\"number\">.10</span>     </span><br><span class=\"line\">从：serverb <span class=\"number\">172.25</span><span class=\"number\">.30</span><span class=\"number\">.11</span></span><br></pre></td></tr></table></figure>\n\n<p>数据库的主从同步（AB复制），要保证数据的一致性，首先将主上的数据库备份出来，在从机上恢复一下保证基础的数据相同。从上述过程中我们可以得知slave是通过获取master的二进制日志来重演来达到数据同步的，因此master需要开启二进制日志，slave来获取二进制日志时使用什么账户，账号具有什么权限需要在master端定义，salve需要知道谁是master，用什么账户、同步哪个二进制文件、从二进制文件的哪个position开始同步。另外还需要设置下主从的server id。</p>\n<p>由上推导出操作步骤</p>\n<ol>\n<li><p>master/slave先设置server-id，master在开启二进制日志功能log-bin</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[root@localhost mysql]</span><span class=\"comment\"># cat /etc/my.cnf</span></span><br><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span>=<span class=\"number\">1</span>            server-id数字任选，但不可重复</span><br><span class=\"line\"><span class=\"attr\">datadir</span>=/var/lib/mysql</span><br><span class=\"line\"><span class=\"attr\">log-bin</span>=/var/log/mysql/binlog          slave不需要开启此功能</span><br><span class=\"line\"><span class=\"attr\">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class=\"line\"><span class=\"attr\">user</span>=mysql</span><br><span class=\"line\"><span class=\"attr\">log-slow-queries</span>=/var/log/mysql/slowlog</span><br><span class=\"line\"><span class=\"attr\">symbolic-links</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"section\">[mysqld_safe]</span></span><br><span class=\"line\"><span class=\"attr\">log-error</span>=/var/log/mysqld.log</span><br><span class=\"line\"><span class=\"attr\">pid-file</span>=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>master创建同步用户，并授权</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;grant   replication  slave on *.*  to xiemx@‘172.25.30.%’ identified by '123123';flush privileges;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>slave端指定master信息</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;change <span class=\"keyword\">master</span> <span class=\"title\">to</span> <span class=\"attr\">master_host=</span>'<span class=\"number\">172.25</span>.<span class=\"number\">30.10</span>',<span class=\"attr\">master_user=</span>'xiemx',<span class=\"attr\">master_password=</span>'<span class=\"number\">123123</span>',<span class=\"attr\">master_log_file=</span><span class=\"string\">\"binlog.000003\"</span>，<span class=\"attr\">master_log_pos=</span><span class=\"number\">245</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;<span class=\"literal\">slave</span> <span class=\"literal\">start</span>；</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看salve状态信息；</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show slave status \\G;           \\G表示将行和列翻转过来显示</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">Master_Host: 172.25.30.11</span><br><span class=\"line\">Master_User: xiemx</span><br><span class=\"line\">Master_Port: 4331</span><br><span class=\"line\">Connect_Retry: 60</span><br><span class=\"line\">Master_Log_File: binlog.000003</span><br><span class=\"line\">Read_Master_Log_Pos: 245</span><br><span class=\"line\">Relay_Log_File: mysqld-relay-bin.000001           中继日志</span><br><span class=\"line\">Relay_Log_Pos: 245</span><br><span class=\"line\">Slave_IO_Running: Yes               slave的io是否正常运行</span><br><span class=\"line\">Slave_SQL_Running: Yes              slave的sql是否正常运行，需要注意两个都为yes也不一定正常。但有一个no肯定不正常。我们需要在测试下读写。</span><br><span class=\"line\">Replicate_Do_DB:</span><br><span class=\"line\">Replicate_Ignore_DB: mysql</span><br><span class=\"line\">Replicate_Do_Table:</span><br><span class=\"line\">Replicate_Ignore_Table:</span><br><span class=\"line\">Replicate_Wild_Do_Table: photo.%</span><br><span class=\"line\">Replicate_Wild_Ignore_Table: mysql.%</span><br><span class=\"line\">Last_Errno: 0</span><br><span class=\"line\">Last_Error:</span><br><span class=\"line\">Skip_Counter: 0</span><br><span class=\"line\">Exec_Master_Log_Pos: 13456620</span><br><span class=\"line\">Relay_Log_Space: 36764898503</span><br><span class=\"line\">Until_Condition: None</span><br><span class=\"line\">Until_Log_File:</span><br><span class=\"line\">Until_Log_Pos: 0</span><br><span class=\"line\">Master_SSL_Allowed: No</span><br><span class=\"line\">Master_SSL_CA_File:</span><br><span class=\"line\">Master_SSL_CA_Path:</span><br><span class=\"line\">Master_SSL_Cert:</span><br><span class=\"line\">Master_SSL_Cipher:</span><br><span class=\"line\">Master_SSL_Key:</span><br><span class=\"line\">Seconds_Behind_Master: 249904</span><br><span class=\"line\">××××××××××××××××××××××××××××××××××××××××××××××××××××××××××</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试主从是否同步</p>\n</li>\n</ol>\n<p>由于slave是从master获取二进制日志来同步数据的，因此在slave上不应该有任何非查询类的sql语句执行，如果slave执行了sql语句操作了某个数据，当master操作这个数据时，salve通过二进制日志重演去操作时发生报错，会导致主从断开。如果主从断开我们就需要重新change master来建立主从。因此切记在单向主从同步的环境中，不可操作slave去执行非查询类操作。</p>\n<p>我们在master上创建一个xiemx数据库，查看下slave是否会自动创建出来。</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create database  xiemx；show databases;</span><br><span class=\"line\"><span class=\"code\">+--------------------+</span></span><br><span class=\"line\">| Database           |</span><br><span class=\"line\"><span class=\"code\">+--------------------+</span></span><br><span class=\"line\">| information<span class=\"emphasis\">_schema |</span></span><br><span class=\"line\"><span class=\"emphasis\">| mysql              |</span></span><br><span class=\"line\"><span class=\"emphasis\">| test               |</span></span><br><span class=\"line\"><span class=\"emphasis\">| xiemx              |</span></span><br><span class=\"line\"><span class=\"emphasis\">+--------------------+</span></span><br><span class=\"line\"><span class=\"emphasis\">4 rows in set (0.00 sec)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果如果在slave上show databases；结果和上面相同的则说明主从同步设置成功。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Mysql复制（replication）是一个异步的复制，从一个Mysql 实例（Master）复制到另一个Mysql 实例（Slave）。实现整个主从复制，需要由Master服务器上的IO进程，和Slave服务器上的Sql进程和IO进程共从完成。要实现主从复制，首先必须打开Master端的binary log（bin-log）功能，因为整个 MySQL 复制过程实际上就是Slave从Master端获取相应的二进制日志，然后再在自己slave端完全顺序的执行日志中所记录的各种操作。 （二进制日志几乎记录了除select以外的所有针对数据库的sql操作语句）主从同步也称之为AB复制。</p>\n<p>基本过程：</p>\n<ul>\n<li>Slave端的IO进程连接上Master，向Master请求指定日志文件的指定position后的日志内容；</li>\n<li>Master接收到来自Slave的IO进程的请求后，负责复制的IO进程根据Slave的请求信息，读取相应日志内容，返回给Slave的IO进程。并将本次请求读取的bin-log文件名及位置一起返回给Slave端。</li>\n<li>Slave的IO进程接收到信息后，将接收到的日志内容依次添加到Slave端的relay-log文件的最末端，并将读取到的Master端的bin-log的文件名和位置记录到master-info文件中，以便在下一次读取的时候能够清楚的告诉Master“我需要从某个bin-log的哪个位置开始往后的日志内容，请发给我”。</li>\n<li>Slave的Sql进程检测到relay-log中新增加了内容后，会解析relay-log的内容成为在Master端真实执行时候的那些可执行的内容，并在自身执行。</li>\n</ul>\n<p>###数据库主从同步：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主：servera <span class=\"number\">172.25</span><span class=\"number\">.30</span><span class=\"number\">.10</span>     </span><br><span class=\"line\">从：serverb <span class=\"number\">172.25</span><span class=\"number\">.30</span><span class=\"number\">.11</span></span><br></pre></td></tr></table></figure>\n\n<p>数据库的主从同步（AB复制），要保证数据的一致性，首先将主上的数据库备份出来，在从机上恢复一下保证基础的数据相同。从上述过程中我们可以得知slave是通过获取master的二进制日志来重演来达到数据同步的，因此master需要开启二进制日志，slave来获取二进制日志时使用什么账户，账号具有什么权限需要在master端定义，salve需要知道谁是master，用什么账户、同步哪个二进制文件、从二进制文件的哪个position开始同步。另外还需要设置下主从的server id。</p>\n<p>由上推导出操作步骤</p>\n<ol>\n<li><p>master/slave先设置server-id，master在开启二进制日志功能log-bin</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[root@localhost mysql]</span><span class=\"comment\"># cat /etc/my.cnf</span></span><br><span class=\"line\"><span class=\"section\">[mysqld]</span></span><br><span class=\"line\"><span class=\"attr\">server-id</span>=<span class=\"number\">1</span>            server-id数字任选，但不可重复</span><br><span class=\"line\"><span class=\"attr\">datadir</span>=/var/lib/mysql</span><br><span class=\"line\"><span class=\"attr\">log-bin</span>=/var/log/mysql/binlog          slave不需要开启此功能</span><br><span class=\"line\"><span class=\"attr\">socket</span>=/var/lib/mysql/mysql.sock</span><br><span class=\"line\"><span class=\"attr\">user</span>=mysql</span><br><span class=\"line\"><span class=\"attr\">log-slow-queries</span>=/var/log/mysql/slowlog</span><br><span class=\"line\"><span class=\"attr\">symbolic-links</span>=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"section\">[mysqld_safe]</span></span><br><span class=\"line\"><span class=\"attr\">log-error</span>=/var/log/mysqld.log</span><br><span class=\"line\"><span class=\"attr\">pid-file</span>=/var/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>master创建同步用户，并授权</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;grant   replication  slave on *.*  to xiemx@‘172.25.30.%’ identified by '123123';flush privileges;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>slave端指定master信息</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;change <span class=\"keyword\">master</span> <span class=\"title\">to</span> <span class=\"attr\">master_host=</span>'<span class=\"number\">172.25</span>.<span class=\"number\">30.10</span>',<span class=\"attr\">master_user=</span>'xiemx',<span class=\"attr\">master_password=</span>'<span class=\"number\">123123</span>',<span class=\"attr\">master_log_file=</span><span class=\"string\">\"binlog.000003\"</span>，<span class=\"attr\">master_log_pos=</span><span class=\"number\">245</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt;<span class=\"literal\">slave</span> <span class=\"literal\">start</span>；</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看salve状态信息；</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show slave status \\G;           \\G表示将行和列翻转过来显示</span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">Master_Host: 172.25.30.11</span><br><span class=\"line\">Master_User: xiemx</span><br><span class=\"line\">Master_Port: 4331</span><br><span class=\"line\">Connect_Retry: 60</span><br><span class=\"line\">Master_Log_File: binlog.000003</span><br><span class=\"line\">Read_Master_Log_Pos: 245</span><br><span class=\"line\">Relay_Log_File: mysqld-relay-bin.000001           中继日志</span><br><span class=\"line\">Relay_Log_Pos: 245</span><br><span class=\"line\">Slave_IO_Running: Yes               slave的io是否正常运行</span><br><span class=\"line\">Slave_SQL_Running: Yes              slave的sql是否正常运行，需要注意两个都为yes也不一定正常。但有一个no肯定不正常。我们需要在测试下读写。</span><br><span class=\"line\">Replicate_Do_DB:</span><br><span class=\"line\">Replicate_Ignore_DB: mysql</span><br><span class=\"line\">Replicate_Do_Table:</span><br><span class=\"line\">Replicate_Ignore_Table:</span><br><span class=\"line\">Replicate_Wild_Do_Table: photo.%</span><br><span class=\"line\">Replicate_Wild_Ignore_Table: mysql.%</span><br><span class=\"line\">Last_Errno: 0</span><br><span class=\"line\">Last_Error:</span><br><span class=\"line\">Skip_Counter: 0</span><br><span class=\"line\">Exec_Master_Log_Pos: 13456620</span><br><span class=\"line\">Relay_Log_Space: 36764898503</span><br><span class=\"line\">Until_Condition: None</span><br><span class=\"line\">Until_Log_File:</span><br><span class=\"line\">Until_Log_Pos: 0</span><br><span class=\"line\">Master_SSL_Allowed: No</span><br><span class=\"line\">Master_SSL_CA_File:</span><br><span class=\"line\">Master_SSL_CA_Path:</span><br><span class=\"line\">Master_SSL_Cert:</span><br><span class=\"line\">Master_SSL_Cipher:</span><br><span class=\"line\">Master_SSL_Key:</span><br><span class=\"line\">Seconds_Behind_Master: 249904</span><br><span class=\"line\">××××××××××××××××××××××××××××××××××××××××××××××××××××××××××</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试主从是否同步</p>\n</li>\n</ol>\n<p>由于slave是从master获取二进制日志来同步数据的，因此在slave上不应该有任何非查询类的sql语句执行，如果slave执行了sql语句操作了某个数据，当master操作这个数据时，salve通过二进制日志重演去操作时发生报错，会导致主从断开。如果主从断开我们就需要重新change master来建立主从。因此切记在单向主从同步的环境中，不可操作slave去执行非查询类操作。</p>\n<p>我们在master上创建一个xiemx数据库，查看下slave是否会自动创建出来。</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create database  xiemx；show databases;</span><br><span class=\"line\"><span class=\"code\">+--------------------+</span></span><br><span class=\"line\">| Database           |</span><br><span class=\"line\"><span class=\"code\">+--------------------+</span></span><br><span class=\"line\">| information<span class=\"emphasis\">_schema |</span></span><br><span class=\"line\"><span class=\"emphasis\">| mysql              |</span></span><br><span class=\"line\"><span class=\"emphasis\">| test               |</span></span><br><span class=\"line\"><span class=\"emphasis\">| xiemx              |</span></span><br><span class=\"line\"><span class=\"emphasis\">+--------------------+</span></span><br><span class=\"line\"><span class=\"emphasis\">4 rows in set (0.00 sec)</span></span><br></pre></td></tr></table></figure>\n\n<p>如果如果在slave上show databases；结果和上面相同的则说明主从同步设置成功。</p>\n"},{"layout":"post","title":"Mysql数据库代理amoeba","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T21:02:36.000Z","_content":"基本环境：\n```\nA（172.25.16.10）：客户端    \nB（172.25.16.11）：主数据库       \nC（172.25.16.12）：从数据库     \nD（172.25.16.13）：从数据库\nJ（172.25.16.19）：代理数据库          \n```\n\n基于amoeba的读写分离\n\n1. 在server j 安装JDK\n\n2. 新建目录/usr/local/amoeba\n```shell\nmkdir /usr/local/amoeba\n```\n3. 把压缩包解压到该目录/usrl/local/amoeba\n\n4. 在conf目录下有amoeba的配置文件\n  需要修改的两个：`amoeba.xml` 和 `dbServers.xml`\n### amoeba.xml(3个地方要改):\n#### 监听的端口号：\n```\n<proxy>\n<!-- service class must implements com.meidusa.amoeba.service.Service -->\n  <service name=\"Amoeba for Mysql\" class=\"com.meidusa.amoeba.net.ServerableConnectionManager\">\n<!-- port -->\n<property name=\"port\">3306</property>\n```\n#### 客户端访问时用的用户名\n```\n<property name=\"authenticator\">\n\n  <bean class=\"com.meidusa.amoeba.mysql.server.MysqlClientAuthenticator\">\n  <property name=\"user\">amoeba</property>\n  <property name=\"password\">amoeba</property>\n  <property name=\"filter\">\n    <bean class=\"com.meidusa.amoeba.server.IPAccessController\">\n      <property name=\"ipFile\">${amoeba.home}/conf/access_list.conf</property>\n    </bean>\n  </property>\n  </bean>\n</property>\n```\n#### read/write pool\n```\n<property name=\"sqlFunctionFile\">${amoeba.home}/conf/functionMap.xml</property>\n<property name=\"LRUMapSize\">1500</property>\n     <property name=\"defaultPool\">serverb#默认访问的数据库#</property>\n            <property name=\"writePool\">serverb#指定可写池#</property>\n            <property name=\"readPool\">readgroup1#指定只读池#</property>\n<property name=\"needParse\">true</property>\n```\n\n### dbServers.xml文件：\n\n#### 修改端口号，用户名，密码。\n```\n<dbServer name=\"abstractServer\" abstractive=\"true\">\n<factoryConfig class=\"com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory\">\n  <property name=\"manager\">${defaultManager}</property>\n  <property name=\"sendBufferSize\">64</property>\n  <property name=\"receiveBufferSize\">128</property>\n  <!-- mysql port -->\n  <property name=\"port\">3306</property>\n  <!-- mysql schema -->\n  <property name=\"schema\">test</property>\n  <!-- mysql user -->\n  <property name=\"user\">dbproxy</property>\n  <!--  mysql password  -->\n  <property name=\"password\">xiemx</property>\n</factoryConfig>\n```\n \n\n#### 指定可以代理的数据库\n```\n<dbServer name=\"serverb\"  parent=\"abstractServer\">\n  <factoryConfig>\n    <!-- mysql ip -->\n    <property name=\"ipAddress\">172.25.16.11</property>\n  </factoryConfig>\n</dbServer>\n\n<dbServer name=\"serverc\"  parent=\"abstractServer\">\n  <factoryConfig>\n    <!-- mysql ip -->\n    <property name=\"ipAddress\">172.25.16.12</property>\n  </factoryConfig>\n</dbServer>\n\n<dbServer name=\"serverd\"  parent=\"abstractServer\">\n  <factoryConfig>\n    <!-- mysql ip -->\n    <property name=\"ipAddress\">172.25.16.13</property>\n  </factoryConfig>\n</dbServer>\n```\n \n\n#### 指定只读组\n```\n<dbServer name=\"readgroup1\" virtual=\"true\">\n  <poolConfig class=\"com.meidusa.amoeba.server.MultipleServerPool\">\n    <!-- Load balancing strategy: 1=ROUNDROBIN , 2=WEIGHTBASED , 3=HA-->\n    <property name=\"loadbalance\">1</property>\n    <!-- Separated by commas,such as: server1,server2,server1 -->\n    <property name=\"poolNames\">serverc,serverd</property>\n  </poolConfig>\n</dbServer>\n```\n \n\n5. 启动脚本在/bin下\n启动时会报错，需要修改文件即可：`DEFAULT_OPTS=\"-server -Xms256m -Xmx256m -Xss228k\"`(最后一个参数改为228即可)\n```shell\n./amoeba start\n```\n6. 在BCD上授权允许J访问数据库\n```sql\ngrant all on db1.* to dbproxy@'172.25.16.19' identified by 'xiemx';\n```","source":"_posts/mysql-proxy-amoeba.md","raw":"---\nlayout: post\ntitle: Mysql数据库代理amoeba\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 05:02:36\ntags: [ mysql, amoeba, mysql-proxy]\ncategories:\n    - mysql\n---\n基本环境：\n```\nA（172.25.16.10）：客户端    \nB（172.25.16.11）：主数据库       \nC（172.25.16.12）：从数据库     \nD（172.25.16.13）：从数据库\nJ（172.25.16.19）：代理数据库          \n```\n\n基于amoeba的读写分离\n\n1. 在server j 安装JDK\n\n2. 新建目录/usr/local/amoeba\n```shell\nmkdir /usr/local/amoeba\n```\n3. 把压缩包解压到该目录/usrl/local/amoeba\n\n4. 在conf目录下有amoeba的配置文件\n  需要修改的两个：`amoeba.xml` 和 `dbServers.xml`\n### amoeba.xml(3个地方要改):\n#### 监听的端口号：\n```\n<proxy>\n<!-- service class must implements com.meidusa.amoeba.service.Service -->\n  <service name=\"Amoeba for Mysql\" class=\"com.meidusa.amoeba.net.ServerableConnectionManager\">\n<!-- port -->\n<property name=\"port\">3306</property>\n```\n#### 客户端访问时用的用户名\n```\n<property name=\"authenticator\">\n\n  <bean class=\"com.meidusa.amoeba.mysql.server.MysqlClientAuthenticator\">\n  <property name=\"user\">amoeba</property>\n  <property name=\"password\">amoeba</property>\n  <property name=\"filter\">\n    <bean class=\"com.meidusa.amoeba.server.IPAccessController\">\n      <property name=\"ipFile\">${amoeba.home}/conf/access_list.conf</property>\n    </bean>\n  </property>\n  </bean>\n</property>\n```\n#### read/write pool\n```\n<property name=\"sqlFunctionFile\">${amoeba.home}/conf/functionMap.xml</property>\n<property name=\"LRUMapSize\">1500</property>\n     <property name=\"defaultPool\">serverb#默认访问的数据库#</property>\n            <property name=\"writePool\">serverb#指定可写池#</property>\n            <property name=\"readPool\">readgroup1#指定只读池#</property>\n<property name=\"needParse\">true</property>\n```\n\n### dbServers.xml文件：\n\n#### 修改端口号，用户名，密码。\n```\n<dbServer name=\"abstractServer\" abstractive=\"true\">\n<factoryConfig class=\"com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory\">\n  <property name=\"manager\">${defaultManager}</property>\n  <property name=\"sendBufferSize\">64</property>\n  <property name=\"receiveBufferSize\">128</property>\n  <!-- mysql port -->\n  <property name=\"port\">3306</property>\n  <!-- mysql schema -->\n  <property name=\"schema\">test</property>\n  <!-- mysql user -->\n  <property name=\"user\">dbproxy</property>\n  <!--  mysql password  -->\n  <property name=\"password\">xiemx</property>\n</factoryConfig>\n```\n \n\n#### 指定可以代理的数据库\n```\n<dbServer name=\"serverb\"  parent=\"abstractServer\">\n  <factoryConfig>\n    <!-- mysql ip -->\n    <property name=\"ipAddress\">172.25.16.11</property>\n  </factoryConfig>\n</dbServer>\n\n<dbServer name=\"serverc\"  parent=\"abstractServer\">\n  <factoryConfig>\n    <!-- mysql ip -->\n    <property name=\"ipAddress\">172.25.16.12</property>\n  </factoryConfig>\n</dbServer>\n\n<dbServer name=\"serverd\"  parent=\"abstractServer\">\n  <factoryConfig>\n    <!-- mysql ip -->\n    <property name=\"ipAddress\">172.25.16.13</property>\n  </factoryConfig>\n</dbServer>\n```\n \n\n#### 指定只读组\n```\n<dbServer name=\"readgroup1\" virtual=\"true\">\n  <poolConfig class=\"com.meidusa.amoeba.server.MultipleServerPool\">\n    <!-- Load balancing strategy: 1=ROUNDROBIN , 2=WEIGHTBASED , 3=HA-->\n    <property name=\"loadbalance\">1</property>\n    <!-- Separated by commas,such as: server1,server2,server1 -->\n    <property name=\"poolNames\">serverc,serverd</property>\n  </poolConfig>\n</dbServer>\n```\n \n\n5. 启动脚本在/bin下\n启动时会报错，需要修改文件即可：`DEFAULT_OPTS=\"-server -Xms256m -Xmx256m -Xss228k\"`(最后一个参数改为228即可)\n```shell\n./amoeba start\n```\n6. 在BCD上授权允许J访问数据库\n```sql\ngrant all on db1.* to dbproxy@'172.25.16.19' identified by 'xiemx';\n```","slug":"mysql-proxy-amoeba","updated":"2019-10-22T07:13:45.997Z","photos":[],"link":"","_id":"ck42dyie80058u9urk08qpear","content":"<p>基本环境：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.10</span>）：客户端    </span><br><span class=\"line\">B（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.11</span>）：主数据库       </span><br><span class=\"line\">C（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.12</span>）：从数据库     </span><br><span class=\"line\">D（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.13</span>）：从数据库</span><br><span class=\"line\">J（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.19</span>）：代理数据库</span><br></pre></td></tr></table></figure>\n\n<p>基于amoeba的读写分离</p>\n<ol>\n<li><p>在server j 安装JDK</p>\n</li>\n<li><p>新建目录/usr/local/amoeba</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/local/amoeba</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把压缩包解压到该目录/usrl/local/amoeba</p>\n</li>\n<li><p>在conf目录下有amoeba的配置文件<br>需要修改的两个：<code>amoeba.xml</code> 和 <code>dbServers.xml</code></p>\n<h3 id=\"amoeba-xml-3个地方要改\"><a href=\"#amoeba-xml-3个地方要改\" class=\"headerlink\" title=\"amoeba.xml(3个地方要改):\"></a>amoeba.xml(3个地方要改):</h3><h4 id=\"监听的端口号：\"><a href=\"#监听的端口号：\" class=\"headerlink\" title=\"监听的端口号：\"></a>监听的端口号：</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;proxy&gt;</span><br><span class=\"line\">&lt;!--<span class=\"built_in\"> service </span>class must implements com.meidusa.amoeba.service.Service --&gt;</span><br><span class=\"line\">  &lt;service <span class=\"attribute\">name</span>=<span class=\"string\">\"Amoeba for Mysql\"</span> <span class=\"attribute\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.net.ServerableConnectionManager\"</span>&gt;</span><br><span class=\"line\">&lt;!--<span class=\"built_in\"> port </span>--&gt;</span><br><span class=\"line\">&lt;property <span class=\"attribute\">name</span>=<span class=\"string\">\"port\"</span>&gt;3306&lt;/property&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h4 id=\"客户端访问时用的用户名\"><a href=\"#客户端访问时用的用户名\" class=\"headerlink\" title=\"客户端访问时用的用户名\"></a>客户端访问时用的用户名</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"authenticator\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;bean <span class=\"built_in\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.mysql.server.MysqlClientAuthenticator\"</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"user\"</span>&gt;amoeba&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"password\"</span>&gt;amoeba&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"filter\"</span>&gt;</span><br><span class=\"line\">    &lt;bean <span class=\"built_in\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.server.IPAccessController\"</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"ipFile\"</span>&gt;$&#123;amoeba.home&#125;/conf/access_list.conf&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">    &lt;/bean&gt;</span><br><span class=\"line\">  &lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">  &lt;/bean&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">property</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"read-write-pool\"><a href=\"#read-write-pool\" class=\"headerlink\" title=\"read/write pool\"></a>read/write pool</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"sqlFunctionFile\"</span>&gt;$&#123;amoeba.home&#125;/conf/functionMap.xml&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"LRUMapSize\"</span>&gt;<span class=\"number\">1500</span>&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">     &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"defaultPool\"</span>&gt;serverb<span class=\"comment\">#默认访问的数据库#&lt;/property&gt;</span></span><br><span class=\"line\">            &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"writePool\"</span>&gt;serverb<span class=\"comment\">#指定可写池#&lt;/property&gt;</span></span><br><span class=\"line\">            &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"readPool\"</span>&gt;readgroup1<span class=\"comment\">#指定只读池#&lt;/property&gt;</span></span><br><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"needParse\"</span>&gt;<span class=\"literal\">true</span>&lt;/<span class=\"keyword\">property</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dbServers-xml文件：\"><a href=\"#dbServers-xml文件：\" class=\"headerlink\" title=\"dbServers.xml文件：\"></a>dbServers.xml文件：</h3><h4 id=\"修改端口号，用户名，密码。\"><a href=\"#修改端口号，用户名，密码。\" class=\"headerlink\" title=\"修改端口号，用户名，密码。\"></a>修改端口号，用户名，密码。</h4><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"abstractServer\"</span> <span class=\"attr\">abstractive</span>=<span class=\"string\">\"true\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"manager\"</span>&gt;</span>$</span><span class=\"template-variable\">&#123;defaultManager&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sendBufferSize\"</span>&gt;</span>64<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"receiveBufferSize\"</span>&gt;</span>128<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!-- mysql port --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"port\"</span>&gt;</span>3306<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!-- mysql schema --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"schema\"</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!-- mysql user --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span>&gt;</span>dbproxy<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!--  mysql password  --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span>&gt;</span>xiemx<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"指定可以代理的数据库\"><a href=\"#指定可以代理的数据库\" class=\"headerlink\" title=\"指定可以代理的数据库\"></a>指定可以代理的数据库</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"serverb\"</span>  <span class=\"attr\">parent</span>=<span class=\"string\">\"abstractServer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mysql ip --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ipAddress\"</span>&gt;</span>172.25.16.11<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"serverc\"</span>  <span class=\"attr\">parent</span>=<span class=\"string\">\"abstractServer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mysql ip --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ipAddress\"</span>&gt;</span>172.25.16.12<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"serverd\"</span>  <span class=\"attr\">parent</span>=<span class=\"string\">\"abstractServer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mysql ip --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ipAddress\"</span>&gt;</span>172.25.16.13<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"指定只读组\"><a href=\"#指定只读组\" class=\"headerlink\" title=\"指定只读组\"></a>指定只读组</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"readgroup1\"</span> <span class=\"attr\">virtual</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">poolConfig</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.server.MultipleServerPool\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Load balancing strategy: 1=ROUNDROBIN , 2=WEIGHTBASED , 3=HA--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"loadbalance\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Separated by commas,such as: server1,server2,server1 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolNames\"</span>&gt;</span>serverc,serverd<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">poolConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"5\">\n<li><p>启动脚本在/bin下<br>启动时会报错，需要修改文件即可：<code>DEFAULT_OPTS=&quot;-server -Xms256m -Xmx256m -Xss228k&quot;</code>(最后一个参数改为228即可)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./amoeba start</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在BCD上授权允许J访问数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> <span class=\"keyword\">on</span> db1.* <span class=\"keyword\">to</span> dbproxy@<span class=\"string\">'172.25.16.19'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'xiemx'</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>基本环境：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.10</span>）：客户端    </span><br><span class=\"line\">B（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.11</span>）：主数据库       </span><br><span class=\"line\">C（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.12</span>）：从数据库     </span><br><span class=\"line\">D（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.13</span>）：从数据库</span><br><span class=\"line\">J（<span class=\"number\">172.25</span><span class=\"number\">.16</span><span class=\"number\">.19</span>）：代理数据库</span><br></pre></td></tr></table></figure>\n\n<p>基于amoeba的读写分离</p>\n<ol>\n<li><p>在server j 安装JDK</p>\n</li>\n<li><p>新建目录/usr/local/amoeba</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/local/amoeba</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把压缩包解压到该目录/usrl/local/amoeba</p>\n</li>\n<li><p>在conf目录下有amoeba的配置文件<br>需要修改的两个：<code>amoeba.xml</code> 和 <code>dbServers.xml</code></p>\n<h3 id=\"amoeba-xml-3个地方要改\"><a href=\"#amoeba-xml-3个地方要改\" class=\"headerlink\" title=\"amoeba.xml(3个地方要改):\"></a>amoeba.xml(3个地方要改):</h3><h4 id=\"监听的端口号：\"><a href=\"#监听的端口号：\" class=\"headerlink\" title=\"监听的端口号：\"></a>监听的端口号：</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;proxy&gt;</span><br><span class=\"line\">&lt;!--<span class=\"built_in\"> service </span>class must implements com.meidusa.amoeba.service.Service --&gt;</span><br><span class=\"line\">  &lt;service <span class=\"attribute\">name</span>=<span class=\"string\">\"Amoeba for Mysql\"</span> <span class=\"attribute\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.net.ServerableConnectionManager\"</span>&gt;</span><br><span class=\"line\">&lt;!--<span class=\"built_in\"> port </span>--&gt;</span><br><span class=\"line\">&lt;property <span class=\"attribute\">name</span>=<span class=\"string\">\"port\"</span>&gt;3306&lt;/property&gt;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h4 id=\"客户端访问时用的用户名\"><a href=\"#客户端访问时用的用户名\" class=\"headerlink\" title=\"客户端访问时用的用户名\"></a>客户端访问时用的用户名</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"authenticator\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;bean <span class=\"built_in\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.mysql.server.MysqlClientAuthenticator\"</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"user\"</span>&gt;amoeba&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"password\"</span>&gt;amoeba&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"filter\"</span>&gt;</span><br><span class=\"line\">    &lt;bean <span class=\"built_in\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.server.IPAccessController\"</span>&gt;</span><br><span class=\"line\">      &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"ipFile\"</span>&gt;$&#123;amoeba.home&#125;/conf/access_list.conf&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">    &lt;/bean&gt;</span><br><span class=\"line\">  &lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">  &lt;/bean&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">property</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"read-write-pool\"><a href=\"#read-write-pool\" class=\"headerlink\" title=\"read/write pool\"></a>read/write pool</h4><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"sqlFunctionFile\"</span>&gt;$&#123;amoeba.home&#125;/conf/functionMap.xml&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"LRUMapSize\"</span>&gt;<span class=\"number\">1500</span>&lt;/<span class=\"keyword\">property</span>&gt;</span><br><span class=\"line\">     &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"defaultPool\"</span>&gt;serverb<span class=\"comment\">#默认访问的数据库#&lt;/property&gt;</span></span><br><span class=\"line\">            &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"writePool\"</span>&gt;serverb<span class=\"comment\">#指定可写池#&lt;/property&gt;</span></span><br><span class=\"line\">            &lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"readPool\"</span>&gt;readgroup1<span class=\"comment\">#指定只读池#&lt;/property&gt;</span></span><br><span class=\"line\">&lt;<span class=\"keyword\">property</span> <span class=\"built_in\">name</span>=<span class=\"string\">\"needParse\"</span>&gt;<span class=\"literal\">true</span>&lt;/<span class=\"keyword\">property</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"dbServers-xml文件：\"><a href=\"#dbServers-xml文件：\" class=\"headerlink\" title=\"dbServers.xml文件：\"></a>dbServers.xml文件：</h3><h4 id=\"修改端口号，用户名，密码。\"><a href=\"#修改端口号，用户名，密码。\" class=\"headerlink\" title=\"修改端口号，用户名，密码。\"></a>修改端口号，用户名，密码。</h4><figure class=\"highlight dust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"abstractServer\"</span> <span class=\"attr\">abstractive</span>=<span class=\"string\">\"true\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.mysql.net.MysqlServerConnectionFactory\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"manager\"</span>&gt;</span>$</span><span class=\"template-variable\">&#123;defaultManager&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sendBufferSize\"</span>&gt;</span>64<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"receiveBufferSize\"</span>&gt;</span>128<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!-- mysql port --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"port\"</span>&gt;</span>3306<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!-- mysql schema --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"schema\"</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!-- mysql user --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span>&gt;</span>dbproxy<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"comment\">&lt;!--  mysql password  --&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span>&gt;</span>xiemx<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"指定可以代理的数据库\"><a href=\"#指定可以代理的数据库\" class=\"headerlink\" title=\"指定可以代理的数据库\"></a>指定可以代理的数据库</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"serverb\"</span>  <span class=\"attr\">parent</span>=<span class=\"string\">\"abstractServer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mysql ip --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ipAddress\"</span>&gt;</span>172.25.16.11<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"serverc\"</span>  <span class=\"attr\">parent</span>=<span class=\"string\">\"abstractServer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mysql ip --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ipAddress\"</span>&gt;</span>172.25.16.12<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"serverd\"</span>  <span class=\"attr\">parent</span>=<span class=\"string\">\"abstractServer\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mysql ip --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ipAddress\"</span>&gt;</span>172.25.16.13<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">factoryConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"指定只读组\"><a href=\"#指定只读组\" class=\"headerlink\" title=\"指定只读组\"></a>指定只读组</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dbServer</span> <span class=\"attr\">name</span>=<span class=\"string\">\"readgroup1\"</span> <span class=\"attr\">virtual</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">poolConfig</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.meidusa.amoeba.server.MultipleServerPool\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Load balancing strategy: 1=ROUNDROBIN , 2=WEIGHTBASED , 3=HA--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"loadbalance\"</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Separated by commas,such as: server1,server2,server1 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"poolNames\"</span>&gt;</span>serverc,serverd<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">poolConfig</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dbServer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"5\">\n<li><p>启动脚本在/bin下<br>启动时会报错，需要修改文件即可：<code>DEFAULT_OPTS=&quot;-server -Xms256m -Xmx256m -Xss228k&quot;</code>(最后一个参数改为228即可)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./amoeba start</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在BCD上授权允许J访问数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> <span class=\"keyword\">on</span> db1.* <span class=\"keyword\">to</span> dbproxy@<span class=\"string\">'172.25.16.19'</span> <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'xiemx'</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"layout":"post","title":"MySQL数据库mysqlcheck的使用方法详解","published":1,"author":"xiemx","comments":1,"date":"2015-08-23T17:08:44.000Z","_content":"mysqlcheck，是mysql自带的可以检查和修复`MyISAM`表，并且它还可以优化和分析表，mysqlcheck的功能类似myisamchk，但其工作不同。主要差别是当mysqld服务器在运行时必须使用mysqlcheck，而myisamchk应用于服务器没有运行时。myisamchk修复失败是不可逆的。\n```shell\n1.如果需要检查并修复所有的数据库的数据表\nmysqlcheck -A -o -r -p\nEnter password:\ndatabase1 OK\ndatabase2 OK\n\n2.如果需要修复指定的数据库用\nmysqlcheck -A -o -r database1 -p\ndatabase1 OK\n```","source":"_posts/mysqlcheck.md","raw":"---\nlayout: post\ntitle: MySQL数据库mysqlcheck的使用方法详解\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-08-24 01:08:44\ntags: [ mysql, mysqlcheck, tool ]\ncategories:\n    - mysql\n---\nmysqlcheck，是mysql自带的可以检查和修复`MyISAM`表，并且它还可以优化和分析表，mysqlcheck的功能类似myisamchk，但其工作不同。主要差别是当mysqld服务器在运行时必须使用mysqlcheck，而myisamchk应用于服务器没有运行时。myisamchk修复失败是不可逆的。\n```shell\n1.如果需要检查并修复所有的数据库的数据表\nmysqlcheck -A -o -r -p\nEnter password:\ndatabase1 OK\ndatabase2 OK\n\n2.如果需要修复指定的数据库用\nmysqlcheck -A -o -r database1 -p\ndatabase1 OK\n```","slug":"mysqlcheck","updated":"2019-10-21T09:01:56.752Z","photos":[],"link":"","_id":"ck42dyiea005cu9urx0krepoc","content":"<p>mysqlcheck，是mysql自带的可以检查和修复<code>MyISAM</code>表，并且它还可以优化和分析表，mysqlcheck的功能类似myisamchk，但其工作不同。主要差别是当mysqld服务器在运行时必须使用mysqlcheck，而myisamchk应用于服务器没有运行时。myisamchk修复失败是不可逆的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.如果需要检查并修复所有的数据库的数据表</span><br><span class=\"line\">mysqlcheck -A -o -r -p</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">database1 OK</span><br><span class=\"line\">database2 OK</span><br><span class=\"line\"></span><br><span class=\"line\">2.如果需要修复指定的数据库用</span><br><span class=\"line\">mysqlcheck -A -o -r database1 -p</span><br><span class=\"line\">database1 OK</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>mysqlcheck，是mysql自带的可以检查和修复<code>MyISAM</code>表，并且它还可以优化和分析表，mysqlcheck的功能类似myisamchk，但其工作不同。主要差别是当mysqld服务器在运行时必须使用mysqlcheck，而myisamchk应用于服务器没有运行时。myisamchk修复失败是不可逆的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.如果需要检查并修复所有的数据库的数据表</span><br><span class=\"line\">mysqlcheck -A -o -r -p</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">database1 OK</span><br><span class=\"line\">database2 OK</span><br><span class=\"line\"></span><br><span class=\"line\">2.如果需要修复指定的数据库用</span><br><span class=\"line\">mysqlcheck -A -o -r database1 -p</span><br><span class=\"line\">database1 OK</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Mysqldump error","published":1,"author":"xiemx","comments":1,"date":"2019-05-06T03:05:56.000Z","_content":"### 现象\n```\n[root@FCHK-instance ~]# mysqldump --host rm-xxxxxxxxxxx.mysql.rds.aliyuncs.com -u xxxx -p --databases visa > hk.sql\nEnter password:\nWarning: A partial dump from a server that has GTIDs will by default include the GTIDs of all transactions, even those that changed suppressed parts of the database. If you don't want to restore GTIDs, pass --set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.\nmysqldump: Couldn't execute 'SELECT COLUMN_NAME,                       JSON_EXTRACT(HISTOGRAM, '$.\"number-of-buckets-specified\"')                FROM information_schema.COLUMN_STATISTICS                WHERE SCHEMA_NAME = 'visa' AND TABLE_NAME = 'admin';': Unknown table 'column_statistics' in information_schema (1109\n```\n### 分析\n```\n\n[root@FCHK-instance ~]# mysql --version\nmysql  Ver 8.0.11 for Linux on x86_64 (MySQL Community Server - GPL)\n\n可能是由于mysqldump 8中默认启用（COLUMN_STATISTICS）\n\n官方文档解释\nMysql 8.0 The INFORMATION_SCHEMA COLUMN_STATISTICS Table\nhttps://dev.mysql.com/doc/refman/8.0/en/column-statistics-table.html\n```\n### 解决\n```\n[root@FCHK-instance ~]# mysqldump --host rm-xxxxxxxxxx2.mysql.rds.aliyuncs.com -u xxxx -p --databases visa --column-statistics=0 > hk.sql\nEnter password:\nWarning: A partial dump from a server that has GTIDs will by default include the GTIDs of all transactions, even those that changed suppressed parts of the database. If you don't want to restore GTIDs, pass --set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.\n```","source":"_posts/mysqldump-error.md","raw":"---\nlayout: post\ntitle: Mysqldump error\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-05-06 11:05:56\ntags: [ mysql, debug ,database]\ncategories:\n    - mysql\n# permalink: /2019/05/06/mysqldump-error\n---\n### 现象\n```\n[root@FCHK-instance ~]# mysqldump --host rm-xxxxxxxxxxx.mysql.rds.aliyuncs.com -u xxxx -p --databases visa > hk.sql\nEnter password:\nWarning: A partial dump from a server that has GTIDs will by default include the GTIDs of all transactions, even those that changed suppressed parts of the database. If you don't want to restore GTIDs, pass --set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.\nmysqldump: Couldn't execute 'SELECT COLUMN_NAME,                       JSON_EXTRACT(HISTOGRAM, '$.\"number-of-buckets-specified\"')                FROM information_schema.COLUMN_STATISTICS                WHERE SCHEMA_NAME = 'visa' AND TABLE_NAME = 'admin';': Unknown table 'column_statistics' in information_schema (1109\n```\n### 分析\n```\n\n[root@FCHK-instance ~]# mysql --version\nmysql  Ver 8.0.11 for Linux on x86_64 (MySQL Community Server - GPL)\n\n可能是由于mysqldump 8中默认启用（COLUMN_STATISTICS）\n\n官方文档解释\nMysql 8.0 The INFORMATION_SCHEMA COLUMN_STATISTICS Table\nhttps://dev.mysql.com/doc/refman/8.0/en/column-statistics-table.html\n```\n### 解决\n```\n[root@FCHK-instance ~]# mysqldump --host rm-xxxxxxxxxx2.mysql.rds.aliyuncs.com -u xxxx -p --databases visa --column-statistics=0 > hk.sql\nEnter password:\nWarning: A partial dump from a server that has GTIDs will by default include the GTIDs of all transactions, even those that changed suppressed parts of the database. If you don't want to restore GTIDs, pass --set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.\n```","slug":"mysqldump-error","updated":"2019-10-19T10:22:28.240Z","photos":[],"link":"","_id":"ck42dyiec005gu9urih6b5qe3","content":"<h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><figure class=\"highlight vhdl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@FCHK-instance ~]# mysqldump <span class=\"comment\">--host rm-xxxxxxxxxxx.mysql.rds.aliyuncs.com -u xxxx -p --databases visa &gt; hk.sql</span></span><br><span class=\"line\">Enter password:</span><br><span class=\"line\"><span class=\"literal\">Warning</span>: A partial dump from a server that has GTIDs will by <span class=\"keyword\">default</span> include the GTIDs <span class=\"keyword\">of</span> <span class=\"keyword\">all</span> transactions, even those that changed suppressed parts <span class=\"keyword\">of</span> the database. <span class=\"keyword\">If</span> you don<span class=\"symbol\">'t</span> want <span class=\"keyword\">to</span> restore GTIDs, pass <span class=\"comment\">--set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.</span></span><br><span class=\"line\">mysqldump: Couldn<span class=\"symbol\">'t</span> execute <span class=\"symbol\">'SELECT</span> COLUMN_NAME,                       JSON_EXTRACT(HISTOGRAM, '$.<span class=\"string\">\"number-of-buckets-specified\"</span>')                FROM information_schema.COLUMN_STATISTICS                WHERE SCHEMA_NAME = <span class=\"symbol\">'visa</span>' <span class=\"keyword\">AND</span> TABLE_NAME = <span class=\"symbol\">'admin</span>';': Unknown table <span class=\"symbol\">'column_statistics</span>' <span class=\"keyword\">in</span> information_schema (<span class=\"number\">1109</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[root@FCHK-instance ~]# mysql <span class=\"comment\">--version</span></span><br><span class=\"line\">mysql  Ver <span class=\"number\">8.0</span><span class=\"number\">.11</span> <span class=\"keyword\">for</span> Linux <span class=\"keyword\">on</span> x86_64 (MySQL Community <span class=\"keyword\">Server</span> - GPL)</span><br><span class=\"line\"></span><br><span class=\"line\">可能是由于mysqldump <span class=\"number\">8</span>中默认启用（COLUMN_STATISTICS）</span><br><span class=\"line\"></span><br><span class=\"line\">官方文档解释</span><br><span class=\"line\">Mysql <span class=\"number\">8.0</span> The INFORMATION_SCHEMA COLUMN_STATISTICS <span class=\"keyword\">Table</span></span><br><span class=\"line\">https://dev.mysql.com/doc/refman/<span class=\"number\">8.0</span>/en/<span class=\"keyword\">column</span>-<span class=\"keyword\">statistics</span>-<span class=\"keyword\">table</span>.html</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><figure class=\"highlight vhdl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@FCHK-instance ~]# mysqldump <span class=\"comment\">--host rm-xxxxxxxxxx2.mysql.rds.aliyuncs.com -u xxxx -p --databases visa --column-statistics=0 &gt; hk.sql</span></span><br><span class=\"line\">Enter password:</span><br><span class=\"line\"><span class=\"literal\">Warning</span>: A partial dump from a server that has GTIDs will by <span class=\"keyword\">default</span> include the GTIDs <span class=\"keyword\">of</span> <span class=\"keyword\">all</span> transactions, even those that changed suppressed parts <span class=\"keyword\">of</span> the database. <span class=\"keyword\">If</span> you don<span class=\"symbol\">'t</span> want <span class=\"keyword\">to</span> restore GTIDs, pass <span class=\"comment\">--set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><figure class=\"highlight vhdl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@FCHK-instance ~]# mysqldump <span class=\"comment\">--host rm-xxxxxxxxxxx.mysql.rds.aliyuncs.com -u xxxx -p --databases visa &gt; hk.sql</span></span><br><span class=\"line\">Enter password:</span><br><span class=\"line\"><span class=\"literal\">Warning</span>: A partial dump from a server that has GTIDs will by <span class=\"keyword\">default</span> include the GTIDs <span class=\"keyword\">of</span> <span class=\"keyword\">all</span> transactions, even those that changed suppressed parts <span class=\"keyword\">of</span> the database. <span class=\"keyword\">If</span> you don<span class=\"symbol\">'t</span> want <span class=\"keyword\">to</span> restore GTIDs, pass <span class=\"comment\">--set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.</span></span><br><span class=\"line\">mysqldump: Couldn<span class=\"symbol\">'t</span> execute <span class=\"symbol\">'SELECT</span> COLUMN_NAME,                       JSON_EXTRACT(HISTOGRAM, '$.<span class=\"string\">\"number-of-buckets-specified\"</span>')                FROM information_schema.COLUMN_STATISTICS                WHERE SCHEMA_NAME = <span class=\"symbol\">'visa</span>' <span class=\"keyword\">AND</span> TABLE_NAME = <span class=\"symbol\">'admin</span>';': Unknown table <span class=\"symbol\">'column_statistics</span>' <span class=\"keyword\">in</span> information_schema (<span class=\"number\">1109</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">[root@FCHK-instance ~]# mysql <span class=\"comment\">--version</span></span><br><span class=\"line\">mysql  Ver <span class=\"number\">8.0</span><span class=\"number\">.11</span> <span class=\"keyword\">for</span> Linux <span class=\"keyword\">on</span> x86_64 (MySQL Community <span class=\"keyword\">Server</span> - GPL)</span><br><span class=\"line\"></span><br><span class=\"line\">可能是由于mysqldump <span class=\"number\">8</span>中默认启用（COLUMN_STATISTICS）</span><br><span class=\"line\"></span><br><span class=\"line\">官方文档解释</span><br><span class=\"line\">Mysql <span class=\"number\">8.0</span> The INFORMATION_SCHEMA COLUMN_STATISTICS <span class=\"keyword\">Table</span></span><br><span class=\"line\">https://dev.mysql.com/doc/refman/<span class=\"number\">8.0</span>/en/<span class=\"keyword\">column</span>-<span class=\"keyword\">statistics</span>-<span class=\"keyword\">table</span>.html</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><figure class=\"highlight vhdl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@FCHK-instance ~]# mysqldump <span class=\"comment\">--host rm-xxxxxxxxxx2.mysql.rds.aliyuncs.com -u xxxx -p --databases visa --column-statistics=0 &gt; hk.sql</span></span><br><span class=\"line\">Enter password:</span><br><span class=\"line\"><span class=\"literal\">Warning</span>: A partial dump from a server that has GTIDs will by <span class=\"keyword\">default</span> include the GTIDs <span class=\"keyword\">of</span> <span class=\"keyword\">all</span> transactions, even those that changed suppressed parts <span class=\"keyword\">of</span> the database. <span class=\"keyword\">If</span> you don<span class=\"symbol\">'t</span> want <span class=\"keyword\">to</span> restore GTIDs, pass <span class=\"comment\">--set-gtid-purged=OFF. To make a complete dump, pass --all-databases --triggers --routines --events.</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"nginx防盗链配置","published":1,"author":"xiemx","comments":1,"date":"2017-01-17T18:01:18.000Z","_content":"```\nlocation ~* \\.(gif|jpg|jpeg|png|ico)$ {\n    valid_referers none blocked server_names *.xiemx.com;\n    if ($invalid_referer) {\n        return 444\n    }\n}\n```","source":"_posts/nginx-referer.md","raw":"---\nlayout: post\ntitle: nginx防盗链配置\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-01-18 02:01:18\ntags: [ nginx ]\ncategories:\n    - nginx\n# permalink: '/2017/01/18/nginx-referer'\n---\n```\nlocation ~* \\.(gif|jpg|jpeg|png|ico)$ {\n    valid_referers none blocked server_names *.xiemx.com;\n    if ($invalid_referer) {\n        return 444\n    }\n}\n```","slug":"nginx-referer","updated":"2019-10-19T10:12:29.779Z","photos":[],"link":"","_id":"ck42dyied005ku9ur3216sak8","content":"<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~* \\.(gif|jpg|jpeg|png|ico)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">valid_referers</span> <span class=\"literal\">none</span> <span class=\"literal\">blocked</span> server_names <span class=\"regexp\">*.xiemx.com</span>;</span><br><span class=\"line\">    <span class=\"attribute\">if</span> (<span class=\"variable\">$invalid_referer</span>) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">444</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">location</span> <span class=\"regexp\">~* \\.(gif|jpg|jpeg|png|ico)$</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">valid_referers</span> <span class=\"literal\">none</span> <span class=\"literal\">blocked</span> server_names <span class=\"regexp\">*.xiemx.com</span>;</span><br><span class=\"line\">    <span class=\"attribute\">if</span> (<span class=\"variable\">$invalid_referer</span>) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">return</span> <span class=\"number\">444</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"nginx remote_port为空","published":1,"author":"xiemx","comments":1,"date":"2019-12-12T02:01:04.000Z","_content":"### nginx remote_port为空\n\n#### 现象\n由于网安要求记录用户请求来源端口到日志中，因此为了实现这个需求在log_format中增加了\"ngx_remote_port: $remote_port\"字段(如下)， 但实际日志系统中收录到的日志`ngx_remote_port:\"\"`为空\n```\nlog_format json '{ \"time\": \"$time_iso8601\", '\n                    '\"ngx_true_client_ip\": \"$http_true_client_ip\", '\n                    '\"ngx_x_real_ip\": \"$http_x_real_ip\", '\n                    '\"ngx_cdn_src_ip\": \"$http_cdn_src_ip\", '\n                    '\"ngx_geo_location_ip\": \"$client_ip\", '\n                    '\"ngx_remote_addr\": \"$remote_addr\", '\n                    '\"ngx_remote_port\": \"$remote_port\", '\n                    '\"ngx_x_user_site_proxy\": \"$http_x_user_site_proxy\", '\n                    '\"ngx_x_forwarded_for\": \"$http_x_forwarded_for\", '\n                    '\"ngx_host\": \"$host\", '\n                    '\"ngx_http_user_agent\": \"$http_user_agent\", '\n                    '\"ngx_body_bytes_sent\": \"$body_bytes_sent\", '\n                    '\"ngx_request_time\": \"$request_time\", '\n                    '\"ngx_upstream_response_time\": \"$upstream_response_time\", '\n                    '\"ngx_upstream_connect_time\": \"$upstream_connect_time\", '\n                    '\"ngx_upstream_header_time:\": \"$upstream_header_time\", '\n                    '\"ngx_upstream_addr\": \"$upstream_addr\", '\n                    '\"ngx_upstream_content_length\": \"$sent_http_content_length\", '\n                    '\"ngx_status_code\": \"$status\", '\n                    '\"ngx_scheme\": \"$scheme\", '\n                    '\"ngx_request_method\": \"$request_method\", '\n                    '\"ngx_request_uri\": \"$request_uri\", '\n                    '\"ngx_request\": \"$request\", '\n                    '\"ngx_http_referrer\": \"$http_referer\"  }';\n```\n\n#### 解决\n\n由于$remote_port这个变量是nginx核心模块提供的，因此猜测是由第三方模块再次操作导致为空，经过测试发现通过proxy进来的请求remote_port为空，  \n而直接访问本地nginx的请求都能够正确获取port信息，对于以上2中情况的对比\n怀疑是由于经过proxy之类的组建request header中有x-forworder-for的头，从而触发了realip 模块（这个怀疑没有具体验证），解决方案就是使用realip模块提供的变量'realip_remote_port'来记录来源port, 修改log_format\n```\nlog_format json '{ \"time\": \"$time_iso8601\", '\n                    '\"ngx_true_client_ip\": \"$http_true_client_ip\", '\n                    '\"ngx_x_real_ip\": \"$http_x_real_ip\", '\n                    '\"ngx_cdn_src_ip\": \"$http_cdn_src_ip\", '\n                    '\"ngx_geo_location_ip\": \"$client_ip\", '\n                    '\"ngx_remote_addr\": \"$remote_addr\", '\n                    '\"ngx_remote_port\": \"$remote_port\", '\n```","source":"_posts/nginx-remote-port-is-null.md","raw":"---\nlayout: post\ntitle: nginx remote_port为空\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-12-12 10:01:04\ntags: [ nginx, webserver ]\ncategories:\n    - nginx\n---\n### nginx remote_port为空\n\n#### 现象\n由于网安要求记录用户请求来源端口到日志中，因此为了实现这个需求在log_format中增加了\"ngx_remote_port: $remote_port\"字段(如下)， 但实际日志系统中收录到的日志`ngx_remote_port:\"\"`为空\n```\nlog_format json '{ \"time\": \"$time_iso8601\", '\n                    '\"ngx_true_client_ip\": \"$http_true_client_ip\", '\n                    '\"ngx_x_real_ip\": \"$http_x_real_ip\", '\n                    '\"ngx_cdn_src_ip\": \"$http_cdn_src_ip\", '\n                    '\"ngx_geo_location_ip\": \"$client_ip\", '\n                    '\"ngx_remote_addr\": \"$remote_addr\", '\n                    '\"ngx_remote_port\": \"$remote_port\", '\n                    '\"ngx_x_user_site_proxy\": \"$http_x_user_site_proxy\", '\n                    '\"ngx_x_forwarded_for\": \"$http_x_forwarded_for\", '\n                    '\"ngx_host\": \"$host\", '\n                    '\"ngx_http_user_agent\": \"$http_user_agent\", '\n                    '\"ngx_body_bytes_sent\": \"$body_bytes_sent\", '\n                    '\"ngx_request_time\": \"$request_time\", '\n                    '\"ngx_upstream_response_time\": \"$upstream_response_time\", '\n                    '\"ngx_upstream_connect_time\": \"$upstream_connect_time\", '\n                    '\"ngx_upstream_header_time:\": \"$upstream_header_time\", '\n                    '\"ngx_upstream_addr\": \"$upstream_addr\", '\n                    '\"ngx_upstream_content_length\": \"$sent_http_content_length\", '\n                    '\"ngx_status_code\": \"$status\", '\n                    '\"ngx_scheme\": \"$scheme\", '\n                    '\"ngx_request_method\": \"$request_method\", '\n                    '\"ngx_request_uri\": \"$request_uri\", '\n                    '\"ngx_request\": \"$request\", '\n                    '\"ngx_http_referrer\": \"$http_referer\"  }';\n```\n\n#### 解决\n\n由于$remote_port这个变量是nginx核心模块提供的，因此猜测是由第三方模块再次操作导致为空，经过测试发现通过proxy进来的请求remote_port为空，  \n而直接访问本地nginx的请求都能够正确获取port信息，对于以上2中情况的对比\n怀疑是由于经过proxy之类的组建request header中有x-forworder-for的头，从而触发了realip 模块（这个怀疑没有具体验证），解决方案就是使用realip模块提供的变量'realip_remote_port'来记录来源port, 修改log_format\n```\nlog_format json '{ \"time\": \"$time_iso8601\", '\n                    '\"ngx_true_client_ip\": \"$http_true_client_ip\", '\n                    '\"ngx_x_real_ip\": \"$http_x_real_ip\", '\n                    '\"ngx_cdn_src_ip\": \"$http_cdn_src_ip\", '\n                    '\"ngx_geo_location_ip\": \"$client_ip\", '\n                    '\"ngx_remote_addr\": \"$remote_addr\", '\n                    '\"ngx_remote_port\": \"$remote_port\", '\n```","slug":"nginx-remote-port-is-null","updated":"2019-12-12T07:06:52.916Z","photos":[],"link":"","_id":"ck42dyief005ou9uravou0m3p","content":"<h3 id=\"nginx-remote-port为空\"><a href=\"#nginx-remote-port为空\" class=\"headerlink\" title=\"nginx remote_port为空\"></a>nginx remote_port为空</h3><h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><p>由于网安要求记录用户请求来源端口到日志中，因此为了实现这个需求在log_format中增加了”ngx_remote_port: $remote_port”字段(如下)， 但实际日志系统中收录到的日志<code>ngx_remote_port:&quot;&quot;</code>为空</p>\n<figure class=\"highlight julia\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log_format json '&#123; <span class=\"string\">\"time\"</span>: <span class=\"string\">\"<span class=\"variable\">$time_iso8601</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_true_client_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_true_client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_real_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_real_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_cdn_src_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_cdn_src_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_geo_location_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_addr\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_addr</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_port\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_port</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_user_site_proxy\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_user_site_proxy</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_forwarded_for\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_forwarded_for</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_host\"</span>: <span class=\"string\">\"<span class=\"variable\">$host</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_http_user_agent\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_user_agent</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_body_bytes_sent\"</span>: <span class=\"string\">\"<span class=\"variable\">$body_bytes_sent</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request_time\"</span>: <span class=\"string\">\"<span class=\"variable\">$request_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_response_time\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_response_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_connect_time\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_connect_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_header_time:\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_header_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_addr\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_addr</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_content_length\"</span>: <span class=\"string\">\"<span class=\"variable\">$sent_http_content_length</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_status_code\"</span>: <span class=\"string\">\"<span class=\"variable\">$status</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_scheme\"</span>: <span class=\"string\">\"<span class=\"variable\">$scheme</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request_method\"</span>: <span class=\"string\">\"<span class=\"variable\">$request_method</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request_uri\"</span>: <span class=\"string\">\"<span class=\"variable\">$request_uri</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request\"</span>: <span class=\"string\">\"<span class=\"variable\">$request</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_http_referrer\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_referer</span>\"</span>  &#125;';</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h4><p>由于$remote_port这个变量是nginx核心模块提供的，因此猜测是由第三方模块再次操作导致为空，经过测试发现通过proxy进来的请求remote_port为空，<br>而直接访问本地nginx的请求都能够正确获取port信息，对于以上2中情况的对比<br>怀疑是由于经过proxy之类的组建request header中有x-forworder-for的头，从而触发了realip 模块（这个怀疑没有具体验证），解决方案就是使用realip模块提供的变量’realip_remote_port’来记录来源port, 修改log_format</p>\n<figure class=\"highlight julia\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log_format json '&#123; <span class=\"string\">\"time\"</span>: <span class=\"string\">\"<span class=\"variable\">$time_iso8601</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_true_client_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_true_client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_real_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_real_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_cdn_src_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_cdn_src_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_geo_location_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_addr\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_addr</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_port\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_port</span>\"</span>, '</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"nginx-remote-port为空\"><a href=\"#nginx-remote-port为空\" class=\"headerlink\" title=\"nginx remote_port为空\"></a>nginx remote_port为空</h3><h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><p>由于网安要求记录用户请求来源端口到日志中，因此为了实现这个需求在log_format中增加了”ngx_remote_port: $remote_port”字段(如下)， 但实际日志系统中收录到的日志<code>ngx_remote_port:&quot;&quot;</code>为空</p>\n<figure class=\"highlight julia\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log_format json '&#123; <span class=\"string\">\"time\"</span>: <span class=\"string\">\"<span class=\"variable\">$time_iso8601</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_true_client_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_true_client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_real_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_real_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_cdn_src_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_cdn_src_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_geo_location_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_addr\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_addr</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_port\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_port</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_user_site_proxy\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_user_site_proxy</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_forwarded_for\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_forwarded_for</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_host\"</span>: <span class=\"string\">\"<span class=\"variable\">$host</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_http_user_agent\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_user_agent</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_body_bytes_sent\"</span>: <span class=\"string\">\"<span class=\"variable\">$body_bytes_sent</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request_time\"</span>: <span class=\"string\">\"<span class=\"variable\">$request_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_response_time\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_response_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_connect_time\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_connect_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_header_time:\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_header_time</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_addr\"</span>: <span class=\"string\">\"<span class=\"variable\">$upstream_addr</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_upstream_content_length\"</span>: <span class=\"string\">\"<span class=\"variable\">$sent_http_content_length</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_status_code\"</span>: <span class=\"string\">\"<span class=\"variable\">$status</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_scheme\"</span>: <span class=\"string\">\"<span class=\"variable\">$scheme</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request_method\"</span>: <span class=\"string\">\"<span class=\"variable\">$request_method</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request_uri\"</span>: <span class=\"string\">\"<span class=\"variable\">$request_uri</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_request\"</span>: <span class=\"string\">\"<span class=\"variable\">$request</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_http_referrer\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_referer</span>\"</span>  &#125;';</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h4><p>由于$remote_port这个变量是nginx核心模块提供的，因此猜测是由第三方模块再次操作导致为空，经过测试发现通过proxy进来的请求remote_port为空，<br>而直接访问本地nginx的请求都能够正确获取port信息，对于以上2中情况的对比<br>怀疑是由于经过proxy之类的组建request header中有x-forworder-for的头，从而触发了realip 模块（这个怀疑没有具体验证），解决方案就是使用realip模块提供的变量’realip_remote_port’来记录来源port, 修改log_format</p>\n<figure class=\"highlight julia\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log_format json '&#123; <span class=\"string\">\"time\"</span>: <span class=\"string\">\"<span class=\"variable\">$time_iso8601</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_true_client_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_true_client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_x_real_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_x_real_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_cdn_src_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$http_cdn_src_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_geo_location_ip\"</span>: <span class=\"string\">\"<span class=\"variable\">$client_ip</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_addr\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_addr</span>\"</span>, '</span><br><span class=\"line\">                    '<span class=\"string\">\"ngx_remote_port\"</span>: <span class=\"string\">\"<span class=\"variable\">$remote_port</span>\"</span>, '</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"nginx server_name_hash_bucket_size","published":1,"author":"xiemx","comments":1,"date":"2017-01-18T03:01:15.000Z","_content":"\nnginx默认的 `server_name_hash_bucket_size` 一般为32/64，\n如果配置了超长的server_name建议适当增大此参数\n```\nhttp {\n    server_names_hash_bucket_size 512;\n}\n```","source":"_posts/nginx-server_name_hash_bucket_size.md","raw":"---\nlayout: post\ntitle: nginx server_name_hash_bucket_size\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-01-18 11:01:15\ntags: [ nginx ]\ncategories:\n    - nginx\n---\n\nnginx默认的 `server_name_hash_bucket_size` 一般为32/64，\n如果配置了超长的server_name建议适当增大此参数\n```\nhttp {\n    server_names_hash_bucket_size 512;\n}\n```","slug":"nginx-server_name_hash_bucket_size","updated":"2019-10-21T06:57:43.017Z","photos":[],"link":"","_id":"ck42dyieg005su9urt708jedd","content":"<p>nginx默认的 <code>server_name_hash_bucket_size</code> 一般为32/64，<br>如果配置了超长的server_name建议适当增大此参数</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server_names_hash_bucket_size</span> <span class=\"number\">512</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>nginx默认的 <code>server_name_hash_bucket_size</code> 一般为32/64，<br>如果配置了超长的server_name建议适当增大此参数</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server_names_hash_bucket_size</span> <span class=\"number\">512</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"nginx+uwsgi部署django项目","published":1,"author":"xiemx","comments":1,"date":"2016-07-25T22:07:48.000Z","_content":"### 安装基本软件\n```shell\nsudo apt-get install python-dev nginx\npip install uwsgi\n```\n### 配置uwsgi和django的集成\n```shell\nvim test.py 创建test.py,添加如下代码\ndef application(env, start_response):\n    start_response('200 OK', [('Content-Type','text/html')])\n    return \"Hello World\"\n\n然后执行shell命令：\nuwsgi –http :8001 –wsgi-file test.py\n\n访问网页：\ncurl http://127.0.0.1:8001/\nHello World\n```\n#编写django_wsgi.py文件，将其放在与文件manage.py同一个目录下：\n```python\n### vim django_wsgi.py 添加如下代码：\n#!/usr/bin/env python\n# coding: utf-8\nimport os\nimport sys\n# 将系统的编码设置为UTF8\nreload(sys)\nsys.setdefaultencoding('utf8')\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"yoursite.settings\")\n\nfrom django.core.handlers.wsgi import WSGIHandler\napplication = WSGIHandler()\n```\n连接django和uwsgi，实现简单的WEB服务器。\n我们假设你的Django项目的地址是`/home/work/src/sites/testdjango1/testdjango/mysite`，\n\n然后，就可以执行以下命令：\n`uwsgi –http :8000 –chdir /home/work/src/sites/testdjango1/testdjango/mysite –module django_wsgi`\n这样，你就可以在浏览器中访问你的Django程序了。所有的请求都是经过uwsgi传递给Django程序的。\n\n### 集成django,uwsgi和nginx部署：\n* 在django项目根目录创建启动uwsgi的xml文件：\n```\n<uwsgi>\n    <socket>:8077</socket>\n    <chdir>/home/work/src/sites/testdjango1/testdjango/mysite</chdir>\n    <module>django_wsgi</module>\n    <processes>4</processes> <!-- 进程数 --> \n    <daemonize>uwsgi.log</daemonize>\n</uwsgi>\n```\n* 配置Nginx服务器：\n```\n#备份nginx配置文件：\nsudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.bak\nvim /etc/nginx/sites-available/default 修改如下：\n\nserver {\n\n        listen   80;\n        server_name localhost;\n        access_log /var/log/nginx/access.log;\n        error_log /var/log/nginx/error.log;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n         include        uwsgi_params;\n         uwsgi_pass     127.0.0.1:8077;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        #method first\n        location ~ ^/static/ {\n            root  /home/hz/PycharmProjects/myscrapy/check_ip/;\n            expires 24h;\n            access_log off;\n        }\n        #method second\n        #location ~* ^.+\\.(css|js|json|ttf|woff|map|woff2)${\n        #    root /home/hz/PycharmProjects/myscrapy/check_ip/;\n        #    access_log off;\n        #    expires 24h;\n        #}      \n}\n```\n如果不能访问日志文件，修改相关文件的权限即可\n* 验证测试各步骤结果\n```shell\n重启Nginx服务器，以使Nginx的配置生效。\nnginx -s  reload\n重启后检查Nginx日志是否有异常。\n\n启动uWSGI服务器\n\ncd /home/work/src/sites/testdjango1/testdjango/mysite\n\nuwsgi -x djangochina_socket.xml\n```\n* django搜集静态文件\n```shell\nsettings.py文件中指定STATIC_ROOT路径\npython manage.py collectstatic\n\n修改nginx配置文件指定目录到STATIC_ROOT\n```","source":"_posts/nginx-uwsgi-deploy-django.md","raw":"---\nlayout: post\ntitle: nginx+uwsgi部署django项目\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-07-26 06:07:48\ntags: [ uwsgi, django, python, nginx ]\ncategories:\n  - python\n  - uwsgi\n# permalink: '/2016/07/26/nginxuwsgi%e9%83%a8%e7%bd%b2django%e9%a1%b9%e7%9b%ae'\n---\n### 安装基本软件\n```shell\nsudo apt-get install python-dev nginx\npip install uwsgi\n```\n### 配置uwsgi和django的集成\n```shell\nvim test.py 创建test.py,添加如下代码\ndef application(env, start_response):\n    start_response('200 OK', [('Content-Type','text/html')])\n    return \"Hello World\"\n\n然后执行shell命令：\nuwsgi –http :8001 –wsgi-file test.py\n\n访问网页：\ncurl http://127.0.0.1:8001/\nHello World\n```\n#编写django_wsgi.py文件，将其放在与文件manage.py同一个目录下：\n```python\n### vim django_wsgi.py 添加如下代码：\n#!/usr/bin/env python\n# coding: utf-8\nimport os\nimport sys\n# 将系统的编码设置为UTF8\nreload(sys)\nsys.setdefaultencoding('utf8')\n\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"yoursite.settings\")\n\nfrom django.core.handlers.wsgi import WSGIHandler\napplication = WSGIHandler()\n```\n连接django和uwsgi，实现简单的WEB服务器。\n我们假设你的Django项目的地址是`/home/work/src/sites/testdjango1/testdjango/mysite`，\n\n然后，就可以执行以下命令：\n`uwsgi –http :8000 –chdir /home/work/src/sites/testdjango1/testdjango/mysite –module django_wsgi`\n这样，你就可以在浏览器中访问你的Django程序了。所有的请求都是经过uwsgi传递给Django程序的。\n\n### 集成django,uwsgi和nginx部署：\n* 在django项目根目录创建启动uwsgi的xml文件：\n```\n<uwsgi>\n    <socket>:8077</socket>\n    <chdir>/home/work/src/sites/testdjango1/testdjango/mysite</chdir>\n    <module>django_wsgi</module>\n    <processes>4</processes> <!-- 进程数 --> \n    <daemonize>uwsgi.log</daemonize>\n</uwsgi>\n```\n* 配置Nginx服务器：\n```\n#备份nginx配置文件：\nsudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.bak\nvim /etc/nginx/sites-available/default 修改如下：\n\nserver {\n\n        listen   80;\n        server_name localhost;\n        access_log /var/log/nginx/access.log;\n        error_log /var/log/nginx/error.log;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n         include        uwsgi_params;\n         uwsgi_pass     127.0.0.1:8077;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        #method first\n        location ~ ^/static/ {\n            root  /home/hz/PycharmProjects/myscrapy/check_ip/;\n            expires 24h;\n            access_log off;\n        }\n        #method second\n        #location ~* ^.+\\.(css|js|json|ttf|woff|map|woff2)${\n        #    root /home/hz/PycharmProjects/myscrapy/check_ip/;\n        #    access_log off;\n        #    expires 24h;\n        #}      \n}\n```\n如果不能访问日志文件，修改相关文件的权限即可\n* 验证测试各步骤结果\n```shell\n重启Nginx服务器，以使Nginx的配置生效。\nnginx -s  reload\n重启后检查Nginx日志是否有异常。\n\n启动uWSGI服务器\n\ncd /home/work/src/sites/testdjango1/testdjango/mysite\n\nuwsgi -x djangochina_socket.xml\n```\n* django搜集静态文件\n```shell\nsettings.py文件中指定STATIC_ROOT路径\npython manage.py collectstatic\n\n修改nginx配置文件指定目录到STATIC_ROOT\n```","slug":"nginx-uwsgi-deploy-django","updated":"2019-10-21T06:57:42.570Z","photos":[],"link":"","_id":"ck42dyiej005wu9uruzte9t7p","content":"<h3 id=\"安装基本软件\"><a href=\"#安装基本软件\" class=\"headerlink\" title=\"安装基本软件\"></a>安装基本软件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-dev nginx</span><br><span class=\"line\">pip install uwsgi</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置uwsgi和django的集成\"><a href=\"#配置uwsgi和django的集成\" class=\"headerlink\" title=\"配置uwsgi和django的集成\"></a>配置uwsgi和django的集成</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim test.py 创建test.py,添加如下代码</span><br><span class=\"line\">def application(env, start_response):</span><br><span class=\"line\">    start_response('200 OK', [('Content-Type','text/html')])</span><br><span class=\"line\">    return \"Hello World\"</span><br><span class=\"line\"></span><br><span class=\"line\">然后执行shell命令：</span><br><span class=\"line\">uwsgi –http :8001 –wsgi-file test.py</span><br><span class=\"line\"></span><br><span class=\"line\">访问网页：</span><br><span class=\"line\">curl http://127.0.0.1:8001/</span><br><span class=\"line\">Hello World</span><br></pre></td></tr></table></figure>\n\n<p>#编写django_wsgi.py文件，将其放在与文件manage.py同一个目录下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### vim django_wsgi.py 添加如下代码：</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"comment\"># 将系统的编码设置为UTF8</span></span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'utf8'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">os.environ.setdefault(<span class=\"string\">\"DJANGO_SETTINGS_MODULE\"</span>, <span class=\"string\">\"yoursite.settings\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.core.handlers.wsgi <span class=\"keyword\">import</span> WSGIHandler</span><br><span class=\"line\">application = WSGIHandler()</span><br></pre></td></tr></table></figure>\n\n<p>连接django和uwsgi，实现简单的WEB服务器。<br>我们假设你的Django项目的地址是<code>/home/work/src/sites/testdjango1/testdjango/mysite</code>，</p>\n<p>然后，就可以执行以下命令：<br><code>uwsgi –http :8000 –chdir /home/work/src/sites/testdjango1/testdjango/mysite –module django_wsgi</code><br>这样，你就可以在浏览器中访问你的Django程序了。所有的请求都是经过uwsgi传递给Django程序的。</p>\n<h3 id=\"集成django-uwsgi和nginx部署：\"><a href=\"#集成django-uwsgi和nginx部署：\" class=\"headerlink\" title=\"集成django,uwsgi和nginx部署：\"></a>集成django,uwsgi和nginx部署：</h3><ul>\n<li><p>在django项目根目录创建启动uwsgi的xml文件：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uwsgi</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">socket</span>&gt;</span>:8077<span class=\"tag\">&lt;/<span class=\"name\">socket</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chdir</span>&gt;</span>/home/work/src/sites/testdjango1/testdjango/mysite<span class=\"tag\">&lt;/<span class=\"name\">chdir</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>django_wsgi<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">processes</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">processes</span>&gt;</span> <span class=\"comment\">&lt;!-- 进程数 --&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">daemonize</span>&gt;</span>uwsgi.log<span class=\"tag\">&lt;/<span class=\"name\">daemonize</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">uwsgi</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置Nginx服务器：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#备份nginx配置文件：</span></span><br><span class=\"line\">sudo cp /etc/nginx/sites-available<span class=\"built_in\">/default </span>/etc/nginx/sites-available/default.bak</span><br><span class=\"line\">vim /etc/nginx/sites-available<span class=\"built_in\">/default </span>修改如下：</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        listen   80;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\">        access_log /var/log/nginx/access.log;</span><br><span class=\"line\">        error_log /var/log/nginx/error.log;</span><br><span class=\"line\"></span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\"></span><br><span class=\"line\">        #access_log  logs/host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">         include        uwsgi_params;</span><br><span class=\"line\">         uwsgi_pass     127.0.0.1:8077;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect<span class=\"built_in\"> server </span><span class=\"builtin-name\">error</span> pages <span class=\"keyword\">to</span> the static<span class=\"built_in\"> page </span>/50x.html</span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        #method first</span><br><span class=\"line\">        location ~ ^/static/ &#123;</span><br><span class=\"line\">            root  /home/hz/PycharmProjects/myscrapy/check_ip/;</span><br><span class=\"line\">            expires 24h;</span><br><span class=\"line\">            access_log off;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        #method second</span><br><span class=\"line\">        #location ~* ^.+\\.(css|js|json|ttf|woff|map|woff2)$&#123;</span><br><span class=\"line\">        #    root /home/hz/PycharmProjects/myscrapy/check_ip/;</span><br><span class=\"line\">        #    access_log off;</span><br><span class=\"line\">        #    expires 24h;</span><br><span class=\"line\">        #&#125;      </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>如果不能访问日志文件，修改相关文件的权限即可</p>\n<ul>\n<li><p>验证测试各步骤结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重启Nginx服务器，以使Nginx的配置生效。</span><br><span class=\"line\">nginx -s  reload</span><br><span class=\"line\">重启后检查Nginx日志是否有异常。</span><br><span class=\"line\"></span><br><span class=\"line\">启动uWSGI服务器</span><br><span class=\"line\"></span><br><span class=\"line\">cd /home/work/src/sites/testdjango1/testdjango/mysite</span><br><span class=\"line\"></span><br><span class=\"line\">uwsgi -x djangochina_socket.xml</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>django搜集静态文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">settings.py文件中指定STATIC_ROOT路径</span><br><span class=\"line\">python manage.py collectstatic</span><br><span class=\"line\"></span><br><span class=\"line\">修改nginx配置文件指定目录到STATIC_ROOT</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"安装基本软件\"><a href=\"#安装基本软件\" class=\"headerlink\" title=\"安装基本软件\"></a>安装基本软件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-dev nginx</span><br><span class=\"line\">pip install uwsgi</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置uwsgi和django的集成\"><a href=\"#配置uwsgi和django的集成\" class=\"headerlink\" title=\"配置uwsgi和django的集成\"></a>配置uwsgi和django的集成</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim test.py 创建test.py,添加如下代码</span><br><span class=\"line\">def application(env, start_response):</span><br><span class=\"line\">    start_response('200 OK', [('Content-Type','text/html')])</span><br><span class=\"line\">    return \"Hello World\"</span><br><span class=\"line\"></span><br><span class=\"line\">然后执行shell命令：</span><br><span class=\"line\">uwsgi –http :8001 –wsgi-file test.py</span><br><span class=\"line\"></span><br><span class=\"line\">访问网页：</span><br><span class=\"line\">curl http://127.0.0.1:8001/</span><br><span class=\"line\">Hello World</span><br></pre></td></tr></table></figure>\n\n<p>#编写django_wsgi.py文件，将其放在与文件manage.py同一个目录下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### vim django_wsgi.py 添加如下代码：</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"comment\"># 将系统的编码设置为UTF8</span></span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'utf8'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">os.environ.setdefault(<span class=\"string\">\"DJANGO_SETTINGS_MODULE\"</span>, <span class=\"string\">\"yoursite.settings\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.core.handlers.wsgi <span class=\"keyword\">import</span> WSGIHandler</span><br><span class=\"line\">application = WSGIHandler()</span><br></pre></td></tr></table></figure>\n\n<p>连接django和uwsgi，实现简单的WEB服务器。<br>我们假设你的Django项目的地址是<code>/home/work/src/sites/testdjango1/testdjango/mysite</code>，</p>\n<p>然后，就可以执行以下命令：<br><code>uwsgi –http :8000 –chdir /home/work/src/sites/testdjango1/testdjango/mysite –module django_wsgi</code><br>这样，你就可以在浏览器中访问你的Django程序了。所有的请求都是经过uwsgi传递给Django程序的。</p>\n<h3 id=\"集成django-uwsgi和nginx部署：\"><a href=\"#集成django-uwsgi和nginx部署：\" class=\"headerlink\" title=\"集成django,uwsgi和nginx部署：\"></a>集成django,uwsgi和nginx部署：</h3><ul>\n<li><p>在django项目根目录创建启动uwsgi的xml文件：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uwsgi</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">socket</span>&gt;</span>:8077<span class=\"tag\">&lt;/<span class=\"name\">socket</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chdir</span>&gt;</span>/home/work/src/sites/testdjango1/testdjango/mysite<span class=\"tag\">&lt;/<span class=\"name\">chdir</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">module</span>&gt;</span>django_wsgi<span class=\"tag\">&lt;/<span class=\"name\">module</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">processes</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">processes</span>&gt;</span> <span class=\"comment\">&lt;!-- 进程数 --&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">daemonize</span>&gt;</span>uwsgi.log<span class=\"tag\">&lt;/<span class=\"name\">daemonize</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">uwsgi</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置Nginx服务器：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#备份nginx配置文件：</span></span><br><span class=\"line\">sudo cp /etc/nginx/sites-available<span class=\"built_in\">/default </span>/etc/nginx/sites-available/default.bak</span><br><span class=\"line\">vim /etc/nginx/sites-available<span class=\"built_in\">/default </span>修改如下：</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        listen   80;</span><br><span class=\"line\">        server_name localhost;</span><br><span class=\"line\">        access_log /var/log/nginx/access.log;</span><br><span class=\"line\">        error_log /var/log/nginx/error.log;</span><br><span class=\"line\"></span><br><span class=\"line\">        #charset koi8-r;</span><br><span class=\"line\"></span><br><span class=\"line\">        #access_log  logs/host.access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">         include        uwsgi_params;</span><br><span class=\"line\">         uwsgi_pass     127.0.0.1:8077;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # redirect<span class=\"built_in\"> server </span><span class=\"builtin-name\">error</span> pages <span class=\"keyword\">to</span> the static<span class=\"built_in\"> page </span>/50x.html</span><br><span class=\"line\">        #</span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        #method first</span><br><span class=\"line\">        location ~ ^/static/ &#123;</span><br><span class=\"line\">            root  /home/hz/PycharmProjects/myscrapy/check_ip/;</span><br><span class=\"line\">            expires 24h;</span><br><span class=\"line\">            access_log off;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        #method second</span><br><span class=\"line\">        #location ~* ^.+\\.(css|js|json|ttf|woff|map|woff2)$&#123;</span><br><span class=\"line\">        #    root /home/hz/PycharmProjects/myscrapy/check_ip/;</span><br><span class=\"line\">        #    access_log off;</span><br><span class=\"line\">        #    expires 24h;</span><br><span class=\"line\">        #&#125;      </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>如果不能访问日志文件，修改相关文件的权限即可</p>\n<ul>\n<li><p>验证测试各步骤结果</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">重启Nginx服务器，以使Nginx的配置生效。</span><br><span class=\"line\">nginx -s  reload</span><br><span class=\"line\">重启后检查Nginx日志是否有异常。</span><br><span class=\"line\"></span><br><span class=\"line\">启动uWSGI服务器</span><br><span class=\"line\"></span><br><span class=\"line\">cd /home/work/src/sites/testdjango1/testdjango/mysite</span><br><span class=\"line\"></span><br><span class=\"line\">uwsgi -x djangochina_socket.xml</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>django搜集静态文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">settings.py文件中指定STATIC_ROOT路径</span><br><span class=\"line\">python manage.py collectstatic</span><br><span class=\"line\"></span><br><span class=\"line\">修改nginx配置文件指定目录到STATIC_ROOT</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"layout":"post","title":"nginx websocket proxying","published":1,"author":"xiemx","comments":1,"date":"2016-12-13T17:12:43.000Z","_content":"```\nserver {\n        ...\n\n        location /chat/ {\n            proxy_pass http://backend;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection $connection_upgrade;\n        }\n    }\n\n``` \n官方关于websocket proxying的文档：http://nginx.org/en/docs/http/websocket.html","source":"_posts/nginx-websocket-proxying.md","raw":"---\nlayout: post\ntitle: nginx websocket proxying\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-12-14 01:12:43\ntags: [ nginx, websocket ]\ncategories:\n    - nginx\n# permalink: '/2016/12/14/nginx%e6%94%af%e6%8c%81ssh%e8%bd%ac%e5%8f%91%ef%bc%8dwebsocket-proxying'\n---\n```\nserver {\n        ...\n\n        location /chat/ {\n            proxy_pass http://backend;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection $connection_upgrade;\n        }\n    }\n\n``` \n官方关于websocket proxying的文档：http://nginx.org/en/docs/http/websocket.html","slug":"nginx-websocket-proxying","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyiel0060u9ur1fmq7dra","content":"<pre><code>server {\n        ...\n\n        location /chat/ {\n            proxy_pass http://backend;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection $connection_upgrade;\n        }\n    }\n</code></pre><p>官方关于websocket proxying的文档：<a href=\"http://nginx.org/en/docs/http/websocket.html\" target=\"_blank\" rel=\"noopener\">http://nginx.org/en/docs/http/websocket.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>server {\n        ...\n\n        location /chat/ {\n            proxy_pass http://backend;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection $connection_upgrade;\n        }\n    }\n</code></pre><p>官方关于websocket proxying的文档：<a href=\"http://nginx.org/en/docs/http/websocket.html\" target=\"_blank\" rel=\"noopener\">http://nginx.org/en/docs/http/websocket.html</a></p>\n"},{"layout":"post","title":"NTP服务器搭建","published":1,"author":"xiemx","comments":1,"date":"2015-11-29T00:11:58.000Z","_content":"NTP即网络时间协议，用来同步计算机时间，提高时间的精确度。\n\n环境：`RHEL6.5`\n\n安装包：`ntp-4.2.6p5-1.el6.x86_64`\n\n安装方式：\n```\nyum install ntp\n```\nntp主配置文件中并无太多配置，有效的配置默认如下\n```shell\n[root@localhost html]# egrep  -v \"^$|^#\" /etc/ntp.conf\ndriftfile /var/lib/ntp/drift\nrestrict default kod nomodify notrap nopeer noquery——拒绝ipv4查询\nrestrict -6 default kod nomodify notrap nopeer noquery——拒绝ipv6查询\nrestrict 127.0.0.1——允许本机查询\nrestrict -6 ::1——允许本机查询\nserver 0.rhel.pool.ntp.org iburst——server指定我们去哪里同步\nserver 1.rhel.pool.ntp.org iburst\nserver 2.rhel.pool.ntp.org iburst\nserver 3.rhel.pool.ntp.org iburst\nincludefile /etc/ntp/crypto/pw\nkeys /etc/ntp/keys\n```\n我们作为服务器端需要授权其他用户过来同步时间，需要在配置行中添加\n```\nrestrict 192.168.10.10 mask 255.255.255.0 nomodify ——允许192.168.10.10/24这台机器过来同步\nrestrict 192.168.10.0 mask 255.255.255.0 nomodify ——允许192.168.10.0/24这个网段的机器过来同步\nserver 210.72.145.44 ——我们去这台机器上同步时间\n```\n以上设置设置好后我们即可通过ntpdate去同步时间\n```\nntpdate 210.72.145.44\n```\n客户端也可以通过ntpdate向我们请求数据，ntp服务器搭建好后客户端可以通过计划任务固定时间来向我们请求时间。ntp配置简单，但要注意防火墙的限制。\n\n#### 常用ntp服务器：\n```\n210.72.145.44 (国家授时中心服务器IP地址)\nntp.sjtu.edu.cn 202.120.2.101 (上海交通大学网络中心NTP服务器地址）\ns1b.time.edu.cn 清华大学\ns1c.time.edu.cn 北京大学\ns1d.time.edu.cn 东南大学\ns1e.time.edu.cn 清华大学\ns2d.time.edu.cn 西南地区网络中心\ns2e.time.edu.cn 西北地区网络中心\ns2f.time.edu.cn 东北地区网络中心\ns2g.time.edu.cn 华东南地区网络中心\n```\n ","source":"_posts/ntp-server.md","raw":"---\nlayout: post\ntitle: NTP服务器搭建\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-29 08:11:58\ntags: [ linux, ntp ]\ncategories:\n    - linux\n# permalink: '/2015/11/29/ntp%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%90%ad%e5%bb%ba'\n---\nNTP即网络时间协议，用来同步计算机时间，提高时间的精确度。\n\n环境：`RHEL6.5`\n\n安装包：`ntp-4.2.6p5-1.el6.x86_64`\n\n安装方式：\n```\nyum install ntp\n```\nntp主配置文件中并无太多配置，有效的配置默认如下\n```shell\n[root@localhost html]# egrep  -v \"^$|^#\" /etc/ntp.conf\ndriftfile /var/lib/ntp/drift\nrestrict default kod nomodify notrap nopeer noquery——拒绝ipv4查询\nrestrict -6 default kod nomodify notrap nopeer noquery——拒绝ipv6查询\nrestrict 127.0.0.1——允许本机查询\nrestrict -6 ::1——允许本机查询\nserver 0.rhel.pool.ntp.org iburst——server指定我们去哪里同步\nserver 1.rhel.pool.ntp.org iburst\nserver 2.rhel.pool.ntp.org iburst\nserver 3.rhel.pool.ntp.org iburst\nincludefile /etc/ntp/crypto/pw\nkeys /etc/ntp/keys\n```\n我们作为服务器端需要授权其他用户过来同步时间，需要在配置行中添加\n```\nrestrict 192.168.10.10 mask 255.255.255.0 nomodify ——允许192.168.10.10/24这台机器过来同步\nrestrict 192.168.10.0 mask 255.255.255.0 nomodify ——允许192.168.10.0/24这个网段的机器过来同步\nserver 210.72.145.44 ——我们去这台机器上同步时间\n```\n以上设置设置好后我们即可通过ntpdate去同步时间\n```\nntpdate 210.72.145.44\n```\n客户端也可以通过ntpdate向我们请求数据，ntp服务器搭建好后客户端可以通过计划任务固定时间来向我们请求时间。ntp配置简单，但要注意防火墙的限制。\n\n#### 常用ntp服务器：\n```\n210.72.145.44 (国家授时中心服务器IP地址)\nntp.sjtu.edu.cn 202.120.2.101 (上海交通大学网络中心NTP服务器地址）\ns1b.time.edu.cn 清华大学\ns1c.time.edu.cn 北京大学\ns1d.time.edu.cn 东南大学\ns1e.time.edu.cn 清华大学\ns2d.time.edu.cn 西南地区网络中心\ns2e.time.edu.cn 西北地区网络中心\ns2f.time.edu.cn 东北地区网络中心\ns2g.time.edu.cn 华东南地区网络中心\n```\n ","slug":"ntp-server","updated":"2019-10-21T06:57:42.386Z","photos":[],"link":"","_id":"ck42dyiem0064u9urokuo0ek4","content":"<p>NTP即网络时间协议，用来同步计算机时间，提高时间的精确度。</p>\n<p>环境：<code>RHEL6.5</code></p>\n<p>安装包：<code>ntp-4.2.6p5-1.el6.x86_64</code></p>\n<p>安装方式：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> ntp</span><br></pre></td></tr></table></figure>\n\n<p>ntp主配置文件中并无太多配置，有效的配置默认如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost html]# egrep  -v \"^$|^#\" /etc/ntp.conf</span><br><span class=\"line\">driftfile /var/lib/ntp/drift</span><br><span class=\"line\">restrict default kod nomodify notrap nopeer noquery——拒绝ipv4查询</span><br><span class=\"line\">restrict -6 default kod nomodify notrap nopeer noquery——拒绝ipv6查询</span><br><span class=\"line\">restrict 127.0.0.1——允许本机查询</span><br><span class=\"line\">restrict -6 ::1——允许本机查询</span><br><span class=\"line\">server 0.rhel.pool.ntp.org iburst——server指定我们去哪里同步</span><br><span class=\"line\">server 1.rhel.pool.ntp.org iburst</span><br><span class=\"line\">server 2.rhel.pool.ntp.org iburst</span><br><span class=\"line\">server 3.rhel.pool.ntp.org iburst</span><br><span class=\"line\">includefile /etc/ntp/crypto/pw</span><br><span class=\"line\">keys /etc/ntp/keys</span><br></pre></td></tr></table></figure>\n\n<p>我们作为服务器端需要授权其他用户过来同步时间，需要在配置行中添加</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">restrict <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.10</span> mask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span> nomodify ——允许<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.10</span>/<span class=\"number\">24</span>这台机器过来同步</span><br><span class=\"line\">restrict <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.0</span> mask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span> nomodify ——允许<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.0</span>/<span class=\"number\">24</span>这个网段的机器过来同步</span><br><span class=\"line\">server <span class=\"number\">210.72</span><span class=\"number\">.145</span><span class=\"number\">.44</span> ——我们去这台机器上同步时间</span><br></pre></td></tr></table></figure>\n\n<p>以上设置设置好后我们即可通过ntpdate去同步时间</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ntpdate <span class=\"number\">210.72</span><span class=\"number\">.145</span><span class=\"number\">.44</span></span><br></pre></td></tr></table></figure>\n\n<p>客户端也可以通过ntpdate向我们请求数据，ntp服务器搭建好后客户端可以通过计划任务固定时间来向我们请求时间。ntp配置简单，但要注意防火墙的限制。</p>\n<h4 id=\"常用ntp服务器：\"><a href=\"#常用ntp服务器：\" class=\"headerlink\" title=\"常用ntp服务器：\"></a>常用ntp服务器：</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">210.72</span>.<span class=\"number\">145.44</span> (国家授时中心服务器IP地址)</span><br><span class=\"line\">ntp<span class=\"selector-class\">.sjtu</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> <span class=\"number\">202.120</span>.<span class=\"number\">2.101</span> (上海交通大学网络中心NTP服务器地址）</span><br><span class=\"line\">s1b<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 清华大学</span><br><span class=\"line\">s1c<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 北京大学</span><br><span class=\"line\">s1d<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 东南大学</span><br><span class=\"line\">s1e<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 清华大学</span><br><span class=\"line\">s2d<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 西南地区网络中心</span><br><span class=\"line\">s2e<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 西北地区网络中心</span><br><span class=\"line\">s2f<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 东北地区网络中心</span><br><span class=\"line\">s2g<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 华东南地区网络中心</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>NTP即网络时间协议，用来同步计算机时间，提高时间的精确度。</p>\n<p>环境：<code>RHEL6.5</code></p>\n<p>安装包：<code>ntp-4.2.6p5-1.el6.x86_64</code></p>\n<p>安装方式：</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> ntp</span><br></pre></td></tr></table></figure>\n\n<p>ntp主配置文件中并无太多配置，有效的配置默认如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost html]# egrep  -v \"^$|^#\" /etc/ntp.conf</span><br><span class=\"line\">driftfile /var/lib/ntp/drift</span><br><span class=\"line\">restrict default kod nomodify notrap nopeer noquery——拒绝ipv4查询</span><br><span class=\"line\">restrict -6 default kod nomodify notrap nopeer noquery——拒绝ipv6查询</span><br><span class=\"line\">restrict 127.0.0.1——允许本机查询</span><br><span class=\"line\">restrict -6 ::1——允许本机查询</span><br><span class=\"line\">server 0.rhel.pool.ntp.org iburst——server指定我们去哪里同步</span><br><span class=\"line\">server 1.rhel.pool.ntp.org iburst</span><br><span class=\"line\">server 2.rhel.pool.ntp.org iburst</span><br><span class=\"line\">server 3.rhel.pool.ntp.org iburst</span><br><span class=\"line\">includefile /etc/ntp/crypto/pw</span><br><span class=\"line\">keys /etc/ntp/keys</span><br></pre></td></tr></table></figure>\n\n<p>我们作为服务器端需要授权其他用户过来同步时间，需要在配置行中添加</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">restrict <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.10</span> mask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span> nomodify ——允许<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.10</span>/<span class=\"number\">24</span>这台机器过来同步</span><br><span class=\"line\">restrict <span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.0</span> mask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span> nomodify ——允许<span class=\"number\">192.168</span><span class=\"number\">.10</span><span class=\"number\">.0</span>/<span class=\"number\">24</span>这个网段的机器过来同步</span><br><span class=\"line\">server <span class=\"number\">210.72</span><span class=\"number\">.145</span><span class=\"number\">.44</span> ——我们去这台机器上同步时间</span><br></pre></td></tr></table></figure>\n\n<p>以上设置设置好后我们即可通过ntpdate去同步时间</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ntpdate <span class=\"number\">210.72</span><span class=\"number\">.145</span><span class=\"number\">.44</span></span><br></pre></td></tr></table></figure>\n\n<p>客户端也可以通过ntpdate向我们请求数据，ntp服务器搭建好后客户端可以通过计划任务固定时间来向我们请求时间。ntp配置简单，但要注意防火墙的限制。</p>\n<h4 id=\"常用ntp服务器：\"><a href=\"#常用ntp服务器：\" class=\"headerlink\" title=\"常用ntp服务器：\"></a>常用ntp服务器：</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">210.72</span>.<span class=\"number\">145.44</span> (国家授时中心服务器IP地址)</span><br><span class=\"line\">ntp<span class=\"selector-class\">.sjtu</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> <span class=\"number\">202.120</span>.<span class=\"number\">2.101</span> (上海交通大学网络中心NTP服务器地址）</span><br><span class=\"line\">s1b<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 清华大学</span><br><span class=\"line\">s1c<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 北京大学</span><br><span class=\"line\">s1d<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 东南大学</span><br><span class=\"line\">s1e<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 清华大学</span><br><span class=\"line\">s2d<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 西南地区网络中心</span><br><span class=\"line\">s2e<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 西北地区网络中心</span><br><span class=\"line\">s2f<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 东北地区网络中心</span><br><span class=\"line\">s2g<span class=\"selector-class\">.time</span><span class=\"selector-class\">.edu</span><span class=\"selector-class\">.cn</span> 华东南地区网络中心</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"PHP 调用date()函数时区报错","published":1,"author":"xiemx","comments":1,"date":"2015-10-10T20:10:30.000Z","_content":"### 现象：\n```\n  “PHP Warning: date() [function.date]: It is not safe to rely on the system’s timezone settings.\n  You are *required* to use the date.timezone setting or the date_default_timezone_set() function.\n  In case you used any of those methods and you are still getting this warning, you most likely\n  misspelled the timezone identifier. We selected ‘UTC’ for ’8.0/no DST’ instead in”\n```\nphp 有些版本默认的时区为格林威治标准时间，我们需要调整时区为+0800 “Asia/shanghai”\n### 解决\n以下是三种方法(任选一种都行)：\n```\n1. 在页头使用date_default_timezone_set()设置 date_default_timezone_set('PRC');\n2. 在页头使用 ini_set('date.timezone','Asia/Shanghai');\n3. 修改php.ini。打开php.ini查找date.timezone 去掉前面的分号修改成为：date.timezone = PRC\n```","source":"_posts/php-data-timezone.md","raw":"---\nlayout: post\ntitle: PHP 调用date()函数时区报错\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-10-11 04:10:30\ntags: [ php, debug ]\ncategories:\n    - php\n---\n### 现象：\n```\n  “PHP Warning: date() [function.date]: It is not safe to rely on the system’s timezone settings.\n  You are *required* to use the date.timezone setting or the date_default_timezone_set() function.\n  In case you used any of those methods and you are still getting this warning, you most likely\n  misspelled the timezone identifier. We selected ‘UTC’ for ’8.0/no DST’ instead in”\n```\nphp 有些版本默认的时区为格林威治标准时间，我们需要调整时区为+0800 “Asia/shanghai”\n### 解决\n以下是三种方法(任选一种都行)：\n```\n1. 在页头使用date_default_timezone_set()设置 date_default_timezone_set('PRC');\n2. 在页头使用 ini_set('date.timezone','Asia/Shanghai');\n3. 修改php.ini。打开php.ini查找date.timezone 去掉前面的分号修改成为：date.timezone = PRC\n```","slug":"php-data-timezone","updated":"2019-10-21T06:57:42.386Z","photos":[],"link":"","_id":"ck42dyien0067u9urtifjjla4","content":"<h3 id=\"现象：\"><a href=\"#现象：\" class=\"headerlink\" title=\"现象：\"></a>现象：</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“PHP <span class=\"built_in\">Warning</span>: <span class=\"type\">date</span>() [<span class=\"keyword\">function</span>.date]: It <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> safe <span class=\"keyword\">to</span> rely <span class=\"keyword\">on</span> the <span class=\"keyword\">system</span>’s timezone settings.</span><br><span class=\"line\">You are *required* <span class=\"keyword\">to</span> use the <span class=\"type\">date</span>.timezone setting <span class=\"keyword\">or</span> the date_default_timezone_set() <span class=\"keyword\">function</span>.</span><br><span class=\"line\"><span class=\"keyword\">In</span> <span class=\"keyword\">case</span> you used <span class=\"keyword\">any</span> <span class=\"keyword\">of</span> those methods <span class=\"keyword\">and</span> you are still getting this <span class=\"built_in\">warning</span>, you most likely</span><br><span class=\"line\">misspelled the timezone identifier. We selected ‘UTC’ <span class=\"keyword\">for</span> ’<span class=\"number\">8.0</span>/<span class=\"keyword\">no</span> DST’ <span class=\"keyword\">instead</span> <span class=\"keyword\">in</span>”</span><br></pre></td></tr></table></figure>\n\n<p>php 有些版本默认的时区为格林威治标准时间，我们需要调整时区为+0800 “Asia/shanghai”</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>以下是三种方法(任选一种都行)：</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 在页头使用date_default_timezone_set()设置 date_default_timezone_set(<span class=\"string\">'PRC'</span>);</span><br><span class=\"line\"><span class=\"number\">2.</span> 在页头使用 ini_set(<span class=\"string\">'date.timezone'</span>,<span class=\"string\">'Asia/Shanghai'</span>);</span><br><span class=\"line\"><span class=\"number\">3.</span> 修改php.ini。打开php.ini查找<span class=\"keyword\">date</span>.timezone 去掉前面的分号修改成为：<span class=\"keyword\">date</span>.timezone = PRC</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"现象：\"><a href=\"#现象：\" class=\"headerlink\" title=\"现象：\"></a>现象：</h3><figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">“PHP <span class=\"built_in\">Warning</span>: <span class=\"type\">date</span>() [<span class=\"keyword\">function</span>.date]: It <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> safe <span class=\"keyword\">to</span> rely <span class=\"keyword\">on</span> the <span class=\"keyword\">system</span>’s timezone settings.</span><br><span class=\"line\">You are *required* <span class=\"keyword\">to</span> use the <span class=\"type\">date</span>.timezone setting <span class=\"keyword\">or</span> the date_default_timezone_set() <span class=\"keyword\">function</span>.</span><br><span class=\"line\"><span class=\"keyword\">In</span> <span class=\"keyword\">case</span> you used <span class=\"keyword\">any</span> <span class=\"keyword\">of</span> those methods <span class=\"keyword\">and</span> you are still getting this <span class=\"built_in\">warning</span>, you most likely</span><br><span class=\"line\">misspelled the timezone identifier. We selected ‘UTC’ <span class=\"keyword\">for</span> ’<span class=\"number\">8.0</span>/<span class=\"keyword\">no</span> DST’ <span class=\"keyword\">instead</span> <span class=\"keyword\">in</span>”</span><br></pre></td></tr></table></figure>\n\n<p>php 有些版本默认的时区为格林威治标准时间，我们需要调整时区为+0800 “Asia/shanghai”</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>以下是三种方法(任选一种都行)：</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 在页头使用date_default_timezone_set()设置 date_default_timezone_set(<span class=\"string\">'PRC'</span>);</span><br><span class=\"line\"><span class=\"number\">2.</span> 在页头使用 ini_set(<span class=\"string\">'date.timezone'</span>,<span class=\"string\">'Asia/Shanghai'</span>);</span><br><span class=\"line\"><span class=\"number\">3.</span> 修改php.ini。打开php.ini查找<span class=\"keyword\">date</span>.timezone 去掉前面的分号修改成为：<span class=\"keyword\">date</span>.timezone = PRC</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"PHP_CURL 使用代理访问服务器","published":1,"author":"xiemx","comments":1,"date":"2016-07-05T19:07:24.000Z","_content":"```php\n#使用代码时请加上php文件的括号\nfunction curl_string ($url,$user_agent,$proxy){\n\n       $ch = curl_init();\n       curl_setopt ($ch, CURLOPT_PROXY, $proxy);\n       curl_setopt ($ch, CURLOPT_URL, $url);\n       curl_setopt ($ch, CURLOPT_USERAGENT, $user_agent);\n       curl_setopt ($ch, CURLOPT_HEADER, 1);\n       curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);\n       curl_setopt ($ch, CURLOPT_FOLLOWLOCATION, 1);\n       curl_setopt ($ch, CURLOPT_TIMEOUT, 120);\n       $result = curl_exec ($ch);\n       curl_close($ch);\n       return $result;\n\n}\n\n$url_page = \"http://www.google.com\";\n$user_agent = \"Mozilla/4.0\";\n$proxy = \"http://192.11.222.124:8000\";\n$string = curl_string($url_page,$user_agent,$proxy);\necho $string;\n\n```","source":"_posts/php_curl.md","raw":"---\nlayout: post\ntitle: PHP_CURL 使用代理访问服务器\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-07-06 03:07:24\ntags: [ php ]\ncategories:\n    - php\n---\n```php\n#使用代码时请加上php文件的括号\nfunction curl_string ($url,$user_agent,$proxy){\n\n       $ch = curl_init();\n       curl_setopt ($ch, CURLOPT_PROXY, $proxy);\n       curl_setopt ($ch, CURLOPT_URL, $url);\n       curl_setopt ($ch, CURLOPT_USERAGENT, $user_agent);\n       curl_setopt ($ch, CURLOPT_HEADER, 1);\n       curl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);\n       curl_setopt ($ch, CURLOPT_FOLLOWLOCATION, 1);\n       curl_setopt ($ch, CURLOPT_TIMEOUT, 120);\n       $result = curl_exec ($ch);\n       curl_close($ch);\n       return $result;\n\n}\n\n$url_page = \"http://www.google.com\";\n$user_agent = \"Mozilla/4.0\";\n$proxy = \"http://192.11.222.124:8000\";\n$string = curl_string($url_page,$user_agent,$proxy);\necho $string;\n\n```","slug":"php_curl","updated":"2019-10-21T06:57:42.702Z","photos":[],"link":"","_id":"ck42dyieo006cu9urw3tn9x97","content":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用代码时请加上php文件的括号</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">curl_string</span> <span class=\"params\">($url,$user_agent,$proxy)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       $ch = curl_init();</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_PROXY, $proxy);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_URL, $url);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_USERAGENT, $user_agent);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_HEADER, <span class=\"number\">1</span>);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_FOLLOWLOCATION, <span class=\"number\">1</span>);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_TIMEOUT, <span class=\"number\">120</span>);</span><br><span class=\"line\">       $result = curl_exec ($ch);</span><br><span class=\"line\">       curl_close($ch);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> $result;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$url_page = <span class=\"string\">\"http://www.google.com\"</span>;</span><br><span class=\"line\">$user_agent = <span class=\"string\">\"Mozilla/4.0\"</span>;</span><br><span class=\"line\">$proxy = <span class=\"string\">\"http://192.11.222.124:8000\"</span>;</span><br><span class=\"line\">$string = curl_string($url_page,$user_agent,$proxy);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $string;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用代码时请加上php文件的括号</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">curl_string</span> <span class=\"params\">($url,$user_agent,$proxy)</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">       $ch = curl_init();</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_PROXY, $proxy);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_URL, $url);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_USERAGENT, $user_agent);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_HEADER, <span class=\"number\">1</span>);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_FOLLOWLOCATION, <span class=\"number\">1</span>);</span><br><span class=\"line\">       curl_setopt ($ch, CURLOPT_TIMEOUT, <span class=\"number\">120</span>);</span><br><span class=\"line\">       $result = curl_exec ($ch);</span><br><span class=\"line\">       curl_close($ch);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> $result;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$url_page = <span class=\"string\">\"http://www.google.com\"</span>;</span><br><span class=\"line\">$user_agent = <span class=\"string\">\"Mozilla/4.0\"</span>;</span><br><span class=\"line\">$proxy = <span class=\"string\">\"http://192.11.222.124:8000\"</span>;</span><br><span class=\"line\">$string = curl_string($url_page,$user_agent,$proxy);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $string;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"PHPCMS V9 “密码重试次数太多，请过-xxx分钟后重新登录！”的解决办法","published":1,"author":"xiemx","comments":1,"date":"2015-09-28T18:09:35.000Z","_content":"找到文件 /phpcms/modules/admin/index.php\n\n将如下代码注释掉：\n```php\nif($rtime['times'] >= $maxloginfailedtimes) {\n$minute = 60-floor((SYS_TIME-$rtime['logintime'])/60);\nshowmessage(L('wait_1_hour',array('minute'=>$minute)));\n}\n```\n注意哦，一共是4行。","source":"_posts/phpcms-v9-password-retry-too-more.md","raw":"---\nlayout: post\ntitle: PHPCMS V9 “密码重试次数太多，请过-xxx分钟后重新登录！”的解决办法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-09-29 02:09:35\ntags: [ php, debug, CMS ]\ncategories:\n    - php\n# permalink: '/2015/09/29/phpcms-v9%e5%af%86%e7%a0%81%e9%87%8d%e8%af%95%e6%ac%a1%e6%95%b0%e5%a4%aa%e5%a4%9a%ef%bc%8c%e8%af%b7%e8%bf%87-xxx%e5%88%86%e9%92%9f%e5%90%8e%e9%87%8d%e6%96%b0%e7%99%bb%e5%bd%95%ef%bc%81'\n---\n找到文件 /phpcms/modules/admin/index.php\n\n将如下代码注释掉：\n```php\nif($rtime['times'] >= $maxloginfailedtimes) {\n$minute = 60-floor((SYS_TIME-$rtime['logintime'])/60);\nshowmessage(L('wait_1_hour',array('minute'=>$minute)));\n}\n```\n注意哦，一共是4行。","slug":"phpcms-v9-password-retry-too-more","updated":"2019-10-21T09:02:14.347Z","photos":[],"link":"","_id":"ck42dyiep006fu9uricgx4r1l","content":"<p>找到文件 /phpcms/modules/admin/index.php</p>\n<p>将如下代码注释掉：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($rtime[<span class=\"string\">'times'</span>] &gt;= $maxloginfailedtimes) &#123;</span><br><span class=\"line\">$minute = <span class=\"number\">60</span>-floor((SYS_TIME-$rtime[<span class=\"string\">'logintime'</span>])/<span class=\"number\">60</span>);</span><br><span class=\"line\">showmessage(L(<span class=\"string\">'wait_1_hour'</span>,<span class=\"keyword\">array</span>(<span class=\"string\">'minute'</span>=&gt;$minute)));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意哦，一共是4行。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>找到文件 /phpcms/modules/admin/index.php</p>\n<p>将如下代码注释掉：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($rtime[<span class=\"string\">'times'</span>] &gt;= $maxloginfailedtimes) &#123;</span><br><span class=\"line\">$minute = <span class=\"number\">60</span>-floor((SYS_TIME-$rtime[<span class=\"string\">'logintime'</span>])/<span class=\"number\">60</span>);</span><br><span class=\"line\">showmessage(L(<span class=\"string\">'wait_1_hour'</span>,<span class=\"keyword\">array</span>(<span class=\"string\">'minute'</span>=&gt;$minute)));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意哦，一共是4行。</p>\n"},{"layout":"post","title":"phpmyadmin上传文件大小修改限制","published":1,"author":"xiemx","comments":1,"date":"2015-08-23T18:08:12.000Z","_content":"修改phpmyadmin上传文件大小限制主要分修改php.ini配置文件和phpmyadmin配置文件两个步骤。\n\n#### 第一步：修改php.ini配置文件中文件上传大小配置**\n\n此步骤与一般的php.ini 配置文件上传功能方法一致，需要修改php.ini配置文件中`upload_max_filesize`和`post_max_size`两个选项值\n\n#### 第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\n\n如果想要phpmyadmin上传大文件，还需修改php.ini配置文件中的`max_execution_time`（php页面执行最大时间）、 `max_input_time`（php页面接受数据最大时间）、`memory_limit`（php页面占用的最大内存）三个配置选项，这是因为 phpmyadmin上传大文件时，php页面的执行时间、内存占用也势必变得更长更大，其需要php运行环境的配合，光修改上传文件大小限制是不够的。\n\n#### 第三步：修改phpmyadmin配置文件\n\n在完成php.ini的相关配置后，还需要修改phpmyadmin配置。\n\n1、修改phpmyadmin config配置文件中的`$cfg［'ExecTimeLimit'］`配置选项，默认值是300，需要修改为0，即没有时间限制。\n\n2、修改phpmyadmin安装根目录下的import页面中的`$memory_limit`\n\n说明：首选读取php.ini配置文件中的内存配置选项memory_limit，如果为空则默认内存大小限制为2M，如果没有限制则内存大小限制为10M，你可以结合你php.ini配置文件中的相关信息修改这段代码。\n\n至此，经过修改php.ini配置文件中的文件上传配置选项以及phpmyadmin配置文件后，即可解决phpmyadmin上传文件大小限制问题，从而实现phpmyadmin上传大文件功能。\n","source":"_posts/phpmyadmin-upload-limit-size.md","raw":"---\nlayout: post\ntitle: phpmyadmin上传文件大小修改限制\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-08-24 02:08:12\ntags: [ mysql, phpmyadmin, php, database]\ncategories:\n    - mysql\n# permalink: '/2015/08/24/phpmyadmin%e4%b8%8a%e4%bc%a0%e6%96%87%e4%bb%b6%e5%a4%a7%e5%b0%8f%e4%bf%ae%e6%94%b9%e9%99%90%e5%88%b6'\n---\n修改phpmyadmin上传文件大小限制主要分修改php.ini配置文件和phpmyadmin配置文件两个步骤。\n\n#### 第一步：修改php.ini配置文件中文件上传大小配置**\n\n此步骤与一般的php.ini 配置文件上传功能方法一致，需要修改php.ini配置文件中`upload_max_filesize`和`post_max_size`两个选项值\n\n#### 第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\n\n如果想要phpmyadmin上传大文件，还需修改php.ini配置文件中的`max_execution_time`（php页面执行最大时间）、 `max_input_time`（php页面接受数据最大时间）、`memory_limit`（php页面占用的最大内存）三个配置选项，这是因为 phpmyadmin上传大文件时，php页面的执行时间、内存占用也势必变得更长更大，其需要php运行环境的配合，光修改上传文件大小限制是不够的。\n\n#### 第三步：修改phpmyadmin配置文件\n\n在完成php.ini的相关配置后，还需要修改phpmyadmin配置。\n\n1、修改phpmyadmin config配置文件中的`$cfg［'ExecTimeLimit'］`配置选项，默认值是300，需要修改为0，即没有时间限制。\n\n2、修改phpmyadmin安装根目录下的import页面中的`$memory_limit`\n\n说明：首选读取php.ini配置文件中的内存配置选项memory_limit，如果为空则默认内存大小限制为2M，如果没有限制则内存大小限制为10M，你可以结合你php.ini配置文件中的相关信息修改这段代码。\n\n至此，经过修改php.ini配置文件中的文件上传配置选项以及phpmyadmin配置文件后，即可解决phpmyadmin上传文件大小限制问题，从而实现phpmyadmin上传大文件功能。\n","slug":"phpmyadmin-upload-limit-size","updated":"2019-10-21T09:02:02.048Z","photos":[],"link":"","_id":"ck42dyier006ju9urjnalmtlb","content":"<p>修改phpmyadmin上传文件大小限制主要分修改php.ini配置文件和phpmyadmin配置文件两个步骤。</p>\n<h4 id=\"第一步：修改php-ini配置文件中文件上传大小配置\"><a href=\"#第一步：修改php-ini配置文件中文件上传大小配置\" class=\"headerlink\" title=\"第一步：修改php.ini配置文件中文件上传大小配置**\"></a>第一步：修改php.ini配置文件中文件上传大小配置**</h4><p>此步骤与一般的php.ini 配置文件上传功能方法一致，需要修改php.ini配置文件中<code>upload_max_filesize</code>和<code>post_max_size</code>两个选项值</p>\n<h4 id=\"第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\"><a href=\"#第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\" class=\"headerlink\" title=\"第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\"></a>第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能</h4><p>如果想要phpmyadmin上传大文件，还需修改php.ini配置文件中的<code>max_execution_time</code>（php页面执行最大时间）、 <code>max_input_time</code>（php页面接受数据最大时间）、<code>memory_limit</code>（php页面占用的最大内存）三个配置选项，这是因为 phpmyadmin上传大文件时，php页面的执行时间、内存占用也势必变得更长更大，其需要php运行环境的配合，光修改上传文件大小限制是不够的。</p>\n<h4 id=\"第三步：修改phpmyadmin配置文件\"><a href=\"#第三步：修改phpmyadmin配置文件\" class=\"headerlink\" title=\"第三步：修改phpmyadmin配置文件\"></a>第三步：修改phpmyadmin配置文件</h4><p>在完成php.ini的相关配置后，还需要修改phpmyadmin配置。</p>\n<p>1、修改phpmyadmin config配置文件中的<code>$cfg［&#39;ExecTimeLimit&#39;］</code>配置选项，默认值是300，需要修改为0，即没有时间限制。</p>\n<p>2、修改phpmyadmin安装根目录下的import页面中的<code>$memory_limit</code></p>\n<p>说明：首选读取php.ini配置文件中的内存配置选项memory_limit，如果为空则默认内存大小限制为2M，如果没有限制则内存大小限制为10M，你可以结合你php.ini配置文件中的相关信息修改这段代码。</p>\n<p>至此，经过修改php.ini配置文件中的文件上传配置选项以及phpmyadmin配置文件后，即可解决phpmyadmin上传文件大小限制问题，从而实现phpmyadmin上传大文件功能。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>修改phpmyadmin上传文件大小限制主要分修改php.ini配置文件和phpmyadmin配置文件两个步骤。</p>\n<h4 id=\"第一步：修改php-ini配置文件中文件上传大小配置\"><a href=\"#第一步：修改php-ini配置文件中文件上传大小配置\" class=\"headerlink\" title=\"第一步：修改php.ini配置文件中文件上传大小配置**\"></a>第一步：修改php.ini配置文件中文件上传大小配置**</h4><p>此步骤与一般的php.ini 配置文件上传功能方法一致，需要修改php.ini配置文件中<code>upload_max_filesize</code>和<code>post_max_size</code>两个选项值</p>\n<h4 id=\"第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\"><a href=\"#第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\" class=\"headerlink\" title=\"第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能\"></a>第二步：修改php执行时间及内存限制实现phpmyadmin上传大文件功能</h4><p>如果想要phpmyadmin上传大文件，还需修改php.ini配置文件中的<code>max_execution_time</code>（php页面执行最大时间）、 <code>max_input_time</code>（php页面接受数据最大时间）、<code>memory_limit</code>（php页面占用的最大内存）三个配置选项，这是因为 phpmyadmin上传大文件时，php页面的执行时间、内存占用也势必变得更长更大，其需要php运行环境的配合，光修改上传文件大小限制是不够的。</p>\n<h4 id=\"第三步：修改phpmyadmin配置文件\"><a href=\"#第三步：修改phpmyadmin配置文件\" class=\"headerlink\" title=\"第三步：修改phpmyadmin配置文件\"></a>第三步：修改phpmyadmin配置文件</h4><p>在完成php.ini的相关配置后，还需要修改phpmyadmin配置。</p>\n<p>1、修改phpmyadmin config配置文件中的<code>$cfg［&#39;ExecTimeLimit&#39;］</code>配置选项，默认值是300，需要修改为0，即没有时间限制。</p>\n<p>2、修改phpmyadmin安装根目录下的import页面中的<code>$memory_limit</code></p>\n<p>说明：首选读取php.ini配置文件中的内存配置选项memory_limit，如果为空则默认内存大小限制为2M，如果没有限制则内存大小限制为10M，你可以结合你php.ini配置文件中的相关信息修改这段代码。</p>\n<p>至此，经过修改php.ini配置文件中的文件上传配置选项以及phpmyadmin配置文件后，即可解决phpmyadmin上传文件大小限制问题，从而实现phpmyadmin上传大文件功能。</p>\n"},{"layout":"post","title":"PostgreSQL查看复制状态","published":1,"author":"xiemx","comments":1,"date":"2019-07-08T03:07:36.000Z","_content":"#### postgresql查看复制状态，master上执行\n```sql\n#select * from pg_stat_replication; \npostgres=# select * from pg_stat_replication;\n-[ RECORD 1 ]----+------------------------------\npid              | 13321\nusesysid         | 17019\nusename          | replication\napplication_name | walreceiver\nclient_addr      | 10.0.0.81\nclient_hostname  | \nclient_port      | 42809\nbackend_start    | 2016-08-11 10:57:35.856289+08\nbackend_xmin     | \nstate            | streaming --同步状态\nsent_location    | 1/E0CE9750\nwrite_location   | 1/E0CE9750\nflush_location   | 1/E0CE9750\nreplay_location  | 1/E0CE9750\nsync_priority    | 0\nsync_state       | async  --同步模式\n\nstate: 同步状态\n    streaming : 同步\n    startup : 连接中\n    catchup: 同步中\n\nsync_state: 同步模式.\n    async : 异步\n    sync : 同步\n    potential: 虽然现在是异步,但有可能提升到同步\n```\n#### 查看复制的延迟有多少，字节单位，master上执行 \n```sql\n#select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; \n\nposrgresql=# select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; \n pg_xlog_location_diff \n-----------------------\n                      0\n(1 row)\n```\n#### slave上查看sql滞后时间\n```sql\nSELECT CASE WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location()\n    THEN 0\n    ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())\n    END AS log_delay;\n\npostgres=# SELECT CASE WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location()\npostgres-#     THEN 0\npostgres-#     ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())\npostgres-#     END AS log_delay;\n log_delay\n-----------\n         0\n(1 row)\n```\n#### slave上查看是否处于recovery模式\n```sql\nselect pg_is_in_recovery();\npostgres=# select pg_is_in_recovery();\n pg_is_in_recovery\n-------------------\n t\n(1 row)\n```\n#### slave上查看最新的reploy时间戳\n```sql\n#select pg_last_xact_replay_timestamp();\npostgres=# select pg_last_xact_replay_timestamp();\n pg_last_xact_replay_timestamp\n-------------------------------\n 2019-07-08 03:01:33.854131+00\n(1 row)\n```\n\n#### slave上查看最新的reploy位置\n```sql\n#select pg_last_xlog_replay_location();\npostgres=# select pg_last_xlog_replay_location();\n pg_last_xlog_replay_location\n------------------------------\n 220C/56EB4C10\n(1 row)\n```","source":"_posts/postgresql-replica-status.md","raw":"---\nlayout: post\ntitle: PostgreSQL查看复制状态\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-07-08 11:07:36\ntags: [ postgresql, database ]\ncategories:\n    - postgresql\n# permalink: '/2019/07/08/postgresql%e6%9f%a5%e7%9c%8b%e5%a4%8d%e5%88%b6%e7%8a%b6%e6%80%81'\n---\n#### postgresql查看复制状态，master上执行\n```sql\n#select * from pg_stat_replication; \npostgres=# select * from pg_stat_replication;\n-[ RECORD 1 ]----+------------------------------\npid              | 13321\nusesysid         | 17019\nusename          | replication\napplication_name | walreceiver\nclient_addr      | 10.0.0.81\nclient_hostname  | \nclient_port      | 42809\nbackend_start    | 2016-08-11 10:57:35.856289+08\nbackend_xmin     | \nstate            | streaming --同步状态\nsent_location    | 1/E0CE9750\nwrite_location   | 1/E0CE9750\nflush_location   | 1/E0CE9750\nreplay_location  | 1/E0CE9750\nsync_priority    | 0\nsync_state       | async  --同步模式\n\nstate: 同步状态\n    streaming : 同步\n    startup : 连接中\n    catchup: 同步中\n\nsync_state: 同步模式.\n    async : 异步\n    sync : 同步\n    potential: 虽然现在是异步,但有可能提升到同步\n```\n#### 查看复制的延迟有多少，字节单位，master上执行 \n```sql\n#select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; \n\nposrgresql=# select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; \n pg_xlog_location_diff \n-----------------------\n                      0\n(1 row)\n```\n#### slave上查看sql滞后时间\n```sql\nSELECT CASE WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location()\n    THEN 0\n    ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())\n    END AS log_delay;\n\npostgres=# SELECT CASE WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location()\npostgres-#     THEN 0\npostgres-#     ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())\npostgres-#     END AS log_delay;\n log_delay\n-----------\n         0\n(1 row)\n```\n#### slave上查看是否处于recovery模式\n```sql\nselect pg_is_in_recovery();\npostgres=# select pg_is_in_recovery();\n pg_is_in_recovery\n-------------------\n t\n(1 row)\n```\n#### slave上查看最新的reploy时间戳\n```sql\n#select pg_last_xact_replay_timestamp();\npostgres=# select pg_last_xact_replay_timestamp();\n pg_last_xact_replay_timestamp\n-------------------------------\n 2019-07-08 03:01:33.854131+00\n(1 row)\n```\n\n#### slave上查看最新的reploy位置\n```sql\n#select pg_last_xlog_replay_location();\npostgres=# select pg_last_xlog_replay_location();\n pg_last_xlog_replay_location\n------------------------------\n 220C/56EB4C10\n(1 row)\n```","slug":"postgresql-replica-status","updated":"2019-10-19T09:40:34.388Z","photos":[],"link":"","_id":"ck42dyiet006nu9urx1wzlpxr","content":"<h4 id=\"postgresql查看复制状态，master上执行\"><a href=\"#postgresql查看复制状态，master上执行\" class=\"headerlink\" title=\"postgresql查看复制状态，master上执行\"></a>postgresql查看复制状态，master上执行</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select * from pg_stat_replication; </span></span><br><span class=\"line\">postgres=<span class=\"comment\"># select * from pg_stat_replication;</span></span><br><span class=\"line\">-[ RECORD 1 ]<span class=\"comment\">----+------------------------------</span></span><br><span class=\"line\">pid              | 13321</span><br><span class=\"line\">usesysid         | 17019</span><br><span class=\"line\">usename          | replication</span><br><span class=\"line\">application_name | walreceiver</span><br><span class=\"line\">client_addr      | 10.0.0.81</span><br><span class=\"line\">client_hostname  | </span><br><span class=\"line\">client_port      | 42809</span><br><span class=\"line\">backend_start    | 2016-08-11 10:57:35.856289+08</span><br><span class=\"line\">backend_xmin     | </span><br><span class=\"line\">state            | streaming <span class=\"comment\">--同步状态</span></span><br><span class=\"line\">sent_location    | 1/E0CE9750</span><br><span class=\"line\">write_location   | 1/E0CE9750</span><br><span class=\"line\">flush_location   | 1/E0CE9750</span><br><span class=\"line\">replay_location  | 1/E0CE9750</span><br><span class=\"line\">sync_priority    | 0</span><br><span class=\"line\">sync_state       | async  <span class=\"comment\">--同步模式</span></span><br><span class=\"line\"></span><br><span class=\"line\">state: 同步状态</span><br><span class=\"line\">    streaming : 同步</span><br><span class=\"line\">    startup : 连接中</span><br><span class=\"line\">    catchup: 同步中</span><br><span class=\"line\"></span><br><span class=\"line\">sync_state: 同步模式.</span><br><span class=\"line\">    async : 异步</span><br><span class=\"line\">    sync : 同步</span><br><span class=\"line\">    potential: 虽然现在是异步,但有可能提升到同步</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看复制的延迟有多少，字节单位，master上执行\"><a href=\"#查看复制的延迟有多少，字节单位，master上执行\" class=\"headerlink\" title=\"查看复制的延迟有多少，字节单位，master上执行\"></a>查看复制的延迟有多少，字节单位，master上执行</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; </span></span><br><span class=\"line\"></span><br><span class=\"line\">posrgresql=<span class=\"comment\"># select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; </span></span><br><span class=\"line\"> pg_xlog_location_diff </span><br><span class=\"line\"><span class=\"comment\">-----------------------</span></span><br><span class=\"line\">                      0</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看sql滞后时间\"><a href=\"#slave上查看sql滞后时间\" class=\"headerlink\" title=\"slave上查看sql滞后时间\"></a>slave上查看sql滞后时间</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> pg_last_xlog_receive_location() = pg_last_xlog_replay_location()</span><br><span class=\"line\">    <span class=\"keyword\">THEN</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">ELSE</span> <span class=\"keyword\">EXTRACT</span> (EPOCH <span class=\"keyword\">FROM</span> <span class=\"keyword\">now</span>() - pg_last_xact_replay_timestamp())</span><br><span class=\"line\">    <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> log_delay;</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=<span class=\"comment\"># SELECT CASE WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location()</span></span><br><span class=\"line\">postgres-<span class=\"comment\">#     THEN 0</span></span><br><span class=\"line\">postgres-<span class=\"comment\">#     ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())</span></span><br><span class=\"line\">postgres-<span class=\"comment\">#     END AS log_delay;</span></span><br><span class=\"line\"> log_delay</span><br><span class=\"line\"><span class=\"comment\">-----------</span></span><br><span class=\"line\">         0</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看是否处于recovery模式\"><a href=\"#slave上查看是否处于recovery模式\" class=\"headerlink\" title=\"slave上查看是否处于recovery模式\"></a>slave上查看是否处于recovery模式</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> pg_is_in_recovery();</span><br><span class=\"line\">postgres=<span class=\"comment\"># select pg_is_in_recovery();</span></span><br><span class=\"line\"> pg_is_in_recovery</span><br><span class=\"line\"><span class=\"comment\">-------------------</span></span><br><span class=\"line\"> t</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看最新的reploy时间戳\"><a href=\"#slave上查看最新的reploy时间戳\" class=\"headerlink\" title=\"slave上查看最新的reploy时间戳\"></a>slave上查看最新的reploy时间戳</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select pg_last_xact_replay_timestamp();</span></span><br><span class=\"line\">postgres=<span class=\"comment\"># select pg_last_xact_replay_timestamp();</span></span><br><span class=\"line\"> pg_last_xact_replay_timestamp</span><br><span class=\"line\"><span class=\"comment\">-------------------------------</span></span><br><span class=\"line\"> 2019-07-08 03:01:33.854131+00</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看最新的reploy位置\"><a href=\"#slave上查看最新的reploy位置\" class=\"headerlink\" title=\"slave上查看最新的reploy位置\"></a>slave上查看最新的reploy位置</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select pg_last_xlog_replay_location();</span></span><br><span class=\"line\">postgres=<span class=\"comment\"># select pg_last_xlog_replay_location();</span></span><br><span class=\"line\"> pg_last_xlog_replay_location</span><br><span class=\"line\"><span class=\"comment\">------------------------------</span></span><br><span class=\"line\"> 220C/56EB4C10</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"postgresql查看复制状态，master上执行\"><a href=\"#postgresql查看复制状态，master上执行\" class=\"headerlink\" title=\"postgresql查看复制状态，master上执行\"></a>postgresql查看复制状态，master上执行</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select * from pg_stat_replication; </span></span><br><span class=\"line\">postgres=<span class=\"comment\"># select * from pg_stat_replication;</span></span><br><span class=\"line\">-[ RECORD 1 ]<span class=\"comment\">----+------------------------------</span></span><br><span class=\"line\">pid              | 13321</span><br><span class=\"line\">usesysid         | 17019</span><br><span class=\"line\">usename          | replication</span><br><span class=\"line\">application_name | walreceiver</span><br><span class=\"line\">client_addr      | 10.0.0.81</span><br><span class=\"line\">client_hostname  | </span><br><span class=\"line\">client_port      | 42809</span><br><span class=\"line\">backend_start    | 2016-08-11 10:57:35.856289+08</span><br><span class=\"line\">backend_xmin     | </span><br><span class=\"line\">state            | streaming <span class=\"comment\">--同步状态</span></span><br><span class=\"line\">sent_location    | 1/E0CE9750</span><br><span class=\"line\">write_location   | 1/E0CE9750</span><br><span class=\"line\">flush_location   | 1/E0CE9750</span><br><span class=\"line\">replay_location  | 1/E0CE9750</span><br><span class=\"line\">sync_priority    | 0</span><br><span class=\"line\">sync_state       | async  <span class=\"comment\">--同步模式</span></span><br><span class=\"line\"></span><br><span class=\"line\">state: 同步状态</span><br><span class=\"line\">    streaming : 同步</span><br><span class=\"line\">    startup : 连接中</span><br><span class=\"line\">    catchup: 同步中</span><br><span class=\"line\"></span><br><span class=\"line\">sync_state: 同步模式.</span><br><span class=\"line\">    async : 异步</span><br><span class=\"line\">    sync : 同步</span><br><span class=\"line\">    potential: 虽然现在是异步,但有可能提升到同步</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看复制的延迟有多少，字节单位，master上执行\"><a href=\"#查看复制的延迟有多少，字节单位，master上执行\" class=\"headerlink\" title=\"查看复制的延迟有多少，字节单位，master上执行\"></a>查看复制的延迟有多少，字节单位，master上执行</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; </span></span><br><span class=\"line\"></span><br><span class=\"line\">posrgresql=<span class=\"comment\"># select pg_xlog_location_diff(sent_location, replay_location) from pg_stat_replication; </span></span><br><span class=\"line\"> pg_xlog_location_diff </span><br><span class=\"line\"><span class=\"comment\">-----------------------</span></span><br><span class=\"line\">                      0</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看sql滞后时间\"><a href=\"#slave上查看sql滞后时间\" class=\"headerlink\" title=\"slave上查看sql滞后时间\"></a>slave上查看sql滞后时间</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> pg_last_xlog_receive_location() = pg_last_xlog_replay_location()</span><br><span class=\"line\">    <span class=\"keyword\">THEN</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">ELSE</span> <span class=\"keyword\">EXTRACT</span> (EPOCH <span class=\"keyword\">FROM</span> <span class=\"keyword\">now</span>() - pg_last_xact_replay_timestamp())</span><br><span class=\"line\">    <span class=\"keyword\">END</span> <span class=\"keyword\">AS</span> log_delay;</span><br><span class=\"line\"></span><br><span class=\"line\">postgres=<span class=\"comment\"># SELECT CASE WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location()</span></span><br><span class=\"line\">postgres-<span class=\"comment\">#     THEN 0</span></span><br><span class=\"line\">postgres-<span class=\"comment\">#     ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())</span></span><br><span class=\"line\">postgres-<span class=\"comment\">#     END AS log_delay;</span></span><br><span class=\"line\"> log_delay</span><br><span class=\"line\"><span class=\"comment\">-----------</span></span><br><span class=\"line\">         0</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看是否处于recovery模式\"><a href=\"#slave上查看是否处于recovery模式\" class=\"headerlink\" title=\"slave上查看是否处于recovery模式\"></a>slave上查看是否处于recovery模式</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> pg_is_in_recovery();</span><br><span class=\"line\">postgres=<span class=\"comment\"># select pg_is_in_recovery();</span></span><br><span class=\"line\"> pg_is_in_recovery</span><br><span class=\"line\"><span class=\"comment\">-------------------</span></span><br><span class=\"line\"> t</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看最新的reploy时间戳\"><a href=\"#slave上查看最新的reploy时间戳\" class=\"headerlink\" title=\"slave上查看最新的reploy时间戳\"></a>slave上查看最新的reploy时间戳</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select pg_last_xact_replay_timestamp();</span></span><br><span class=\"line\">postgres=<span class=\"comment\"># select pg_last_xact_replay_timestamp();</span></span><br><span class=\"line\"> pg_last_xact_replay_timestamp</span><br><span class=\"line\"><span class=\"comment\">-------------------------------</span></span><br><span class=\"line\"> 2019-07-08 03:01:33.854131+00</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"slave上查看最新的reploy位置\"><a href=\"#slave上查看最新的reploy位置\" class=\"headerlink\" title=\"slave上查看最新的reploy位置\"></a>slave上查看最新的reploy位置</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#select pg_last_xlog_replay_location();</span></span><br><span class=\"line\">postgres=<span class=\"comment\"># select pg_last_xlog_replay_location();</span></span><br><span class=\"line\"> pg_last_xlog_replay_location</span><br><span class=\"line\"><span class=\"comment\">------------------------------</span></span><br><span class=\"line\"> 220C/56EB4C10</span><br><span class=\"line\">(1 row)</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"PXE批量在线安装操作系统","published":1,"author":"xiemx","comments":1,"date":"2016-01-16T23:01:10.000Z","_content":"pxe 通过网络方式安装部署\n\n* dhcp:动态管理协议\n* 网卡支持tftp(文件下载使用,不支持验证，安全系数低,只下载些基础文件）使用http下载ks.conf(应答文件)/rpm包\n\n### 流程\n```\n客户端向服务端申请下载 dhcp.client  服务端返回信息客户端下载，并分配给客户端ip地址\n客户端拿到ip地址后去tftp服务端下载pxelinux.0 并在客户端安装pxelinux.0(引导安装程序）\n客户端去下载配置文件 pxelinux.cfg/default 安装后出现安装标签 指引安装（例 install foution0)\n选择安装标签后 到服务端下载unlinuz(微型运行平台） initrd(基本的命令 程序） ks文件路径（自动安装使用）\n然后出现安装界面 开始交互式安装\n如果自动安装去找http服务器，下载应答ks.cfg,下载rpm包 自动安装后会再此运行ks.cfg脚本\n```\n \n\n### 原理图：\n```\nclients：dhcp client\n------------------------------> dhcp server\n<------------------------------\n分配地址池ip，告知tftp的地址\n请求pxelinux.0文件\n------------------------------> tftp server\n<------------------------------\npxelinux.0\n引导界面\n-------------------------------> tftp server\n<------------------------------\npxelinux.cfg/default\n安装界面\n-------------------------------> tftp server\n<-------------------------------\nvmlinuxz initrd ks文件路径\n\n-------------------------------> http server\n<------------------------------\nks.cfg rpm包\n<-------------------------------\n自动执行脚本\n安装完成\n```\n### 操作步骤\n\n依据以上原理图可以得知PXE过程需要用到的文件有pxelinux.o、default、ks.cfg、vmlinuxz、initrd.img。需要用到的协议tftp、dhcp、http。\n\npxelinux.0 来源syslinux软件包\nks.cfg 来源kickstart，也可以通过安装system-config-kickstart来图形化配置\nvmlinuz 来源于iso镜像文件\ndefault 需要手工配置\ninitrd.img 来源iso镜像文件\n\n1.安装软件\n```\nyum install httpd dhcp tftp-server -y\n```\n2.配置dhcp\n```\n[root@linux]# cat /etc/dhcpd.conf\nddns-update-style interim;\nallow booting; #定义能够PXE启动\nallow bootp; #定义支持bootp\nnext-server 192.168.0.1; #TFTP Server的IP地址\nfilename \"pxelinux.0\"; #bootstrap 文件(NBP)\n\ndefault-lease-time 1800;\nmax-lease-time 7200;\nping-check true;\noption domain-name-servers 192.168.0.1;\n\nsubnet 192.168.0.0 netmask 255.255.255.0\n{\nrange 192.168.0.128 192.168.0.220;\noption routers 192.168.0.1;\noption broadcast-address 192.168.0.255;\n}\n```\n3.启动tftp\n```\n[root@linux]# cat /etc/xinetd.d/tftp\nservice tftp\n{\nsocket_type = dgram\nprotocol = udp\nwait = yes\nuser = root\nserver = /usr/sbin/in.tftpd\nserver_args = -s /var/lib/tftpboot   tftp服务根目录\ndisable = no   是否关闭tftp服务\nper_source = 11\ncps = 100 2\nflags = IPv4\n}\n\n重启xinetd服务\n```\n4.获取pxelinux.0文件\n```\n[root@linux]# rpm -ql syslinux | grep \"pxelinux.0\"\n/usr/lib/syslinux/pxelinux.0\n[root@linux]# cp /usr/lib/syslinux/pxelinux.0 /var/lib/tftpboot/\n```\n5.创建/var/lib/tftp/pxelinux.cfg目录、创建default文件\n```\n将 boot.msg initrd.img splash.png vesamenu.c32 vmlinuz 复制到/var/lib/tftpboot/\n\n[root@linux]# cat /tftpboot/pxelinux.cfg/default\n\ndefault vesamenu.c32   显示图形化引导界面，也可以写成default linux文本化界面\ntimeout 60     等待操作时间\ndisplay boot.msg    显示一些引导信息\n\nmenu background splash.jpg   背景图片\nmenu title Welcome to pxe Setup!   界面标题\n\nlabel 1\nmenu label Boot from ^local drive   安装1选项标题\nmenu default    60s无操作默认启动此选项\nlocalboot 0xffff\n\nlabel 2\nmenu label Install linux\nipappend 2\nkernel vmlinuz\nappend initrd=initrd.img ks=http://172.25.16.9/ks.cfg\n```\n6.将iso文件展开到http目录下\n\n7.生成ks.cfg文件\n\n  `system-config-kickstart`安装此图形化工具，生成自动应答脚本。也可以拷贝已安装系统中自动生成的脚本。\n\n8.关闭防火墙，selinux。测试http、tftp等服务都正常启动且文件都已放置可正常访问下载。","source":"_posts/pxe-kickstart.md","raw":"---\nlayout: post\ntitle: PXE批量在线安装操作系统\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-17 07:01:10\ntags: [ pxe, kickstart, linux ]\ncategories:\n    - linux\n# permalink: '/2016/01/17/pxe%e6%89%b9%e9%87%8f%e5%9c%a8%e7%ba%bf%e5%ae%89%e8%a3%85%e6%93%8d%e4%bd%9c%e7%b3%bb%e7%bb%9f'\n---\npxe 通过网络方式安装部署\n\n* dhcp:动态管理协议\n* 网卡支持tftp(文件下载使用,不支持验证，安全系数低,只下载些基础文件）使用http下载ks.conf(应答文件)/rpm包\n\n### 流程\n```\n客户端向服务端申请下载 dhcp.client  服务端返回信息客户端下载，并分配给客户端ip地址\n客户端拿到ip地址后去tftp服务端下载pxelinux.0 并在客户端安装pxelinux.0(引导安装程序）\n客户端去下载配置文件 pxelinux.cfg/default 安装后出现安装标签 指引安装（例 install foution0)\n选择安装标签后 到服务端下载unlinuz(微型运行平台） initrd(基本的命令 程序） ks文件路径（自动安装使用）\n然后出现安装界面 开始交互式安装\n如果自动安装去找http服务器，下载应答ks.cfg,下载rpm包 自动安装后会再此运行ks.cfg脚本\n```\n \n\n### 原理图：\n```\nclients：dhcp client\n------------------------------> dhcp server\n<------------------------------\n分配地址池ip，告知tftp的地址\n请求pxelinux.0文件\n------------------------------> tftp server\n<------------------------------\npxelinux.0\n引导界面\n-------------------------------> tftp server\n<------------------------------\npxelinux.cfg/default\n安装界面\n-------------------------------> tftp server\n<-------------------------------\nvmlinuxz initrd ks文件路径\n\n-------------------------------> http server\n<------------------------------\nks.cfg rpm包\n<-------------------------------\n自动执行脚本\n安装完成\n```\n### 操作步骤\n\n依据以上原理图可以得知PXE过程需要用到的文件有pxelinux.o、default、ks.cfg、vmlinuxz、initrd.img。需要用到的协议tftp、dhcp、http。\n\npxelinux.0 来源syslinux软件包\nks.cfg 来源kickstart，也可以通过安装system-config-kickstart来图形化配置\nvmlinuz 来源于iso镜像文件\ndefault 需要手工配置\ninitrd.img 来源iso镜像文件\n\n1.安装软件\n```\nyum install httpd dhcp tftp-server -y\n```\n2.配置dhcp\n```\n[root@linux]# cat /etc/dhcpd.conf\nddns-update-style interim;\nallow booting; #定义能够PXE启动\nallow bootp; #定义支持bootp\nnext-server 192.168.0.1; #TFTP Server的IP地址\nfilename \"pxelinux.0\"; #bootstrap 文件(NBP)\n\ndefault-lease-time 1800;\nmax-lease-time 7200;\nping-check true;\noption domain-name-servers 192.168.0.1;\n\nsubnet 192.168.0.0 netmask 255.255.255.0\n{\nrange 192.168.0.128 192.168.0.220;\noption routers 192.168.0.1;\noption broadcast-address 192.168.0.255;\n}\n```\n3.启动tftp\n```\n[root@linux]# cat /etc/xinetd.d/tftp\nservice tftp\n{\nsocket_type = dgram\nprotocol = udp\nwait = yes\nuser = root\nserver = /usr/sbin/in.tftpd\nserver_args = -s /var/lib/tftpboot   tftp服务根目录\ndisable = no   是否关闭tftp服务\nper_source = 11\ncps = 100 2\nflags = IPv4\n}\n\n重启xinetd服务\n```\n4.获取pxelinux.0文件\n```\n[root@linux]# rpm -ql syslinux | grep \"pxelinux.0\"\n/usr/lib/syslinux/pxelinux.0\n[root@linux]# cp /usr/lib/syslinux/pxelinux.0 /var/lib/tftpboot/\n```\n5.创建/var/lib/tftp/pxelinux.cfg目录、创建default文件\n```\n将 boot.msg initrd.img splash.png vesamenu.c32 vmlinuz 复制到/var/lib/tftpboot/\n\n[root@linux]# cat /tftpboot/pxelinux.cfg/default\n\ndefault vesamenu.c32   显示图形化引导界面，也可以写成default linux文本化界面\ntimeout 60     等待操作时间\ndisplay boot.msg    显示一些引导信息\n\nmenu background splash.jpg   背景图片\nmenu title Welcome to pxe Setup!   界面标题\n\nlabel 1\nmenu label Boot from ^local drive   安装1选项标题\nmenu default    60s无操作默认启动此选项\nlocalboot 0xffff\n\nlabel 2\nmenu label Install linux\nipappend 2\nkernel vmlinuz\nappend initrd=initrd.img ks=http://172.25.16.9/ks.cfg\n```\n6.将iso文件展开到http目录下\n\n7.生成ks.cfg文件\n\n  `system-config-kickstart`安装此图形化工具，生成自动应答脚本。也可以拷贝已安装系统中自动生成的脚本。\n\n8.关闭防火墙，selinux。测试http、tftp等服务都正常启动且文件都已放置可正常访问下载。","slug":"pxe-kickstart","updated":"2019-10-21T06:57:43.002Z","photos":[],"link":"","_id":"ck42dyieu006ru9urx7kxlwk3","content":"<p>pxe 通过网络方式安装部署</p>\n<ul>\n<li>dhcp:动态管理协议</li>\n<li>网卡支持tftp(文件下载使用,不支持验证，安全系数低,只下载些基础文件）使用http下载ks.conf(应答文件)/rpm包</li>\n</ul>\n<h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户端向服务端申请下载 dhcp.client  服务端返回信息客户端下载，并分配给客户端ip地址</span><br><span class=\"line\">客户端拿到ip地址后去tftp服务端下载pxelinux.0 并在客户端安装pxelinux.0(引导安装程序）</span><br><span class=\"line\">客户端去下载配置文件 pxelinux.cfg<span class=\"built_in\">/default </span>安装后出现安装标签 指引安装（例 install foution0)</span><br><span class=\"line\">选择安装标签后 到服务端下载unlinuz(微型运行平台） initrd(基本的命令 程序） ks文件路径（自动安装使用）</span><br><span class=\"line\">然后出现安装界面 开始交互式安装</span><br><span class=\"line\">如果自动安装去找http服务器，下载应答ks.cfg,下载rpm包 自动安装后会再此运行ks.cfg脚本</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"原理图：\"><a href=\"#原理图：\" class=\"headerlink\" title=\"原理图：\"></a>原理图：</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clients：dhcp client</span><br><span class=\"line\">------------------------------&gt; dhcp server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">分配地址池ip，告知tftp的地址</span><br><span class=\"line\">请求pxelinux.0文件</span><br><span class=\"line\">------------------------------&gt; tftp server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">pxelinux.0</span><br><span class=\"line\">引导界面</span><br><span class=\"line\">-------------------------------&gt; tftp server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">pxelinux.cfg/default</span><br><span class=\"line\">安装界面</span><br><span class=\"line\">-------------------------------&gt; tftp server</span><br><span class=\"line\">&lt;-------------------------------</span><br><span class=\"line\">vmlinuxz initrd ks文件路径</span><br><span class=\"line\"></span><br><span class=\"line\">-------------------------------&gt; http server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">ks.cfg rpm包</span><br><span class=\"line\">&lt;-------------------------------</span><br><span class=\"line\">自动执行脚本</span><br><span class=\"line\">安装完成</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h3><p>依据以上原理图可以得知PXE过程需要用到的文件有pxelinux.o、default、ks.cfg、vmlinuxz、initrd.img。需要用到的协议tftp、dhcp、http。</p>\n<p>pxelinux.0 来源syslinux软件包<br>ks.cfg 来源kickstart，也可以通过安装system-config-kickstart来图形化配置<br>vmlinuz 来源于iso镜像文件<br>default 需要手工配置<br>initrd.img 来源iso镜像文件</p>\n<p>1.安装软件</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> httpd dhcp tftp-<span class=\"keyword\">server</span> -y</span><br></pre></td></tr></table></figure>\n\n<p>2.配置dhcp</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>linux]# cat /etc/dhcpd.conf</span><br><span class=\"line\">ddns-update-style <span class=\"built_in\">int</span>erim;</span><br><span class=\"line\">allow booting; #定义能够PXE启动</span><br><span class=\"line\">allow bootp; #定义支持bootp</span><br><span class=\"line\">next-server <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span>; #TFTP Server的IP地址</span><br><span class=\"line\">filename <span class=\"string\">\"pxelinux.0\"</span>; #bootstrap 文件(NBP)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">default</span>-lease-time <span class=\"number\">1800</span>;</span><br><span class=\"line\">max-lease-time <span class=\"number\">7200</span>;</span><br><span class=\"line\">ping-check <span class=\"literal\">true</span>;</span><br><span class=\"line\">option domain-name-servers <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">subnet <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span> netmask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">range <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.128</span> <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.220</span>;</span><br><span class=\"line\">option routers <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span>;</span><br><span class=\"line\">option broadcast-address <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.255</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.启动tftp</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@linux]# cat /etc/xinetd.d/tftp</span><br><span class=\"line\">service tftp</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">socket_type = dgram</span><br><span class=\"line\">protocol = udp</span><br><span class=\"line\">wait = <span class=\"literal\">yes</span></span><br><span class=\"line\">user = root</span><br><span class=\"line\">server = /usr/sbin/<span class=\"keyword\">in</span>.tftpd</span><br><span class=\"line\">server_args = -s /var/lib/tftpboot   tftp服务根目录</span><br><span class=\"line\"><span class=\"builtin-name\">disable</span> = <span class=\"literal\">no</span>   是否关闭tftp服务</span><br><span class=\"line\">per_source = 11</span><br><span class=\"line\">cps = 100 2</span><br><span class=\"line\">flags = IPv4</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">重启xinetd服务</span><br></pre></td></tr></table></figure>\n\n<p>4.获取pxelinux.0文件</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@linux]# rpm -ql syslinux | <span class=\"keyword\">grep</span> <span class=\"string\">\"pxelinux.0\"</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>lib<span class=\"regexp\">/syslinux/</span>pxelinux.<span class=\"number\">0</span></span><br><span class=\"line\">[root@linux]# cp <span class=\"regexp\">/usr/</span>lib<span class=\"regexp\">/syslinux/</span>pxelinux.<span class=\"number\">0</span> <span class=\"regexp\">/var/</span>lib<span class=\"regexp\">/tftpboot/</span></span><br></pre></td></tr></table></figure>\n\n<p>5.创建/var/lib/tftp/pxelinux.cfg目录、创建default文件</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将 boot.msg initrd.img splash.png vesamenu.c32 vmlinuz 复制到/var/lib/tftpboot/</span><br><span class=\"line\"></span><br><span class=\"line\">[root@linux]# cat /tftpboot/pxelinux.cfg/default</span><br><span class=\"line\"></span><br><span class=\"line\">default vesamenu.c32   显示图形化引导界面，也可以写成default linux文本化界面</span><br><span class=\"line\">timeout 60     等待操作时间</span><br><span class=\"line\">display boot.msg    显示一些引导信息</span><br><span class=\"line\"></span><br><span class=\"line\">menu background splash.jpg   背景图片</span><br><span class=\"line\">menu title Welcome <span class=\"keyword\">to</span> pxe Setup!   界面标题</span><br><span class=\"line\"></span><br><span class=\"line\">label 1</span><br><span class=\"line\">menu label Boot <span class=\"keyword\">from</span> ^local drive   安装1选项标题</span><br><span class=\"line\">menu<span class=\"built_in\"> default </span>   60s无操作默认启动此选项</span><br><span class=\"line\">localboot 0xffff</span><br><span class=\"line\"></span><br><span class=\"line\">label 2</span><br><span class=\"line\">menu label Install linux</span><br><span class=\"line\">ipappend 2</span><br><span class=\"line\">kernel vmlinuz</span><br><span class=\"line\">append <span class=\"attribute\">initrd</span>=initrd.img <span class=\"attribute\">ks</span>=http://172.25.16.9/ks.cfg</span><br></pre></td></tr></table></figure>\n\n<p>6.将iso文件展开到http目录下</p>\n<p>7.生成ks.cfg文件</p>\n<p>  <code>system-config-kickstart</code>安装此图形化工具，生成自动应答脚本。也可以拷贝已安装系统中自动生成的脚本。</p>\n<p>8.关闭防火墙，selinux。测试http、tftp等服务都正常启动且文件都已放置可正常访问下载。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>pxe 通过网络方式安装部署</p>\n<ul>\n<li>dhcp:动态管理协议</li>\n<li>网卡支持tftp(文件下载使用,不支持验证，安全系数低,只下载些基础文件）使用http下载ks.conf(应答文件)/rpm包</li>\n</ul>\n<h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户端向服务端申请下载 dhcp.client  服务端返回信息客户端下载，并分配给客户端ip地址</span><br><span class=\"line\">客户端拿到ip地址后去tftp服务端下载pxelinux.0 并在客户端安装pxelinux.0(引导安装程序）</span><br><span class=\"line\">客户端去下载配置文件 pxelinux.cfg<span class=\"built_in\">/default </span>安装后出现安装标签 指引安装（例 install foution0)</span><br><span class=\"line\">选择安装标签后 到服务端下载unlinuz(微型运行平台） initrd(基本的命令 程序） ks文件路径（自动安装使用）</span><br><span class=\"line\">然后出现安装界面 开始交互式安装</span><br><span class=\"line\">如果自动安装去找http服务器，下载应答ks.cfg,下载rpm包 自动安装后会再此运行ks.cfg脚本</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"原理图：\"><a href=\"#原理图：\" class=\"headerlink\" title=\"原理图：\"></a>原理图：</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clients：dhcp client</span><br><span class=\"line\">------------------------------&gt; dhcp server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">分配地址池ip，告知tftp的地址</span><br><span class=\"line\">请求pxelinux.0文件</span><br><span class=\"line\">------------------------------&gt; tftp server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">pxelinux.0</span><br><span class=\"line\">引导界面</span><br><span class=\"line\">-------------------------------&gt; tftp server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">pxelinux.cfg/default</span><br><span class=\"line\">安装界面</span><br><span class=\"line\">-------------------------------&gt; tftp server</span><br><span class=\"line\">&lt;-------------------------------</span><br><span class=\"line\">vmlinuxz initrd ks文件路径</span><br><span class=\"line\"></span><br><span class=\"line\">-------------------------------&gt; http server</span><br><span class=\"line\">&lt;------------------------------</span><br><span class=\"line\">ks.cfg rpm包</span><br><span class=\"line\">&lt;-------------------------------</span><br><span class=\"line\">自动执行脚本</span><br><span class=\"line\">安装完成</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h3><p>依据以上原理图可以得知PXE过程需要用到的文件有pxelinux.o、default、ks.cfg、vmlinuxz、initrd.img。需要用到的协议tftp、dhcp、http。</p>\n<p>pxelinux.0 来源syslinux软件包<br>ks.cfg 来源kickstart，也可以通过安装system-config-kickstart来图形化配置<br>vmlinuz 来源于iso镜像文件<br>default 需要手工配置<br>initrd.img 来源iso镜像文件</p>\n<p>1.安装软件</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> httpd dhcp tftp-<span class=\"keyword\">server</span> -y</span><br></pre></td></tr></table></figure>\n\n<p>2.配置dhcp</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>linux]# cat /etc/dhcpd.conf</span><br><span class=\"line\">ddns-update-style <span class=\"built_in\">int</span>erim;</span><br><span class=\"line\">allow booting; #定义能够PXE启动</span><br><span class=\"line\">allow bootp; #定义支持bootp</span><br><span class=\"line\">next-server <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span>; #TFTP Server的IP地址</span><br><span class=\"line\">filename <span class=\"string\">\"pxelinux.0\"</span>; #bootstrap 文件(NBP)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">default</span>-lease-time <span class=\"number\">1800</span>;</span><br><span class=\"line\">max-lease-time <span class=\"number\">7200</span>;</span><br><span class=\"line\">ping-check <span class=\"literal\">true</span>;</span><br><span class=\"line\">option domain-name-servers <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">subnet <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span> netmask <span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">range <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.128</span> <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.220</span>;</span><br><span class=\"line\">option routers <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span>;</span><br><span class=\"line\">option broadcast-address <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.255</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>3.启动tftp</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@linux]# cat /etc/xinetd.d/tftp</span><br><span class=\"line\">service tftp</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">socket_type = dgram</span><br><span class=\"line\">protocol = udp</span><br><span class=\"line\">wait = <span class=\"literal\">yes</span></span><br><span class=\"line\">user = root</span><br><span class=\"line\">server = /usr/sbin/<span class=\"keyword\">in</span>.tftpd</span><br><span class=\"line\">server_args = -s /var/lib/tftpboot   tftp服务根目录</span><br><span class=\"line\"><span class=\"builtin-name\">disable</span> = <span class=\"literal\">no</span>   是否关闭tftp服务</span><br><span class=\"line\">per_source = 11</span><br><span class=\"line\">cps = 100 2</span><br><span class=\"line\">flags = IPv4</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">重启xinetd服务</span><br></pre></td></tr></table></figure>\n\n<p>4.获取pxelinux.0文件</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@linux]# rpm -ql syslinux | <span class=\"keyword\">grep</span> <span class=\"string\">\"pxelinux.0\"</span></span><br><span class=\"line\"><span class=\"regexp\">/usr/</span>lib<span class=\"regexp\">/syslinux/</span>pxelinux.<span class=\"number\">0</span></span><br><span class=\"line\">[root@linux]# cp <span class=\"regexp\">/usr/</span>lib<span class=\"regexp\">/syslinux/</span>pxelinux.<span class=\"number\">0</span> <span class=\"regexp\">/var/</span>lib<span class=\"regexp\">/tftpboot/</span></span><br></pre></td></tr></table></figure>\n\n<p>5.创建/var/lib/tftp/pxelinux.cfg目录、创建default文件</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将 boot.msg initrd.img splash.png vesamenu.c32 vmlinuz 复制到/var/lib/tftpboot/</span><br><span class=\"line\"></span><br><span class=\"line\">[root@linux]# cat /tftpboot/pxelinux.cfg/default</span><br><span class=\"line\"></span><br><span class=\"line\">default vesamenu.c32   显示图形化引导界面，也可以写成default linux文本化界面</span><br><span class=\"line\">timeout 60     等待操作时间</span><br><span class=\"line\">display boot.msg    显示一些引导信息</span><br><span class=\"line\"></span><br><span class=\"line\">menu background splash.jpg   背景图片</span><br><span class=\"line\">menu title Welcome <span class=\"keyword\">to</span> pxe Setup!   界面标题</span><br><span class=\"line\"></span><br><span class=\"line\">label 1</span><br><span class=\"line\">menu label Boot <span class=\"keyword\">from</span> ^local drive   安装1选项标题</span><br><span class=\"line\">menu<span class=\"built_in\"> default </span>   60s无操作默认启动此选项</span><br><span class=\"line\">localboot 0xffff</span><br><span class=\"line\"></span><br><span class=\"line\">label 2</span><br><span class=\"line\">menu label Install linux</span><br><span class=\"line\">ipappend 2</span><br><span class=\"line\">kernel vmlinuz</span><br><span class=\"line\">append <span class=\"attribute\">initrd</span>=initrd.img <span class=\"attribute\">ks</span>=http://172.25.16.9/ks.cfg</span><br></pre></td></tr></table></figure>\n\n<p>6.将iso文件展开到http目录下</p>\n<p>7.生成ks.cfg文件</p>\n<p>  <code>system-config-kickstart</code>安装此图形化工具，生成自动应答脚本。也可以拷贝已安装系统中自动生成的脚本。</p>\n<p>8.关闭防火墙，selinux。测试http、tftp等服务都正常启动且文件都已放置可正常访问下载。</p>\n"},{"layout":"post","title":"python socket编程","published":1,"author":"xiemx","comments":1,"date":"2016-04-27T18:04:14.000Z","_content":"需要在多台服务器上运行日志分析脚本，分析完成后每台机器直接发送邮件会出现大量邮件同时过来，现在想将多台机器的分析结果收集起来，通过网络发送到服务端，在服务端收集所有的日志，在统一发送一封邮件，实现的socket代码如下。\n\n### 接收端（server）\n```python\n#!/usr/bin/env python\nimport socket\ndef socket_server(host,port):\n    self_host = host\n    self_port = port\n\n    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n    s.bind((self_host,self_port))\n    s.listen(4)\n\n    f = open(\"log\", \"a\")\n    while True:\n        conn,addr=s.accept()\n        data = conn.recv(1024)\n        print 'data:', data\n        f.write(data)\n    f.close()\n    s.close()\n\nif __name__ == \"__main__\":\n    host = '127.0.0.1'\n    port = 65530\n\n    socket_server(host,port)\n```\n### 发送端（client）\n```python\n#!/usr/bin/env python\nimport socket\n\ndef socket_client(host,port,content):\n    self_host = host\n    self_port = port\n    self_content = content\n\n    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n    s.connect((self_host,self_port))\n    s.sendall(content)\n    s.close()\n\nif __name__ == \"__main__\":\n    host = \"127.0.0.1\"\n    port = 65530\n\n    f = open(\"sendfile\",\"r\")\n    content = f.read()\n    f.close()\n\n    socket_client(host, port, content)\n```","source":"_posts/python-code-socket.md","raw":"---\nlayout: post\ntitle: python socket编程\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-04-28 02:04:14\ntags: [ python, socket ]\ncategories:\n    - python\n# permalink: '/2016/04/28/socket%e7%bc%96%e7%a8%8b'\n---\n需要在多台服务器上运行日志分析脚本，分析完成后每台机器直接发送邮件会出现大量邮件同时过来，现在想将多台机器的分析结果收集起来，通过网络发送到服务端，在服务端收集所有的日志，在统一发送一封邮件，实现的socket代码如下。\n\n### 接收端（server）\n```python\n#!/usr/bin/env python\nimport socket\ndef socket_server(host,port):\n    self_host = host\n    self_port = port\n\n    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n    s.bind((self_host,self_port))\n    s.listen(4)\n\n    f = open(\"log\", \"a\")\n    while True:\n        conn,addr=s.accept()\n        data = conn.recv(1024)\n        print 'data:', data\n        f.write(data)\n    f.close()\n    s.close()\n\nif __name__ == \"__main__\":\n    host = '127.0.0.1'\n    port = 65530\n\n    socket_server(host,port)\n```\n### 发送端（client）\n```python\n#!/usr/bin/env python\nimport socket\n\ndef socket_client(host,port,content):\n    self_host = host\n    self_port = port\n    self_content = content\n\n    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n    s.connect((self_host,self_port))\n    s.sendall(content)\n    s.close()\n\nif __name__ == \"__main__\":\n    host = \"127.0.0.1\"\n    port = 65530\n\n    f = open(\"sendfile\",\"r\")\n    content = f.read()\n    f.close()\n\n    socket_client(host, port, content)\n```","slug":"python-code-socket","updated":"2019-10-21T06:57:42.386Z","photos":[],"link":"","_id":"ck42dyiew006vu9urqfy1a7g9","content":"<p>需要在多台服务器上运行日志分析脚本，分析完成后每台机器直接发送邮件会出现大量邮件同时过来，现在想将多台机器的分析结果收集起来，通过网络发送到服务端，在服务端收集所有的日志，在统一发送一封邮件，实现的socket代码如下。</p>\n<h3 id=\"接收端（server）\"><a href=\"#接收端（server）\" class=\"headerlink\" title=\"接收端（server）\"></a>接收端（server）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">socket_server</span><span class=\"params\">(host,port)</span>:</span></span><br><span class=\"line\">    self_host = host</span><br><span class=\"line\">    self_port = port</span><br><span class=\"line\"></span><br><span class=\"line\">    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">    s.bind((self_host,self_port))</span><br><span class=\"line\">    s.listen(<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(<span class=\"string\">\"log\"</span>, <span class=\"string\">\"a\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        conn,addr=s.accept()</span><br><span class=\"line\">        data = conn.recv(<span class=\"number\">1024</span>)</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'data:'</span>, data</span><br><span class=\"line\">        f.write(data)</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\">    s.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    host = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">    port = <span class=\"number\">65530</span></span><br><span class=\"line\"></span><br><span class=\"line\">    socket_server(host,port)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"发送端（client）\"><a href=\"#发送端（client）\" class=\"headerlink\" title=\"发送端（client）\"></a>发送端（client）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">socket_client</span><span class=\"params\">(host,port,content)</span>:</span></span><br><span class=\"line\">    self_host = host</span><br><span class=\"line\">    self_port = port</span><br><span class=\"line\">    self_content = content</span><br><span class=\"line\"></span><br><span class=\"line\">    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">    s.connect((self_host,self_port))</span><br><span class=\"line\">    s.sendall(content)</span><br><span class=\"line\">    s.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    host = <span class=\"string\">\"127.0.0.1\"</span></span><br><span class=\"line\">    port = <span class=\"number\">65530</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(<span class=\"string\">\"sendfile\"</span>,<span class=\"string\">\"r\"</span>)</span><br><span class=\"line\">    content = f.read()</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    socket_client(host, port, content)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>需要在多台服务器上运行日志分析脚本，分析完成后每台机器直接发送邮件会出现大量邮件同时过来，现在想将多台机器的分析结果收集起来，通过网络发送到服务端，在服务端收集所有的日志，在统一发送一封邮件，实现的socket代码如下。</p>\n<h3 id=\"接收端（server）\"><a href=\"#接收端（server）\" class=\"headerlink\" title=\"接收端（server）\"></a>接收端（server）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">socket_server</span><span class=\"params\">(host,port)</span>:</span></span><br><span class=\"line\">    self_host = host</span><br><span class=\"line\">    self_port = port</span><br><span class=\"line\"></span><br><span class=\"line\">    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">    s.bind((self_host,self_port))</span><br><span class=\"line\">    s.listen(<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(<span class=\"string\">\"log\"</span>, <span class=\"string\">\"a\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        conn,addr=s.accept()</span><br><span class=\"line\">        data = conn.recv(<span class=\"number\">1024</span>)</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'data:'</span>, data</span><br><span class=\"line\">        f.write(data)</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\">    s.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    host = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">    port = <span class=\"number\">65530</span></span><br><span class=\"line\"></span><br><span class=\"line\">    socket_server(host,port)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"发送端（client）\"><a href=\"#发送端（client）\" class=\"headerlink\" title=\"发送端（client）\"></a>发送端（client）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">socket_client</span><span class=\"params\">(host,port,content)</span>:</span></span><br><span class=\"line\">    self_host = host</span><br><span class=\"line\">    self_port = port</span><br><span class=\"line\">    self_content = content</span><br><span class=\"line\"></span><br><span class=\"line\">    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class=\"line\">    s.connect((self_host,self_port))</span><br><span class=\"line\">    s.sendall(content)</span><br><span class=\"line\">    s.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    host = <span class=\"string\">\"127.0.0.1\"</span></span><br><span class=\"line\">    port = <span class=\"number\">65530</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(<span class=\"string\">\"sendfile\"</span>,<span class=\"string\">\"r\"</span>)</span><br><span class=\"line\">    content = f.read()</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    socket_client(host, port, content)</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"python中is和==的区别","published":1,"author":"xiemx","comments":1,"date":"2016-03-28T18:03:08.000Z","_content":"Python中的对象包含三要素：`id`、`type`、`value`\n  * id用来唯一标识一个对象\n  * type标识对象的类型\n  * value是对象的值。\n  \n`is` 通过id来判断对象是否相等\n  \n`==` 通过value来判断值是否相等\n\n例：\n```python\n>>> a = {1:2}\n>>> b = a.copy()\n>>> a is b\nFalse\n>>> a == b\nTrue\n>>>\n```","source":"_posts/python-is.md","raw":"---\nlayout: post\ntitle: python中is和==的区别\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-03-29 02:03:08\ntags: [ python ]\ncategories:\n    - python\n# permalink: '/2016/03/29/python%e4%b8%adis%e5%92%8c%e7%9a%84%e5%8c%ba%e5%88%ab'\n---\nPython中的对象包含三要素：`id`、`type`、`value`\n  * id用来唯一标识一个对象\n  * type标识对象的类型\n  * value是对象的值。\n  \n`is` 通过id来判断对象是否相等\n  \n`==` 通过value来判断值是否相等\n\n例：\n```python\n>>> a = {1:2}\n>>> b = a.copy()\n>>> a is b\nFalse\n>>> a == b\nTrue\n>>>\n```","slug":"python-is","updated":"2019-10-21T06:57:42.910Z","photos":[],"link":"","_id":"ck42dyiez006zu9urh99v9jth","content":"<p>Python中的对象包含三要素：<code>id</code>、<code>type</code>、<code>value</code></p>\n<ul>\n<li>id用来唯一标识一个对象</li>\n<li>type标识对象的类型</li>\n<li>value是对象的值。</li>\n</ul>\n<p><code>is</code> 通过id来判断对象是否相等</p>\n<p><code>==</code> 通过value来判断值是否相等</p>\n<p>例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a = &#123;<span class=\"number\">1</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = a.copy()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a <span class=\"keyword\">is</span> b</span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a == b</span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>Python中的对象包含三要素：<code>id</code>、<code>type</code>、<code>value</code></p>\n<ul>\n<li>id用来唯一标识一个对象</li>\n<li>type标识对象的类型</li>\n<li>value是对象的值。</li>\n</ul>\n<p><code>is</code> 通过id来判断对象是否相等</p>\n<p><code>==</code> 通过value来判断值是否相等</p>\n<p>例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a = &#123;<span class=\"number\">1</span>:<span class=\"number\">2</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = a.copy()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a <span class=\"keyword\">is</span> b</span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a == b</span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"邮件发送脚本","published":1,"author":"xiemx","comments":1,"date":"2016-04-27T19:04:48.000Z","_content":"python调用外部smtp服务器发送邮件 \n```python\n#!/usr/bin/env python\n\nfrom email.MIMEText import MIMEText\nfrom email.MIMEMultipart import MIMEMultipart\nfrom email.MIMEBase import MIMEBase\nfrom email import Utils,Encoders\nimport mimetypes,sys\nimport smtplib\n\ndef send_mail(user,passwd,host,context,sub,to_user):\n    self_user = user\n    self_pass = passwd\n    self_smtp = host\n    self_sub  = sub\n    self_context = context\n    self_touser = to_user\n\n    msg = MIMEMultipart()\n    msg[\"To\"] = self_touser\n    msg[\"From\"] = \"xxxx@unxn.com\"\n    msg[\"Subject\"] = self_sub\n    msg[\"Data\"] = Utils.formatdate(localtime = 1)\n    \n    body = MIMEText(self_context,_subtype = \"plain\")\n    \n    msg.attach(body)\n    send = smtplib.SMTP(self_smtp)\n    send.login(self_user,self_pass)\n    send.sendmail(self_user,self_touser,msg.as_string())\n    send.close()\n\nif __name__=='__main__':\n    host= \"smtp.qq.com\"\n    user= \"xxxxxxxx@qq.com\"\n    passwd= \"xxxxxxxx\"\n    to_user = \"xxxxxxxxx@163.com\"\n    sub = \"Log anaylse result!\"\n\n    f = open(\"log\",\"r\")\n    context = f.read()\n    f.close()\n    \n    send_mail(user,passwd,host,context,sub,to_user)\n```","source":"_posts/python-send-mail.md","raw":"---\nlayout: post\ntitle: 邮件发送脚本\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-04-28 03:04:48\ntags: [ python, mail ]\ncategories:\n    - python\n---\npython调用外部smtp服务器发送邮件 \n```python\n#!/usr/bin/env python\n\nfrom email.MIMEText import MIMEText\nfrom email.MIMEMultipart import MIMEMultipart\nfrom email.MIMEBase import MIMEBase\nfrom email import Utils,Encoders\nimport mimetypes,sys\nimport smtplib\n\ndef send_mail(user,passwd,host,context,sub,to_user):\n    self_user = user\n    self_pass = passwd\n    self_smtp = host\n    self_sub  = sub\n    self_context = context\n    self_touser = to_user\n\n    msg = MIMEMultipart()\n    msg[\"To\"] = self_touser\n    msg[\"From\"] = \"xxxx@unxn.com\"\n    msg[\"Subject\"] = self_sub\n    msg[\"Data\"] = Utils.formatdate(localtime = 1)\n    \n    body = MIMEText(self_context,_subtype = \"plain\")\n    \n    msg.attach(body)\n    send = smtplib.SMTP(self_smtp)\n    send.login(self_user,self_pass)\n    send.sendmail(self_user,self_touser,msg.as_string())\n    send.close()\n\nif __name__=='__main__':\n    host= \"smtp.qq.com\"\n    user= \"xxxxxxxx@qq.com\"\n    passwd= \"xxxxxxxx\"\n    to_user = \"xxxxxxxxx@163.com\"\n    sub = \"Log anaylse result!\"\n\n    f = open(\"log\",\"r\")\n    context = f.read()\n    f.close()\n    \n    send_mail(user,passwd,host,context,sub,to_user)\n```","slug":"python-send-mail","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyif00073u9ur6m2dl089","content":"<p>python调用外部smtp服务器发送邮件 </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> email.MIMEText <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.MIMEMultipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.MIMEBase <span class=\"keyword\">import</span> MIMEBase</span><br><span class=\"line\"><span class=\"keyword\">from</span> email <span class=\"keyword\">import</span> Utils,Encoders</span><br><span class=\"line\"><span class=\"keyword\">import</span> mimetypes,sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_mail</span><span class=\"params\">(user,passwd,host,context,sub,to_user)</span>:</span></span><br><span class=\"line\">    self_user = user</span><br><span class=\"line\">    self_pass = passwd</span><br><span class=\"line\">    self_smtp = host</span><br><span class=\"line\">    self_sub  = sub</span><br><span class=\"line\">    self_context = context</span><br><span class=\"line\">    self_touser = to_user</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = MIMEMultipart()</span><br><span class=\"line\">    msg[<span class=\"string\">\"To\"</span>] = self_touser</span><br><span class=\"line\">    msg[<span class=\"string\">\"From\"</span>] = <span class=\"string\">\"xxxx@unxn.com\"</span></span><br><span class=\"line\">    msg[<span class=\"string\">\"Subject\"</span>] = self_sub</span><br><span class=\"line\">    msg[<span class=\"string\">\"Data\"</span>] = Utils.formatdate(localtime = <span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    body = MIMEText(self_context,_subtype = <span class=\"string\">\"plain\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    msg.attach(body)</span><br><span class=\"line\">    send = smtplib.SMTP(self_smtp)</span><br><span class=\"line\">    send.login(self_user,self_pass)</span><br><span class=\"line\">    send.sendmail(self_user,self_touser,msg.as_string())</span><br><span class=\"line\">    send.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    host= <span class=\"string\">\"smtp.qq.com\"</span></span><br><span class=\"line\">    user= <span class=\"string\">\"xxxxxxxx@qq.com\"</span></span><br><span class=\"line\">    passwd= <span class=\"string\">\"xxxxxxxx\"</span></span><br><span class=\"line\">    to_user = <span class=\"string\">\"xxxxxxxxx@163.com\"</span></span><br><span class=\"line\">    sub = <span class=\"string\">\"Log anaylse result!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(<span class=\"string\">\"log\"</span>,<span class=\"string\">\"r\"</span>)</span><br><span class=\"line\">    context = f.read()</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\">    </span><br><span class=\"line\">    send_mail(user,passwd,host,context,sub,to_user)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>python调用外部smtp服务器发送邮件 </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> email.MIMEText <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.MIMEMultipart <span class=\"keyword\">import</span> MIMEMultipart</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.MIMEBase <span class=\"keyword\">import</span> MIMEBase</span><br><span class=\"line\"><span class=\"keyword\">from</span> email <span class=\"keyword\">import</span> Utils,Encoders</span><br><span class=\"line\"><span class=\"keyword\">import</span> mimetypes,sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_mail</span><span class=\"params\">(user,passwd,host,context,sub,to_user)</span>:</span></span><br><span class=\"line\">    self_user = user</span><br><span class=\"line\">    self_pass = passwd</span><br><span class=\"line\">    self_smtp = host</span><br><span class=\"line\">    self_sub  = sub</span><br><span class=\"line\">    self_context = context</span><br><span class=\"line\">    self_touser = to_user</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = MIMEMultipart()</span><br><span class=\"line\">    msg[<span class=\"string\">\"To\"</span>] = self_touser</span><br><span class=\"line\">    msg[<span class=\"string\">\"From\"</span>] = <span class=\"string\">\"xxxx@unxn.com\"</span></span><br><span class=\"line\">    msg[<span class=\"string\">\"Subject\"</span>] = self_sub</span><br><span class=\"line\">    msg[<span class=\"string\">\"Data\"</span>] = Utils.formatdate(localtime = <span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    body = MIMEText(self_context,_subtype = <span class=\"string\">\"plain\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    msg.attach(body)</span><br><span class=\"line\">    send = smtplib.SMTP(self_smtp)</span><br><span class=\"line\">    send.login(self_user,self_pass)</span><br><span class=\"line\">    send.sendmail(self_user,self_touser,msg.as_string())</span><br><span class=\"line\">    send.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__==<span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    host= <span class=\"string\">\"smtp.qq.com\"</span></span><br><span class=\"line\">    user= <span class=\"string\">\"xxxxxxxx@qq.com\"</span></span><br><span class=\"line\">    passwd= <span class=\"string\">\"xxxxxxxx\"</span></span><br><span class=\"line\">    to_user = <span class=\"string\">\"xxxxxxxxx@163.com\"</span></span><br><span class=\"line\">    sub = <span class=\"string\">\"Log anaylse result!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(<span class=\"string\">\"log\"</span>,<span class=\"string\">\"r\"</span>)</span><br><span class=\"line\">    context = f.read()</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\">    </span><br><span class=\"line\">    send_mail(user,passwd,host,context,sub,to_user)</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"python tab自动补全模块","published":1,"author":"xiemx","comments":1,"date":"2016-03-03T23:03:49.000Z","_content":"```python\n#vi tab.py\n\n#!/usr/bin/env python \n# python startup file \nimport sys\nimport readline\nimport rlcompleter\nimport atexit\nimport os\n# tab completion \nreadline.parse_and_bind('tab: complete')\n# history file \nhistfile = os.path.join(os.environ['HOME'], '.pythonhistory')\ntry:\n    readline.read_history_file(histfile)\nexcept IOError:\n    pass\natexit.register(readline.write_history_file, histfile)\ndel os, histfile, readline, rlcompleter\n```","source":"_posts/python-tab.md","raw":"---\nlayout: post\ntitle: python tab自动补全模块\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-03-04 07:03:49\ntags: [ python ]\ncategories:\n    - python\n# permalink: '/2016/03/04/python-tab'\n---\n```python\n#vi tab.py\n\n#!/usr/bin/env python \n# python startup file \nimport sys\nimport readline\nimport rlcompleter\nimport atexit\nimport os\n# tab completion \nreadline.parse_and_bind('tab: complete')\n# history file \nhistfile = os.path.join(os.environ['HOME'], '.pythonhistory')\ntry:\n    readline.read_history_file(histfile)\nexcept IOError:\n    pass\natexit.register(readline.write_history_file, histfile)\ndel os, histfile, readline, rlcompleter\n```","slug":"python-tab","updated":"2019-10-19T09:27:16.679Z","photos":[],"link":"","_id":"ck42dyif10077u9urq73wewt1","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#vi tab.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python </span></span><br><span class=\"line\"><span class=\"comment\"># python startup file </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> readline</span><br><span class=\"line\"><span class=\"keyword\">import</span> rlcompleter</span><br><span class=\"line\"><span class=\"keyword\">import</span> atexit</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># tab completion </span></span><br><span class=\"line\">readline.parse_and_bind(<span class=\"string\">'tab: complete'</span>)</span><br><span class=\"line\"><span class=\"comment\"># history file </span></span><br><span class=\"line\">histfile = os.path.join(os.environ[<span class=\"string\">'HOME'</span>], <span class=\"string\">'.pythonhistory'</span>)</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    readline.read_history_file(histfile)</span><br><span class=\"line\"><span class=\"keyword\">except</span> IOError:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">atexit.register(readline.write_history_file, histfile)</span><br><span class=\"line\"><span class=\"keyword\">del</span> os, histfile, readline, rlcompleter</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#vi tab.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python </span></span><br><span class=\"line\"><span class=\"comment\"># python startup file </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> readline</span><br><span class=\"line\"><span class=\"keyword\">import</span> rlcompleter</span><br><span class=\"line\"><span class=\"keyword\">import</span> atexit</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"comment\"># tab completion </span></span><br><span class=\"line\">readline.parse_and_bind(<span class=\"string\">'tab: complete'</span>)</span><br><span class=\"line\"><span class=\"comment\"># history file </span></span><br><span class=\"line\">histfile = os.path.join(os.environ[<span class=\"string\">'HOME'</span>], <span class=\"string\">'.pythonhistory'</span>)</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    readline.read_history_file(histfile)</span><br><span class=\"line\"><span class=\"keyword\">except</span> IOError:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">atexit.register(readline.write_history_file, histfile)</span><br><span class=\"line\"><span class=\"keyword\">del</span> os, histfile, readline, rlcompleter</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"rbash创建只读用户","published":1,"author":"xiemx","comments":1,"date":"2016-06-01T18:06:03.000Z","_content":"网上看到一篇用rbash来创建受限用户的文章，来源忘记了，mark在这里\n### 受限bash\n如果 bash 以 rbash 为程序名启动或者命令行参数有 -r 选项，则启动的这个 shell 会在某些功能上受限制．具体表现为如下操作都不能做：\n```\n通过 cd 来改变工作目录\n设置或取消环境变量： SHELL， PATH， ENV， BASH_ENV\n命令名中不能包含目录分隔符 ‘/’\n包含有 ‘/’ 的文件名作为内置命令 ‘.’ 的参数\nhash 内置命令有 -p 选项时的文件名参数包含 '/'\n在启动时通过 shell 环境导入函数定义\n在启动时通过 shell 环境解析 SHELLOPTS 的值\n使用 >，>|， <>， >&， &>， >> 等重定向操作符\n使用 exec 内置命令\n通过 enable 内置命令的 -f 和 -d 选项增加或删除内置命令\n使用 enable 内置命令来禁用或启用 shell 内置命令\n执行 command 内置命令时加上 -p 选项\n通过 set +r 或 set +o restricted 关闭受限模式\n```\n### 步骤\n```shell\nln -s /bin/bash  /bin/rbash\nuseradd -s /bin/rbash rttlsa\npasswd rttlsa\nmkdir /home/rttlsa/bin\nchown root. /home/rttlsa/.bash_profile \nchmod 755 /home/rttlsa/.bash_profile\nvi /home/rttlsa/.bash_profile \n.bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n  . ~/.bashrc\nfi\n\n# User specific environment and startup programs\nPATH=$HOME/bin\nexport PATH\nln -s /bin/cat  /home/rttlsa/bin/cat  将允许执行的命令链接到$HOME/bin目录\n```\n如此即可创建只允许查看日志的只读用户。","source":"_posts/rbash-add-readonly-user.md","raw":"---\nlayout: post\ntitle: rbash创建只读用户\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-06-02 02:06:03\ntags: [ command, rbash, bash, linux ]\ncategories:\n    - linux\n# permalink: '/2016/06/02/rbash-add-readonly-user'\n---\n网上看到一篇用rbash来创建受限用户的文章，来源忘记了，mark在这里\n### 受限bash\n如果 bash 以 rbash 为程序名启动或者命令行参数有 -r 选项，则启动的这个 shell 会在某些功能上受限制．具体表现为如下操作都不能做：\n```\n通过 cd 来改变工作目录\n设置或取消环境变量： SHELL， PATH， ENV， BASH_ENV\n命令名中不能包含目录分隔符 ‘/’\n包含有 ‘/’ 的文件名作为内置命令 ‘.’ 的参数\nhash 内置命令有 -p 选项时的文件名参数包含 '/'\n在启动时通过 shell 环境导入函数定义\n在启动时通过 shell 环境解析 SHELLOPTS 的值\n使用 >，>|， <>， >&， &>， >> 等重定向操作符\n使用 exec 内置命令\n通过 enable 内置命令的 -f 和 -d 选项增加或删除内置命令\n使用 enable 内置命令来禁用或启用 shell 内置命令\n执行 command 内置命令时加上 -p 选项\n通过 set +r 或 set +o restricted 关闭受限模式\n```\n### 步骤\n```shell\nln -s /bin/bash  /bin/rbash\nuseradd -s /bin/rbash rttlsa\npasswd rttlsa\nmkdir /home/rttlsa/bin\nchown root. /home/rttlsa/.bash_profile \nchmod 755 /home/rttlsa/.bash_profile\nvi /home/rttlsa/.bash_profile \n.bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n  . ~/.bashrc\nfi\n\n# User specific environment and startup programs\nPATH=$HOME/bin\nexport PATH\nln -s /bin/cat  /home/rttlsa/bin/cat  将允许执行的命令链接到$HOME/bin目录\n```\n如此即可创建只允许查看日志的只读用户。","slug":"rbash-add-readonly-user","updated":"2019-10-21T06:57:42.831Z","photos":[],"link":"","_id":"ck42dyif3007bu9ur7fuzduyu","content":"<p>网上看到一篇用rbash来创建受限用户的文章，来源忘记了，mark在这里</p>\n<h3 id=\"受限bash\"><a href=\"#受限bash\" class=\"headerlink\" title=\"受限bash\"></a>受限bash</h3><p>如果 bash 以 rbash 为程序名启动或者命令行参数有 -r 选项，则启动的这个 shell 会在某些功能上受限制．具体表现为如下操作都不能做：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过 <span class=\"built_in\">cd</span> 来改变工作目录</span><br><span class=\"line\">设置或取消环境变量： SHELL， PATH， ENV， BASH_ENV</span><br><span class=\"line\">命令名中不能包含目录分隔符 ‘/’</span><br><span class=\"line\">包含有 ‘/’ 的文件名作为内置命令 ‘.’ 的参数</span><br><span class=\"line\"><span class=\"built_in\">hash</span> 内置命令有 -p 选项时的文件名参数包含 <span class=\"string\">'/'</span></span><br><span class=\"line\">在启动时通过 shell 环境导入函数定义</span><br><span class=\"line\">在启动时通过 shell 环境解析 SHELLOPTS 的值</span><br><span class=\"line\">使用 &gt;，&gt;|， &lt;&gt;， &gt;&amp;， &amp;&gt;， &gt;&gt; 等重定向操作符</span><br><span class=\"line\">使用 <span class=\"built_in\">exec</span> 内置命令</span><br><span class=\"line\">通过 <span class=\"built_in\">enable</span> 内置命令的 -f 和 -d 选项增加或删除内置命令</span><br><span class=\"line\">使用 <span class=\"built_in\">enable</span> 内置命令来禁用或启用 shell 内置命令</span><br><span class=\"line\">执行 <span class=\"built_in\">command</span> 内置命令时加上 -p 选项</span><br><span class=\"line\">通过 <span class=\"built_in\">set</span> +r 或 <span class=\"built_in\">set</span> +o restricted 关闭受限模式</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /bin/bash  /bin/rbash</span><br><span class=\"line\">useradd -s /bin/rbash rttlsa</span><br><span class=\"line\">passwd rttlsa</span><br><span class=\"line\">mkdir /home/rttlsa/bin</span><br><span class=\"line\">chown root. /home/rttlsa/.bash_profile </span><br><span class=\"line\">chmod 755 /home/rttlsa/.bash_profile</span><br><span class=\"line\">vi /home/rttlsa/.bash_profile </span><br><span class=\"line\">.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Get the aliases and <span class=\"built_in\">functions</span></span></span><br><span class=\"line\">if [ -f ~/.bashrc ]; then</span><br><span class=\"line\">  . ~/.bashrc</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> User specific environment and startup programs</span></span><br><span class=\"line\">PATH=$HOME/bin</span><br><span class=\"line\">export PATH</span><br><span class=\"line\">ln -s /bin/cat  /home/rttlsa/bin/cat  将允许执行的命令链接到$HOME/bin目录</span><br></pre></td></tr></table></figure>\n\n<p>如此即可创建只允许查看日志的只读用户。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>网上看到一篇用rbash来创建受限用户的文章，来源忘记了，mark在这里</p>\n<h3 id=\"受限bash\"><a href=\"#受限bash\" class=\"headerlink\" title=\"受限bash\"></a>受限bash</h3><p>如果 bash 以 rbash 为程序名启动或者命令行参数有 -r 选项，则启动的这个 shell 会在某些功能上受限制．具体表现为如下操作都不能做：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过 <span class=\"built_in\">cd</span> 来改变工作目录</span><br><span class=\"line\">设置或取消环境变量： SHELL， PATH， ENV， BASH_ENV</span><br><span class=\"line\">命令名中不能包含目录分隔符 ‘/’</span><br><span class=\"line\">包含有 ‘/’ 的文件名作为内置命令 ‘.’ 的参数</span><br><span class=\"line\"><span class=\"built_in\">hash</span> 内置命令有 -p 选项时的文件名参数包含 <span class=\"string\">'/'</span></span><br><span class=\"line\">在启动时通过 shell 环境导入函数定义</span><br><span class=\"line\">在启动时通过 shell 环境解析 SHELLOPTS 的值</span><br><span class=\"line\">使用 &gt;，&gt;|， &lt;&gt;， &gt;&amp;， &amp;&gt;， &gt;&gt; 等重定向操作符</span><br><span class=\"line\">使用 <span class=\"built_in\">exec</span> 内置命令</span><br><span class=\"line\">通过 <span class=\"built_in\">enable</span> 内置命令的 -f 和 -d 选项增加或删除内置命令</span><br><span class=\"line\">使用 <span class=\"built_in\">enable</span> 内置命令来禁用或启用 shell 内置命令</span><br><span class=\"line\">执行 <span class=\"built_in\">command</span> 内置命令时加上 -p 选项</span><br><span class=\"line\">通过 <span class=\"built_in\">set</span> +r 或 <span class=\"built_in\">set</span> +o restricted 关闭受限模式</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /bin/bash  /bin/rbash</span><br><span class=\"line\">useradd -s /bin/rbash rttlsa</span><br><span class=\"line\">passwd rttlsa</span><br><span class=\"line\">mkdir /home/rttlsa/bin</span><br><span class=\"line\">chown root. /home/rttlsa/.bash_profile </span><br><span class=\"line\">chmod 755 /home/rttlsa/.bash_profile</span><br><span class=\"line\">vi /home/rttlsa/.bash_profile </span><br><span class=\"line\">.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Get the aliases and <span class=\"built_in\">functions</span></span></span><br><span class=\"line\">if [ -f ~/.bashrc ]; then</span><br><span class=\"line\">  . ~/.bashrc</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> User specific environment and startup programs</span></span><br><span class=\"line\">PATH=$HOME/bin</span><br><span class=\"line\">export PATH</span><br><span class=\"line\">ln -s /bin/cat  /home/rttlsa/bin/cat  将允许执行的命令链接到$HOME/bin目录</span><br></pre></td></tr></table></figure>\n\n<p>如此即可创建只允许查看日志的只读用户。</p>\n"},{"layout":"post","title":"redis 淘汰策略","published":1,"author":"xiemx","comments":1,"date":"2017-07-14T02:07:44.000Z","_content":"redis 内存数据使用到maxmemory的时候，就会根据maxmemory_policy设定的淘汰策略进行内存整理数据回收。选择不同的策略，要根据redis的用途来区分。\n\nredis 提供 6种数据淘汰策略：\n\n* volatile-lru：从已设置过期时间的数据集中挑选最近最少使用的数据淘汰\n* volatile-ttl：从已设置过期时间的数据集中挑选将要过期的数据淘汰\n* volatile-random：从已设置过期时间的数据集中任意选择数据淘汰\n* allkeys-lru：从数据集中挑选最近最少使用的数据淘汰\n* allkeys-random：从数据集中任意选择数据淘汰\n* noenviction：禁止删除数据","source":"_posts/redis-maxmemory-policy.md","raw":"---\nlayout: post\ntitle: redis 淘汰策略\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-07-14 10:07:44\ntags: [ redis ]\ncategories:\n    - redis\n# permalink: '/2017/07/14/redis-%e6%b7%98%e6%b1%b0%e7%ad%96%e7%95%a5'\n---\nredis 内存数据使用到maxmemory的时候，就会根据maxmemory_policy设定的淘汰策略进行内存整理数据回收。选择不同的策略，要根据redis的用途来区分。\n\nredis 提供 6种数据淘汰策略：\n\n* volatile-lru：从已设置过期时间的数据集中挑选最近最少使用的数据淘汰\n* volatile-ttl：从已设置过期时间的数据集中挑选将要过期的数据淘汰\n* volatile-random：从已设置过期时间的数据集中任意选择数据淘汰\n* allkeys-lru：从数据集中挑选最近最少使用的数据淘汰\n* allkeys-random：从数据集中任意选择数据淘汰\n* noenviction：禁止删除数据","slug":"redis-maxmemory-policy","updated":"2019-10-19T09:11:22.213Z","photos":[],"link":"","_id":"ck42dyif5007fu9urwx15saig","content":"<p>redis 内存数据使用到maxmemory的时候，就会根据maxmemory_policy设定的淘汰策略进行内存整理数据回收。选择不同的策略，要根据redis的用途来区分。</p>\n<p>redis 提供 6种数据淘汰策略：</p>\n<ul>\n<li>volatile-lru：从已设置过期时间的数据集中挑选最近最少使用的数据淘汰</li>\n<li>volatile-ttl：从已设置过期时间的数据集中挑选将要过期的数据淘汰</li>\n<li>volatile-random：从已设置过期时间的数据集中任意选择数据淘汰</li>\n<li>allkeys-lru：从数据集中挑选最近最少使用的数据淘汰</li>\n<li>allkeys-random：从数据集中任意选择数据淘汰</li>\n<li>noenviction：禁止删除数据</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>redis 内存数据使用到maxmemory的时候，就会根据maxmemory_policy设定的淘汰策略进行内存整理数据回收。选择不同的策略，要根据redis的用途来区分。</p>\n<p>redis 提供 6种数据淘汰策略：</p>\n<ul>\n<li>volatile-lru：从已设置过期时间的数据集中挑选最近最少使用的数据淘汰</li>\n<li>volatile-ttl：从已设置过期时间的数据集中挑选将要过期的数据淘汰</li>\n<li>volatile-random：从已设置过期时间的数据集中任意选择数据淘汰</li>\n<li>allkeys-lru：从数据集中挑选最近最少使用的数据淘汰</li>\n<li>allkeys-random：从数据集中任意选择数据淘汰</li>\n<li>noenviction：禁止删除数据</li>\n</ul>\n"},{"layout":"post","title":"redis-dump使用","published":1,"author":"xiemx","comments":1,"date":"2019-05-06T03:05:33.000Z","_content":"* 安装redis-dump/redis-load\n\n```shell\n#需要ruby 2.2.2以上版本（可以直接使用ruby:2.2.3的docker images）\ngem install redis-dum\n```\n\n* dump redis\n```shell\nroot@5dba1bd8fa77:/# redis-dump -h\n  Try: /usr/local/bundle/bin/redis-dump show-commands\nUsage: /usr/local/bundle/bin/redis-dump [global options] COMMAND [command options]\n    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])\n    -d, --database=S                 Redis database (e.g. -d 15)\n    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')\n    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)\n    -c, --count=S                    Chunk size (default: 10000)\n    -f, --filter=S                   Filter selected keys (passed directly to redis' KEYS command)\n    -b, --base64                     Encode key values as base64 (useful for binary values)\n    -O, --without_optimizations      Disable run time optimizations\n    -V, --version                    Display version\n    -D, --debug\n        --nosafe\n\nroot@5dba1bd8fa77:/# redis-dump -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn > redis-uat.json\n```\n\n* load redis\n```shell\nroot@5dba1bd8fa77:/# redis-load -h\n  Try: /usr/local/bundle/bin/redis-load show-commands\nUsage: /usr/local/bundle/bin/redis-load [global options] COMMAND [command options]\n    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])\n    -d, --database=S                 Redis database (e.g. -d 15)\n    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')\n    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)\n    -b, --base64                     Decode key values from base64 (used with redis-dump -b)\n    -n, --no_check_utf8\n    -V, --version                    Display version\n    -D, --debug\n        --nosafe\n\n\nroot@5dba1bd8fa77:/# redis-load -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn:6379/0 < redis-uat.json\n```","source":"_posts/redis-dump.md","raw":"---\nlayout: post\ntitle: redis-dump使用\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-05-06 11:05:33\ntags: [ redis ]\ncategories:\n    - redis\n# permalink: '/2019/05/06/redis-dump'\n---\n* 安装redis-dump/redis-load\n\n```shell\n#需要ruby 2.2.2以上版本（可以直接使用ruby:2.2.3的docker images）\ngem install redis-dum\n```\n\n* dump redis\n```shell\nroot@5dba1bd8fa77:/# redis-dump -h\n  Try: /usr/local/bundle/bin/redis-dump show-commands\nUsage: /usr/local/bundle/bin/redis-dump [global options] COMMAND [command options]\n    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])\n    -d, --database=S                 Redis database (e.g. -d 15)\n    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')\n    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)\n    -c, --count=S                    Chunk size (default: 10000)\n    -f, --filter=S                   Filter selected keys (passed directly to redis' KEYS command)\n    -b, --base64                     Encode key values as base64 (useful for binary values)\n    -O, --without_optimizations      Disable run time optimizations\n    -V, --version                    Display version\n    -D, --debug\n        --nosafe\n\nroot@5dba1bd8fa77:/# redis-dump -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn > redis-uat.json\n```\n\n* load redis\n```shell\nroot@5dba1bd8fa77:/# redis-load -h\n  Try: /usr/local/bundle/bin/redis-load show-commands\nUsage: /usr/local/bundle/bin/redis-load [global options] COMMAND [command options]\n    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])\n    -d, --database=S                 Redis database (e.g. -d 15)\n    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')\n    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)\n    -b, --base64                     Decode key values from base64 (used with redis-dump -b)\n    -n, --no_check_utf8\n    -V, --version                    Display version\n    -D, --debug\n        --nosafe\n\n\nroot@5dba1bd8fa77:/# redis-load -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn:6379/0 < redis-uat.json\n```","slug":"redis-dump","updated":"2019-10-19T09:09:04.060Z","photos":[],"link":"","_id":"ck42dyif8007ju9ure5wm1iqx","content":"<ul>\n<li>安装redis-dump/redis-load</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">需要ruby 2.2.2以上版本（可以直接使用ruby:2.2.3的docker images）</span></span><br><span class=\"line\">gem install redis-dum</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>dump redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@5dba1bd8fa77:/# redis-dump -h</span><br><span class=\"line\">  Try: /usr/local/bundle/bin/redis-dump show-commands</span><br><span class=\"line\">Usage: /usr/local/bundle/bin/redis-dump [global options] COMMAND [command options]</span><br><span class=\"line\">    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])</span><br><span class=\"line\">    -d, --database=S                 Redis database (e.g. -d 15)</span><br><span class=\"line\">    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')</span><br><span class=\"line\">    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)</span><br><span class=\"line\">    -c, --count=S                    Chunk size (default: 10000)</span><br><span class=\"line\">    -f, --filter=S                   Filter selected keys (passed directly to redis' KEYS command)</span><br><span class=\"line\">    -b, --base64                     Encode key values as base64 (useful for binary values)</span><br><span class=\"line\">    -O, --without_optimizations      Disable run time optimizations</span><br><span class=\"line\">    -V, --version                    Display version</span><br><span class=\"line\">    -D, --debug</span><br><span class=\"line\">        --nosafe</span><br><span class=\"line\"></span><br><span class=\"line\">root@5dba1bd8fa77:/# redis-dump -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn &gt; redis-uat.json</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>load redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@5dba1bd8fa77:/# redis-load -h</span><br><span class=\"line\">  Try: /usr/local/bundle/bin/redis-load show-commands</span><br><span class=\"line\">Usage: /usr/local/bundle/bin/redis-load [global options] COMMAND [command options]</span><br><span class=\"line\">    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])</span><br><span class=\"line\">    -d, --database=S                 Redis database (e.g. -d 15)</span><br><span class=\"line\">    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')</span><br><span class=\"line\">    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)</span><br><span class=\"line\">    -b, --base64                     Decode key values from base64 (used with redis-dump -b)</span><br><span class=\"line\">    -n, --no_check_utf8</span><br><span class=\"line\">    -V, --version                    Display version</span><br><span class=\"line\">    -D, --debug</span><br><span class=\"line\">        --nosafe</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">root@5dba1bd8fa77:/# redis-load -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn:6379/0 &lt; redis-uat.json</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>安装redis-dump/redis-load</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">需要ruby 2.2.2以上版本（可以直接使用ruby:2.2.3的docker images）</span></span><br><span class=\"line\">gem install redis-dum</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>dump redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@5dba1bd8fa77:/# redis-dump -h</span><br><span class=\"line\">  Try: /usr/local/bundle/bin/redis-dump show-commands</span><br><span class=\"line\">Usage: /usr/local/bundle/bin/redis-dump [global options] COMMAND [command options]</span><br><span class=\"line\">    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])</span><br><span class=\"line\">    -d, --database=S                 Redis database (e.g. -d 15)</span><br><span class=\"line\">    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')</span><br><span class=\"line\">    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)</span><br><span class=\"line\">    -c, --count=S                    Chunk size (default: 10000)</span><br><span class=\"line\">    -f, --filter=S                   Filter selected keys (passed directly to redis' KEYS command)</span><br><span class=\"line\">    -b, --base64                     Encode key values as base64 (useful for binary values)</span><br><span class=\"line\">    -O, --without_optimizations      Disable run time optimizations</span><br><span class=\"line\">    -V, --version                    Display version</span><br><span class=\"line\">    -D, --debug</span><br><span class=\"line\">        --nosafe</span><br><span class=\"line\"></span><br><span class=\"line\">root@5dba1bd8fa77:/# redis-dump -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn &gt; redis-uat.json</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>load redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@5dba1bd8fa77:/# redis-load -h</span><br><span class=\"line\">  Try: /usr/local/bundle/bin/redis-load show-commands</span><br><span class=\"line\">Usage: /usr/local/bundle/bin/redis-load [global options] COMMAND [command options]</span><br><span class=\"line\">    -u, --uri=S                      Redis URI (e.g. redis://hostname[:port])</span><br><span class=\"line\">    -d, --database=S                 Redis database (e.g. -d 15)</span><br><span class=\"line\">    -a, --password=S                 Redis password (e.g. -a 'my@pass/word')</span><br><span class=\"line\">    -s, --sleep=S                    Sleep for S seconds after dumping (for debugging)</span><br><span class=\"line\">    -b, --base64                     Decode key values from base64 (used with redis-dump -b)</span><br><span class=\"line\">    -n, --no_check_utf8</span><br><span class=\"line\">    -V, --version                    Display version</span><br><span class=\"line\">    -D, --debug</span><br><span class=\"line\">        --nosafe</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">root@5dba1bd8fa77:/# redis-load -u aux-redis.1uvkyf.0001.cnn1.cache.amazonaws.com.cn:6379/0 &lt; redis-uat.json</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"layout":"post","title":"redis repl_diskless_replication","published":1,"author":"xiemx","comments":1,"date":"2017-03-05T20:03:55.000Z","_content":"redis diskless replication\n```conf\n# Replication\nrole:slave\nmaster_host:192.168.10.226\nmaster_port:6379\nmaster_link_status:down\nmaster_last_io_seconds_ago:-1\nmaster_sync_in_progress:1\nslave_repl_offset:1\nmaster_sync_left_bytes:-4022404224\nmaster_sync_last_io_seconds_ago:37\nmaster_link_down_since_seconds:1488785860\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_repl_offset:0\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\n\n\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip=192.168.10.192,port=6379,state=online,offset=1134556373255,lag=1\nslave1:ip=192.168.10.82,port=6379,state=wait_bgsave,offset=0,lag=0\nmaster_repl_offset:1134556812751\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1134555764176\nrepl_backlog_histlen:1048576\n```\n\n\n\n```log\n6581:C 06 Mar 15:28:27.766 * DB saved on disk\n26581:C 06 Mar 15:28:27.990 * RDB: 212 MB of memory used by copy-on-write\n2251:M 06 Mar 15:28:28.379 * Background saving terminated with success\n2251:M 06 Mar 15:29:08.687 * Synchronization with slave 192.168.10.82:6379 succeeded\n2251:M 06 Mar 15:29:47.093 # Client id=314558845 addr=192.168.10.82:58002 fd=16 name= age=194 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=3617 omem=95797745 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.\n2251:M 06 Mar 15:29:47.093 # Connection with slave 192.168.10.82:6379 lost.\n2251:M 06 Mar 15:30:15.999 * Slave 192.168.10.82:6379 asks for synchronization\n2251:M 06 Mar 15:30:15.999 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134354232038).\n2251:M 06 Mar 15:30:15.999 * Starting BGSAVE for SYNC with target: disk\n2251:M 06 Mar 15:30:16.232 * Background saving started by pid 30494\n30494:C 06 Mar 15:31:52.413 * DB saved on disk\n30494:C 06 Mar 15:31:52.597 * RDB: 223 MB of memory used by copy-on-write\n2251:M 06 Mar 15:31:52.950 * Background saving terminated with success\n2251:M 06 Mar 15:32:33.375 * Synchronization with slave 192.168.10.82:6379 succeeded\n2251:M 06 Mar 15:33:08.106 # Client id=314561307 addr=192.168.10.82:38644 fd=16 name= age=173 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=4325 omem=102199438 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.\n2251:M 06 Mar 15:33:08.106 # Connection with slave 192.168.10.82:6379 lost.\n2251:M 06 Mar 15:33:40.471 * Slave 192.168.10.82:6379 asks for synchronization\n2251:M 06 Mar 15:33:40.471 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134453799057).\n2251:M 06 Mar 15:33:40.471 * Starting BGSAVE for SYNC with target: disk\n2251:M 06 Mar 15:33:40.715 * Background saving started by pid 1440\n2251:M 06 Mar 15:35:14.354 # Connection with slave 192.168.10.82:6379 lost.\n1440:C 06 Mar 15:35:20.564 * DB saved on disk\n1440:C 06 Mar 15:35:20.743 * RDB: 296 MB of memory used by copy-on-write\n2251:M 06 Mar 15:35:21.013 * Background saving terminated with success\n```\n\n\n### 原理分析\n如果设置了一个slave，不管是在第一次链接还是重新链接master的时候，slave会发送一个同步命令\n然后master开始后台保存，收集所有对修改数据的命令。当后台保存完成，master会将这个数据文件传送到slave，\n然后保存在磁盘，加载到内存中，master接着发送收集到的所有的修改数据的命令。\n\nRedis为避免输出缓冲区过度耗用内存，使用client-output-buffer-limit参数限制客户端输出缓冲区内存使用量。\nRedis数据复制过程中，Slave有个flags=S的客户端连接到Master; 它和其他客户端一样有输出缓冲区和缓冲区大小限制。\n`client-output-buffer-limit slave 256mb 64mb 60`\n当缓冲区使用超过256mb,Master会尽快杀掉它；\n当缓冲区使用大于64mb,且小于256mb的soft limit值时，并持续时间达60秒，也会被Master尽快杀掉。\n\n\n通过以上的原理分析我们可以得到一个解决方法：扩大buffer和timeout，但对于一个数据量比较大的db且服务器本身内存不足的情况下。\n我们可以采用diskless replication，直接通过网络将数据更新过去，不再让服务器去同步到disk再从disk输出到内存导致output报错\n\n\n### 解决\n开启redis diskless replication\n\n```shell\n127.0.0.1:6379> CONFIG set repl-diskless-sync yes\nOK\n(1.97s)\n```\n```log\n2251:M 06 Mar 15:35:34.896 * Slave 192.168.10.82:6379 asks for synchronization\n2251:M 06 Mar 15:35:34.896 * Full resync requested by slave 192.168.10.82:6379\n2251:M 06 Mar 15:35:34.896 * Delay next BGSAVE for SYNC\n2251:M 06 Mar 15:35:40.203 * Starting BGSAVE for SYNC with target: slaves sockets\n2251:M 06 Mar 15:35:40.469 * Background RDB transfer started by pid 3351\n3351:C 06 Mar 15:37:03.206 * RDB: 233 MB of memory used by copy-on-write\n2251:M 06 Mar 15:37:03.473 * Background RDB transfer terminated with success\n2251:M 06 Mar 15:37:03.473 # Slave 192.168.10.82:6379 correctly received the streamed RDB file.\n2251:M 06 Mar 15:37:03.473 * Streamed RDB transfer with slave 192.168.10.82:6379 succeeded (socket). Waiting for REPLCONF ACK from slave to enable streaming\n2251:M 06 Mar 15:37:24.848 * 50000 changes in 60 seconds. Saving...\n2251:M 06 Mar 15:37:25.097 * Background saving started by pid 5916\n2251:M 06 Mar 15:38:10.510 * Synchronization with slave 192.168.10.82:6379 succeeded\n5916:C 06 Mar 15:39:06.535 * DB saved on disk\n5916:C 06 Mar 15:39:06.742 * RDB: 250 MB of memory used by copy-on-write\n2251:M 06 Mar 15:39:07.093 * Background saving terminated with success\n```\n```conf\n# Replication\nrole:slave\nmaster_host:192.168.10.226\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:1134697190334\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_repl_offset:0\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\n\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip=192.168.10.192,port=6379,state=online,offset=1135553694283,lag=1\nslave1:ip=192.168.10.82,port=6379,state=online,offset=1135553653727,lag=1\nmaster_repl_offset:1135554186742\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1135553138167\nrepl_backlog_histlen:1048576\n```","source":"_posts/redis-repl_diskless_replication.md","raw":"---\nlayout: post\ntitle: redis repl_diskless_replication\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-03-06 04:03:55\ntags: [ redis ]\ncategories:\n    - redis\n---\nredis diskless replication\n```conf\n# Replication\nrole:slave\nmaster_host:192.168.10.226\nmaster_port:6379\nmaster_link_status:down\nmaster_last_io_seconds_ago:-1\nmaster_sync_in_progress:1\nslave_repl_offset:1\nmaster_sync_left_bytes:-4022404224\nmaster_sync_last_io_seconds_ago:37\nmaster_link_down_since_seconds:1488785860\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_repl_offset:0\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\n\n\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip=192.168.10.192,port=6379,state=online,offset=1134556373255,lag=1\nslave1:ip=192.168.10.82,port=6379,state=wait_bgsave,offset=0,lag=0\nmaster_repl_offset:1134556812751\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1134555764176\nrepl_backlog_histlen:1048576\n```\n\n\n\n```log\n6581:C 06 Mar 15:28:27.766 * DB saved on disk\n26581:C 06 Mar 15:28:27.990 * RDB: 212 MB of memory used by copy-on-write\n2251:M 06 Mar 15:28:28.379 * Background saving terminated with success\n2251:M 06 Mar 15:29:08.687 * Synchronization with slave 192.168.10.82:6379 succeeded\n2251:M 06 Mar 15:29:47.093 # Client id=314558845 addr=192.168.10.82:58002 fd=16 name= age=194 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=3617 omem=95797745 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.\n2251:M 06 Mar 15:29:47.093 # Connection with slave 192.168.10.82:6379 lost.\n2251:M 06 Mar 15:30:15.999 * Slave 192.168.10.82:6379 asks for synchronization\n2251:M 06 Mar 15:30:15.999 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134354232038).\n2251:M 06 Mar 15:30:15.999 * Starting BGSAVE for SYNC with target: disk\n2251:M 06 Mar 15:30:16.232 * Background saving started by pid 30494\n30494:C 06 Mar 15:31:52.413 * DB saved on disk\n30494:C 06 Mar 15:31:52.597 * RDB: 223 MB of memory used by copy-on-write\n2251:M 06 Mar 15:31:52.950 * Background saving terminated with success\n2251:M 06 Mar 15:32:33.375 * Synchronization with slave 192.168.10.82:6379 succeeded\n2251:M 06 Mar 15:33:08.106 # Client id=314561307 addr=192.168.10.82:38644 fd=16 name= age=173 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=4325 omem=102199438 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.\n2251:M 06 Mar 15:33:08.106 # Connection with slave 192.168.10.82:6379 lost.\n2251:M 06 Mar 15:33:40.471 * Slave 192.168.10.82:6379 asks for synchronization\n2251:M 06 Mar 15:33:40.471 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134453799057).\n2251:M 06 Mar 15:33:40.471 * Starting BGSAVE for SYNC with target: disk\n2251:M 06 Mar 15:33:40.715 * Background saving started by pid 1440\n2251:M 06 Mar 15:35:14.354 # Connection with slave 192.168.10.82:6379 lost.\n1440:C 06 Mar 15:35:20.564 * DB saved on disk\n1440:C 06 Mar 15:35:20.743 * RDB: 296 MB of memory used by copy-on-write\n2251:M 06 Mar 15:35:21.013 * Background saving terminated with success\n```\n\n\n### 原理分析\n如果设置了一个slave，不管是在第一次链接还是重新链接master的时候，slave会发送一个同步命令\n然后master开始后台保存，收集所有对修改数据的命令。当后台保存完成，master会将这个数据文件传送到slave，\n然后保存在磁盘，加载到内存中，master接着发送收集到的所有的修改数据的命令。\n\nRedis为避免输出缓冲区过度耗用内存，使用client-output-buffer-limit参数限制客户端输出缓冲区内存使用量。\nRedis数据复制过程中，Slave有个flags=S的客户端连接到Master; 它和其他客户端一样有输出缓冲区和缓冲区大小限制。\n`client-output-buffer-limit slave 256mb 64mb 60`\n当缓冲区使用超过256mb,Master会尽快杀掉它；\n当缓冲区使用大于64mb,且小于256mb的soft limit值时，并持续时间达60秒，也会被Master尽快杀掉。\n\n\n通过以上的原理分析我们可以得到一个解决方法：扩大buffer和timeout，但对于一个数据量比较大的db且服务器本身内存不足的情况下。\n我们可以采用diskless replication，直接通过网络将数据更新过去，不再让服务器去同步到disk再从disk输出到内存导致output报错\n\n\n### 解决\n开启redis diskless replication\n\n```shell\n127.0.0.1:6379> CONFIG set repl-diskless-sync yes\nOK\n(1.97s)\n```\n```log\n2251:M 06 Mar 15:35:34.896 * Slave 192.168.10.82:6379 asks for synchronization\n2251:M 06 Mar 15:35:34.896 * Full resync requested by slave 192.168.10.82:6379\n2251:M 06 Mar 15:35:34.896 * Delay next BGSAVE for SYNC\n2251:M 06 Mar 15:35:40.203 * Starting BGSAVE for SYNC with target: slaves sockets\n2251:M 06 Mar 15:35:40.469 * Background RDB transfer started by pid 3351\n3351:C 06 Mar 15:37:03.206 * RDB: 233 MB of memory used by copy-on-write\n2251:M 06 Mar 15:37:03.473 * Background RDB transfer terminated with success\n2251:M 06 Mar 15:37:03.473 # Slave 192.168.10.82:6379 correctly received the streamed RDB file.\n2251:M 06 Mar 15:37:03.473 * Streamed RDB transfer with slave 192.168.10.82:6379 succeeded (socket). Waiting for REPLCONF ACK from slave to enable streaming\n2251:M 06 Mar 15:37:24.848 * 50000 changes in 60 seconds. Saving...\n2251:M 06 Mar 15:37:25.097 * Background saving started by pid 5916\n2251:M 06 Mar 15:38:10.510 * Synchronization with slave 192.168.10.82:6379 succeeded\n5916:C 06 Mar 15:39:06.535 * DB saved on disk\n5916:C 06 Mar 15:39:06.742 * RDB: 250 MB of memory used by copy-on-write\n2251:M 06 Mar 15:39:07.093 * Background saving terminated with success\n```\n```conf\n# Replication\nrole:slave\nmaster_host:192.168.10.226\nmaster_port:6379\nmaster_link_status:up\nmaster_last_io_seconds_ago:1\nmaster_sync_in_progress:0\nslave_repl_offset:1134697190334\nslave_priority:100\nslave_read_only:1\nconnected_slaves:0\nmaster_repl_offset:0\nrepl_backlog_active:0\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:0\nrepl_backlog_histlen:0\n\n# Replication\nrole:master\nconnected_slaves:2\nslave0:ip=192.168.10.192,port=6379,state=online,offset=1135553694283,lag=1\nslave1:ip=192.168.10.82,port=6379,state=online,offset=1135553653727,lag=1\nmaster_repl_offset:1135554186742\nrepl_backlog_active:1\nrepl_backlog_size:1048576\nrepl_backlog_first_byte_offset:1135553138167\nrepl_backlog_histlen:1048576\n```","slug":"redis-repl_diskless_replication","updated":"2019-10-21T06:57:42.620Z","photos":[],"link":"","_id":"ck42dyifb007lu9urtzm9q0qa","content":"<p>redis diskless replication</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Replication</span><br><span class=\"line\">role:slave</span><br><span class=\"line\">master_host:192.168.10.226</span><br><span class=\"line\">master_port:6379</span><br><span class=\"line\">master_link_status:down</span><br><span class=\"line\">master_last_io_seconds_ago:-1</span><br><span class=\"line\">master_sync_in_progress:1</span><br><span class=\"line\">slave_repl_offset:1</span><br><span class=\"line\">master_sync_left_bytes:-4022404224</span><br><span class=\"line\">master_sync_last_io_seconds_ago:37</span><br><span class=\"line\">master_link_down_since_seconds:1488785860</span><br><span class=\"line\">slave_priority:100</span><br><span class=\"line\">slave_read_only:1</span><br><span class=\"line\">connected_slaves:0</span><br><span class=\"line\">master_repl_offset:0</span><br><span class=\"line\">repl_backlog_active:0</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:0</span><br><span class=\"line\">repl_backlog_histlen:0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Replication</span><br><span class=\"line\">role:master</span><br><span class=\"line\">connected_slaves:2</span><br><span class=\"line\">slave0:ip=192.168.10.192,port=6379,state=online,offset=1134556373255,lag=1</span><br><span class=\"line\">slave1:ip=192.168.10.82,port=6379,state=wait_bgsave,offset=0,lag=0</span><br><span class=\"line\">master_repl_offset:1134556812751</span><br><span class=\"line\">repl_backlog_active:1</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:1134555764176</span><br><span class=\"line\">repl_backlog_histlen:1048576</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6581:C 06 Mar 15:28:27.766 * DB saved on disk</span><br><span class=\"line\">26581:C 06 Mar 15:28:27.990 * RDB: 212 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:28:28.379 * Background saving terminated with success</span><br><span class=\"line\">2251:M 06 Mar 15:29:08.687 * Synchronization with slave 192.168.10.82:6379 succeeded</span><br><span class=\"line\">2251:M 06 Mar 15:29:47.093 # Client id=314558845 addr=192.168.10.82:58002 fd=16 name= age=194 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=3617 omem=95797745 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.</span><br><span class=\"line\">2251:M 06 Mar 15:29:47.093 # Connection with slave 192.168.10.82:6379 lost.</span><br><span class=\"line\">2251:M 06 Mar 15:30:15.999 * Slave 192.168.10.82:6379 asks for synchronization</span><br><span class=\"line\">2251:M 06 Mar 15:30:15.999 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134354232038).</span><br><span class=\"line\">2251:M 06 Mar 15:30:15.999 * Starting BGSAVE for SYNC with target: disk</span><br><span class=\"line\">2251:M 06 Mar 15:30:16.232 * Background saving started by pid 30494</span><br><span class=\"line\">30494:C 06 Mar 15:31:52.413 * DB saved on disk</span><br><span class=\"line\">30494:C 06 Mar 15:31:52.597 * RDB: 223 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:31:52.950 * Background saving terminated with success</span><br><span class=\"line\">2251:M 06 Mar 15:32:33.375 * Synchronization with slave 192.168.10.82:6379 succeeded</span><br><span class=\"line\">2251:M 06 Mar 15:33:08.106 # Client id=314561307 addr=192.168.10.82:38644 fd=16 name= age=173 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=4325 omem=102199438 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.</span><br><span class=\"line\">2251:M 06 Mar 15:33:08.106 # Connection with slave 192.168.10.82:6379 lost.</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.471 * Slave 192.168.10.82:6379 asks for synchronization</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.471 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134453799057).</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.471 * Starting BGSAVE for SYNC with target: disk</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.715 * Background saving started by pid 1440</span><br><span class=\"line\">2251:M 06 Mar 15:35:14.354 # Connection with slave 192.168.10.82:6379 lost.</span><br><span class=\"line\">1440:C 06 Mar 15:35:20.564 * DB saved on disk</span><br><span class=\"line\">1440:C 06 Mar 15:35:20.743 * RDB: 296 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:35:21.013 * Background saving terminated with success</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"原理分析\"><a href=\"#原理分析\" class=\"headerlink\" title=\"原理分析\"></a>原理分析</h3><p>如果设置了一个slave，不管是在第一次链接还是重新链接master的时候，slave会发送一个同步命令<br>然后master开始后台保存，收集所有对修改数据的命令。当后台保存完成，master会将这个数据文件传送到slave，<br>然后保存在磁盘，加载到内存中，master接着发送收集到的所有的修改数据的命令。</p>\n<p>Redis为避免输出缓冲区过度耗用内存，使用client-output-buffer-limit参数限制客户端输出缓冲区内存使用量。<br>Redis数据复制过程中，Slave有个flags=S的客户端连接到Master; 它和其他客户端一样有输出缓冲区和缓冲区大小限制。<br><code>client-output-buffer-limit slave 256mb 64mb 60</code><br>当缓冲区使用超过256mb,Master会尽快杀掉它；<br>当缓冲区使用大于64mb,且小于256mb的soft limit值时，并持续时间达60秒，也会被Master尽快杀掉。</p>\n<p>通过以上的原理分析我们可以得到一个解决方法：扩大buffer和timeout，但对于一个数据量比较大的db且服务器本身内存不足的情况下。<br>我们可以采用diskless replication，直接通过网络将数据更新过去，不再让服务器去同步到disk再从disk输出到内存导致output报错</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>开启redis diskless replication</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; CONFIG set repl-diskless-sync yes</span><br><span class=\"line\">OK</span><br><span class=\"line\">(1.97s)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2251:M 06 Mar 15:35:34.896 * Slave 192.168.10.82:6379 asks for synchronization</span><br><span class=\"line\">2251:M 06 Mar 15:35:34.896 * Full resync requested by slave 192.168.10.82:6379</span><br><span class=\"line\">2251:M 06 Mar 15:35:34.896 * Delay next BGSAVE for SYNC</span><br><span class=\"line\">2251:M 06 Mar 15:35:40.203 * Starting BGSAVE for SYNC with target: slaves sockets</span><br><span class=\"line\">2251:M 06 Mar 15:35:40.469 * Background RDB transfer started by pid 3351</span><br><span class=\"line\">3351:C 06 Mar 15:37:03.206 * RDB: 233 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:37:03.473 * Background RDB transfer terminated with success</span><br><span class=\"line\">2251:M 06 Mar 15:37:03.473 # Slave 192.168.10.82:6379 correctly received the streamed RDB file.</span><br><span class=\"line\">2251:M 06 Mar 15:37:03.473 * Streamed RDB transfer with slave 192.168.10.82:6379 succeeded (socket). Waiting for REPLCONF ACK from slave to enable streaming</span><br><span class=\"line\">2251:M 06 Mar 15:37:24.848 * 50000 changes in 60 seconds. Saving...</span><br><span class=\"line\">2251:M 06 Mar 15:37:25.097 * Background saving started by pid 5916</span><br><span class=\"line\">2251:M 06 Mar 15:38:10.510 * Synchronization with slave 192.168.10.82:6379 succeeded</span><br><span class=\"line\">5916:C 06 Mar 15:39:06.535 * DB saved on disk</span><br><span class=\"line\">5916:C 06 Mar 15:39:06.742 * RDB: 250 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:39:07.093 * Background saving terminated with success</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Replication</span><br><span class=\"line\">role:slave</span><br><span class=\"line\">master_host:192.168.10.226</span><br><span class=\"line\">master_port:6379</span><br><span class=\"line\">master_link_status:up</span><br><span class=\"line\">master_last_io_seconds_ago:1</span><br><span class=\"line\">master_sync_in_progress:0</span><br><span class=\"line\">slave_repl_offset:1134697190334</span><br><span class=\"line\">slave_priority:100</span><br><span class=\"line\">slave_read_only:1</span><br><span class=\"line\">connected_slaves:0</span><br><span class=\"line\">master_repl_offset:0</span><br><span class=\"line\">repl_backlog_active:0</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:0</span><br><span class=\"line\">repl_backlog_histlen:0</span><br><span class=\"line\"></span><br><span class=\"line\"># Replication</span><br><span class=\"line\">role:master</span><br><span class=\"line\">connected_slaves:2</span><br><span class=\"line\">slave0:ip=192.168.10.192,port=6379,state=online,offset=1135553694283,lag=1</span><br><span class=\"line\">slave1:ip=192.168.10.82,port=6379,state=online,offset=1135553653727,lag=1</span><br><span class=\"line\">master_repl_offset:1135554186742</span><br><span class=\"line\">repl_backlog_active:1</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:1135553138167</span><br><span class=\"line\">repl_backlog_histlen:1048576</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>redis diskless replication</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Replication</span><br><span class=\"line\">role:slave</span><br><span class=\"line\">master_host:192.168.10.226</span><br><span class=\"line\">master_port:6379</span><br><span class=\"line\">master_link_status:down</span><br><span class=\"line\">master_last_io_seconds_ago:-1</span><br><span class=\"line\">master_sync_in_progress:1</span><br><span class=\"line\">slave_repl_offset:1</span><br><span class=\"line\">master_sync_left_bytes:-4022404224</span><br><span class=\"line\">master_sync_last_io_seconds_ago:37</span><br><span class=\"line\">master_link_down_since_seconds:1488785860</span><br><span class=\"line\">slave_priority:100</span><br><span class=\"line\">slave_read_only:1</span><br><span class=\"line\">connected_slaves:0</span><br><span class=\"line\">master_repl_offset:0</span><br><span class=\"line\">repl_backlog_active:0</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:0</span><br><span class=\"line\">repl_backlog_histlen:0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Replication</span><br><span class=\"line\">role:master</span><br><span class=\"line\">connected_slaves:2</span><br><span class=\"line\">slave0:ip=192.168.10.192,port=6379,state=online,offset=1134556373255,lag=1</span><br><span class=\"line\">slave1:ip=192.168.10.82,port=6379,state=wait_bgsave,offset=0,lag=0</span><br><span class=\"line\">master_repl_offset:1134556812751</span><br><span class=\"line\">repl_backlog_active:1</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:1134555764176</span><br><span class=\"line\">repl_backlog_histlen:1048576</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6581:C 06 Mar 15:28:27.766 * DB saved on disk</span><br><span class=\"line\">26581:C 06 Mar 15:28:27.990 * RDB: 212 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:28:28.379 * Background saving terminated with success</span><br><span class=\"line\">2251:M 06 Mar 15:29:08.687 * Synchronization with slave 192.168.10.82:6379 succeeded</span><br><span class=\"line\">2251:M 06 Mar 15:29:47.093 # Client id=314558845 addr=192.168.10.82:58002 fd=16 name= age=194 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=3617 omem=95797745 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.</span><br><span class=\"line\">2251:M 06 Mar 15:29:47.093 # Connection with slave 192.168.10.82:6379 lost.</span><br><span class=\"line\">2251:M 06 Mar 15:30:15.999 * Slave 192.168.10.82:6379 asks for synchronization</span><br><span class=\"line\">2251:M 06 Mar 15:30:15.999 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134354232038).</span><br><span class=\"line\">2251:M 06 Mar 15:30:15.999 * Starting BGSAVE for SYNC with target: disk</span><br><span class=\"line\">2251:M 06 Mar 15:30:16.232 * Background saving started by pid 30494</span><br><span class=\"line\">30494:C 06 Mar 15:31:52.413 * DB saved on disk</span><br><span class=\"line\">30494:C 06 Mar 15:31:52.597 * RDB: 223 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:31:52.950 * Background saving terminated with success</span><br><span class=\"line\">2251:M 06 Mar 15:32:33.375 * Synchronization with slave 192.168.10.82:6379 succeeded</span><br><span class=\"line\">2251:M 06 Mar 15:33:08.106 # Client id=314561307 addr=192.168.10.82:38644 fd=16 name= age=173 idle=1 flags=S db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=4325 omem=102199438 events=rw cmd=psync scheduled to be closed ASAP for overcoming of output buffer limits.</span><br><span class=\"line\">2251:M 06 Mar 15:33:08.106 # Connection with slave 192.168.10.82:6379 lost.</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.471 * Slave 192.168.10.82:6379 asks for synchronization</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.471 * Unable to partial resync with slave 192.168.10.82:6379 for lack of backlog (Slave request was: 1134453799057).</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.471 * Starting BGSAVE for SYNC with target: disk</span><br><span class=\"line\">2251:M 06 Mar 15:33:40.715 * Background saving started by pid 1440</span><br><span class=\"line\">2251:M 06 Mar 15:35:14.354 # Connection with slave 192.168.10.82:6379 lost.</span><br><span class=\"line\">1440:C 06 Mar 15:35:20.564 * DB saved on disk</span><br><span class=\"line\">1440:C 06 Mar 15:35:20.743 * RDB: 296 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:35:21.013 * Background saving terminated with success</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"原理分析\"><a href=\"#原理分析\" class=\"headerlink\" title=\"原理分析\"></a>原理分析</h3><p>如果设置了一个slave，不管是在第一次链接还是重新链接master的时候，slave会发送一个同步命令<br>然后master开始后台保存，收集所有对修改数据的命令。当后台保存完成，master会将这个数据文件传送到slave，<br>然后保存在磁盘，加载到内存中，master接着发送收集到的所有的修改数据的命令。</p>\n<p>Redis为避免输出缓冲区过度耗用内存，使用client-output-buffer-limit参数限制客户端输出缓冲区内存使用量。<br>Redis数据复制过程中，Slave有个flags=S的客户端连接到Master; 它和其他客户端一样有输出缓冲区和缓冲区大小限制。<br><code>client-output-buffer-limit slave 256mb 64mb 60</code><br>当缓冲区使用超过256mb,Master会尽快杀掉它；<br>当缓冲区使用大于64mb,且小于256mb的soft limit值时，并持续时间达60秒，也会被Master尽快杀掉。</p>\n<p>通过以上的原理分析我们可以得到一个解决方法：扩大buffer和timeout，但对于一个数据量比较大的db且服务器本身内存不足的情况下。<br>我们可以采用diskless replication，直接通过网络将数据更新过去，不再让服务器去同步到disk再从disk输出到内存导致output报错</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>开启redis diskless replication</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1:6379&gt; CONFIG set repl-diskless-sync yes</span><br><span class=\"line\">OK</span><br><span class=\"line\">(1.97s)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2251:M 06 Mar 15:35:34.896 * Slave 192.168.10.82:6379 asks for synchronization</span><br><span class=\"line\">2251:M 06 Mar 15:35:34.896 * Full resync requested by slave 192.168.10.82:6379</span><br><span class=\"line\">2251:M 06 Mar 15:35:34.896 * Delay next BGSAVE for SYNC</span><br><span class=\"line\">2251:M 06 Mar 15:35:40.203 * Starting BGSAVE for SYNC with target: slaves sockets</span><br><span class=\"line\">2251:M 06 Mar 15:35:40.469 * Background RDB transfer started by pid 3351</span><br><span class=\"line\">3351:C 06 Mar 15:37:03.206 * RDB: 233 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:37:03.473 * Background RDB transfer terminated with success</span><br><span class=\"line\">2251:M 06 Mar 15:37:03.473 # Slave 192.168.10.82:6379 correctly received the streamed RDB file.</span><br><span class=\"line\">2251:M 06 Mar 15:37:03.473 * Streamed RDB transfer with slave 192.168.10.82:6379 succeeded (socket). Waiting for REPLCONF ACK from slave to enable streaming</span><br><span class=\"line\">2251:M 06 Mar 15:37:24.848 * 50000 changes in 60 seconds. Saving...</span><br><span class=\"line\">2251:M 06 Mar 15:37:25.097 * Background saving started by pid 5916</span><br><span class=\"line\">2251:M 06 Mar 15:38:10.510 * Synchronization with slave 192.168.10.82:6379 succeeded</span><br><span class=\"line\">5916:C 06 Mar 15:39:06.535 * DB saved on disk</span><br><span class=\"line\">5916:C 06 Mar 15:39:06.742 * RDB: 250 MB of memory used by copy-on-write</span><br><span class=\"line\">2251:M 06 Mar 15:39:07.093 * Background saving terminated with success</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Replication</span><br><span class=\"line\">role:slave</span><br><span class=\"line\">master_host:192.168.10.226</span><br><span class=\"line\">master_port:6379</span><br><span class=\"line\">master_link_status:up</span><br><span class=\"line\">master_last_io_seconds_ago:1</span><br><span class=\"line\">master_sync_in_progress:0</span><br><span class=\"line\">slave_repl_offset:1134697190334</span><br><span class=\"line\">slave_priority:100</span><br><span class=\"line\">slave_read_only:1</span><br><span class=\"line\">connected_slaves:0</span><br><span class=\"line\">master_repl_offset:0</span><br><span class=\"line\">repl_backlog_active:0</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:0</span><br><span class=\"line\">repl_backlog_histlen:0</span><br><span class=\"line\"></span><br><span class=\"line\"># Replication</span><br><span class=\"line\">role:master</span><br><span class=\"line\">connected_slaves:2</span><br><span class=\"line\">slave0:ip=192.168.10.192,port=6379,state=online,offset=1135553694283,lag=1</span><br><span class=\"line\">slave1:ip=192.168.10.82,port=6379,state=online,offset=1135553653727,lag=1</span><br><span class=\"line\">master_repl_offset:1135554186742</span><br><span class=\"line\">repl_backlog_active:1</span><br><span class=\"line\">repl_backlog_size:1048576</span><br><span class=\"line\">repl_backlog_first_byte_offset:1135553138167</span><br><span class=\"line\">repl_backlog_histlen:1048576</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"redis主从复制","published":1,"author":"xiemx","comments":1,"date":"2016-05-23T03:05:17.000Z","_content":"1. redis主从复制特点:\n\n* master可以拥有多个slave\n* 多个slave可以连接同一个master外，还可以连接到其他slave\n* 主从复制不会阻塞master，在同步数据时，master可以继续处理client请求\n* 提高系统的伸缩性\n* 可以在master禁用数据持久化，注释掉master配置文件中的所有save配置，只需在slave上配置数据持久化\n\n2. redis主从复制过程:\n\n当配置好slave后，slave与master建立连接，然后发送sync命令。无论是第一次连接还是重新连接，master都会启动一个后台进程，将数据库快照保存到文件中，同时master主进程会开始收集新的写命令并缓存。后台进程完成写文件后，master就发送文件给slave，slave将文件保存到硬盘上，再加载到内存中，接着master就会把缓存的命令转发给slave，后续master将收到的写命令发送给slave。如果master同时收到多个slave发来的同步连接命令，master只会启动一个进程来写数据库镜像，然后发送给所有的slave。\n\n3. redis主从配置:\n```conf\n### master\ndaemonize yes\npidfile /var/run/redis.pid\nport 6379\ntimeout 300\nloglevel verbose\nlogfile /usr/local/xiemx-redis/var/log/redis.log\ndatabases 16\nsave 900 1\nsave 300 10\nsave 60 10000\nrdbcompression yes\ndbfilename dump.rdb\ndir /usr/local/xiemx-redis/var/data\nrequirepass redis\nappendonly no\nappendfsync everysec\nno-appendfsync-on-rewrite no\nslowlog-log-slower-than 10000\nslowlog-max-len 1024\nvm-enabled no\nvm-swap-file /tmp/redis.swap\nvm-max-memory 0\nvm-page-size 32\nvm-pages 134217728\nvm-max-threads 4\nhash-max-zipmap-entries 512\nhash-max-zipmap-value 64\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\nset-max-intset-entries 512\nactiverehashing yes\n```\n```conf\n### slave\ndaemonize yes\npidfile /var/run/redis.pid\nport 6379\ntimeout 300\nloglevel verbose\nlogfile /usr/local/xiemx-redis/var/log/redis.log\ndatabases 16\nsave 900 1\nsave 300 10\nsave 60 10000\nrdbcompression yes\ndbfilename dump.rdb\ndir /usr/local/xiemx-redis/var/data\nappendonly no\nappendfsync everysec\nno-appendfsync-on-rewrite no\nslowlog-log-slower-than 10000\nslowlog-max-len 1024\nvm-enabled no\nvm-swap-file /tmp/redis.swap\nvm-max-memory 0\nvm-page-size 32\nvm-pages 134217728\nvm-max-threads 4\nhash-max-zipmap-entries 512\nhash-max-zipmap-value 64\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\nset-max-intset-entries 512\nactiverehashing yes\nslaveof 192.168.1.189 6379\nmasterauth redis\n```\n4. redis复制测试\n\n```log\n查看master端日志:\n[8930] 31 Jul 19:16:09 - Accepted 192.168.1.136:54774\n[8930] 31 Jul 19:16:09 * Slave ask for synchronization\n[8930] 31 Jul 19:16:09 * Starting BGSAVE for SYNC\n[8930] 31 Jul 19:16:09 * Background saving started by pid 10782\n[10782] 31 Jul 19:16:09 * DB saved on disk\n[8930] 31 Jul 19:16:09 * Background saving terminated with success\n[8930] 31 Jul 19:16:09 * Synchronization with slave succeeded\n[8930] 31 Jul 19:16:14 - DB 0: 1 keys (0 volatile) in 4 slots HT.\n[8930] 31 Jul 19:16:14 - 1 clients connected (1 slaves), 807320 bytes in use\n\n查看slave端日志:\n[24398] 01 Aug 10:16:10 * Connecting to MASTER...\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync started: SYNC sent\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: receiving 25 bytes from master\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Loading DB in memory\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Finished with success\n[24398] 01 Aug 10:16:15 - DB 0: 1 keys (0 volatile) in 4 slots HT.\n[24398] 01 Aug 10:16:15 - 1 clients connected (0 slaves), 798960 bytes in use\n```\n```\nmaster端操作:\nredis 127.0.0.1:6379> set k_m master\nOK\n\nslave端操作:\nredis 127.0.0.1:6379> get k_m\n\"master\"\n```\n","source":"_posts/redis-slave-replica.md","raw":"---\nlayout: post\ntitle: redis主从复制\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-05-23 11:05:17\ntags: [ redis ]\ncategories:\n    - redis\n# permalink: '/2016/05/23/redis%e4%b8%bb%e4%bb%8e%e5%a4%8d%e5%88%b6'\n---\n1. redis主从复制特点:\n\n* master可以拥有多个slave\n* 多个slave可以连接同一个master外，还可以连接到其他slave\n* 主从复制不会阻塞master，在同步数据时，master可以继续处理client请求\n* 提高系统的伸缩性\n* 可以在master禁用数据持久化，注释掉master配置文件中的所有save配置，只需在slave上配置数据持久化\n\n2. redis主从复制过程:\n\n当配置好slave后，slave与master建立连接，然后发送sync命令。无论是第一次连接还是重新连接，master都会启动一个后台进程，将数据库快照保存到文件中，同时master主进程会开始收集新的写命令并缓存。后台进程完成写文件后，master就发送文件给slave，slave将文件保存到硬盘上，再加载到内存中，接着master就会把缓存的命令转发给slave，后续master将收到的写命令发送给slave。如果master同时收到多个slave发来的同步连接命令，master只会启动一个进程来写数据库镜像，然后发送给所有的slave。\n\n3. redis主从配置:\n```conf\n### master\ndaemonize yes\npidfile /var/run/redis.pid\nport 6379\ntimeout 300\nloglevel verbose\nlogfile /usr/local/xiemx-redis/var/log/redis.log\ndatabases 16\nsave 900 1\nsave 300 10\nsave 60 10000\nrdbcompression yes\ndbfilename dump.rdb\ndir /usr/local/xiemx-redis/var/data\nrequirepass redis\nappendonly no\nappendfsync everysec\nno-appendfsync-on-rewrite no\nslowlog-log-slower-than 10000\nslowlog-max-len 1024\nvm-enabled no\nvm-swap-file /tmp/redis.swap\nvm-max-memory 0\nvm-page-size 32\nvm-pages 134217728\nvm-max-threads 4\nhash-max-zipmap-entries 512\nhash-max-zipmap-value 64\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\nset-max-intset-entries 512\nactiverehashing yes\n```\n```conf\n### slave\ndaemonize yes\npidfile /var/run/redis.pid\nport 6379\ntimeout 300\nloglevel verbose\nlogfile /usr/local/xiemx-redis/var/log/redis.log\ndatabases 16\nsave 900 1\nsave 300 10\nsave 60 10000\nrdbcompression yes\ndbfilename dump.rdb\ndir /usr/local/xiemx-redis/var/data\nappendonly no\nappendfsync everysec\nno-appendfsync-on-rewrite no\nslowlog-log-slower-than 10000\nslowlog-max-len 1024\nvm-enabled no\nvm-swap-file /tmp/redis.swap\nvm-max-memory 0\nvm-page-size 32\nvm-pages 134217728\nvm-max-threads 4\nhash-max-zipmap-entries 512\nhash-max-zipmap-value 64\nlist-max-ziplist-entries 512\nlist-max-ziplist-value 64\nset-max-intset-entries 512\nactiverehashing yes\nslaveof 192.168.1.189 6379\nmasterauth redis\n```\n4. redis复制测试\n\n```log\n查看master端日志:\n[8930] 31 Jul 19:16:09 - Accepted 192.168.1.136:54774\n[8930] 31 Jul 19:16:09 * Slave ask for synchronization\n[8930] 31 Jul 19:16:09 * Starting BGSAVE for SYNC\n[8930] 31 Jul 19:16:09 * Background saving started by pid 10782\n[10782] 31 Jul 19:16:09 * DB saved on disk\n[8930] 31 Jul 19:16:09 * Background saving terminated with success\n[8930] 31 Jul 19:16:09 * Synchronization with slave succeeded\n[8930] 31 Jul 19:16:14 - DB 0: 1 keys (0 volatile) in 4 slots HT.\n[8930] 31 Jul 19:16:14 - 1 clients connected (1 slaves), 807320 bytes in use\n\n查看slave端日志:\n[24398] 01 Aug 10:16:10 * Connecting to MASTER...\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync started: SYNC sent\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: receiving 25 bytes from master\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Loading DB in memory\n[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Finished with success\n[24398] 01 Aug 10:16:15 - DB 0: 1 keys (0 volatile) in 4 slots HT.\n[24398] 01 Aug 10:16:15 - 1 clients connected (0 slaves), 798960 bytes in use\n```\n```\nmaster端操作:\nredis 127.0.0.1:6379> set k_m master\nOK\n\nslave端操作:\nredis 127.0.0.1:6379> get k_m\n\"master\"\n```\n","slug":"redis-slave-replica","updated":"2019-10-19T08:43:41.709Z","photos":[],"link":"","_id":"ck42dyifc007qu9urjilpk6xk","content":"<ol>\n<li>redis主从复制特点:</li>\n</ol>\n<ul>\n<li>master可以拥有多个slave</li>\n<li>多个slave可以连接同一个master外，还可以连接到其他slave</li>\n<li>主从复制不会阻塞master，在同步数据时，master可以继续处理client请求</li>\n<li>提高系统的伸缩性</li>\n<li>可以在master禁用数据持久化，注释掉master配置文件中的所有save配置，只需在slave上配置数据持久化</li>\n</ul>\n<ol start=\"2\">\n<li>redis主从复制过程:</li>\n</ol>\n<p>当配置好slave后，slave与master建立连接，然后发送sync命令。无论是第一次连接还是重新连接，master都会启动一个后台进程，将数据库快照保存到文件中，同时master主进程会开始收集新的写命令并缓存。后台进程完成写文件后，master就发送文件给slave，slave将文件保存到硬盘上，再加载到内存中，接着master就会把缓存的命令转发给slave，后续master将收到的写命令发送给slave。如果master同时收到多个slave发来的同步连接命令，master只会启动一个进程来写数据库镜像，然后发送给所有的slave。</p>\n<ol start=\"3\">\n<li>redis主从配置:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### master</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\">pidfile /var/run/redis.pid</span><br><span class=\"line\">port 6379</span><br><span class=\"line\">timeout 300</span><br><span class=\"line\">loglevel verbose</span><br><span class=\"line\">logfile /usr/local/xiemx-redis/var/log/redis.log</span><br><span class=\"line\">databases 16</span><br><span class=\"line\">save 900 1</span><br><span class=\"line\">save 300 10</span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\">rdbcompression yes</span><br><span class=\"line\">dbfilename dump.rdb</span><br><span class=\"line\">dir /usr/local/xiemx-redis/var/data</span><br><span class=\"line\">requirepass redis</span><br><span class=\"line\">appendonly no</span><br><span class=\"line\">appendfsync everysec</span><br><span class=\"line\">no-appendfsync-on-rewrite no</span><br><span class=\"line\">slowlog-log-slower-than 10000</span><br><span class=\"line\">slowlog-max-len 1024</span><br><span class=\"line\">vm-enabled no</span><br><span class=\"line\">vm-swap-file /tmp/redis.swap</span><br><span class=\"line\">vm-max-memory 0</span><br><span class=\"line\">vm-page-size 32</span><br><span class=\"line\">vm-pages 134217728</span><br><span class=\"line\">vm-max-threads 4</span><br><span class=\"line\">hash-max-zipmap-entries 512</span><br><span class=\"line\">hash-max-zipmap-value 64</span><br><span class=\"line\">list-max-ziplist-entries 512</span><br><span class=\"line\">list-max-ziplist-value 64</span><br><span class=\"line\">set-max-intset-entries 512</span><br><span class=\"line\">activerehashing yes</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### slave</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\">pidfile /var/run/redis.pid</span><br><span class=\"line\">port 6379</span><br><span class=\"line\">timeout 300</span><br><span class=\"line\">loglevel verbose</span><br><span class=\"line\">logfile /usr/local/xiemx-redis/var/log/redis.log</span><br><span class=\"line\">databases 16</span><br><span class=\"line\">save 900 1</span><br><span class=\"line\">save 300 10</span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\">rdbcompression yes</span><br><span class=\"line\">dbfilename dump.rdb</span><br><span class=\"line\">dir /usr/local/xiemx-redis/var/data</span><br><span class=\"line\">appendonly no</span><br><span class=\"line\">appendfsync everysec</span><br><span class=\"line\">no-appendfsync-on-rewrite no</span><br><span class=\"line\">slowlog-log-slower-than 10000</span><br><span class=\"line\">slowlog-max-len 1024</span><br><span class=\"line\">vm-enabled no</span><br><span class=\"line\">vm-swap-file /tmp/redis.swap</span><br><span class=\"line\">vm-max-memory 0</span><br><span class=\"line\">vm-page-size 32</span><br><span class=\"line\">vm-pages 134217728</span><br><span class=\"line\">vm-max-threads 4</span><br><span class=\"line\">hash-max-zipmap-entries 512</span><br><span class=\"line\">hash-max-zipmap-value 64</span><br><span class=\"line\">list-max-ziplist-entries 512</span><br><span class=\"line\">list-max-ziplist-value 64</span><br><span class=\"line\">set-max-intset-entries 512</span><br><span class=\"line\">activerehashing yes</span><br><span class=\"line\">slaveof 192.168.1.189 6379</span><br><span class=\"line\">masterauth redis</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>redis复制测试</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看master端日志:</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 - Accepted 192.168.1.136:54774</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Slave ask for synchronization</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Starting BGSAVE for SYNC</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Background saving started by pid 10782</span><br><span class=\"line\">[10782] 31 Jul 19:16:09 * DB saved on disk</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Background saving terminated with success</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Synchronization with slave succeeded</span><br><span class=\"line\">[8930] 31 Jul 19:16:14 - DB 0: 1 keys (0 volatile) in 4 slots HT.</span><br><span class=\"line\">[8930] 31 Jul 19:16:14 - 1 clients connected (1 slaves), 807320 bytes in use</span><br><span class=\"line\"></span><br><span class=\"line\">查看slave端日志:</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * Connecting to MASTER...</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync started: SYNC sent</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: receiving 25 bytes from master</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Loading DB in memory</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Finished with success</span><br><span class=\"line\">[24398] 01 Aug 10:16:15 - DB 0: 1 keys (0 volatile) in 4 slots HT.</span><br><span class=\"line\">[24398] 01 Aug 10:16:15 - 1 clients connected (0 slaves), 798960 bytes in use</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">master端操作:</span><br><span class=\"line\">redis <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; <span class=\"keyword\">set</span> k_m master</span><br><span class=\"line\">OK</span><br><span class=\"line\"></span><br><span class=\"line\">slave端操作:</span><br><span class=\"line\">redis <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; <span class=\"keyword\">get</span> k_m</span><br><span class=\"line\"><span class=\"string\">\"master\"</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>redis主从复制特点:</li>\n</ol>\n<ul>\n<li>master可以拥有多个slave</li>\n<li>多个slave可以连接同一个master外，还可以连接到其他slave</li>\n<li>主从复制不会阻塞master，在同步数据时，master可以继续处理client请求</li>\n<li>提高系统的伸缩性</li>\n<li>可以在master禁用数据持久化，注释掉master配置文件中的所有save配置，只需在slave上配置数据持久化</li>\n</ul>\n<ol start=\"2\">\n<li>redis主从复制过程:</li>\n</ol>\n<p>当配置好slave后，slave与master建立连接，然后发送sync命令。无论是第一次连接还是重新连接，master都会启动一个后台进程，将数据库快照保存到文件中，同时master主进程会开始收集新的写命令并缓存。后台进程完成写文件后，master就发送文件给slave，slave将文件保存到硬盘上，再加载到内存中，接着master就会把缓存的命令转发给slave，后续master将收到的写命令发送给slave。如果master同时收到多个slave发来的同步连接命令，master只会启动一个进程来写数据库镜像，然后发送给所有的slave。</p>\n<ol start=\"3\">\n<li>redis主从配置:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### master</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\">pidfile /var/run/redis.pid</span><br><span class=\"line\">port 6379</span><br><span class=\"line\">timeout 300</span><br><span class=\"line\">loglevel verbose</span><br><span class=\"line\">logfile /usr/local/xiemx-redis/var/log/redis.log</span><br><span class=\"line\">databases 16</span><br><span class=\"line\">save 900 1</span><br><span class=\"line\">save 300 10</span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\">rdbcompression yes</span><br><span class=\"line\">dbfilename dump.rdb</span><br><span class=\"line\">dir /usr/local/xiemx-redis/var/data</span><br><span class=\"line\">requirepass redis</span><br><span class=\"line\">appendonly no</span><br><span class=\"line\">appendfsync everysec</span><br><span class=\"line\">no-appendfsync-on-rewrite no</span><br><span class=\"line\">slowlog-log-slower-than 10000</span><br><span class=\"line\">slowlog-max-len 1024</span><br><span class=\"line\">vm-enabled no</span><br><span class=\"line\">vm-swap-file /tmp/redis.swap</span><br><span class=\"line\">vm-max-memory 0</span><br><span class=\"line\">vm-page-size 32</span><br><span class=\"line\">vm-pages 134217728</span><br><span class=\"line\">vm-max-threads 4</span><br><span class=\"line\">hash-max-zipmap-entries 512</span><br><span class=\"line\">hash-max-zipmap-value 64</span><br><span class=\"line\">list-max-ziplist-entries 512</span><br><span class=\"line\">list-max-ziplist-value 64</span><br><span class=\"line\">set-max-intset-entries 512</span><br><span class=\"line\">activerehashing yes</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### slave</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\">pidfile /var/run/redis.pid</span><br><span class=\"line\">port 6379</span><br><span class=\"line\">timeout 300</span><br><span class=\"line\">loglevel verbose</span><br><span class=\"line\">logfile /usr/local/xiemx-redis/var/log/redis.log</span><br><span class=\"line\">databases 16</span><br><span class=\"line\">save 900 1</span><br><span class=\"line\">save 300 10</span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\">rdbcompression yes</span><br><span class=\"line\">dbfilename dump.rdb</span><br><span class=\"line\">dir /usr/local/xiemx-redis/var/data</span><br><span class=\"line\">appendonly no</span><br><span class=\"line\">appendfsync everysec</span><br><span class=\"line\">no-appendfsync-on-rewrite no</span><br><span class=\"line\">slowlog-log-slower-than 10000</span><br><span class=\"line\">slowlog-max-len 1024</span><br><span class=\"line\">vm-enabled no</span><br><span class=\"line\">vm-swap-file /tmp/redis.swap</span><br><span class=\"line\">vm-max-memory 0</span><br><span class=\"line\">vm-page-size 32</span><br><span class=\"line\">vm-pages 134217728</span><br><span class=\"line\">vm-max-threads 4</span><br><span class=\"line\">hash-max-zipmap-entries 512</span><br><span class=\"line\">hash-max-zipmap-value 64</span><br><span class=\"line\">list-max-ziplist-entries 512</span><br><span class=\"line\">list-max-ziplist-value 64</span><br><span class=\"line\">set-max-intset-entries 512</span><br><span class=\"line\">activerehashing yes</span><br><span class=\"line\">slaveof 192.168.1.189 6379</span><br><span class=\"line\">masterauth redis</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>redis复制测试</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看master端日志:</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 - Accepted 192.168.1.136:54774</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Slave ask for synchronization</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Starting BGSAVE for SYNC</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Background saving started by pid 10782</span><br><span class=\"line\">[10782] 31 Jul 19:16:09 * DB saved on disk</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Background saving terminated with success</span><br><span class=\"line\">[8930] 31 Jul 19:16:09 * Synchronization with slave succeeded</span><br><span class=\"line\">[8930] 31 Jul 19:16:14 - DB 0: 1 keys (0 volatile) in 4 slots HT.</span><br><span class=\"line\">[8930] 31 Jul 19:16:14 - 1 clients connected (1 slaves), 807320 bytes in use</span><br><span class=\"line\"></span><br><span class=\"line\">查看slave端日志:</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * Connecting to MASTER...</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync started: SYNC sent</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: receiving 25 bytes from master</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Loading DB in memory</span><br><span class=\"line\">[24398] 01 Aug 10:16:10 * MASTER  SLAVE sync: Finished with success</span><br><span class=\"line\">[24398] 01 Aug 10:16:15 - DB 0: 1 keys (0 volatile) in 4 slots HT.</span><br><span class=\"line\">[24398] 01 Aug 10:16:15 - 1 clients connected (0 slaves), 798960 bytes in use</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">master端操作:</span><br><span class=\"line\">redis <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; <span class=\"keyword\">set</span> k_m master</span><br><span class=\"line\">OK</span><br><span class=\"line\"></span><br><span class=\"line\">slave端操作:</span><br><span class=\"line\">redis <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">6379</span>&gt; <span class=\"keyword\">get</span> k_m</span><br><span class=\"line\"><span class=\"string\">\"master\"</span></span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"redis-trib.rb构建redis集群","published":1,"author":"xiemx","comments":1,"date":"2017-02-26T20:02:11.000Z","_content":"redis-cluster\n\n使用官方的redis-trib.rb构建redis集群,要让redis cluster集群正常工作需要有三个主节点，因此我们在三台机器上部署6个节点，每台机器一个master一个slave。\n\n环境：\np-hsg-redis-1  192.168.10.81   7000/7001\np-hsg-redis-2\t 192.168.10.82   7000/7001\np-hsg-redis-3\t 192.168.10.83   7000/7001\n\n\n部署流程：\n\n1.安装redis－server\n\n我这里已经有saltstack的自动化构建脚本，因此使用salt安装软件。具体redis安装方法不再赘述。\nsalt-call state.sls redis.cluster\n\n2.修改配置文件\n```shell\n\troot@p-hsg-redis-1:/etc/redis# cat /etc/redis/7000.conf\n\tprotected-mode no\n\tdaemonize yes\n\tport 7000\n\tcluster-enabled yes\n\tcluster-config-file nodes-7000.conf\n\tcluster-node-timeout 15000\n\tappendonly yes\n\tdir /var/lib/redis/7000\n```\n3.启动redis节点\n```shell\n\troot@p-hsg-redis-3:/etc/redis# ps -ef | grep redis\n\troot     30431     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7001 [cluster]\n\troot     30446     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7000 [cluster]\n\troot     30450 11073  0 15:12 pts/1    00:00:00 grep --color=auto redis\n```\n4.创建集群\n```shell\n\tredis-trib.rb create --replicas 1 192.168.10.81:7001 192.168.10.81:7000 192.168.10.82:7000 192.168.10.82:7001 192.168.10.83:7000 192.168.10.83:7001\n\t>>> Creating cluster\n\t>>> Performing hash slots allocation on 6 nodes...\n\tUsing 3 masters:\n\t192.168.10.81:7001\n\t192.168.10.82:7000\n\t192.168.10.83:7000\n\tAdding replica 192.168.10.82:7001 to 192.168.10.81:7001\n\tAdding replica 192.168.10.81:7000 to 192.168.10.82:7000\n\tAdding replica 192.168.10.83:7001 to 192.168.10.83:7000\n\tM: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001\n\t   slots:0-5460 (5461 slots) master\n\tS: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000\n\t   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e\n\tM: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000\n\t   slots:5461-10922 (5462 slots) master\n\tS: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001\n\t   replicates 5fd250591aa474d6370e1df547959c5895716192\n\tM: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000\n\t   slots:10923-16383 (5461 slots) master\n\tS: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001\n\t   replicates 1773d96052f573361a13b5e9015f947b340d45cd\n\tCan I set the above configuration? (type 'yes' to accept): yes\n\t>>> Nodes configuration updated\n\t>>> Assign a different config epoch to each node\n\t>>> Sending CLUSTER MEET messages to join the cluster\n\tWaiting for the cluster to join...\n\t>>> Performing Cluster Check (using node 192.168.10.81:7001)\n\tM: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001\n\t   slots:0-5460 (5461 slots) master\n\t   1 additional replica(s)\n\tM: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000\n\t   slots:10923-16383 (5461 slots) master\n\t   1 additional replica(s)\n\tS: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000\n\t   slots: (0 slots) slave\n\t   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e\n\tS: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001\n\t   slots: (0 slots) slave\n\t   replicates 1773d96052f573361a13b5e9015f947b340d45cd\n\tM: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000\n\t   slots:5461-10922 (5462 slots) master\n\t   1 additional replica(s)\n\tS: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001\n\t   slots: (0 slots) slave\n\t   replicates 5fd250591aa474d6370e1df547959c5895716192\n\t[OK] All nodes agree about slots configuration.\n\t>>> Check for open slots...\n\t>>> Check slots coverage...\n\t[OK] All 16384 slots covered.\n\t```","source":"_posts/redis-trib-rb-create-cluster.md","raw":"---\nlayout: post\ntitle: redis-trib.rb构建redis集群\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-27 04:02:11\ntags: [ redis, cluster ]\ncategories:\n    - redis\n# permalink: '/2017/02/27/redis-trib-rb%e6%9e%84%e5%bb%baredis%e9%9b%86%e7%be%a4'\n---\nredis-cluster\n\n使用官方的redis-trib.rb构建redis集群,要让redis cluster集群正常工作需要有三个主节点，因此我们在三台机器上部署6个节点，每台机器一个master一个slave。\n\n环境：\np-hsg-redis-1  192.168.10.81   7000/7001\np-hsg-redis-2\t 192.168.10.82   7000/7001\np-hsg-redis-3\t 192.168.10.83   7000/7001\n\n\n部署流程：\n\n1.安装redis－server\n\n我这里已经有saltstack的自动化构建脚本，因此使用salt安装软件。具体redis安装方法不再赘述。\nsalt-call state.sls redis.cluster\n\n2.修改配置文件\n```shell\n\troot@p-hsg-redis-1:/etc/redis# cat /etc/redis/7000.conf\n\tprotected-mode no\n\tdaemonize yes\n\tport 7000\n\tcluster-enabled yes\n\tcluster-config-file nodes-7000.conf\n\tcluster-node-timeout 15000\n\tappendonly yes\n\tdir /var/lib/redis/7000\n```\n3.启动redis节点\n```shell\n\troot@p-hsg-redis-3:/etc/redis# ps -ef | grep redis\n\troot     30431     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7001 [cluster]\n\troot     30446     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7000 [cluster]\n\troot     30450 11073  0 15:12 pts/1    00:00:00 grep --color=auto redis\n```\n4.创建集群\n```shell\n\tredis-trib.rb create --replicas 1 192.168.10.81:7001 192.168.10.81:7000 192.168.10.82:7000 192.168.10.82:7001 192.168.10.83:7000 192.168.10.83:7001\n\t>>> Creating cluster\n\t>>> Performing hash slots allocation on 6 nodes...\n\tUsing 3 masters:\n\t192.168.10.81:7001\n\t192.168.10.82:7000\n\t192.168.10.83:7000\n\tAdding replica 192.168.10.82:7001 to 192.168.10.81:7001\n\tAdding replica 192.168.10.81:7000 to 192.168.10.82:7000\n\tAdding replica 192.168.10.83:7001 to 192.168.10.83:7000\n\tM: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001\n\t   slots:0-5460 (5461 slots) master\n\tS: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000\n\t   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e\n\tM: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000\n\t   slots:5461-10922 (5462 slots) master\n\tS: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001\n\t   replicates 5fd250591aa474d6370e1df547959c5895716192\n\tM: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000\n\t   slots:10923-16383 (5461 slots) master\n\tS: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001\n\t   replicates 1773d96052f573361a13b5e9015f947b340d45cd\n\tCan I set the above configuration? (type 'yes' to accept): yes\n\t>>> Nodes configuration updated\n\t>>> Assign a different config epoch to each node\n\t>>> Sending CLUSTER MEET messages to join the cluster\n\tWaiting for the cluster to join...\n\t>>> Performing Cluster Check (using node 192.168.10.81:7001)\n\tM: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001\n\t   slots:0-5460 (5461 slots) master\n\t   1 additional replica(s)\n\tM: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000\n\t   slots:10923-16383 (5461 slots) master\n\t   1 additional replica(s)\n\tS: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000\n\t   slots: (0 slots) slave\n\t   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e\n\tS: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001\n\t   slots: (0 slots) slave\n\t   replicates 1773d96052f573361a13b5e9015f947b340d45cd\n\tM: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000\n\t   slots:5461-10922 (5462 slots) master\n\t   1 additional replica(s)\n\tS: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001\n\t   slots: (0 slots) slave\n\t   replicates 5fd250591aa474d6370e1df547959c5895716192\n\t[OK] All nodes agree about slots configuration.\n\t>>> Check for open slots...\n\t>>> Check slots coverage...\n\t[OK] All 16384 slots covered.\n\t```","slug":"redis-trib-rb-create-cluster","updated":"2019-10-21T06:57:42.922Z","photos":[],"link":"","_id":"ck42dyiff007tu9urbngaw0u1","content":"<p>redis-cluster</p>\n<p>使用官方的redis-trib.rb构建redis集群,要让redis cluster集群正常工作需要有三个主节点，因此我们在三台机器上部署6个节点，每台机器一个master一个slave。</p>\n<p>环境：<br>p-hsg-redis-1  192.168.10.81   7000/7001<br>p-hsg-redis-2     192.168.10.82   7000/7001<br>p-hsg-redis-3     192.168.10.83   7000/7001</p>\n<p>部署流程：</p>\n<p>1.安装redis－server</p>\n<p>我这里已经有saltstack的自动化构建脚本，因此使用salt安装软件。具体redis安装方法不再赘述。<br>salt-call state.sls redis.cluster</p>\n<p>2.修改配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@p-hsg-redis-1:/etc/redis# cat /etc/redis/7000.conf</span><br><span class=\"line\">protected-mode no</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\">port 7000</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">cluster-config-file nodes-7000.conf</span><br><span class=\"line\">cluster-node-timeout 15000</span><br><span class=\"line\">appendonly yes</span><br><span class=\"line\">dir /var/lib/redis/7000</span><br></pre></td></tr></table></figure>\n\n<p>3.启动redis节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@p-hsg-redis-3:/etc/redis# ps -ef | grep redis</span><br><span class=\"line\">root     30431     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7001 [cluster]</span><br><span class=\"line\">root     30446     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7000 [cluster]</span><br><span class=\"line\">root     30450 11073  0 15:12 pts/1    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>\n\n<p>4.创建集群</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-trib.rb create --replicas 1 192.168.10.81:7001 192.168.10.81:7000 192.168.10.82:7000 192.168.10.82:7001 192.168.10.83:7000 192.168.10.83:7001</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Creating cluster</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Performing <span class=\"built_in\">hash</span> slots allocation on 6 nodes...</span></span><br><span class=\"line\">Using 3 masters:</span><br><span class=\"line\">192.168.10.81:7001</span><br><span class=\"line\">192.168.10.82:7000</span><br><span class=\"line\">192.168.10.83:7000</span><br><span class=\"line\">Adding replica 192.168.10.82:7001 to 192.168.10.81:7001</span><br><span class=\"line\">Adding replica 192.168.10.81:7000 to 192.168.10.82:7000</span><br><span class=\"line\">Adding replica 192.168.10.83:7001 to 192.168.10.83:7000</span><br><span class=\"line\">M: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001</span><br><span class=\"line\">   slots:0-5460 (5461 slots) master</span><br><span class=\"line\">S: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000</span><br><span class=\"line\">   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e</span><br><span class=\"line\">M: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000</span><br><span class=\"line\">   slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">S: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001</span><br><span class=\"line\">   replicates 5fd250591aa474d6370e1df547959c5895716192</span><br><span class=\"line\">M: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000</span><br><span class=\"line\">   slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">S: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001</span><br><span class=\"line\">   replicates 1773d96052f573361a13b5e9015f947b340d45cd</span><br><span class=\"line\">Can I set the above configuration? (type 'yes' to accept): yes</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Nodes configuration updated</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Assign a different config epoch to each node</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span></span><br><span class=\"line\">Waiting for the cluster to join...</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Performing Cluster Check (using node 192.168.10.81:7001)</span></span><br><span class=\"line\">M: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001</span><br><span class=\"line\">   slots:0-5460 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">M: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000</span><br><span class=\"line\">   slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e</span><br><span class=\"line\">S: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates 1773d96052f573361a13b5e9015f947b340d45cd</span><br><span class=\"line\">M: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000</span><br><span class=\"line\">   slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates 5fd250591aa474d6370e1df547959c5895716192</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check slots coverage...</span></span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>redis-cluster</p>\n<p>使用官方的redis-trib.rb构建redis集群,要让redis cluster集群正常工作需要有三个主节点，因此我们在三台机器上部署6个节点，每台机器一个master一个slave。</p>\n<p>环境：<br>p-hsg-redis-1  192.168.10.81   7000/7001<br>p-hsg-redis-2     192.168.10.82   7000/7001<br>p-hsg-redis-3     192.168.10.83   7000/7001</p>\n<p>部署流程：</p>\n<p>1.安装redis－server</p>\n<p>我这里已经有saltstack的自动化构建脚本，因此使用salt安装软件。具体redis安装方法不再赘述。<br>salt-call state.sls redis.cluster</p>\n<p>2.修改配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@p-hsg-redis-1:/etc/redis# cat /etc/redis/7000.conf</span><br><span class=\"line\">protected-mode no</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\">port 7000</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">cluster-config-file nodes-7000.conf</span><br><span class=\"line\">cluster-node-timeout 15000</span><br><span class=\"line\">appendonly yes</span><br><span class=\"line\">dir /var/lib/redis/7000</span><br></pre></td></tr></table></figure>\n\n<p>3.启动redis节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@p-hsg-redis-3:/etc/redis# ps -ef | grep redis</span><br><span class=\"line\">root     30431     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7001 [cluster]</span><br><span class=\"line\">root     30446     1  0 15:12 ?        00:00:00 /usr/local/bin/redis-server *:7000 [cluster]</span><br><span class=\"line\">root     30450 11073  0 15:12 pts/1    00:00:00 grep --color=auto redis</span><br></pre></td></tr></table></figure>\n\n<p>4.创建集群</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-trib.rb create --replicas 1 192.168.10.81:7001 192.168.10.81:7000 192.168.10.82:7000 192.168.10.82:7001 192.168.10.83:7000 192.168.10.83:7001</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Creating cluster</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Performing <span class=\"built_in\">hash</span> slots allocation on 6 nodes...</span></span><br><span class=\"line\">Using 3 masters:</span><br><span class=\"line\">192.168.10.81:7001</span><br><span class=\"line\">192.168.10.82:7000</span><br><span class=\"line\">192.168.10.83:7000</span><br><span class=\"line\">Adding replica 192.168.10.82:7001 to 192.168.10.81:7001</span><br><span class=\"line\">Adding replica 192.168.10.81:7000 to 192.168.10.82:7000</span><br><span class=\"line\">Adding replica 192.168.10.83:7001 to 192.168.10.83:7000</span><br><span class=\"line\">M: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001</span><br><span class=\"line\">   slots:0-5460 (5461 slots) master</span><br><span class=\"line\">S: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000</span><br><span class=\"line\">   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e</span><br><span class=\"line\">M: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000</span><br><span class=\"line\">   slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">S: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001</span><br><span class=\"line\">   replicates 5fd250591aa474d6370e1df547959c5895716192</span><br><span class=\"line\">M: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000</span><br><span class=\"line\">   slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">S: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001</span><br><span class=\"line\">   replicates 1773d96052f573361a13b5e9015f947b340d45cd</span><br><span class=\"line\">Can I set the above configuration? (type 'yes' to accept): yes</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Nodes configuration updated</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Assign a different config epoch to each node</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span></span><br><span class=\"line\">Waiting for the cluster to join...</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Performing Cluster Check (using node 192.168.10.81:7001)</span></span><br><span class=\"line\">M: 5fd250591aa474d6370e1df547959c5895716192 192.168.10.81:7001</span><br><span class=\"line\">   slots:0-5460 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">M: 1773d96052f573361a13b5e9015f947b340d45cd 192.168.10.83:7000</span><br><span class=\"line\">   slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: ef8bf8a326894fee37a398d3f88de3120fc71ea5 192.168.10.81:7000</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates dc62f19b8894db1816f7b92e3fe05b8244832d3e</span><br><span class=\"line\">S: 670f158355b93b4a7ac30d69dc3e1e8c4c484a9f 192.168.10.83:7001</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates 1773d96052f573361a13b5e9015f947b340d45cd</span><br><span class=\"line\">M: dc62f19b8894db1816f7b92e3fe05b8244832d3e 192.168.10.82:7000</span><br><span class=\"line\">   slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: eb2c7cc3cb56bb5ee124d80e353a91331d092042 192.168.10.82:7001</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates 5fd250591aa474d6370e1df547959c5895716192</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check slots coverage...</span></span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"repcache＋magent构建高可用memcache","published":1,"author":"xiemx","comments":1,"date":"2017-02-08T22:02:53.000Z","_content":"repcache+magnet\n\nmagent：一款开源的Memcached代理服务器软件，功能和mysql-proxy类似。\n  \nrepcache：日本开发的一款开源工具，使memcache能够做主从复制。可以通过patch包升级memcache，也可以下载包含replication的memcache版本\n\n先将master/slave通过replication构建自动复制的主主，通过magent将K／V，写入到master和backup中，当master宕机时，magent将所有读写请求交给slave，slave等待master启动，默认情况下master宕机重启后内存中的数据回丢失，但由于repcache的自动主主，master启动时会自动从salve端复制所有数据。\n\n### 安装部署\n```shell\nlibevent:\n  apt-get install -y libevent-dev\n\nmagent：\n  wget http://memagent.googlecode.com/files/magent-0.5.tar.gz  \n  tar zxvf magent-0.5.tar.gz  \n  /sbin/ldconfig  \n  sed -i \"s#LIBS = -levent#LIBS = -levent -lm#g\" Makefile  \n  make  \n  cp magent /usr/bin/magent  \n  \nrepcache:\n  wget http://downloads.sourceforge.net/repcached/memcached-1.2.8-repcached-2.2.tar.gz\n  tar xf memcached-1.2.8-repcached-2.2.tar.gz\n  cd memcached-1.2.8-repcached-2.2/\n  ./configure --prefix=/opt/repcached/ --enable-replication --program-transform-name=s/memcached/repcached/\n  make&&make install\n  ln -s /opt/repcached/bin/repcached /usr/bin/\n```\n\n### 编译错误汇总\n```shell\n### magent\n\n[root@test magent]# make \ngcc -Wall -g -O2 -I/usr/local/include -m64 -c -o magent.o magent.c\nmagent.c: In function ‘writev_list’:\nmagent.c:729: error: ‘SSIZE_MAX’ undeclared (first use in this function)\nmagent.c:729: error: (Each undeclared identifier is reported only once\nmagent.c:729: error: for each function it appears in.)\nmake: *** [magent.o] Error 1\n解决方法:\n[root@test magent]# vim ketama.h\n#ifndef SSIZE_MAX\n#define SSIZE_MAX      32767\n#endif\n#ifndef _KETAMA_H\n#define _KETAMA_H\n\n[root@test magent]# make \ngcc -Wall -O2 -g  -c -o magent.o magent.c\ngcc -Wall -O2 -g  -c -o ketama.o ketama.c\ngcc -Wall -O2 -g -o magent magent.o ketama.o -levent\nketama.o: In function `create_ketama':\n/opt/root/magent-0.5/ketama.c:399: undefined reference to `floorf'\ncollect2: ld returned 1 exit status\nmake: *** [magent] Error 1\n\n修改Makefile\nLIBS = -levent 为LIBS = -levent -lm\n#sed -i \"s#LIBS = -levent#LIBS = -levent -lm#g\" Makefile \n```\n```shell\n### repcached\n\n[root@test magent]# make \nmake all-recursive    \nmake[1]: Entering directory `/usr/local/memcached'    \nMaking all in doc    \nmake[2]: Entering directory `/usr/local/memcached/doc'    \nmake[2]: Nothing to be done for `all'.    \nmake[2]: Leaving directory `/usr/local/memcached/doc'    \nmake[2]: Entering directory `/usr/local/memcached'    \ngcc -DHAVE_CONFIG_H -I. -DNDEBUG -m64 -g -O2 -MT memcached-memcached.o -MD     \nMP -MF .deps/memcached-memcached.Tpo -c -o memcached-memcached.o `test -f     \nmemcached.c' || echo './'`memcached.c    \nmemcached.c: In function ‘add_iov’:    \nmemcached.c:697: error: ‘IOV_MAX’ undeclared (first use in this function)    \nmemcached.c:697: error: (Each undeclared identifier is reported only once    \nmemcached.c:697: error: for each function it appears in.)    \nmake[2]: *** [memcached-memcached.o] Error 1    \nmake[2]: Leaving directory `/usr/local/memcached'    \nmake[1]: *** [all-recursive] Error 1    \nmake[1]: Leaving directory `/usr/local/memcached'    \nmake: *** [all] Error 2\n    \n解决方案：    \nvi memcached.c\n    \n将下面的几行    \n/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    \n#ifndef IOV_MAX    \n#if defined(__FreeBSD__) || defined(__APPLE__)    \n# define IOV_MAX 1024    \n#endif    \n#endif\n    \n修改为\n/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    \n#ifndef IOV_MAX    \n# define IOV_MAX 1024    \n#endif\n```\n### 启动服务\n```shell\n### 启动repcached\n启动master：\nrepcached -d -v -x 127.0.0.1 -u vagrant  \n启动slave：\nrepcached -d -v -x 127.0.0.1 -u vagrant -p 11222\n\n参数说明：\n  -x 设置从哪个IP上进行同步。\n  -X 指定数据同步的端口。\n  Memcached默认服务端口是11211，默认同步监听端口是11212。\n\n### 启动magent\nmagent -u root -p 11233 -s 127.0.0.1:11211 -s 127.0.0.1:11222\n```\n","source":"_posts/repcache-magent.md","raw":"---\nlayout: post\ntitle: repcache＋magent构建高可用memcache\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-09 06:02:53\ntags: [ memcached, repcache, magent]\ncategories:\n    - memcached\n# permalink: '/2017/02/09/repcache-magent'\n---\nrepcache+magnet\n\nmagent：一款开源的Memcached代理服务器软件，功能和mysql-proxy类似。\n  \nrepcache：日本开发的一款开源工具，使memcache能够做主从复制。可以通过patch包升级memcache，也可以下载包含replication的memcache版本\n\n先将master/slave通过replication构建自动复制的主主，通过magent将K／V，写入到master和backup中，当master宕机时，magent将所有读写请求交给slave，slave等待master启动，默认情况下master宕机重启后内存中的数据回丢失，但由于repcache的自动主主，master启动时会自动从salve端复制所有数据。\n\n### 安装部署\n```shell\nlibevent:\n  apt-get install -y libevent-dev\n\nmagent：\n  wget http://memagent.googlecode.com/files/magent-0.5.tar.gz  \n  tar zxvf magent-0.5.tar.gz  \n  /sbin/ldconfig  \n  sed -i \"s#LIBS = -levent#LIBS = -levent -lm#g\" Makefile  \n  make  \n  cp magent /usr/bin/magent  \n  \nrepcache:\n  wget http://downloads.sourceforge.net/repcached/memcached-1.2.8-repcached-2.2.tar.gz\n  tar xf memcached-1.2.8-repcached-2.2.tar.gz\n  cd memcached-1.2.8-repcached-2.2/\n  ./configure --prefix=/opt/repcached/ --enable-replication --program-transform-name=s/memcached/repcached/\n  make&&make install\n  ln -s /opt/repcached/bin/repcached /usr/bin/\n```\n\n### 编译错误汇总\n```shell\n### magent\n\n[root@test magent]# make \ngcc -Wall -g -O2 -I/usr/local/include -m64 -c -o magent.o magent.c\nmagent.c: In function ‘writev_list’:\nmagent.c:729: error: ‘SSIZE_MAX’ undeclared (first use in this function)\nmagent.c:729: error: (Each undeclared identifier is reported only once\nmagent.c:729: error: for each function it appears in.)\nmake: *** [magent.o] Error 1\n解决方法:\n[root@test magent]# vim ketama.h\n#ifndef SSIZE_MAX\n#define SSIZE_MAX      32767\n#endif\n#ifndef _KETAMA_H\n#define _KETAMA_H\n\n[root@test magent]# make \ngcc -Wall -O2 -g  -c -o magent.o magent.c\ngcc -Wall -O2 -g  -c -o ketama.o ketama.c\ngcc -Wall -O2 -g -o magent magent.o ketama.o -levent\nketama.o: In function `create_ketama':\n/opt/root/magent-0.5/ketama.c:399: undefined reference to `floorf'\ncollect2: ld returned 1 exit status\nmake: *** [magent] Error 1\n\n修改Makefile\nLIBS = -levent 为LIBS = -levent -lm\n#sed -i \"s#LIBS = -levent#LIBS = -levent -lm#g\" Makefile \n```\n```shell\n### repcached\n\n[root@test magent]# make \nmake all-recursive    \nmake[1]: Entering directory `/usr/local/memcached'    \nMaking all in doc    \nmake[2]: Entering directory `/usr/local/memcached/doc'    \nmake[2]: Nothing to be done for `all'.    \nmake[2]: Leaving directory `/usr/local/memcached/doc'    \nmake[2]: Entering directory `/usr/local/memcached'    \ngcc -DHAVE_CONFIG_H -I. -DNDEBUG -m64 -g -O2 -MT memcached-memcached.o -MD     \nMP -MF .deps/memcached-memcached.Tpo -c -o memcached-memcached.o `test -f     \nmemcached.c' || echo './'`memcached.c    \nmemcached.c: In function ‘add_iov’:    \nmemcached.c:697: error: ‘IOV_MAX’ undeclared (first use in this function)    \nmemcached.c:697: error: (Each undeclared identifier is reported only once    \nmemcached.c:697: error: for each function it appears in.)    \nmake[2]: *** [memcached-memcached.o] Error 1    \nmake[2]: Leaving directory `/usr/local/memcached'    \nmake[1]: *** [all-recursive] Error 1    \nmake[1]: Leaving directory `/usr/local/memcached'    \nmake: *** [all] Error 2\n    \n解决方案：    \nvi memcached.c\n    \n将下面的几行    \n/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    \n#ifndef IOV_MAX    \n#if defined(__FreeBSD__) || defined(__APPLE__)    \n# define IOV_MAX 1024    \n#endif    \n#endif\n    \n修改为\n/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    \n#ifndef IOV_MAX    \n# define IOV_MAX 1024    \n#endif\n```\n### 启动服务\n```shell\n### 启动repcached\n启动master：\nrepcached -d -v -x 127.0.0.1 -u vagrant  \n启动slave：\nrepcached -d -v -x 127.0.0.1 -u vagrant -p 11222\n\n参数说明：\n  -x 设置从哪个IP上进行同步。\n  -X 指定数据同步的端口。\n  Memcached默认服务端口是11211，默认同步监听端口是11212。\n\n### 启动magent\nmagent -u root -p 11233 -s 127.0.0.1:11211 -s 127.0.0.1:11222\n```\n","slug":"repcache-magent","updated":"2019-10-21T06:57:42.570Z","photos":[],"link":"","_id":"ck42dyifl007wu9ur3hpvgif1","content":"<p>repcache+magnet</p>\n<p>magent：一款开源的Memcached代理服务器软件，功能和mysql-proxy类似。</p>\n<p>repcache：日本开发的一款开源工具，使memcache能够做主从复制。可以通过patch包升级memcache，也可以下载包含replication的memcache版本</p>\n<p>先将master/slave通过replication构建自动复制的主主，通过magent将K／V，写入到master和backup中，当master宕机时，magent将所有读写请求交给slave，slave等待master启动，默认情况下master宕机重启后内存中的数据回丢失，但由于repcache的自动主主，master启动时会自动从salve端复制所有数据。</p>\n<h3 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libevent:</span><br><span class=\"line\">  apt-get install -y libevent-dev</span><br><span class=\"line\"></span><br><span class=\"line\">magent：</span><br><span class=\"line\">  wget http://memagent.googlecode.com/files/magent-0.5.tar.gz  </span><br><span class=\"line\">  tar zxvf magent-0.5.tar.gz  </span><br><span class=\"line\">  /sbin/ldconfig  </span><br><span class=\"line\">  sed -i \"s#LIBS = -levent#LIBS = -levent -lm#g\" Makefile  </span><br><span class=\"line\">  make  </span><br><span class=\"line\">  cp magent /usr/bin/magent  </span><br><span class=\"line\">  </span><br><span class=\"line\">repcache:</span><br><span class=\"line\">  wget http://downloads.sourceforge.net/repcached/memcached-1.2.8-repcached-2.2.tar.gz</span><br><span class=\"line\">  tar xf memcached-1.2.8-repcached-2.2.tar.gz</span><br><span class=\"line\">  cd memcached-1.2.8-repcached-2.2/</span><br><span class=\"line\">  ./configure --prefix=/opt/repcached/ --enable-replication --program-transform-name=s/memcached/repcached/</span><br><span class=\"line\">  make&amp;&amp;make install</span><br><span class=\"line\">  ln -s /opt/repcached/bin/repcached /usr/bin/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编译错误汇总\"><a href=\"#编译错误汇总\" class=\"headerlink\" title=\"编译错误汇总\"></a>编译错误汇总</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## magent</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@test magent]# make </span><br><span class=\"line\">gcc -Wall -g -O2 -I/usr/local/include -m64 -c -o magent.o magent.c</span><br><span class=\"line\">magent.c: In function ‘writev_list’:</span><br><span class=\"line\">magent.c:729: error: ‘SSIZE_MAX’ undeclared (first use in this function)</span><br><span class=\"line\">magent.c:729: error: (Each undeclared identifier is reported only once</span><br><span class=\"line\">magent.c:729: error: for each function it appears in.)</span><br><span class=\"line\">make: *** [magent.o] Error 1</span><br><span class=\"line\">解决方法:</span><br><span class=\"line\">[root@test magent]# vim ketama.h</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef SSIZE_MAX</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">define SSIZE_MAX      32767</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef _KETAMA_H</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">define _KETAMA_H</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@test magent]# make </span><br><span class=\"line\">gcc -Wall -O2 -g  -c -o magent.o magent.c</span><br><span class=\"line\">gcc -Wall -O2 -g  -c -o ketama.o ketama.c</span><br><span class=\"line\">gcc -Wall -O2 -g -o magent magent.o ketama.o -levent</span><br><span class=\"line\">ketama.o: In function `create_ketama':</span><br><span class=\"line\">/opt/root/magent-0.5/ketama.c:399: undefined reference to `floorf'</span><br><span class=\"line\">collect2: ld returned 1 exit status</span><br><span class=\"line\">make: *** [magent] Error 1</span><br><span class=\"line\"></span><br><span class=\"line\">修改Makefile</span><br><span class=\"line\">LIBS = -levent 为LIBS = -levent -lm</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">sed -i <span class=\"string\">\"s#LIBS = -levent#LIBS = -levent -lm#g\"</span> Makefile</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## repcached</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@test magent]# make </span><br><span class=\"line\">make all-recursive    </span><br><span class=\"line\">make[1]: Entering directory `/usr/local/memcached'    </span><br><span class=\"line\">Making all in doc    </span><br><span class=\"line\">make[2]: Entering directory `/usr/local/memcached/doc'    </span><br><span class=\"line\">make[2]: Nothing to be done for `all'.    </span><br><span class=\"line\">make[2]: Leaving directory `/usr/local/memcached/doc'    </span><br><span class=\"line\">make[2]: Entering directory `/usr/local/memcached'    </span><br><span class=\"line\">gcc -DHAVE_CONFIG_H -I. -DNDEBUG -m64 -g -O2 -MT memcached-memcached.o -MD     </span><br><span class=\"line\">MP -MF .deps/memcached-memcached.Tpo -c -o memcached-memcached.o `test -f     </span><br><span class=\"line\">memcached.c' || echo './'`memcached.c    </span><br><span class=\"line\">memcached.c: In function ‘add_iov’:    </span><br><span class=\"line\">memcached.c:697: error: ‘IOV_MAX’ undeclared (first use in this function)    </span><br><span class=\"line\">memcached.c:697: error: (Each undeclared identifier is reported only once    </span><br><span class=\"line\">memcached.c:697: error: for each function it appears in.)    </span><br><span class=\"line\">make[2]: *** [memcached-memcached.o] Error 1    </span><br><span class=\"line\">make[2]: Leaving directory `/usr/local/memcached'    </span><br><span class=\"line\">make[1]: *** [all-recursive] Error 1    </span><br><span class=\"line\">make[1]: Leaving directory `/usr/local/memcached'    </span><br><span class=\"line\">make: *** [all] Error 2</span><br><span class=\"line\">    </span><br><span class=\"line\">解决方案：    </span><br><span class=\"line\">vi memcached.c</span><br><span class=\"line\">    </span><br><span class=\"line\">将下面的几行    </span><br><span class=\"line\">/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef IOV_MAX    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"keyword\">if</span> defined(__FreeBSD__) || defined(__APPLE__)    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> define IOV_MAX 1024    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif</span></span><br><span class=\"line\">    </span><br><span class=\"line\">修改为</span><br><span class=\"line\">/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef IOV_MAX    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> define IOV_MAX 1024    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## 启动repcached</span></span></span><br><span class=\"line\">启动master：</span><br><span class=\"line\">repcached -d -v -x 127.0.0.1 -u vagrant  </span><br><span class=\"line\">启动slave：</span><br><span class=\"line\">repcached -d -v -x 127.0.0.1 -u vagrant -p 11222</span><br><span class=\"line\"></span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">  -x 设置从哪个IP上进行同步。</span><br><span class=\"line\">  -X 指定数据同步的端口。</span><br><span class=\"line\">  Memcached默认服务端口是11211，默认同步监听端口是11212。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## 启动magent</span></span></span><br><span class=\"line\">magent -u root -p 11233 -s 127.0.0.1:11211 -s 127.0.0.1:11222</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>repcache+magnet</p>\n<p>magent：一款开源的Memcached代理服务器软件，功能和mysql-proxy类似。</p>\n<p>repcache：日本开发的一款开源工具，使memcache能够做主从复制。可以通过patch包升级memcache，也可以下载包含replication的memcache版本</p>\n<p>先将master/slave通过replication构建自动复制的主主，通过magent将K／V，写入到master和backup中，当master宕机时，magent将所有读写请求交给slave，slave等待master启动，默认情况下master宕机重启后内存中的数据回丢失，但由于repcache的自动主主，master启动时会自动从salve端复制所有数据。</p>\n<h3 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libevent:</span><br><span class=\"line\">  apt-get install -y libevent-dev</span><br><span class=\"line\"></span><br><span class=\"line\">magent：</span><br><span class=\"line\">  wget http://memagent.googlecode.com/files/magent-0.5.tar.gz  </span><br><span class=\"line\">  tar zxvf magent-0.5.tar.gz  </span><br><span class=\"line\">  /sbin/ldconfig  </span><br><span class=\"line\">  sed -i \"s#LIBS = -levent#LIBS = -levent -lm#g\" Makefile  </span><br><span class=\"line\">  make  </span><br><span class=\"line\">  cp magent /usr/bin/magent  </span><br><span class=\"line\">  </span><br><span class=\"line\">repcache:</span><br><span class=\"line\">  wget http://downloads.sourceforge.net/repcached/memcached-1.2.8-repcached-2.2.tar.gz</span><br><span class=\"line\">  tar xf memcached-1.2.8-repcached-2.2.tar.gz</span><br><span class=\"line\">  cd memcached-1.2.8-repcached-2.2/</span><br><span class=\"line\">  ./configure --prefix=/opt/repcached/ --enable-replication --program-transform-name=s/memcached/repcached/</span><br><span class=\"line\">  make&amp;&amp;make install</span><br><span class=\"line\">  ln -s /opt/repcached/bin/repcached /usr/bin/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编译错误汇总\"><a href=\"#编译错误汇总\" class=\"headerlink\" title=\"编译错误汇总\"></a>编译错误汇总</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## magent</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@test magent]# make </span><br><span class=\"line\">gcc -Wall -g -O2 -I/usr/local/include -m64 -c -o magent.o magent.c</span><br><span class=\"line\">magent.c: In function ‘writev_list’:</span><br><span class=\"line\">magent.c:729: error: ‘SSIZE_MAX’ undeclared (first use in this function)</span><br><span class=\"line\">magent.c:729: error: (Each undeclared identifier is reported only once</span><br><span class=\"line\">magent.c:729: error: for each function it appears in.)</span><br><span class=\"line\">make: *** [magent.o] Error 1</span><br><span class=\"line\">解决方法:</span><br><span class=\"line\">[root@test magent]# vim ketama.h</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef SSIZE_MAX</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">define SSIZE_MAX      32767</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef _KETAMA_H</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">define _KETAMA_H</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@test magent]# make </span><br><span class=\"line\">gcc -Wall -O2 -g  -c -o magent.o magent.c</span><br><span class=\"line\">gcc -Wall -O2 -g  -c -o ketama.o ketama.c</span><br><span class=\"line\">gcc -Wall -O2 -g -o magent magent.o ketama.o -levent</span><br><span class=\"line\">ketama.o: In function `create_ketama':</span><br><span class=\"line\">/opt/root/magent-0.5/ketama.c:399: undefined reference to `floorf'</span><br><span class=\"line\">collect2: ld returned 1 exit status</span><br><span class=\"line\">make: *** [magent] Error 1</span><br><span class=\"line\"></span><br><span class=\"line\">修改Makefile</span><br><span class=\"line\">LIBS = -levent 为LIBS = -levent -lm</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">sed -i <span class=\"string\">\"s#LIBS = -levent#LIBS = -levent -lm#g\"</span> Makefile</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## repcached</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@test magent]# make </span><br><span class=\"line\">make all-recursive    </span><br><span class=\"line\">make[1]: Entering directory `/usr/local/memcached'    </span><br><span class=\"line\">Making all in doc    </span><br><span class=\"line\">make[2]: Entering directory `/usr/local/memcached/doc'    </span><br><span class=\"line\">make[2]: Nothing to be done for `all'.    </span><br><span class=\"line\">make[2]: Leaving directory `/usr/local/memcached/doc'    </span><br><span class=\"line\">make[2]: Entering directory `/usr/local/memcached'    </span><br><span class=\"line\">gcc -DHAVE_CONFIG_H -I. -DNDEBUG -m64 -g -O2 -MT memcached-memcached.o -MD     </span><br><span class=\"line\">MP -MF .deps/memcached-memcached.Tpo -c -o memcached-memcached.o `test -f     </span><br><span class=\"line\">memcached.c' || echo './'`memcached.c    </span><br><span class=\"line\">memcached.c: In function ‘add_iov’:    </span><br><span class=\"line\">memcached.c:697: error: ‘IOV_MAX’ undeclared (first use in this function)    </span><br><span class=\"line\">memcached.c:697: error: (Each undeclared identifier is reported only once    </span><br><span class=\"line\">memcached.c:697: error: for each function it appears in.)    </span><br><span class=\"line\">make[2]: *** [memcached-memcached.o] Error 1    </span><br><span class=\"line\">make[2]: Leaving directory `/usr/local/memcached'    </span><br><span class=\"line\">make[1]: *** [all-recursive] Error 1    </span><br><span class=\"line\">make[1]: Leaving directory `/usr/local/memcached'    </span><br><span class=\"line\">make: *** [all] Error 2</span><br><span class=\"line\">    </span><br><span class=\"line\">解决方案：    </span><br><span class=\"line\">vi memcached.c</span><br><span class=\"line\">    </span><br><span class=\"line\">将下面的几行    </span><br><span class=\"line\">/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef IOV_MAX    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"keyword\">if</span> defined(__FreeBSD__) || defined(__APPLE__)    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> define IOV_MAX 1024    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif</span></span><br><span class=\"line\">    </span><br><span class=\"line\">修改为</span><br><span class=\"line\">/* FreeBSD 4.x doesn't have IOV_MAX exposed. */    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ifndef IOV_MAX    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> define IOV_MAX 1024    </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">endif</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动服务\"><a href=\"#启动服务\" class=\"headerlink\" title=\"启动服务\"></a>启动服务</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## 启动repcached</span></span></span><br><span class=\"line\">启动master：</span><br><span class=\"line\">repcached -d -v -x 127.0.0.1 -u vagrant  </span><br><span class=\"line\">启动slave：</span><br><span class=\"line\">repcached -d -v -x 127.0.0.1 -u vagrant -p 11222</span><br><span class=\"line\"></span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">  -x 设置从哪个IP上进行同步。</span><br><span class=\"line\">  -X 指定数据同步的端口。</span><br><span class=\"line\">  Memcached默认服务端口是11211，默认同步监听端口是11212。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## 启动magent</span></span></span><br><span class=\"line\">magent -u root -p 11233 -s 127.0.0.1:11211 -s 127.0.0.1:11222</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"rhcs搭建HA集群","published":1,"author":"xiemx","comments":1,"date":"2016-02-01T04:02:16.000Z","_content":"YUM配置HA集群(图形化)\n\nRHEL和Centos的光盘中自带有红帽的conga套件。将安装源指向光盘即可yum来安装，也可以将luci和ricci拷贝出来直接通过\"yum localinstall luci ricci\"来安装。其中luci是web界面的图形化配置工具，ricci为同步配置文件的工具。ricci运行需要用到ricci账户权限，安装ricci时设定下ricci密码。\n\n安装设置步骤\n\n1.所有节点进行环境初始化\n\n* 时间日期（date）\n* elinux\n* 防火墙（iptables）\n* 主机名（/etc/hosts和/etc/sysconfig/network）\n* 网卡网络(stop NetworkManager)\n* yum源\n\n2.在所有节点上安装ricci，在其中一台节点上安装luci，并配置ricci密码。\n```shell\n[root@localhost ~]# yum install luci ricci -y\n[root@localhost ~]# yum install ricci -y\n[root@localhost ~]# echo 123123123 | passwd --stdin ricci\n```\n3.启动luci进入web配置界面，可使用系统root账户登录luci\n```shell\n[root@localhost ~]# /etc/init.d/luci start\nStart luci...                       [ OK ]\nPoint your web browser to https://localhost.localdomain:8084 (or equivalent) to access luci\n\n[![ha](/images/ha.png)](http://www.xiemx.com/wp-content/uploads/2016/01/ha.png)\n\n[![hainstall](/images/hainstall.png)](http://www.xiemx.com/wp-content/uploads/2016/02/hainstall.png)\n\n在双机集群的基础上添加一个节点进去实现多机集群，这里使用非图形化安装\n安装 High Availability 组包\n\n[root@node3 ~]# yum groupinstall \"High Availability\"\n设置ricci用户密码:\n[root@node1 ~]# echo uplooking | passwd --stdin ricci\nChanging password for user ricci.\npasswd: all authentication tokens updated successfully.\n```\n修改配置文件/etc/cluster/cluster.conf并同步到所有结点上\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<cluster config_version=\"12\" name=\"f30Cluster\"> \n  <clusternodes> \n    <clusternode name=\"node1.xiemx.com\" nodeid=\"1\"> \n      <fence> \n        <method name=\"FenceMethod\"> \n          <device domain=\"node1\" name=\"Fence1\"/> \n        </method> \n      </fence> \n    </clusternode>  \n    <clusternode name=\"node2.xiemx.com\" nodeid=\"2\"> \n      <fence> \n        <method name=\"FenceMethod\"> \n          <device domain=\"node2\" name=\"Fence2\"/> \n        </method> \n      </fence> \n    </clusternode>  \n    <clusternode name=\"node3.xiemx.com\" nodeid=\"3\"> \n      <fence> \n        <method name=\"FenceMethod\"> \n          <device domain=\"node3\" name=\"Fence3\"/> \n        </method> \n      </fence> \n    </clusternode> \n  </clusternodes>  \n  <cman expected_votes=\"1\"/>  \n  <fencedevices> \n    <fencedevice agent=\"fence_xvm\" name=\"Fence1\"/>  \n    <fencedevice agent=\"fence_xvm\" name=\"Fence2\"/>  \n    <fencedevice agent=\"fence_xvm\" name=\"Fence3\"/> \n  </fencedevices>  \n  <rm> \n    <failoverdomains> \n      <failoverdomain name=\"Domain1\" restricted=\"1\"> \n        <failoverdomainnode name=\"node1.xiemx.com\"/>  \n        <failoverdomainnode name=\"node2.xiemx.com\"/>  \n        <failoverdomainnode name=\"node3.xiemx.com\"/> \n      </failoverdomain> \n    </failoverdomains>  \n    <resources> \n      <ip address=\"172.25.30.100/24\" sleeptime=\"10\"/>  \n      <script file=\"/etc/init.d/httpd\" name=\"httpd\"/> \n    </resources>  \n    <service domain=\"Domain1\" name=\"httpd\" recovery=\"restart\"> \n      <ip ref=\"172.25.30.100/24\"/>  \n      <script ref=\"httpd\"/> \n    </service> \n  </rm> \n</cluster>\n\n```\n同步配置:\n要保证所有节点的ricci服务已启动，且ricci账户都配置密码\n```shell\n[root@node1-f30 ~]# cman_tool version -r\nYou have not authenticated to the ricci daemon on node1-f30.example.com\nPassword:\nYou have not authenticated to the ricci daemon on node3-f30.example.com\nPassword:\nYou have not authenticated to the ricci daemon on node2-f30.example.com\nPassword:\n```\n启动cman，rgmanager，modcluster服务\n```shell\n[root@node3-f30 ~]# /etc/init.d/cman start\n\nStarting cluster:\nChecking if cluster has been disabled at boot...    [ OK ]\nChecking Network Manager...               [ OK ]\nGlobal setup...                     [ OK ]\nLoading kernel modules...                [ OK ]\nMounting configfs...                  [ OK ]\nStarting cman...                    [ OK ]\nWaiting for quorum...                  [ OK ]\nStarting fenced...                   [ OK ]\nStarting dlm_controld...                [ OK ]\nTuning DLM kernel config...               [ OK ]\nStarting gfs_controld...                [ OK ]\nUnfencing self...                    [ OK ]\nJoining fence domain...                 [ OK ]\n\n[root@node3-f30 ~]# /etc/init.d/rgmanager start\nStarting Cluster Service Manager:             [ OK ]\n\n[root@node3-f30 ~]# /etc/init.d/modclusterd start\nStarting Cluster Module - cluster monitor: Setting verbosity level to LogBasic\n[ OK ]\n```\n切换资源到node3节点上去运行，测试节点是否正常:\n```shell\n[root@node1-f30 ~]# clusvcadm -r httpd -m node3-f30.example.com\nTrying to relocate service:httpd to node3-f30.example.com...Success\nservice:httpd is now running on node3-f30.example.com\n\n同步fence_xvm.key:\n\n[root@node1-f30 ~]# scp /etc/cluster/fence_xvm.key 172.25.30.12:/etc/cluster/fence_xvm.key\nThe authenticity of host '172.25.30.12 (172.25.30.12)' can't be established.\nRSA key fingerprint is cf:7c:26:aa:4f:41:7b:21:5e:09:ce:8a:15:2c:97:32.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.25.30.12' (RSA) to the list of known hosts.\nroot@172.25.30.12's password:\nfence_xvm.key                100% 512   0.5KB/s  00:00\n```\nQdisk仲裁盘添加：\n\n在新的机器上共享一个磁盘出来加入到集群中,共享磁盘需要用到scsi-target-utils工具包，可yum安装获得\n```shell\n[root@rhel6 ~]# yum install scsi*\n\n将配置文件中的如下3行配置取消注释修改需要添加磁盘\n\n[root@rhel6 ~]# vi /etc/tgt/targets.conf\n<target iqn.2008-09.com.example:server.target1>\nbacking-store /dev/vdb1\n</target>\n\n集群的节点中安装包 iscsi-initiator-utils\n\n[root@node1-f30 ~]# yum install scsi*\n\n添加仲裁盘到本地,格式化仲裁盘\n\niscsiadm -m discovery -t st -p 172.25.30.13\niscsiadm -m node -l\nmkqdisk -c /dev/sda -l myqdisk\n\n[root@node3 ~]# iscsiadm -m discovery -t st -p 172.25.30.13\nStarting iscsid:                      [ OK ]\n172.25.30.13:3260,1 iqn.2008-09.com.example:server.target1\n\n[root@node3 ~]# iscsiadm -m node -l\nLogging in to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] (multiple)\nLogin to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] successful.\n\n[root@node3 ~]# mkqdisk -c /dev/sda -l myqdisk\nmkqdisk v3.0.12.1\nWriting new quorum disk label 'myqdisk' to /dev/sda.\nWARNING: About to destroy all data on /dev/sda; proceed [N/y] ? y\nWarning: Initializing previously initialized partition\nInitializing status block for node 1...\nInitializing status block for node 2...\n```\n在luci图形界面中添加仲裁到集群\n\n[![ha2](/images/ha2.png)](http://www.xiemx.com/wp-content/uploads/2016/01/ha2.png)\n也可以通过修改配置文件然后通过cman_tool version -r来同步到集群中的每个节点上\n\n配置文件:\n```xml\n<quorumd label=\"myqdisk\" min_score=\"1\">\n<heuristic interval=\"5\" program=\"ping 172.25.30.254 -c 1\" tko=\"2\"/>\n</quorumd>\n```\n同步配置文件时要注意修改版本号","source":"_posts/rhcs-ha-cluster.md","raw":"---\nlayout: post\ntitle: rhcs搭建HA集群\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-01 12:02:16\ntags: [ rhcs, cluster ]\ncategories:\n    - cluster\n# permalink: '/2016/02/01/rhcs-ha-cluster'\n---\nYUM配置HA集群(图形化)\n\nRHEL和Centos的光盘中自带有红帽的conga套件。将安装源指向光盘即可yum来安装，也可以将luci和ricci拷贝出来直接通过\"yum localinstall luci ricci\"来安装。其中luci是web界面的图形化配置工具，ricci为同步配置文件的工具。ricci运行需要用到ricci账户权限，安装ricci时设定下ricci密码。\n\n安装设置步骤\n\n1.所有节点进行环境初始化\n\n* 时间日期（date）\n* elinux\n* 防火墙（iptables）\n* 主机名（/etc/hosts和/etc/sysconfig/network）\n* 网卡网络(stop NetworkManager)\n* yum源\n\n2.在所有节点上安装ricci，在其中一台节点上安装luci，并配置ricci密码。\n```shell\n[root@localhost ~]# yum install luci ricci -y\n[root@localhost ~]# yum install ricci -y\n[root@localhost ~]# echo 123123123 | passwd --stdin ricci\n```\n3.启动luci进入web配置界面，可使用系统root账户登录luci\n```shell\n[root@localhost ~]# /etc/init.d/luci start\nStart luci...                       [ OK ]\nPoint your web browser to https://localhost.localdomain:8084 (or equivalent) to access luci\n\n[![ha](/images/ha.png)](http://www.xiemx.com/wp-content/uploads/2016/01/ha.png)\n\n[![hainstall](/images/hainstall.png)](http://www.xiemx.com/wp-content/uploads/2016/02/hainstall.png)\n\n在双机集群的基础上添加一个节点进去实现多机集群，这里使用非图形化安装\n安装 High Availability 组包\n\n[root@node3 ~]# yum groupinstall \"High Availability\"\n设置ricci用户密码:\n[root@node1 ~]# echo uplooking | passwd --stdin ricci\nChanging password for user ricci.\npasswd: all authentication tokens updated successfully.\n```\n修改配置文件/etc/cluster/cluster.conf并同步到所有结点上\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<cluster config_version=\"12\" name=\"f30Cluster\"> \n  <clusternodes> \n    <clusternode name=\"node1.xiemx.com\" nodeid=\"1\"> \n      <fence> \n        <method name=\"FenceMethod\"> \n          <device domain=\"node1\" name=\"Fence1\"/> \n        </method> \n      </fence> \n    </clusternode>  \n    <clusternode name=\"node2.xiemx.com\" nodeid=\"2\"> \n      <fence> \n        <method name=\"FenceMethod\"> \n          <device domain=\"node2\" name=\"Fence2\"/> \n        </method> \n      </fence> \n    </clusternode>  \n    <clusternode name=\"node3.xiemx.com\" nodeid=\"3\"> \n      <fence> \n        <method name=\"FenceMethod\"> \n          <device domain=\"node3\" name=\"Fence3\"/> \n        </method> \n      </fence> \n    </clusternode> \n  </clusternodes>  \n  <cman expected_votes=\"1\"/>  \n  <fencedevices> \n    <fencedevice agent=\"fence_xvm\" name=\"Fence1\"/>  \n    <fencedevice agent=\"fence_xvm\" name=\"Fence2\"/>  \n    <fencedevice agent=\"fence_xvm\" name=\"Fence3\"/> \n  </fencedevices>  \n  <rm> \n    <failoverdomains> \n      <failoverdomain name=\"Domain1\" restricted=\"1\"> \n        <failoverdomainnode name=\"node1.xiemx.com\"/>  \n        <failoverdomainnode name=\"node2.xiemx.com\"/>  \n        <failoverdomainnode name=\"node3.xiemx.com\"/> \n      </failoverdomain> \n    </failoverdomains>  \n    <resources> \n      <ip address=\"172.25.30.100/24\" sleeptime=\"10\"/>  \n      <script file=\"/etc/init.d/httpd\" name=\"httpd\"/> \n    </resources>  \n    <service domain=\"Domain1\" name=\"httpd\" recovery=\"restart\"> \n      <ip ref=\"172.25.30.100/24\"/>  \n      <script ref=\"httpd\"/> \n    </service> \n  </rm> \n</cluster>\n\n```\n同步配置:\n要保证所有节点的ricci服务已启动，且ricci账户都配置密码\n```shell\n[root@node1-f30 ~]# cman_tool version -r\nYou have not authenticated to the ricci daemon on node1-f30.example.com\nPassword:\nYou have not authenticated to the ricci daemon on node3-f30.example.com\nPassword:\nYou have not authenticated to the ricci daemon on node2-f30.example.com\nPassword:\n```\n启动cman，rgmanager，modcluster服务\n```shell\n[root@node3-f30 ~]# /etc/init.d/cman start\n\nStarting cluster:\nChecking if cluster has been disabled at boot...    [ OK ]\nChecking Network Manager...               [ OK ]\nGlobal setup...                     [ OK ]\nLoading kernel modules...                [ OK ]\nMounting configfs...                  [ OK ]\nStarting cman...                    [ OK ]\nWaiting for quorum...                  [ OK ]\nStarting fenced...                   [ OK ]\nStarting dlm_controld...                [ OK ]\nTuning DLM kernel config...               [ OK ]\nStarting gfs_controld...                [ OK ]\nUnfencing self...                    [ OK ]\nJoining fence domain...                 [ OK ]\n\n[root@node3-f30 ~]# /etc/init.d/rgmanager start\nStarting Cluster Service Manager:             [ OK ]\n\n[root@node3-f30 ~]# /etc/init.d/modclusterd start\nStarting Cluster Module - cluster monitor: Setting verbosity level to LogBasic\n[ OK ]\n```\n切换资源到node3节点上去运行，测试节点是否正常:\n```shell\n[root@node1-f30 ~]# clusvcadm -r httpd -m node3-f30.example.com\nTrying to relocate service:httpd to node3-f30.example.com...Success\nservice:httpd is now running on node3-f30.example.com\n\n同步fence_xvm.key:\n\n[root@node1-f30 ~]# scp /etc/cluster/fence_xvm.key 172.25.30.12:/etc/cluster/fence_xvm.key\nThe authenticity of host '172.25.30.12 (172.25.30.12)' can't be established.\nRSA key fingerprint is cf:7c:26:aa:4f:41:7b:21:5e:09:ce:8a:15:2c:97:32.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '172.25.30.12' (RSA) to the list of known hosts.\nroot@172.25.30.12's password:\nfence_xvm.key                100% 512   0.5KB/s  00:00\n```\nQdisk仲裁盘添加：\n\n在新的机器上共享一个磁盘出来加入到集群中,共享磁盘需要用到scsi-target-utils工具包，可yum安装获得\n```shell\n[root@rhel6 ~]# yum install scsi*\n\n将配置文件中的如下3行配置取消注释修改需要添加磁盘\n\n[root@rhel6 ~]# vi /etc/tgt/targets.conf\n<target iqn.2008-09.com.example:server.target1>\nbacking-store /dev/vdb1\n</target>\n\n集群的节点中安装包 iscsi-initiator-utils\n\n[root@node1-f30 ~]# yum install scsi*\n\n添加仲裁盘到本地,格式化仲裁盘\n\niscsiadm -m discovery -t st -p 172.25.30.13\niscsiadm -m node -l\nmkqdisk -c /dev/sda -l myqdisk\n\n[root@node3 ~]# iscsiadm -m discovery -t st -p 172.25.30.13\nStarting iscsid:                      [ OK ]\n172.25.30.13:3260,1 iqn.2008-09.com.example:server.target1\n\n[root@node3 ~]# iscsiadm -m node -l\nLogging in to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] (multiple)\nLogin to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] successful.\n\n[root@node3 ~]# mkqdisk -c /dev/sda -l myqdisk\nmkqdisk v3.0.12.1\nWriting new quorum disk label 'myqdisk' to /dev/sda.\nWARNING: About to destroy all data on /dev/sda; proceed [N/y] ? y\nWarning: Initializing previously initialized partition\nInitializing status block for node 1...\nInitializing status block for node 2...\n```\n在luci图形界面中添加仲裁到集群\n\n[![ha2](/images/ha2.png)](http://www.xiemx.com/wp-content/uploads/2016/01/ha2.png)\n也可以通过修改配置文件然后通过cman_tool version -r来同步到集群中的每个节点上\n\n配置文件:\n```xml\n<quorumd label=\"myqdisk\" min_score=\"1\">\n<heuristic interval=\"5\" program=\"ping 172.25.30.254 -c 1\" tko=\"2\"/>\n</quorumd>\n```\n同步配置文件时要注意修改版本号","slug":"rhcs-ha-cluster","updated":"2019-10-19T08:27:09.995Z","photos":[],"link":"","_id":"ck42dyifs007zu9urfd6v88ma","content":"<p>YUM配置HA集群(图形化)</p>\n<p>RHEL和Centos的光盘中自带有红帽的conga套件。将安装源指向光盘即可yum来安装，也可以将luci和ricci拷贝出来直接通过”yum localinstall luci ricci”来安装。其中luci是web界面的图形化配置工具，ricci为同步配置文件的工具。ricci运行需要用到ricci账户权限，安装ricci时设定下ricci密码。</p>\n<p>安装设置步骤</p>\n<p>1.所有节点进行环境初始化</p>\n<ul>\n<li>时间日期（date）</li>\n<li>elinux</li>\n<li>防火墙（iptables）</li>\n<li>主机名（/etc/hosts和/etc/sysconfig/network）</li>\n<li>网卡网络(stop NetworkManager)</li>\n<li>yum源</li>\n</ul>\n<p>2.在所有节点上安装ricci，在其中一台节点上安装luci，并配置ricci密码。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# yum install luci ricci -y</span><br><span class=\"line\">[root@localhost ~]# yum install ricci -y</span><br><span class=\"line\">[root@localhost ~]# echo 123123123 | passwd --stdin ricci</span><br></pre></td></tr></table></figure>\n\n<p>3.启动luci进入web配置界面，可使用系统root账户登录luci</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# /etc/init.d/luci start</span><br><span class=\"line\">Start luci...                       [ OK ]</span><br><span class=\"line\">Point your web browser to https://localhost.localdomain:8084 (or equivalent) to access luci</span><br><span class=\"line\"></span><br><span class=\"line\">[![ha](/images/ha.png)](http://www.xiemx.com/wp-content/uploads/2016/01/ha.png)</span><br><span class=\"line\"></span><br><span class=\"line\">[![hainstall](/images/hainstall.png)](http://www.xiemx.com/wp-content/uploads/2016/02/hainstall.png)</span><br><span class=\"line\"></span><br><span class=\"line\">在双机集群的基础上添加一个节点进去实现多机集群，这里使用非图形化安装</span><br><span class=\"line\">安装 High Availability 组包</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# yum groupinstall \"High Availability\"</span><br><span class=\"line\">设置ricci用户密码:</span><br><span class=\"line\">[root@node1 ~]# echo uplooking | passwd --stdin ricci</span><br><span class=\"line\">Changing password for user ricci.</span><br><span class=\"line\">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure>\n\n<p>修改配置文件/etc/cluster/cluster.conf并同步到所有结点上</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cluster</span> <span class=\"attr\">config_version</span>=<span class=\"string\">\"12\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"f30Cluster\"</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">clusternodes</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">clusternode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node1.xiemx.com\"</span> <span class=\"attr\">nodeid</span>=<span class=\"string\">\"1\"</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"FenceMethod\"</span>&gt;</span> </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">device</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"node1\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence1\"</span>/&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">method</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">clusternode</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">clusternode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node2.xiemx.com\"</span> <span class=\"attr\">nodeid</span>=<span class=\"string\">\"2\"</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"FenceMethod\"</span>&gt;</span> </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">device</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"node2\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence2\"</span>/&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">method</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">clusternode</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">clusternode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node3.xiemx.com\"</span> <span class=\"attr\">nodeid</span>=<span class=\"string\">\"3\"</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"FenceMethod\"</span>&gt;</span> </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">device</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"node3\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence3\"</span>/&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">method</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">clusternode</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">clusternodes</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">cman</span> <span class=\"attr\">expected_votes</span>=<span class=\"string\">\"1\"</span>/&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fencedevices</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fencedevice</span> <span class=\"attr\">agent</span>=<span class=\"string\">\"fence_xvm\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence1\"</span>/&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fencedevice</span> <span class=\"attr\">agent</span>=<span class=\"string\">\"fence_xvm\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence2\"</span>/&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fencedevice</span> <span class=\"attr\">agent</span>=<span class=\"string\">\"fence_xvm\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence3\"</span>/&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">fencedevices</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">rm</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">failoverdomains</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">failoverdomain</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Domain1\"</span> <span class=\"attr\">restricted</span>=<span class=\"string\">\"1\"</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">failoverdomainnode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node1.xiemx.com\"</span>/&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">failoverdomainnode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node2.xiemx.com\"</span>/&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">failoverdomainnode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node3.xiemx.com\"</span>/&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">failoverdomain</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">failoverdomains</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ip</span> <span class=\"attr\">address</span>=<span class=\"string\">\"172.25.30.100/24\"</span> <span class=\"attr\">sleeptime</span>=<span class=\"string\">\"10\"</span>/&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">file</span>=<span class=\"string\">\"/etc/init.d/httpd\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"httpd\"</span>/&gt;</span> </span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span>  </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">service</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"Domain1\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"httpd\"</span> <span class=\"attr\">recovery</span>=<span class=\"string\">\"restart\"</span>&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">ip</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"172.25.30.100/24\"</span>/&gt;</span>  </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"httpd\"</span>/&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">rm</span>&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">cluster</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure>\n\n<p>同步配置:<br>要保证所有节点的ricci服务已启动，且ricci账户都配置密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node1-f30 ~]# cman_tool version -r</span><br><span class=\"line\">You have not authenticated to the ricci daemon on node1-f30.example.com</span><br><span class=\"line\">Password:</span><br><span class=\"line\">You have not authenticated to the ricci daemon on node3-f30.example.com</span><br><span class=\"line\">Password:</span><br><span class=\"line\">You have not authenticated to the ricci daemon on node2-f30.example.com</span><br><span class=\"line\">Password:</span><br></pre></td></tr></table></figure>\n\n<p>启动cman，rgmanager，modcluster服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node3-f30 ~]# /etc/init.d/cman start</span><br><span class=\"line\"></span><br><span class=\"line\">Starting cluster:</span><br><span class=\"line\">Checking if cluster has been disabled at boot...    [ OK ]</span><br><span class=\"line\">Checking Network Manager...               [ OK ]</span><br><span class=\"line\">Global setup...                     [ OK ]</span><br><span class=\"line\">Loading kernel modules...                [ OK ]</span><br><span class=\"line\">Mounting configfs...                  [ OK ]</span><br><span class=\"line\">Starting cman...                    [ OK ]</span><br><span class=\"line\">Waiting for quorum...                  [ OK ]</span><br><span class=\"line\">Starting fenced...                   [ OK ]</span><br><span class=\"line\">Starting dlm_controld...                [ OK ]</span><br><span class=\"line\">Tuning DLM kernel config...               [ OK ]</span><br><span class=\"line\">Starting gfs_controld...                [ OK ]</span><br><span class=\"line\">Unfencing self...                    [ OK ]</span><br><span class=\"line\">Joining fence domain...                 [ OK ]</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3-f30 ~]# /etc/init.d/rgmanager start</span><br><span class=\"line\">Starting Cluster Service Manager:             [ OK ]</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3-f30 ~]# /etc/init.d/modclusterd start</span><br><span class=\"line\">Starting Cluster Module - cluster monitor: Setting verbosity level to LogBasic</span><br><span class=\"line\">[ OK ]</span><br></pre></td></tr></table></figure>\n\n<p>切换资源到node3节点上去运行，测试节点是否正常:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node1-f30 ~]# clusvcadm -r httpd -m node3-f30.example.com</span><br><span class=\"line\">Trying to relocate service:httpd to node3-f30.example.com...Success</span><br><span class=\"line\">service:httpd is now running on node3-f30.example.com</span><br><span class=\"line\"></span><br><span class=\"line\">同步fence_xvm.key:</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node1-f30 ~]# scp /etc/cluster/fence_xvm.key 172.25.30.12:/etc/cluster/fence_xvm.key</span><br><span class=\"line\">The authenticity of host '172.25.30.12 (172.25.30.12)' can't be established.</span><br><span class=\"line\">RSA key fingerprint is cf:7c:26:aa:4f:41:7b:21:5e:09:ce:8a:15:2c:97:32.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">Warning: Permanently added '172.25.30.12' (RSA) to the list of known hosts.</span><br><span class=\"line\">root@172.25.30.12's password:</span><br><span class=\"line\">fence_xvm.key                100% 512   0.5KB/s  00:00</span><br></pre></td></tr></table></figure>\n\n<p>Qdisk仲裁盘添加：</p>\n<p>在新的机器上共享一个磁盘出来加入到集群中,共享磁盘需要用到scsi-target-utils工具包，可yum安装获得</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# yum install scsi*</span><br><span class=\"line\"></span><br><span class=\"line\">将配置文件中的如下3行配置取消注释修改需要添加磁盘</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 ~]# vi /etc/tgt/targets.conf</span><br><span class=\"line\">&lt;target iqn.2008-09.com.example:server.target1&gt;</span><br><span class=\"line\">backing-store /dev/vdb1</span><br><span class=\"line\">&lt;/target&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">集群的节点中安装包 iscsi-initiator-utils</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node1-f30 ~]# yum install scsi*</span><br><span class=\"line\"></span><br><span class=\"line\">添加仲裁盘到本地,格式化仲裁盘</span><br><span class=\"line\"></span><br><span class=\"line\">iscsiadm -m discovery -t st -p 172.25.30.13</span><br><span class=\"line\">iscsiadm -m node -l</span><br><span class=\"line\">mkqdisk -c /dev/sda -l myqdisk</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# iscsiadm -m discovery -t st -p 172.25.30.13</span><br><span class=\"line\">Starting iscsid:                      [ OK ]</span><br><span class=\"line\">172.25.30.13:3260,1 iqn.2008-09.com.example:server.target1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# iscsiadm -m node -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# mkqdisk -c /dev/sda -l myqdisk</span><br><span class=\"line\">mkqdisk v3.0.12.1</span><br><span class=\"line\">Writing new quorum disk label 'myqdisk' to /dev/sda.</span><br><span class=\"line\">WARNING: About to destroy all data on /dev/sda; proceed [N/y] ? y</span><br><span class=\"line\">Warning: Initializing previously initialized partition</span><br><span class=\"line\">Initializing status block for node 1...</span><br><span class=\"line\">Initializing status block for node 2...</span><br></pre></td></tr></table></figure>\n\n<p>在luci图形界面中添加仲裁到集群</p>\n<p><a href=\"http://www.xiemx.com/wp-content/uploads/2016/01/ha2.png\"><img src=\"/images/ha2.png\" alt=\"ha2\"></a><br>也可以通过修改配置文件然后通过cman_tool version -r来同步到集群中的每个节点上</p>\n<p>配置文件:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">quorumd</span> <span class=\"attr\">label</span>=<span class=\"string\">\"myqdisk\"</span> <span class=\"attr\">min_score</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heuristic</span> <span class=\"attr\">interval</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">program</span>=<span class=\"string\">\"ping 172.25.30.254 -c 1\"</span> <span class=\"attr\">tko</span>=<span class=\"string\">\"2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">quorumd</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>同步配置文件时要注意修改版本号</p>\n","site":{"data":{}},"excerpt":"","more":"<p>YUM配置HA集群(图形化)</p>\n<p>RHEL和Centos的光盘中自带有红帽的conga套件。将安装源指向光盘即可yum来安装，也可以将luci和ricci拷贝出来直接通过”yum localinstall luci ricci”来安装。其中luci是web界面的图形化配置工具，ricci为同步配置文件的工具。ricci运行需要用到ricci账户权限，安装ricci时设定下ricci密码。</p>\n<p>安装设置步骤</p>\n<p>1.所有节点进行环境初始化</p>\n<ul>\n<li>时间日期（date）</li>\n<li>elinux</li>\n<li>防火墙（iptables）</li>\n<li>主机名（/etc/hosts和/etc/sysconfig/network）</li>\n<li>网卡网络(stop NetworkManager)</li>\n<li>yum源</li>\n</ul>\n<p>2.在所有节点上安装ricci，在其中一台节点上安装luci，并配置ricci密码。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# yum install luci ricci -y</span><br><span class=\"line\">[root@localhost ~]# yum install ricci -y</span><br><span class=\"line\">[root@localhost ~]# echo 123123123 | passwd --stdin ricci</span><br></pre></td></tr></table></figure>\n\n<p>3.启动luci进入web配置界面，可使用系统root账户登录luci</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# /etc/init.d/luci start</span><br><span class=\"line\">Start luci...                       [ OK ]</span><br><span class=\"line\">Point your web browser to https://localhost.localdomain:8084 (or equivalent) to access luci</span><br><span class=\"line\"></span><br><span class=\"line\">[![ha](/images/ha.png)](http://www.xiemx.com/wp-content/uploads/2016/01/ha.png)</span><br><span class=\"line\"></span><br><span class=\"line\">[![hainstall](/images/hainstall.png)](http://www.xiemx.com/wp-content/uploads/2016/02/hainstall.png)</span><br><span class=\"line\"></span><br><span class=\"line\">在双机集群的基础上添加一个节点进去实现多机集群，这里使用非图形化安装</span><br><span class=\"line\">安装 High Availability 组包</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# yum groupinstall \"High Availability\"</span><br><span class=\"line\">设置ricci用户密码:</span><br><span class=\"line\">[root@node1 ~]# echo uplooking | passwd --stdin ricci</span><br><span class=\"line\">Changing password for user ricci.</span><br><span class=\"line\">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure>\n\n<p>修改配置文件/etc/cluster/cluster.conf并同步到所有结点上</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cluster</span> <span class=\"attr\">config_version</span>=<span class=\"string\">\"12\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"f30Cluster\"</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">clusternodes</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">clusternode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node1.xiemx.com\"</span> <span class=\"attr\">nodeid</span>=<span class=\"string\">\"1\"</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"FenceMethod\"</span>&gt;</span> </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">device</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"node1\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence1\"</span>/&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">method</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">clusternode</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">clusternode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node2.xiemx.com\"</span> <span class=\"attr\">nodeid</span>=<span class=\"string\">\"2\"</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"FenceMethod\"</span>&gt;</span> </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">device</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"node2\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence2\"</span>/&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">method</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">clusternode</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">clusternode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node3.xiemx.com\"</span> <span class=\"attr\">nodeid</span>=<span class=\"string\">\"3\"</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"FenceMethod\"</span>&gt;</span> </span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">device</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"node3\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence3\"</span>/&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">method</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">fence</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">clusternode</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">clusternodes</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">cman</span> <span class=\"attr\">expected_votes</span>=<span class=\"string\">\"1\"</span>/&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">fencedevices</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fencedevice</span> <span class=\"attr\">agent</span>=<span class=\"string\">\"fence_xvm\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence1\"</span>/&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fencedevice</span> <span class=\"attr\">agent</span>=<span class=\"string\">\"fence_xvm\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence2\"</span>/&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">fencedevice</span> <span class=\"attr\">agent</span>=<span class=\"string\">\"fence_xvm\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Fence3\"</span>/&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">fencedevices</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">rm</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">failoverdomains</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">failoverdomain</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Domain1\"</span> <span class=\"attr\">restricted</span>=<span class=\"string\">\"1\"</span>&gt;</span> </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">failoverdomainnode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node1.xiemx.com\"</span>/&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">failoverdomainnode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node2.xiemx.com\"</span>/&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">failoverdomainnode</span> <span class=\"attr\">name</span>=<span class=\"string\">\"node3.xiemx.com\"</span>/&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">failoverdomain</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">failoverdomains</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span> </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">ip</span> <span class=\"attr\">address</span>=<span class=\"string\">\"172.25.30.100/24\"</span> <span class=\"attr\">sleeptime</span>=<span class=\"string\">\"10\"</span>/&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">file</span>=<span class=\"string\">\"/etc/init.d/httpd\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"httpd\"</span>/&gt;</span> </span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span>  </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">service</span> <span class=\"attr\">domain</span>=<span class=\"string\">\"Domain1\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"httpd\"</span> <span class=\"attr\">recovery</span>=<span class=\"string\">\"restart\"</span>&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">ip</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"172.25.30.100/24\"</span>/&gt;</span>  </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">      <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"httpd\"</span>/&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">rm</span>&gt;</span> </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">cluster</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure>\n\n<p>同步配置:<br>要保证所有节点的ricci服务已启动，且ricci账户都配置密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node1-f30 ~]# cman_tool version -r</span><br><span class=\"line\">You have not authenticated to the ricci daemon on node1-f30.example.com</span><br><span class=\"line\">Password:</span><br><span class=\"line\">You have not authenticated to the ricci daemon on node3-f30.example.com</span><br><span class=\"line\">Password:</span><br><span class=\"line\">You have not authenticated to the ricci daemon on node2-f30.example.com</span><br><span class=\"line\">Password:</span><br></pre></td></tr></table></figure>\n\n<p>启动cman，rgmanager，modcluster服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node3-f30 ~]# /etc/init.d/cman start</span><br><span class=\"line\"></span><br><span class=\"line\">Starting cluster:</span><br><span class=\"line\">Checking if cluster has been disabled at boot...    [ OK ]</span><br><span class=\"line\">Checking Network Manager...               [ OK ]</span><br><span class=\"line\">Global setup...                     [ OK ]</span><br><span class=\"line\">Loading kernel modules...                [ OK ]</span><br><span class=\"line\">Mounting configfs...                  [ OK ]</span><br><span class=\"line\">Starting cman...                    [ OK ]</span><br><span class=\"line\">Waiting for quorum...                  [ OK ]</span><br><span class=\"line\">Starting fenced...                   [ OK ]</span><br><span class=\"line\">Starting dlm_controld...                [ OK ]</span><br><span class=\"line\">Tuning DLM kernel config...               [ OK ]</span><br><span class=\"line\">Starting gfs_controld...                [ OK ]</span><br><span class=\"line\">Unfencing self...                    [ OK ]</span><br><span class=\"line\">Joining fence domain...                 [ OK ]</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3-f30 ~]# /etc/init.d/rgmanager start</span><br><span class=\"line\">Starting Cluster Service Manager:             [ OK ]</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3-f30 ~]# /etc/init.d/modclusterd start</span><br><span class=\"line\">Starting Cluster Module - cluster monitor: Setting verbosity level to LogBasic</span><br><span class=\"line\">[ OK ]</span><br></pre></td></tr></table></figure>\n\n<p>切换资源到node3节点上去运行，测试节点是否正常:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node1-f30 ~]# clusvcadm -r httpd -m node3-f30.example.com</span><br><span class=\"line\">Trying to relocate service:httpd to node3-f30.example.com...Success</span><br><span class=\"line\">service:httpd is now running on node3-f30.example.com</span><br><span class=\"line\"></span><br><span class=\"line\">同步fence_xvm.key:</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node1-f30 ~]# scp /etc/cluster/fence_xvm.key 172.25.30.12:/etc/cluster/fence_xvm.key</span><br><span class=\"line\">The authenticity of host '172.25.30.12 (172.25.30.12)' can't be established.</span><br><span class=\"line\">RSA key fingerprint is cf:7c:26:aa:4f:41:7b:21:5e:09:ce:8a:15:2c:97:32.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">Warning: Permanently added '172.25.30.12' (RSA) to the list of known hosts.</span><br><span class=\"line\">root@172.25.30.12's password:</span><br><span class=\"line\">fence_xvm.key                100% 512   0.5KB/s  00:00</span><br></pre></td></tr></table></figure>\n\n<p>Qdisk仲裁盘添加：</p>\n<p>在新的机器上共享一个磁盘出来加入到集群中,共享磁盘需要用到scsi-target-utils工具包，可yum安装获得</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@rhel6 ~]# yum install scsi*</span><br><span class=\"line\"></span><br><span class=\"line\">将配置文件中的如下3行配置取消注释修改需要添加磁盘</span><br><span class=\"line\"></span><br><span class=\"line\">[root@rhel6 ~]# vi /etc/tgt/targets.conf</span><br><span class=\"line\">&lt;target iqn.2008-09.com.example:server.target1&gt;</span><br><span class=\"line\">backing-store /dev/vdb1</span><br><span class=\"line\">&lt;/target&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">集群的节点中安装包 iscsi-initiator-utils</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node1-f30 ~]# yum install scsi*</span><br><span class=\"line\"></span><br><span class=\"line\">添加仲裁盘到本地,格式化仲裁盘</span><br><span class=\"line\"></span><br><span class=\"line\">iscsiadm -m discovery -t st -p 172.25.30.13</span><br><span class=\"line\">iscsiadm -m node -l</span><br><span class=\"line\">mkqdisk -c /dev/sda -l myqdisk</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# iscsiadm -m discovery -t st -p 172.25.30.13</span><br><span class=\"line\">Starting iscsid:                      [ OK ]</span><br><span class=\"line\">172.25.30.13:3260,1 iqn.2008-09.com.example:server.target1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# iscsiadm -m node -l</span><br><span class=\"line\">Logging in to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] (multiple)</span><br><span class=\"line\">Login to [iface: default, target: iqn.2008-09.com.example:server.target1, portal: 172.25.30.13,3260] successful.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node3 ~]# mkqdisk -c /dev/sda -l myqdisk</span><br><span class=\"line\">mkqdisk v3.0.12.1</span><br><span class=\"line\">Writing new quorum disk label 'myqdisk' to /dev/sda.</span><br><span class=\"line\">WARNING: About to destroy all data on /dev/sda; proceed [N/y] ? y</span><br><span class=\"line\">Warning: Initializing previously initialized partition</span><br><span class=\"line\">Initializing status block for node 1...</span><br><span class=\"line\">Initializing status block for node 2...</span><br></pre></td></tr></table></figure>\n\n<p>在luci图形界面中添加仲裁到集群</p>\n<p><a href=\"http://www.xiemx.com/wp-content/uploads/2016/01/ha2.png\"><img src=\"/images/ha2.png\" alt=\"ha2\"></a><br>也可以通过修改配置文件然后通过cman_tool version -r来同步到集群中的每个节点上</p>\n<p>配置文件:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">quorumd</span> <span class=\"attr\">label</span>=<span class=\"string\">\"myqdisk\"</span> <span class=\"attr\">min_score</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">heuristic</span> <span class=\"attr\">interval</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">program</span>=<span class=\"string\">\"ping 172.25.30.254 -c 1\"</span> <span class=\"attr\">tko</span>=<span class=\"string\">\"2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">quorumd</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>同步配置文件时要注意修改版本号</p>\n"},{"layout":"post","title":"session_start()函数报错","published":1,"author":"xiemx","comments":1,"date":"2015-09-29T17:09:15.000Z","_content":"### 现象\n\nWarning: session_start() [function.session-start]: Cannot send session cache limiter - headers already sent\n\n### 解决\n\n(PHP 4, PHP 5)\n\nsession_start — 启动新会话或者重用现有会话\n\n在调用此函数是不能向浏览器输出内容，如出现上面报错可以将函数放到 ` <？php `最上方顶句如下\n\n```php\n<?php\nsession_start();\ninclude xxxxxxxx;\n?>\n```","source":"_posts/session_start-error.md","raw":"---\nlayout: post\ntitle: session_start()函数报错\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-09-30 01:09:15\ntags: [ php, debug ]\ncategories:\n    - php\n    - debug\n# permalink: '/2015/09/30/session_start-error'\n---\n### 现象\n\nWarning: session_start() [function.session-start]: Cannot send session cache limiter - headers already sent\n\n### 解决\n\n(PHP 4, PHP 5)\n\nsession_start — 启动新会话或者重用现有会话\n\n在调用此函数是不能向浏览器输出内容，如出现上面报错可以将函数放到 ` <？php `最上方顶句如下\n\n```php\n<?php\nsession_start();\ninclude xxxxxxxx;\n?>\n```","slug":"session_start-error","updated":"2019-10-21T09:02:35.142Z","photos":[],"link":"","_id":"ck42dyift0082u9urpu4ca5fo","content":"<h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><p>Warning: session_start() [function.session-start]: Cannot send session cache limiter - headers already sent</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>(PHP 4, PHP 5)</p>\n<p>session_start — 启动新会话或者重用现有会话</p>\n<p>在调用此函数是不能向浏览器输出内容，如出现上面报错可以将函数放到 <code>&lt;？php</code>最上方顶句如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"><span class=\"keyword\">include</span> xxxxxxxx;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><p>Warning: session_start() [function.session-start]: Cannot send session cache limiter - headers already sent</p>\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>(PHP 4, PHP 5)</p>\n<p>session_start — 启动新会话或者重用现有会话</p>\n<p>在调用此函数是不能向浏览器输出内容，如出现上面报错可以将函数放到 <code>&lt;？php</code>最上方顶句如下</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">session_start();</span><br><span class=\"line\"><span class=\"keyword\">include</span> xxxxxxxx;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"shell 变量特殊操作","published":1,"author":"xiemx","comments":1,"date":"2016-06-29T02:06:08.000Z","_content":"\n### 替换运算符\n```\n  ${var:-word}    如果var存在且非null，返回它的值；否则返回word\n  ${var:=word}    如果var存在且非null，返回它的值；否则将word赋值给var，并返回var的值\n  ${var:?word}    如果var存在且非null，返回它的值；否则显示var:word\n  ${var:+word}    如果var存在且非null，返回word；否则返回null\n```\n\n### 模式匹配运算符\n```\n  ${var#pattern}    匹配前缀（最小匹配），并返回余下内容\n  ${var##pattern}   匹配前缀（最大匹配），并返回余下内容\n  ${var%pattern}    匹配结尾（最小匹配），并返回余下内容\n  ${var%%pattern}   匹配结尾（最大匹配），并返回余下内容\n```\n  注：pattern为正则表达式匹配\n","source":"_posts/shell-advance-variable.md","raw":"---\nlayout: post\ntitle: shell 变量特殊操作\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-06-29 10:06:08\ntags: [ shell, linux ]\ncategories:\n    - shell\n    - linux\n# permalink: '/2016/06/29/shell-%e5%8f%98%e9%87%8f%e7%89%b9%e6%ae%8a%e6%93%8d%e4%bd%9c'\n---\n\n### 替换运算符\n```\n  ${var:-word}    如果var存在且非null，返回它的值；否则返回word\n  ${var:=word}    如果var存在且非null，返回它的值；否则将word赋值给var，并返回var的值\n  ${var:?word}    如果var存在且非null，返回它的值；否则显示var:word\n  ${var:+word}    如果var存在且非null，返回word；否则返回null\n```\n\n### 模式匹配运算符\n```\n  ${var#pattern}    匹配前缀（最小匹配），并返回余下内容\n  ${var##pattern}   匹配前缀（最大匹配），并返回余下内容\n  ${var%pattern}    匹配结尾（最小匹配），并返回余下内容\n  ${var%%pattern}   匹配结尾（最大匹配），并返回余下内容\n```\n  注：pattern为正则表达式匹配\n","slug":"shell-advance-variable","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyifu0085u9uri8y0a9sg","content":"<h3 id=\"替换运算符\"><a href=\"#替换运算符\" class=\"headerlink\" title=\"替换运算符\"></a>替换运算符</h3><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:-word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回它的值；否则返回word</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:=word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回它的值；否则将word赋值给<span class=\"keyword\">var</span>，并返回<span class=\"keyword\">var</span>的值</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:?word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回它的值；否则显示<span class=\"keyword\">var</span>:word</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:+word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回word；否则返回<span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模式匹配运算符\"><a href=\"#模式匹配运算符\" class=\"headerlink\" title=\"模式匹配运算符\"></a>模式匹配运算符</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&#123;<span class=\"keyword\">var</span><span class=\"meta\">#pattern&#125;    匹配前缀（最小匹配），并返回余下内容</span></span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span><span class=\"meta\">##pattern&#125;   匹配前缀（最大匹配），并返回余下内容</span></span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>%pattern&#125;    匹配结尾（最小匹配），并返回余下内容</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>%%pattern&#125;   匹配结尾（最大匹配），并返回余下内容</span><br></pre></td></tr></table></figure>\n\n<p>  注：pattern为正则表达式匹配</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"替换运算符\"><a href=\"#替换运算符\" class=\"headerlink\" title=\"替换运算符\"></a>替换运算符</h3><figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:-word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回它的值；否则返回word</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:=word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回它的值；否则将word赋值给<span class=\"keyword\">var</span>，并返回<span class=\"keyword\">var</span>的值</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:?word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回它的值；否则显示<span class=\"keyword\">var</span>:word</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>:+word&#125;    如果<span class=\"keyword\">var</span>存在且非<span class=\"literal\">null</span>，返回word；否则返回<span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"模式匹配运算符\"><a href=\"#模式匹配运算符\" class=\"headerlink\" title=\"模式匹配运算符\"></a>模式匹配运算符</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&#123;<span class=\"keyword\">var</span><span class=\"meta\">#pattern&#125;    匹配前缀（最小匹配），并返回余下内容</span></span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span><span class=\"meta\">##pattern&#125;   匹配前缀（最大匹配），并返回余下内容</span></span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>%pattern&#125;    匹配结尾（最小匹配），并返回余下内容</span><br><span class=\"line\">$&#123;<span class=\"keyword\">var</span>%%pattern&#125;   匹配结尾（最大匹配），并返回余下内容</span><br></pre></td></tr></table></figure>\n\n<p>  注：pattern为正则表达式匹配</p>\n"},{"layout":"post","title":"watch重复执行某个命令","published":1,"author":"xiemx","comments":1,"date":"2016-08-10T20:08:29.000Z","_content":"当需要重复执行一个命令时，可使用`watch`\n\n```shell\n➜  ~ watch\n\nUsage:\n watch [options] command\n\nOptions:\n  -b, --beep             beep if command has a non-zero exit\n  -c, --color            interpret ANSI color and style sequences\n  -d, --differences[=<permanent>]\n                         highlight changes between updates\n  -e, --errexit          exit if command has a non-zero exit\n  -g, --chgexit          exit when output from command changes\n  -n, --interval <secs>  seconds to wait between updates\n  -p, --precise          attempt run command in precise intervals\n  -t, --no-title         turn off header\n  -x, --exec             pass command to exec instead of \"sh -c\"\n\n -h, --help     display this help and exit\n -v, --version  output version information and exit\n\nFor more details see watch(1).\n\n###每秒执行一次ls命令\nwatch -n 1 ls\n```\n\n","source":"_posts/shell-command-watch.md","raw":"---\nlayout: post\ntitle: watch重复执行某个命令\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-11 04:08:29\ntags: [ shell, command ]\ncategories:\n    - 'command'\n#permalink: '/2016/08/11/shell-command-watch'\n---\n当需要重复执行一个命令时，可使用`watch`\n\n```shell\n➜  ~ watch\n\nUsage:\n watch [options] command\n\nOptions:\n  -b, --beep             beep if command has a non-zero exit\n  -c, --color            interpret ANSI color and style sequences\n  -d, --differences[=<permanent>]\n                         highlight changes between updates\n  -e, --errexit          exit if command has a non-zero exit\n  -g, --chgexit          exit when output from command changes\n  -n, --interval <secs>  seconds to wait between updates\n  -p, --precise          attempt run command in precise intervals\n  -t, --no-title         turn off header\n  -x, --exec             pass command to exec instead of \"sh -c\"\n\n -h, --help     display this help and exit\n -v, --version  output version information and exit\n\nFor more details see watch(1).\n\n###每秒执行一次ls命令\nwatch -n 1 ls\n```\n\n","slug":"shell-command-watch","updated":"2019-10-21T06:57:42.819Z","photos":[],"link":"","_id":"ck42dyifx0089u9ur9xyj2d7r","content":"<p>当需要重复执行一个命令时，可使用<code>watch</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ watch</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\"> watch [options] command</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -b, --beep             beep if command has a non-zero exit</span><br><span class=\"line\">  -c, --color            interpret ANSI color and style sequences</span><br><span class=\"line\">  -d, --differences[=&lt;permanent&gt;]</span><br><span class=\"line\">                         highlight changes between updates</span><br><span class=\"line\">  -e, --errexit          exit if command has a non-zero exit</span><br><span class=\"line\">  -g, --chgexit          exit when output from command changes</span><br><span class=\"line\">  -n, --interval &lt;secs&gt;  seconds to wait between updates</span><br><span class=\"line\">  -p, --precise          attempt run command in precise intervals</span><br><span class=\"line\">  -t, --no-title         turn off header</span><br><span class=\"line\">  -x, --exec             pass command to exec instead of \"sh -c\"</span><br><span class=\"line\"></span><br><span class=\"line\"> -h, --help     display this help and exit</span><br><span class=\"line\"> -v, --version  output version information and exit</span><br><span class=\"line\"></span><br><span class=\"line\">For more details see watch(1).</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##每秒执行一次ls命令</span></span></span><br><span class=\"line\">watch -n 1 ls</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>当需要重复执行一个命令时，可使用<code>watch</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ watch</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\"> watch [options] command</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -b, --beep             beep if command has a non-zero exit</span><br><span class=\"line\">  -c, --color            interpret ANSI color and style sequences</span><br><span class=\"line\">  -d, --differences[=&lt;permanent&gt;]</span><br><span class=\"line\">                         highlight changes between updates</span><br><span class=\"line\">  -e, --errexit          exit if command has a non-zero exit</span><br><span class=\"line\">  -g, --chgexit          exit when output from command changes</span><br><span class=\"line\">  -n, --interval &lt;secs&gt;  seconds to wait between updates</span><br><span class=\"line\">  -p, --precise          attempt run command in precise intervals</span><br><span class=\"line\">  -t, --no-title         turn off header</span><br><span class=\"line\">  -x, --exec             pass command to exec instead of \"sh -c\"</span><br><span class=\"line\"></span><br><span class=\"line\"> -h, --help     display this help and exit</span><br><span class=\"line\"> -v, --version  output version information and exit</span><br><span class=\"line\"></span><br><span class=\"line\">For more details see watch(1).</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">##每秒执行一次ls命令</span></span></span><br><span class=\"line\">watch -n 1 ls</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"shell 特殊变量","published":1,"author":"xiemx","comments":1,"date":"2016-06-29T01:06:36.000Z","_content":"特殊变量\n``` \n$#    表示变量的个数，常用于循环\n$@    当前命令行所有参数\n$*    当前命令行所有参数，将命令行所有参数当一个单独参数获取\n$?    表示上一个命令退出的状态\n$$    表示当前进程编号\n$0    表示当前程序名称\n$!    表示最近一个后台命令的进程编号\n$IFS    表示内部的字段分隔符\n\n$?的参考值\n0    成功退出\n>0    退出失败\n1-125    命令退出失败，失败返回的相关值由程序定义（譬如，程序内退出只执行 exit 2，则返回为2）\n126    命令找到了，但无法执行\n127    命令找不到\n>128    命令因受到信号而死亡\n```","source":"_posts/shell-special-env-variable.md","raw":"---\nlayout: post\ntitle: shell 特殊变量\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-06-29 09:06:36\ntags: [ shell, linux]\ncategories:\n    - shell\n    - linux\n# permalink: '/2016/06/29/shell-special-env-variable'\n---\n特殊变量\n``` \n$#    表示变量的个数，常用于循环\n$@    当前命令行所有参数\n$*    当前命令行所有参数，将命令行所有参数当一个单独参数获取\n$?    表示上一个命令退出的状态\n$$    表示当前进程编号\n$0    表示当前程序名称\n$!    表示最近一个后台命令的进程编号\n$IFS    表示内部的字段分隔符\n\n$?的参考值\n0    成功退出\n>0    退出失败\n1-125    命令退出失败，失败返回的相关值由程序定义（譬如，程序内退出只执行 exit 2，则返回为2）\n126    命令找到了，但无法执行\n127    命令找不到\n>128    命令因受到信号而死亡\n```","slug":"shell-special-env-variable","updated":"2019-10-19T08:06:22.355Z","photos":[],"link":"","_id":"ck42dyifz008du9urfbilrfkz","content":"<p>特殊变量</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$#</span>    表示变量的个数，常用于循环</span><br><span class=\"line\"><span class=\"variable\">$@</span>    当前命令行所有参数</span><br><span class=\"line\">$*    当前命令行所有参数，将命令行所有参数当一个单独参数获取</span><br><span class=\"line\">$?    表示上一个命令退出的状态</span><br><span class=\"line\">$$    表示当前进程编号</span><br><span class=\"line\"><span class=\"variable\">$0</span>    表示当前程序名称</span><br><span class=\"line\">$!    表示最近一个后台命令的进程编号</span><br><span class=\"line\"><span class=\"variable\">$IFS</span>    表示内部的字段分隔符</span><br><span class=\"line\"></span><br><span class=\"line\">$?的参考值</span><br><span class=\"line\"><span class=\"number\">0</span>    成功退出</span><br><span class=\"line\">&gt;<span class=\"number\">0</span>    退出失败</span><br><span class=\"line\"><span class=\"number\">1</span>-<span class=\"number\">125</span>    命令退出失败，失败返回的相关值由程序定义（譬如，程序内退出只执行 <span class=\"keyword\">exit</span> <span class=\"number\">2</span>，则返回为<span class=\"number\">2</span>）</span><br><span class=\"line\"><span class=\"number\">126</span>    命令找到了，但无法执行</span><br><span class=\"line\"><span class=\"number\">127</span>    命令找不到</span><br><span class=\"line\">&gt;<span class=\"number\">128</span>    命令因受到信号而死亡</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>特殊变量</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$#</span>    表示变量的个数，常用于循环</span><br><span class=\"line\"><span class=\"variable\">$@</span>    当前命令行所有参数</span><br><span class=\"line\">$*    当前命令行所有参数，将命令行所有参数当一个单独参数获取</span><br><span class=\"line\">$?    表示上一个命令退出的状态</span><br><span class=\"line\">$$    表示当前进程编号</span><br><span class=\"line\"><span class=\"variable\">$0</span>    表示当前程序名称</span><br><span class=\"line\">$!    表示最近一个后台命令的进程编号</span><br><span class=\"line\"><span class=\"variable\">$IFS</span>    表示内部的字段分隔符</span><br><span class=\"line\"></span><br><span class=\"line\">$?的参考值</span><br><span class=\"line\"><span class=\"number\">0</span>    成功退出</span><br><span class=\"line\">&gt;<span class=\"number\">0</span>    退出失败</span><br><span class=\"line\"><span class=\"number\">1</span>-<span class=\"number\">125</span>    命令退出失败，失败返回的相关值由程序定义（譬如，程序内退出只执行 <span class=\"keyword\">exit</span> <span class=\"number\">2</span>，则返回为<span class=\"number\">2</span>）</span><br><span class=\"line\"><span class=\"number\">126</span>    命令找到了，但无法执行</span><br><span class=\"line\"><span class=\"number\">127</span>    命令找不到</span><br><span class=\"line\">&gt;<span class=\"number\">128</span>    命令因受到信号而死亡</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"SSH的AuthorizedKeysCommand、AuthorizedKeysCommandUser","published":1,"author":"xiemx","comments":1,"date":"2019-05-06T03:05:17.000Z","_content":"* AuthorizedKeysCommand 可以指定运行一个脚本，而这个脚本主要是寻找登录用户的publickey，默认传参为登录用户名，若未认证成功，将继续使用AuthorizedKeysFile文件来做认证。\n* AuthorizedKeysCommandUser就是指定以什么用户来运行这个脚本。 这两个配置选项的一个用处就是在用户管理上可以不再依靠本地管理，而可以通过脚本读取远程数据库系统中的用户的publickey进行认证，例如MySQL或者LDAP，这样的话，更便于用户的集中管理。","source":"_posts/ssh-authorizedkeyscommand.md","raw":"---\nlayout: post\ntitle: SSH的AuthorizedKeysCommand、AuthorizedKeysCommandUser\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-05-06 11:05:17\ntags: [ ssh, linux ]\ncategories:\n    - linux\n# permalink: '/2019/05/06/ssh-authorizedkeyscommand-cauthorizedkeyscommanduser'\n---\n* AuthorizedKeysCommand 可以指定运行一个脚本，而这个脚本主要是寻找登录用户的publickey，默认传参为登录用户名，若未认证成功，将继续使用AuthorizedKeysFile文件来做认证。\n* AuthorizedKeysCommandUser就是指定以什么用户来运行这个脚本。 这两个配置选项的一个用处就是在用户管理上可以不再依靠本地管理，而可以通过脚本读取远程数据库系统中的用户的publickey进行认证，例如MySQL或者LDAP，这样的话，更便于用户的集中管理。","slug":"ssh-authorizedkeyscommand","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyig0008hu9urh3700er2","content":"<ul>\n<li>AuthorizedKeysCommand 可以指定运行一个脚本，而这个脚本主要是寻找登录用户的publickey，默认传参为登录用户名，若未认证成功，将继续使用AuthorizedKeysFile文件来做认证。</li>\n<li>AuthorizedKeysCommandUser就是指定以什么用户来运行这个脚本。 这两个配置选项的一个用处就是在用户管理上可以不再依靠本地管理，而可以通过脚本读取远程数据库系统中的用户的publickey进行认证，例如MySQL或者LDAP，这样的话，更便于用户的集中管理。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>AuthorizedKeysCommand 可以指定运行一个脚本，而这个脚本主要是寻找登录用户的publickey，默认传参为登录用户名，若未认证成功，将继续使用AuthorizedKeysFile文件来做认证。</li>\n<li>AuthorizedKeysCommandUser就是指定以什么用户来运行这个脚本。 这两个配置选项的一个用处就是在用户管理上可以不再依靠本地管理，而可以通过脚本读取远程数据库系统中的用户的publickey进行认证，例如MySQL或者LDAP，这样的话，更便于用户的集中管理。</li>\n</ul>\n"},{"layout":"post","title":"statsd cluster proxy","published":1,"author":"xiemx","comments":1,"date":"2017-09-07T21:09:37.000Z","_content":"通过UDP proxy程序将前端的数据通过一定的hash算法将相同的metric发送的固定的后aggregation数据。proxy代理支持健康检测自动剔除／加入后端statsd。\n\n1.配置\n本例展示一个3节点的statsd后端且将聚合数据发送到standout方便观测。\n\n```\nnode1\n######config文件：\n{\n port: 8127\n, mgmt_port: 8227\n, backends: [ \"./backends/console\" ]\n}\n\n启动:\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8127.js\n8 Sep 11:06:36 - [81604] reading config file: config8127.js\n8 Sep 11:06:36 - server is up INFO\n```\n```\nnode2\n######config文件：\n{\n port: 8128\n, mgmt_port: 8228\n, backends: [ \"./backends/console\" ]\n}\n\n启动：\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8128.js\n8 Sep 11:07:09 - [81665] reading config file: config8128.js\n8 Sep 11:07:09 - server is up INFO\n```\n```\nnode3\n######config文件：\n{\n port: 8129\n, mgmt_port: 8229\n, backends: [ \"./backends/console\" ]\n}\n\n启动：\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8129.js\n8 Sep 11:07:45 - [81723] reading config file: config8129.js\n8 Sep 11:07:45 - server is up INFO\n```\n```\nproxy\n######config文件：\n{\nnodes: [\n{host: '127.0.0.1', port: 8127, adminport: 8227},\n{host: '127.0.0.1', port: 8128, adminport: 8228},\n{host: '127.0.0.1', port: 8129, adminport: 8229}\n],\nserver: './servers/udp',\nhost:  '0.0.0.0',\nport: 8125,\nmgmt_port: 8126,\nforkCount: 0,\ncheckInterval: 1000,\ncacheSize: 10000,\ndeleteIdleStats: true\n}\n\n启动：\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node proxy.js proxyconfig.js\n8 Sep 11:09:02 - [81938] reading config file: proxyconfig.js\n8 Sep 11:09:02 - INFO: [81938] server is up\n```\n\n测试：\n5个线程同时推送500个metric到代理查看分片情况\n\n```\n测试命令：\nfor i in $(seq 1 500);do echo \"Ezbuy-$i:1|c\" | nc -u -w0 127.0.0.1 8125;done\n```\n\n![img](/images/img_59b269634a216.png)\n\n![img](/images/img_59b2697b89208.png)\n\n节点自动剔除和加入：\n\n![img](/images/img_59b2698d5658f.png)\n\n","source":"_posts/statsd-cluster-proxy.md","raw":"---\nlayout: post\ntitle: statsd cluster proxy\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-09-08 05:09:37\ntags: [ statsd, graphite, monitor, database]\ncategories:\n    - statsd\n    - graphite\n# permalink: /2017/09/08/statsd-cluster-proxy\n---\n通过UDP proxy程序将前端的数据通过一定的hash算法将相同的metric发送的固定的后aggregation数据。proxy代理支持健康检测自动剔除／加入后端statsd。\n\n1.配置\n本例展示一个3节点的statsd后端且将聚合数据发送到standout方便观测。\n\n```\nnode1\n######config文件：\n{\n port: 8127\n, mgmt_port: 8227\n, backends: [ \"./backends/console\" ]\n}\n\n启动:\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8127.js\n8 Sep 11:06:36 - [81604] reading config file: config8127.js\n8 Sep 11:06:36 - server is up INFO\n```\n```\nnode2\n######config文件：\n{\n port: 8128\n, mgmt_port: 8228\n, backends: [ \"./backends/console\" ]\n}\n\n启动：\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8128.js\n8 Sep 11:07:09 - [81665] reading config file: config8128.js\n8 Sep 11:07:09 - server is up INFO\n```\n```\nnode3\n######config文件：\n{\n port: 8129\n, mgmt_port: 8229\n, backends: [ \"./backends/console\" ]\n}\n\n启动：\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8129.js\n8 Sep 11:07:45 - [81723] reading config file: config8129.js\n8 Sep 11:07:45 - server is up INFO\n```\n```\nproxy\n######config文件：\n{\nnodes: [\n{host: '127.0.0.1', port: 8127, adminport: 8227},\n{host: '127.0.0.1', port: 8128, adminport: 8228},\n{host: '127.0.0.1', port: 8129, adminport: 8229}\n],\nserver: './servers/udp',\nhost:  '0.0.0.0',\nport: 8125,\nmgmt_port: 8126,\nforkCount: 0,\ncheckInterval: 1000,\ncacheSize: 10000,\ndeleteIdleStats: true\n}\n\n启动：\nxiemx➜  statsd : master ✘ :✹✭ ᐅ  node proxy.js proxyconfig.js\n8 Sep 11:09:02 - [81938] reading config file: proxyconfig.js\n8 Sep 11:09:02 - INFO: [81938] server is up\n```\n\n测试：\n5个线程同时推送500个metric到代理查看分片情况\n\n```\n测试命令：\nfor i in $(seq 1 500);do echo \"Ezbuy-$i:1|c\" | nc -u -w0 127.0.0.1 8125;done\n```\n\n![img](/images/img_59b269634a216.png)\n\n![img](/images/img_59b2697b89208.png)\n\n节点自动剔除和加入：\n\n![img](/images/img_59b2698d5658f.png)\n\n","slug":"statsd-cluster-proxy","updated":"2019-10-21T06:57:42.329Z","photos":[],"link":"","_id":"ck42dyig1008lu9urywtlrht9","content":"<p>通过UDP proxy程序将前端的数据通过一定的hash算法将相同的metric发送的固定的后aggregation数据。proxy代理支持健康检测自动剔除／加入后端statsd。</p>\n<p>1.配置<br>本例展示一个3节点的statsd后端且将聚合数据发送到standout方便观测。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node1</span><br><span class=\"line\"><span class=\"comment\">######config文件：</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> port: 8127</span><br><span class=\"line\">, mgmt_port: 8227</span><br><span class=\"line\">, backends: [ <span class=\"string\">\"./backends/console\"</span> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动:</span><br><span class=\"line\">xiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8127.js</span><br><span class=\"line\">8 Sep 11:06:36 - [81604] reading<span class=\"built_in\"> config </span>file: config8127.js</span><br><span class=\"line\">8 Sep 11:06:36 -<span class=\"built_in\"> server </span>is up INFO</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node2</span><br><span class=\"line\"><span class=\"comment\">######config文件：</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> port: 8128</span><br><span class=\"line\">, mgmt_port: 8228</span><br><span class=\"line\">, backends: [ <span class=\"string\">\"./backends/console\"</span> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动：</span><br><span class=\"line\">xiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8128.js</span><br><span class=\"line\">8 Sep 11:07:09 - [81665] reading<span class=\"built_in\"> config </span>file: config8128.js</span><br><span class=\"line\">8 Sep 11:07:09 -<span class=\"built_in\"> server </span>is up INFO</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node3</span><br><span class=\"line\"><span class=\"comment\">######config文件：</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> port: 8129</span><br><span class=\"line\">, mgmt_port: 8229</span><br><span class=\"line\">, backends: [ <span class=\"string\">\"./backends/console\"</span> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动：</span><br><span class=\"line\">xiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8129.js</span><br><span class=\"line\">8 Sep 11:07:45 - [81723] reading<span class=\"built_in\"> config </span>file: config8129.js</span><br><span class=\"line\">8 Sep 11:07:45 -<span class=\"built_in\"> server </span>is up INFO</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">proxy</span></span><br><span class=\"line\">#####<span class=\"selector-id\">#config</span>文件：</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attribute\">nodes</span>: [</span><br><span class=\"line\">&#123;<span class=\"attribute\">host</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"attribute\">port</span>: <span class=\"number\">8127</span>, <span class=\"attribute\">adminport</span>: <span class=\"number\">8227</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"attribute\">host</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"attribute\">port</span>: <span class=\"number\">8128</span>, <span class=\"attribute\">adminport</span>: <span class=\"number\">8228</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"attribute\">host</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"attribute\">port</span>: <span class=\"number\">8129</span>, <span class=\"attribute\">adminport</span>: <span class=\"number\">8229</span>&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"attribute\">server</span>: <span class=\"string\">'./servers/udp'</span>,</span><br><span class=\"line\"><span class=\"attribute\">host</span>:  <span class=\"string\">'0.0.0.0'</span>,</span><br><span class=\"line\"><span class=\"attribute\">port</span>: <span class=\"number\">8125</span>,</span><br><span class=\"line\"><span class=\"attribute\">mgmt_port</span>: <span class=\"number\">8126</span>,</span><br><span class=\"line\"><span class=\"attribute\">forkCount</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attribute\">checkInterval</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\"><span class=\"attribute\">cacheSize</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\"><span class=\"attribute\">deleteIdleStats</span>: true</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动：</span><br><span class=\"line\"><span class=\"selector-tag\">xiemx</span>➜  <span class=\"selector-tag\">statsd</span> : <span class=\"selector-tag\">master</span> ✘ :✹✭ ᐅ  <span class=\"selector-tag\">node</span> <span class=\"selector-tag\">proxy</span><span class=\"selector-class\">.js</span> <span class=\"selector-tag\">proxyconfig</span><span class=\"selector-class\">.js</span></span><br><span class=\"line\"><span class=\"selector-tag\">8</span> <span class=\"selector-tag\">Sep</span> <span class=\"selector-tag\">11</span><span class=\"selector-pseudo\">:09</span><span class=\"selector-pseudo\">:02</span> <span class=\"selector-tag\">-</span> <span class=\"selector-attr\">[81938]</span> <span class=\"selector-tag\">reading</span> <span class=\"selector-tag\">config</span> <span class=\"selector-tag\">file</span>: <span class=\"selector-tag\">proxyconfig</span><span class=\"selector-class\">.js</span></span><br><span class=\"line\"><span class=\"selector-tag\">8</span> <span class=\"selector-tag\">Sep</span> <span class=\"selector-tag\">11</span><span class=\"selector-pseudo\">:09</span><span class=\"selector-pseudo\">:02</span> <span class=\"selector-tag\">-</span> <span class=\"selector-tag\">INFO</span>: <span class=\"selector-attr\">[81938]</span> <span class=\"selector-tag\">server</span> <span class=\"selector-tag\">is</span> <span class=\"selector-tag\">up</span></span><br></pre></td></tr></table></figure>\n\n<p>测试：<br>5个线程同时推送500个metric到代理查看分片情况</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">测试命令：</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $(seq <span class=\"number\">1</span> <span class=\"number\">500</span>);<span class=\"keyword\">do</span> echo <span class=\"string\">\"Ezbuy-$i:1|c\"</span> | nc -u -w0 <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"number\">8125</span>;done</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_59b269634a216.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_59b2697b89208.png\" alt=\"img\"></p>\n<p>节点自动剔除和加入：</p>\n<p><img src=\"/images/img_59b2698d5658f.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>通过UDP proxy程序将前端的数据通过一定的hash算法将相同的metric发送的固定的后aggregation数据。proxy代理支持健康检测自动剔除／加入后端statsd。</p>\n<p>1.配置<br>本例展示一个3节点的statsd后端且将聚合数据发送到standout方便观测。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node1</span><br><span class=\"line\"><span class=\"comment\">######config文件：</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> port: 8127</span><br><span class=\"line\">, mgmt_port: 8227</span><br><span class=\"line\">, backends: [ <span class=\"string\">\"./backends/console\"</span> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动:</span><br><span class=\"line\">xiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8127.js</span><br><span class=\"line\">8 Sep 11:06:36 - [81604] reading<span class=\"built_in\"> config </span>file: config8127.js</span><br><span class=\"line\">8 Sep 11:06:36 -<span class=\"built_in\"> server </span>is up INFO</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node2</span><br><span class=\"line\"><span class=\"comment\">######config文件：</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> port: 8128</span><br><span class=\"line\">, mgmt_port: 8228</span><br><span class=\"line\">, backends: [ <span class=\"string\">\"./backends/console\"</span> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动：</span><br><span class=\"line\">xiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8128.js</span><br><span class=\"line\">8 Sep 11:07:09 - [81665] reading<span class=\"built_in\"> config </span>file: config8128.js</span><br><span class=\"line\">8 Sep 11:07:09 -<span class=\"built_in\"> server </span>is up INFO</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node3</span><br><span class=\"line\"><span class=\"comment\">######config文件：</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> port: 8129</span><br><span class=\"line\">, mgmt_port: 8229</span><br><span class=\"line\">, backends: [ <span class=\"string\">\"./backends/console\"</span> ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动：</span><br><span class=\"line\">xiemx➜  statsd : master ✘ :✹✭ ᐅ  node stats.js config8129.js</span><br><span class=\"line\">8 Sep 11:07:45 - [81723] reading<span class=\"built_in\"> config </span>file: config8129.js</span><br><span class=\"line\">8 Sep 11:07:45 -<span class=\"built_in\"> server </span>is up INFO</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">proxy</span></span><br><span class=\"line\">#####<span class=\"selector-id\">#config</span>文件：</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attribute\">nodes</span>: [</span><br><span class=\"line\">&#123;<span class=\"attribute\">host</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"attribute\">port</span>: <span class=\"number\">8127</span>, <span class=\"attribute\">adminport</span>: <span class=\"number\">8227</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"attribute\">host</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"attribute\">port</span>: <span class=\"number\">8128</span>, <span class=\"attribute\">adminport</span>: <span class=\"number\">8228</span>&#125;,</span><br><span class=\"line\">&#123;<span class=\"attribute\">host</span>: <span class=\"string\">'127.0.0.1'</span>, <span class=\"attribute\">port</span>: <span class=\"number\">8129</span>, <span class=\"attribute\">adminport</span>: <span class=\"number\">8229</span>&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"><span class=\"attribute\">server</span>: <span class=\"string\">'./servers/udp'</span>,</span><br><span class=\"line\"><span class=\"attribute\">host</span>:  <span class=\"string\">'0.0.0.0'</span>,</span><br><span class=\"line\"><span class=\"attribute\">port</span>: <span class=\"number\">8125</span>,</span><br><span class=\"line\"><span class=\"attribute\">mgmt_port</span>: <span class=\"number\">8126</span>,</span><br><span class=\"line\"><span class=\"attribute\">forkCount</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\"><span class=\"attribute\">checkInterval</span>: <span class=\"number\">1000</span>,</span><br><span class=\"line\"><span class=\"attribute\">cacheSize</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\"><span class=\"attribute\">deleteIdleStats</span>: true</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">启动：</span><br><span class=\"line\"><span class=\"selector-tag\">xiemx</span>➜  <span class=\"selector-tag\">statsd</span> : <span class=\"selector-tag\">master</span> ✘ :✹✭ ᐅ  <span class=\"selector-tag\">node</span> <span class=\"selector-tag\">proxy</span><span class=\"selector-class\">.js</span> <span class=\"selector-tag\">proxyconfig</span><span class=\"selector-class\">.js</span></span><br><span class=\"line\"><span class=\"selector-tag\">8</span> <span class=\"selector-tag\">Sep</span> <span class=\"selector-tag\">11</span><span class=\"selector-pseudo\">:09</span><span class=\"selector-pseudo\">:02</span> <span class=\"selector-tag\">-</span> <span class=\"selector-attr\">[81938]</span> <span class=\"selector-tag\">reading</span> <span class=\"selector-tag\">config</span> <span class=\"selector-tag\">file</span>: <span class=\"selector-tag\">proxyconfig</span><span class=\"selector-class\">.js</span></span><br><span class=\"line\"><span class=\"selector-tag\">8</span> <span class=\"selector-tag\">Sep</span> <span class=\"selector-tag\">11</span><span class=\"selector-pseudo\">:09</span><span class=\"selector-pseudo\">:02</span> <span class=\"selector-tag\">-</span> <span class=\"selector-tag\">INFO</span>: <span class=\"selector-attr\">[81938]</span> <span class=\"selector-tag\">server</span> <span class=\"selector-tag\">is</span> <span class=\"selector-tag\">up</span></span><br></pre></td></tr></table></figure>\n\n<p>测试：<br>5个线程同时推送500个metric到代理查看分片情况</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">测试命令：</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $(seq <span class=\"number\">1</span> <span class=\"number\">500</span>);<span class=\"keyword\">do</span> echo <span class=\"string\">\"Ezbuy-$i:1|c\"</span> | nc -u -w0 <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> <span class=\"number\">8125</span>;done</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/img_59b269634a216.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_59b2697b89208.png\" alt=\"img\"></p>\n<p>节点自动剔除和加入：</p>\n<p><img src=\"/images/img_59b2698d5658f.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"TCP状态机","published":1,"author":"xiemx","comments":1,"date":"2018-01-23T03:01:20.000Z","_content":"### TCP状态分析\n* listen／close\n* syn-sent/syn-revd\n* established\n* fin_wait_1/close_wait\n* fin_wait_2/last_ack\n* time_wait/close\n\n```\nLISTEN\t        等待来自远程TCP应用程序的请求\nSYN_SENT\t发送连接请求后等待来自远程端点的确认。TCP第一次握手后客户端所处的状态\nSYN-RECEIVED\t该端点已经接收到连接请求并发送确认。该端点正在等待最终确认。TCP第二次握手后服务端所处的状态\nESTABLISHED\t代表连接已经建立起来了。这是连接数据传输阶段的正常状态\nFIN_WAIT_1\t等待来自远程TCP的终止连接请求或终止请求的确认\nFIN_WAIT_2\t在此端点发送终止连接请求后，等待来自远程TCP的连接终止请求\nCLOSE_WAIT\t该端点已经收到来自远程端点的关闭请求，此TCP正在等待本地应用程序的连接终止请求\nCLOSING\t        等待来自远程TCP的连接终止请求确认\nLAST_ACK\t等待先前发送到远程TCP的连接终止请求的确认\nTIME_WAIT\t等待足够的时间来确保远程TCP接收到其连接终止请求的确认\n```\n\n以上大致为一个Tcp从三次握手建立连接到四次挥手断开连接的整个过程C/S对应的TCP状态。\n### 详细流程\n\n```\n1. 客户端(close)发送syn连接请求给服务端(listen),客户端等待服务端ack(syn_sent)\n2. 服务端收到syn请求,发送ack/syn(syn_rec)\n3. 客户端收到ack(establelished)\n4. 传输数据\n5. 客户端数据交互完成请求关闭连接，发送fin请求(fin_wait_1)\n6. 服务端收到fin请求,发送ack(close_wait)\n7. 服务端数据交互完成,发送fin请求关闭连接(last_ack)\n8. 客户端收到服务端的ack请求(fin_wait_2)\n9. 客户端收到服务端的fin请求,发送ack确认断开(time_wait)\n10. 服务端收到客户端的ack,关闭连接(close)\n11. 客户端维护2个msl时间后回收socket\n```\n引用网上的一张图：\n\n![img](/images/img_5a66a577176c8.png)","source":"_posts/tcp-state.md","raw":"---\nlayout: post\ntitle: TCP状态机\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2018-01-23 11:01:20\ntags: [ tcp, linux ]\ncategories:\n    - linux\n# permalink: '/2018/01/23/tcp-state'\n---\n### TCP状态分析\n* listen／close\n* syn-sent/syn-revd\n* established\n* fin_wait_1/close_wait\n* fin_wait_2/last_ack\n* time_wait/close\n\n```\nLISTEN\t        等待来自远程TCP应用程序的请求\nSYN_SENT\t发送连接请求后等待来自远程端点的确认。TCP第一次握手后客户端所处的状态\nSYN-RECEIVED\t该端点已经接收到连接请求并发送确认。该端点正在等待最终确认。TCP第二次握手后服务端所处的状态\nESTABLISHED\t代表连接已经建立起来了。这是连接数据传输阶段的正常状态\nFIN_WAIT_1\t等待来自远程TCP的终止连接请求或终止请求的确认\nFIN_WAIT_2\t在此端点发送终止连接请求后，等待来自远程TCP的连接终止请求\nCLOSE_WAIT\t该端点已经收到来自远程端点的关闭请求，此TCP正在等待本地应用程序的连接终止请求\nCLOSING\t        等待来自远程TCP的连接终止请求确认\nLAST_ACK\t等待先前发送到远程TCP的连接终止请求的确认\nTIME_WAIT\t等待足够的时间来确保远程TCP接收到其连接终止请求的确认\n```\n\n以上大致为一个Tcp从三次握手建立连接到四次挥手断开连接的整个过程C/S对应的TCP状态。\n### 详细流程\n\n```\n1. 客户端(close)发送syn连接请求给服务端(listen),客户端等待服务端ack(syn_sent)\n2. 服务端收到syn请求,发送ack/syn(syn_rec)\n3. 客户端收到ack(establelished)\n4. 传输数据\n5. 客户端数据交互完成请求关闭连接，发送fin请求(fin_wait_1)\n6. 服务端收到fin请求,发送ack(close_wait)\n7. 服务端数据交互完成,发送fin请求关闭连接(last_ack)\n8. 客户端收到服务端的ack请求(fin_wait_2)\n9. 客户端收到服务端的fin请求,发送ack确认断开(time_wait)\n10. 服务端收到客户端的ack,关闭连接(close)\n11. 客户端维护2个msl时间后回收socket\n```\n引用网上的一张图：\n\n![img](/images/img_5a66a577176c8.png)","slug":"tcp-state","updated":"2019-10-21T06:57:42.714Z","photos":[],"link":"","_id":"ck42dyig2008ou9ur9yg3kdkm","content":"<h3 id=\"TCP状态分析\"><a href=\"#TCP状态分析\" class=\"headerlink\" title=\"TCP状态分析\"></a>TCP状态分析</h3><ul>\n<li>listen／close</li>\n<li>syn-sent/syn-revd</li>\n<li>established</li>\n<li>fin_wait_1/close_wait</li>\n<li>fin_wait_2/last_ack</li>\n<li>time_wait/close</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">LISTEN</span>\t        <span class=\"string\">等待来自远程TCP应用程序的请求</span></span><br><span class=\"line\"><span class=\"attr\">SYN_SENT</span>\t<span class=\"string\">发送连接请求后等待来自远程端点的确认。TCP第一次握手后客户端所处的状态</span></span><br><span class=\"line\"><span class=\"meta\">SYN-RECEIVED</span>\t<span class=\"string\">该端点已经接收到连接请求并发送确认。该端点正在等待最终确认。TCP第二次握手后服务端所处的状态</span></span><br><span class=\"line\"><span class=\"attr\">ESTABLISHED</span>\t<span class=\"string\">代表连接已经建立起来了。这是连接数据传输阶段的正常状态</span></span><br><span class=\"line\"><span class=\"attr\">FIN_WAIT_1</span>\t<span class=\"string\">等待来自远程TCP的终止连接请求或终止请求的确认</span></span><br><span class=\"line\"><span class=\"attr\">FIN_WAIT_2</span>\t<span class=\"string\">在此端点发送终止连接请求后，等待来自远程TCP的连接终止请求</span></span><br><span class=\"line\"><span class=\"attr\">CLOSE_WAIT</span>\t<span class=\"string\">该端点已经收到来自远程端点的关闭请求，此TCP正在等待本地应用程序的连接终止请求</span></span><br><span class=\"line\"><span class=\"attr\">CLOSING</span>\t        <span class=\"string\">等待来自远程TCP的连接终止请求确认</span></span><br><span class=\"line\"><span class=\"attr\">LAST_ACK</span>\t<span class=\"string\">等待先前发送到远程TCP的连接终止请求的确认</span></span><br><span class=\"line\"><span class=\"attr\">TIME_WAIT</span>\t<span class=\"string\">等待足够的时间来确保远程TCP接收到其连接终止请求的确认</span></span><br></pre></td></tr></table></figure>\n\n<p>以上大致为一个Tcp从三次握手建立连接到四次挥手断开连接的整个过程C/S对应的TCP状态。</p>\n<h3 id=\"详细流程\"><a href=\"#详细流程\" class=\"headerlink\" title=\"详细流程\"></a>详细流程</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 客户端(close)发送syn连接请求给服务端(<span class=\"section\">listen</span>),客户端等待服务端ack(syn_sent)</span><br><span class=\"line\"><span class=\"number\">2.</span> 服务端收到syn请求,发送ack/syn(syn_rec)</span><br><span class=\"line\"><span class=\"number\">3.</span> 客户端收到ack(establelished)</span><br><span class=\"line\"><span class=\"number\">4.</span> 传输数据</span><br><span class=\"line\"><span class=\"number\">5.</span> 客户端数据交互完成请求关闭连接，发送fin请求(fin_wait_1)</span><br><span class=\"line\"><span class=\"number\">6.</span> 服务端收到fin请求,发送ack(close_wait)</span><br><span class=\"line\"><span class=\"number\">7.</span> 服务端数据交互完成,发送fin请求关闭连接(last_ack)</span><br><span class=\"line\"><span class=\"number\">8.</span> 客户端收到服务端的ack请求(fin_wait_2)</span><br><span class=\"line\"><span class=\"number\">9.</span> 客户端收到服务端的fin请求,发送ack确认断开(time_wait)</span><br><span class=\"line\"><span class=\"number\">10.</span> 服务端收到客户端的ack,关闭连接(close)</span><br><span class=\"line\"><span class=\"number\">11.</span> 客户端维护<span class=\"number\">2</span>个msl时间后回收socket</span><br></pre></td></tr></table></figure>\n\n<p>引用网上的一张图：</p>\n<p><img src=\"/images/img_5a66a577176c8.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"TCP状态分析\"><a href=\"#TCP状态分析\" class=\"headerlink\" title=\"TCP状态分析\"></a>TCP状态分析</h3><ul>\n<li>listen／close</li>\n<li>syn-sent/syn-revd</li>\n<li>established</li>\n<li>fin_wait_1/close_wait</li>\n<li>fin_wait_2/last_ack</li>\n<li>time_wait/close</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">LISTEN</span>\t        <span class=\"string\">等待来自远程TCP应用程序的请求</span></span><br><span class=\"line\"><span class=\"attr\">SYN_SENT</span>\t<span class=\"string\">发送连接请求后等待来自远程端点的确认。TCP第一次握手后客户端所处的状态</span></span><br><span class=\"line\"><span class=\"meta\">SYN-RECEIVED</span>\t<span class=\"string\">该端点已经接收到连接请求并发送确认。该端点正在等待最终确认。TCP第二次握手后服务端所处的状态</span></span><br><span class=\"line\"><span class=\"attr\">ESTABLISHED</span>\t<span class=\"string\">代表连接已经建立起来了。这是连接数据传输阶段的正常状态</span></span><br><span class=\"line\"><span class=\"attr\">FIN_WAIT_1</span>\t<span class=\"string\">等待来自远程TCP的终止连接请求或终止请求的确认</span></span><br><span class=\"line\"><span class=\"attr\">FIN_WAIT_2</span>\t<span class=\"string\">在此端点发送终止连接请求后，等待来自远程TCP的连接终止请求</span></span><br><span class=\"line\"><span class=\"attr\">CLOSE_WAIT</span>\t<span class=\"string\">该端点已经收到来自远程端点的关闭请求，此TCP正在等待本地应用程序的连接终止请求</span></span><br><span class=\"line\"><span class=\"attr\">CLOSING</span>\t        <span class=\"string\">等待来自远程TCP的连接终止请求确认</span></span><br><span class=\"line\"><span class=\"attr\">LAST_ACK</span>\t<span class=\"string\">等待先前发送到远程TCP的连接终止请求的确认</span></span><br><span class=\"line\"><span class=\"attr\">TIME_WAIT</span>\t<span class=\"string\">等待足够的时间来确保远程TCP接收到其连接终止请求的确认</span></span><br></pre></td></tr></table></figure>\n\n<p>以上大致为一个Tcp从三次握手建立连接到四次挥手断开连接的整个过程C/S对应的TCP状态。</p>\n<h3 id=\"详细流程\"><a href=\"#详细流程\" class=\"headerlink\" title=\"详细流程\"></a>详细流程</h3><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 客户端(close)发送syn连接请求给服务端(<span class=\"section\">listen</span>),客户端等待服务端ack(syn_sent)</span><br><span class=\"line\"><span class=\"number\">2.</span> 服务端收到syn请求,发送ack/syn(syn_rec)</span><br><span class=\"line\"><span class=\"number\">3.</span> 客户端收到ack(establelished)</span><br><span class=\"line\"><span class=\"number\">4.</span> 传输数据</span><br><span class=\"line\"><span class=\"number\">5.</span> 客户端数据交互完成请求关闭连接，发送fin请求(fin_wait_1)</span><br><span class=\"line\"><span class=\"number\">6.</span> 服务端收到fin请求,发送ack(close_wait)</span><br><span class=\"line\"><span class=\"number\">7.</span> 服务端数据交互完成,发送fin请求关闭连接(last_ack)</span><br><span class=\"line\"><span class=\"number\">8.</span> 客户端收到服务端的ack请求(fin_wait_2)</span><br><span class=\"line\"><span class=\"number\">9.</span> 客户端收到服务端的fin请求,发送ack确认断开(time_wait)</span><br><span class=\"line\"><span class=\"number\">10.</span> 服务端收到客户端的ack,关闭连接(close)</span><br><span class=\"line\"><span class=\"number\">11.</span> 客户端维护<span class=\"number\">2</span>个msl时间后回收socket</span><br></pre></td></tr></table></figure>\n\n<p>引用网上的一张图：</p>\n<p><img src=\"/images/img_5a66a577176c8.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"TCP TIME_WAIT","published":1,"author":"xiemx","comments":1,"date":"2018-01-23T02:01:21.000Z","_content":"#### 维持TIME_WAIT有两个原因：\n\n1. 可靠地实现TCP的全双工连接终止\n\n    在四次挥手中，假设最后的ACK丢失了，被动关闭方会重发FIN。主动关闭端必须维护状态，来允许被动关闭方重发最后的ACK；如果它没有维护这个状态，将会对重发FIN返回RST，被动关闭方会认为这是个错误。如果TCP正在执行彻底终止数据流的两个方向所需的所有工作（即全双工关闭），则必须正确处理这四个段中任何一个的丢失。所以执行主动关闭的一方必须在结束时保持TIME_WAIT状态：因为它可能必须重传最后的ACK。\n\n2. 允许旧的重复数据段在网络中过期\n\n    假设在主机1.1.1.1的1111端口和2.2.2.2的2222端口之间有一个TCP连接。此连接关闭后，相同的地址和端口建立了一个新连接。由于IP地址和端口相同，TCP必须防止旧连接的数据包再次出现，被新的连接误收。为此，TCP将不会启动当前处于TIME_WAIT状态的连接。由于TIME_WAIT状态的持续时间是两倍的MSL，因此TCP允许一个方向的数据在MSL秒内丢失，也允许回复在一个MSL秒内丢失。通过此规则来保证当一个TCP连接成功建立时，来自先前连接的所有旧的副本在网络中已过期。","source":"_posts/tcp-time_wait.md","raw":"---\nlayout: post\ntitle: TCP TIME_WAIT\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2018-01-23 10:01:21\ntags: [ tcp, linux ]\ncategories:\n    - linux\n# permalink: /2018/01/23/tcp-time_wait\n---\n#### 维持TIME_WAIT有两个原因：\n\n1. 可靠地实现TCP的全双工连接终止\n\n    在四次挥手中，假设最后的ACK丢失了，被动关闭方会重发FIN。主动关闭端必须维护状态，来允许被动关闭方重发最后的ACK；如果它没有维护这个状态，将会对重发FIN返回RST，被动关闭方会认为这是个错误。如果TCP正在执行彻底终止数据流的两个方向所需的所有工作（即全双工关闭），则必须正确处理这四个段中任何一个的丢失。所以执行主动关闭的一方必须在结束时保持TIME_WAIT状态：因为它可能必须重传最后的ACK。\n\n2. 允许旧的重复数据段在网络中过期\n\n    假设在主机1.1.1.1的1111端口和2.2.2.2的2222端口之间有一个TCP连接。此连接关闭后，相同的地址和端口建立了一个新连接。由于IP地址和端口相同，TCP必须防止旧连接的数据包再次出现，被新的连接误收。为此，TCP将不会启动当前处于TIME_WAIT状态的连接。由于TIME_WAIT状态的持续时间是两倍的MSL，因此TCP允许一个方向的数据在MSL秒内丢失，也允许回复在一个MSL秒内丢失。通过此规则来保证当一个TCP连接成功建立时，来自先前连接的所有旧的副本在网络中已过期。","slug":"tcp-time_wait","updated":"2019-10-19T07:40:03.304Z","photos":[],"link":"","_id":"ck42dyig5008su9ur1xno1qs7","content":"<h4 id=\"维持TIME-WAIT有两个原因：\"><a href=\"#维持TIME-WAIT有两个原因：\" class=\"headerlink\" title=\"维持TIME_WAIT有两个原因：\"></a>维持TIME_WAIT有两个原因：</h4><ol>\n<li><p>可靠地实现TCP的全双工连接终止</p>\n<p> 在四次挥手中，假设最后的ACK丢失了，被动关闭方会重发FIN。主动关闭端必须维护状态，来允许被动关闭方重发最后的ACK；如果它没有维护这个状态，将会对重发FIN返回RST，被动关闭方会认为这是个错误。如果TCP正在执行彻底终止数据流的两个方向所需的所有工作（即全双工关闭），则必须正确处理这四个段中任何一个的丢失。所以执行主动关闭的一方必须在结束时保持TIME_WAIT状态：因为它可能必须重传最后的ACK。</p>\n</li>\n<li><p>允许旧的重复数据段在网络中过期</p>\n<p> 假设在主机1.1.1.1的1111端口和2.2.2.2的2222端口之间有一个TCP连接。此连接关闭后，相同的地址和端口建立了一个新连接。由于IP地址和端口相同，TCP必须防止旧连接的数据包再次出现，被新的连接误收。为此，TCP将不会启动当前处于TIME_WAIT状态的连接。由于TIME_WAIT状态的持续时间是两倍的MSL，因此TCP允许一个方向的数据在MSL秒内丢失，也允许回复在一个MSL秒内丢失。通过此规则来保证当一个TCP连接成功建立时，来自先前连接的所有旧的副本在网络中已过期。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"维持TIME-WAIT有两个原因：\"><a href=\"#维持TIME-WAIT有两个原因：\" class=\"headerlink\" title=\"维持TIME_WAIT有两个原因：\"></a>维持TIME_WAIT有两个原因：</h4><ol>\n<li><p>可靠地实现TCP的全双工连接终止</p>\n<p> 在四次挥手中，假设最后的ACK丢失了，被动关闭方会重发FIN。主动关闭端必须维护状态，来允许被动关闭方重发最后的ACK；如果它没有维护这个状态，将会对重发FIN返回RST，被动关闭方会认为这是个错误。如果TCP正在执行彻底终止数据流的两个方向所需的所有工作（即全双工关闭），则必须正确处理这四个段中任何一个的丢失。所以执行主动关闭的一方必须在结束时保持TIME_WAIT状态：因为它可能必须重传最后的ACK。</p>\n</li>\n<li><p>允许旧的重复数据段在网络中过期</p>\n<p> 假设在主机1.1.1.1的1111端口和2.2.2.2的2222端口之间有一个TCP连接。此连接关闭后，相同的地址和端口建立了一个新连接。由于IP地址和端口相同，TCP必须防止旧连接的数据包再次出现，被新的连接误收。为此，TCP将不会启动当前处于TIME_WAIT状态的连接。由于TIME_WAIT状态的持续时间是两倍的MSL，因此TCP允许一个方向的数据在MSL秒内丢失，也允许回复在一个MSL秒内丢失。通过此规则来保证当一个TCP连接成功建立时，来自先前连接的所有旧的副本在网络中已过期。</p>\n</li>\n</ol>\n"},{"layout":"post","title":"Tomcat修改网站根目录","published":1,"author":"xiemx","comments":1,"date":"2016-08-17T20:08:40.000Z","_content":"1.tomcat原来的默认根目录是`http://localhost:8080`，如果想修改访问的根目录，可以这样：\n\n找到tomcat的server.xml（在conf目录下），找到:\n```xml\n<Host name=\"localhost\" appBase=\"webapps\"\n       unpackWARs=\"true\" autoDeploy=\"true\"\n       xmlValidation=\"false\" xmlNamespaceAware=\"false\"></Host>\n```\n在</Host>前插入:\n```xml\n<Context path=\"\" docBase=\"/home/tomcat/\" debug=\"0\"/>\n```\n其中/home/tomcat/就是我想设置的网站根目录，然后重启tomcat。再次访问`http://localhost:8080`时，就是直接访问`/home/tomcat/`目录下的文件了。\n\n2.tomcat的web.xml（在conf目录下），在该文件中找到\n```xml\n    <welcome-file-list>\n        <welcome-file>index.html</welcome-file>\n        <welcome-file>index.htm</welcome-file>\n        <welcome-file>index.jsp</welcome-file>\n    </welcome-file-list>\n```\n这是tomcat默认的3个文件，当你输入指定路径后，tomcat会自动查找这3个页面。如果你想让tomcat自动找到自己的页面，比如main.jsp。可以修改上面信息为：\n```xml\n    <welcome-file-list>\n        <welcome-file>main.jsp</welcome-file>\n        <welcome-file>index.html</welcome-file>\n        <welcome-file>index.htm</welcome-file>\n        <welcome-file>index.jsp</welcome-file>\n    </welcome-file-list>\n```","source":"_posts/tomcat-change-webroot.md","raw":"---\nlayout: post\ntitle: Tomcat修改网站根目录\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-18 04:08:40\ntags: [ tomcat, webserver, http ]\ncategories:\n    - tomcat\n# permalink: '/2016/08/18/tomcat-change-webroot'\n---\n1.tomcat原来的默认根目录是`http://localhost:8080`，如果想修改访问的根目录，可以这样：\n\n找到tomcat的server.xml（在conf目录下），找到:\n```xml\n<Host name=\"localhost\" appBase=\"webapps\"\n       unpackWARs=\"true\" autoDeploy=\"true\"\n       xmlValidation=\"false\" xmlNamespaceAware=\"false\"></Host>\n```\n在</Host>前插入:\n```xml\n<Context path=\"\" docBase=\"/home/tomcat/\" debug=\"0\"/>\n```\n其中/home/tomcat/就是我想设置的网站根目录，然后重启tomcat。再次访问`http://localhost:8080`时，就是直接访问`/home/tomcat/`目录下的文件了。\n\n2.tomcat的web.xml（在conf目录下），在该文件中找到\n```xml\n    <welcome-file-list>\n        <welcome-file>index.html</welcome-file>\n        <welcome-file>index.htm</welcome-file>\n        <welcome-file>index.jsp</welcome-file>\n    </welcome-file-list>\n```\n这是tomcat默认的3个文件，当你输入指定路径后，tomcat会自动查找这3个页面。如果你想让tomcat自动找到自己的页面，比如main.jsp。可以修改上面信息为：\n```xml\n    <welcome-file-list>\n        <welcome-file>main.jsp</welcome-file>\n        <welcome-file>index.html</welcome-file>\n        <welcome-file>index.htm</welcome-file>\n        <welcome-file>index.jsp</welcome-file>\n    </welcome-file-list>\n```","slug":"tomcat-change-webroot","updated":"2019-10-19T07:24:46.748Z","photos":[],"link":"","_id":"ck42dyig5008uu9urw2488pjk","content":"<p>1.tomcat原来的默认根目录是<code>http://localhost:8080</code>，如果想修改访问的根目录，可以这样：</p>\n<p>找到tomcat的server.xml（在conf目录下），找到:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localhost\"</span> <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlValidation</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">xmlNamespaceAware</span>=<span class=\"string\">\"false\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在前插入:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Context</span> <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">docBase</span>=<span class=\"string\">\"/home/tomcat/\"</span> <span class=\"attr\">debug</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>其中/home/tomcat/就是我想设置的网站根目录，然后重启tomcat。再次访问<code>http://localhost:8080</code>时，就是直接访问<code>/home/tomcat/</code>目录下的文件了。</p>\n<p>2.tomcat的web.xml（在conf目录下），在该文件中找到</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是tomcat默认的3个文件，当你输入指定路径后，tomcat会自动查找这3个页面。如果你想让tomcat自动找到自己的页面，比如main.jsp。可以修改上面信息为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>main.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>1.tomcat原来的默认根目录是<code>http://localhost:8080</code>，如果想修改访问的根目录，可以这样：</p>\n<p>找到tomcat的server.xml（在conf目录下），找到:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localhost\"</span> <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlValidation</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">xmlNamespaceAware</span>=<span class=\"string\">\"false\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在前插入:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Context</span> <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">docBase</span>=<span class=\"string\">\"/home/tomcat/\"</span> <span class=\"attr\">debug</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>其中/home/tomcat/就是我想设置的网站根目录，然后重启tomcat。再次访问<code>http://localhost:8080</code>时，就是直接访问<code>/home/tomcat/</code>目录下的文件了。</p>\n<p>2.tomcat的web.xml（在conf目录下），在该文件中找到</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是tomcat默认的3个文件，当你输入指定路径后，tomcat会自动查找这3个页面。如果你想让tomcat自动找到自己的页面，比如main.jsp。可以修改上面信息为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>main.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"tomcat出现PermGen Space问题","published":1,"author":"xiemx","comments":1,"date":"2016-03-28T21:03:32.000Z","_content":"### 现象\ntomcat服务器运行一段时间，总是会自动报异常：`java.lang.OutOfmemoryError:PermGen Space`的错误，导致项目无法正常运行。\n\n出现这个错误是由于内存泄漏。PermGen Space指的是内存的永久保存区，该块内存主要是被JVM存放class和mete信息的，当class被加载loader的时候就会被存储到该内存区中，与存放类的实例的heap区不同，java中的垃圾回收器GC不会在主程序运行期对PermGen space进行清理，所以当我们的应用中有很多的class时，很可能就会出现PermGen space的错误。\n\n### 解决方法\n手动设置MaxPermSize的大小\n\n修改 TOMCAT_HOME/bin/catalina.bat(Linux上为catalina.sh)文件，在echo \"using CATALINA_BASE：$CATALINA_BASE\"上面加入这一行内容：\n```shell\nset JAVA_OPTS=%JAVA_OPTS% -server -XX:PermSize=128m -XX:MaxPermSize=512m\n```","source":"_posts/tomcat-permgen-space.md","raw":"---\nlayout: post\ntitle: tomcat出现PermGen Space问题\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-03-29 05:03:32\ntags: [ tomcat, webserver, http ]\ncategories:\n    - tomcat\n# permalink: '/2016/03/29/tomcat-permgen-space'\n---\n### 现象\ntomcat服务器运行一段时间，总是会自动报异常：`java.lang.OutOfmemoryError:PermGen Space`的错误，导致项目无法正常运行。\n\n出现这个错误是由于内存泄漏。PermGen Space指的是内存的永久保存区，该块内存主要是被JVM存放class和mete信息的，当class被加载loader的时候就会被存储到该内存区中，与存放类的实例的heap区不同，java中的垃圾回收器GC不会在主程序运行期对PermGen space进行清理，所以当我们的应用中有很多的class时，很可能就会出现PermGen space的错误。\n\n### 解决方法\n手动设置MaxPermSize的大小\n\n修改 TOMCAT_HOME/bin/catalina.bat(Linux上为catalina.sh)文件，在echo \"using CATALINA_BASE：$CATALINA_BASE\"上面加入这一行内容：\n```shell\nset JAVA_OPTS=%JAVA_OPTS% -server -XX:PermSize=128m -XX:MaxPermSize=512m\n```","slug":"tomcat-permgen-space","updated":"2019-10-21T06:57:42.570Z","photos":[],"link":"","_id":"ck42dyig7008yu9urtahqsg2f","content":"<h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><p>tomcat服务器运行一段时间，总是会自动报异常：<code>java.lang.OutOfmemoryError:PermGen Space</code>的错误，导致项目无法正常运行。</p>\n<p>出现这个错误是由于内存泄漏。PermGen Space指的是内存的永久保存区，该块内存主要是被JVM存放class和mete信息的，当class被加载loader的时候就会被存储到该内存区中，与存放类的实例的heap区不同，java中的垃圾回收器GC不会在主程序运行期对PermGen space进行清理，所以当我们的应用中有很多的class时，很可能就会出现PermGen space的错误。</p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>手动设置MaxPermSize的大小</p>\n<p>修改 TOMCAT_HOME/bin/catalina.bat(Linux上为catalina.sh)文件，在echo “using CATALINA_BASE：$CATALINA_BASE”上面加入这一行内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_OPTS=%JAVA_OPTS% -server -XX:PermSize=128m -XX:MaxPermSize=512m</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h3><p>tomcat服务器运行一段时间，总是会自动报异常：<code>java.lang.OutOfmemoryError:PermGen Space</code>的错误，导致项目无法正常运行。</p>\n<p>出现这个错误是由于内存泄漏。PermGen Space指的是内存的永久保存区，该块内存主要是被JVM存放class和mete信息的，当class被加载loader的时候就会被存储到该内存区中，与存放类的实例的heap区不同，java中的垃圾回收器GC不会在主程序运行期对PermGen space进行清理，所以当我们的应用中有很多的class时，很可能就会出现PermGen space的错误。</p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><p>手动设置MaxPermSize的大小</p>\n<p>修改 TOMCAT_HOME/bin/catalina.bat(Linux上为catalina.sh)文件，在echo “using CATALINA_BASE：$CATALINA_BASE”上面加入这一行内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_OPTS=%JAVA_OPTS% -server -XX:PermSize=128m -XX:MaxPermSize=512m</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Tomcat虚拟主机别名设置","published":1,"author":"xiemx","comments":1,"date":"2016-04-13T01:04:35.000Z","_content":"一个虚拟空间需要绑定多个域名时可以通过alias标签来设置别名，详见如下配置文件部分截图\n```xml\n <Engine name=\"Catalina\" defaultHost=\"localhost\">\n      <!--For clustering, please take a look at documentation at:\n          /docs/cluster-howto.html  (simple how to)\n          /docs/config/cluster.html (reference documentation)\n       -->\n      <!--\n      <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/>\n      -->\n      <!-- Use the LockOutRealm to prevent attempts to guess user passwords\n           via a brute-force attack -->\n      <Realm className=\"org.apache.catalina.realm.LockOutRealm\">\n        <!-- This Realm uses the UserDatabase configured in the global JNDI\n             resources under the key \"UserDatabase\".  Any edits\n             that are performed against this UserDatabase are immediately\n             available for use by the Realm.  -->\n        <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n               resourceName=\"UserDatabase\"/>\n      </Realm>\n        <Host name=\"www.xiemx.com\" debug=\"0\" appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\">\n                <Alias>xiemx.com</Alias>\n                <Alias>xx.xiemx.com</Alias>\n                <Alias>yy.xiemx.com</Alias> \n        </Host>\n  </Engine>\n  ```","source":"_posts/tomcat-server-name-alias.md","raw":"---\nlayout: post\ntitle: Tomcat虚拟主机别名设置\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-04-13 09:04:35\ntags: [ tomcat, webserver, http ]\ncategories:\n    - tomcat\n# permalink: '/2016/04/13/tomcat%e8%99%9a%e6%8b%9f%e4%b8%bb%e6%9c%ba%e5%88%ab%e5%90%8d%e8%ae%be%e7%bd%ae'\n---\n一个虚拟空间需要绑定多个域名时可以通过alias标签来设置别名，详见如下配置文件部分截图\n```xml\n <Engine name=\"Catalina\" defaultHost=\"localhost\">\n      <!--For clustering, please take a look at documentation at:\n          /docs/cluster-howto.html  (simple how to)\n          /docs/config/cluster.html (reference documentation)\n       -->\n      <!--\n      <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/>\n      -->\n      <!-- Use the LockOutRealm to prevent attempts to guess user passwords\n           via a brute-force attack -->\n      <Realm className=\"org.apache.catalina.realm.LockOutRealm\">\n        <!-- This Realm uses the UserDatabase configured in the global JNDI\n             resources under the key \"UserDatabase\".  Any edits\n             that are performed against this UserDatabase are immediately\n             available for use by the Realm.  -->\n        <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n               resourceName=\"UserDatabase\"/>\n      </Realm>\n        <Host name=\"www.xiemx.com\" debug=\"0\" appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\">\n                <Alias>xiemx.com</Alias>\n                <Alias>xx.xiemx.com</Alias>\n                <Alias>yy.xiemx.com</Alias> \n        </Host>\n  </Engine>\n  ```","slug":"tomcat-server-name-alias","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyig70090u9urh9tuec8y","content":"<p>一个虚拟空间需要绑定多个域名时可以通过alias标签来设置别名，详见如下配置文件部分截图</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--For clustering, please take a look at documentation at:</span></span><br><span class=\"line\"><span class=\"comment\">         /docs/cluster-howto.html  (simple how to)</span></span><br><span class=\"line\"><span class=\"comment\">         /docs/config/cluster.html (reference documentation)</span></span><br><span class=\"line\"><span class=\"comment\">      --&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">     &lt;Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     --&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!-- Use the LockOutRealm to prevent attempts to guess user passwords</span></span><br><span class=\"line\"><span class=\"comment\">          via a brute-force attack --&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.LockOutRealm\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- This Realm uses the UserDatabase configured in the global JNDI</span></span><br><span class=\"line\"><span class=\"comment\">            resources under the key \"UserDatabase\".  Any edits</span></span><br><span class=\"line\"><span class=\"comment\">            that are performed against this UserDatabase are immediately</span></span><br><span class=\"line\"><span class=\"comment\">            available for use by the Realm.  --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.UserDatabaseRealm\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">resourceName</span>=<span class=\"string\">\"UserDatabase\"</span>/&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">Realm</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.xiemx.com\"</span> <span class=\"attr\">debug</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span> <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">xmlValidation</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">xmlNamespaceAware</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">Alias</span>&gt;</span>xiemx.com<span class=\"tag\">&lt;/<span class=\"name\">Alias</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">Alias</span>&gt;</span>xx.xiemx.com<span class=\"tag\">&lt;/<span class=\"name\">Alias</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">Alias</span>&gt;</span>yy.xiemx.com<span class=\"tag\">&lt;/<span class=\"name\">Alias</span>&gt;</span> </span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>一个虚拟空间需要绑定多个域名时可以通过alias标签来设置别名，详见如下配置文件部分截图</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--For clustering, please take a look at documentation at:</span></span><br><span class=\"line\"><span class=\"comment\">         /docs/cluster-howto.html  (simple how to)</span></span><br><span class=\"line\"><span class=\"comment\">         /docs/config/cluster.html (reference documentation)</span></span><br><span class=\"line\"><span class=\"comment\">      --&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">     &lt;Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     --&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!-- Use the LockOutRealm to prevent attempts to guess user passwords</span></span><br><span class=\"line\"><span class=\"comment\">          via a brute-force attack --&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.LockOutRealm\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- This Realm uses the UserDatabase configured in the global JNDI</span></span><br><span class=\"line\"><span class=\"comment\">            resources under the key \"UserDatabase\".  Any edits</span></span><br><span class=\"line\"><span class=\"comment\">            that are performed against this UserDatabase are immediately</span></span><br><span class=\"line\"><span class=\"comment\">            available for use by the Realm.  --&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.UserDatabaseRealm\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">resourceName</span>=<span class=\"string\">\"UserDatabase\"</span>/&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">Realm</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.xiemx.com\"</span> <span class=\"attr\">debug</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span> <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">xmlValidation</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">xmlNamespaceAware</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">Alias</span>&gt;</span>xiemx.com<span class=\"tag\">&lt;/<span class=\"name\">Alias</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">Alias</span>&gt;</span>xx.xiemx.com<span class=\"tag\">&lt;/<span class=\"name\">Alias</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">Alias</span>&gt;</span>yy.xiemx.com<span class=\"tag\">&lt;/<span class=\"name\">Alias</span>&gt;</span> </span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Tomcat搭建web服务器","published":1,"author":"xiemx","comments":1,"date":"2016-01-24T02:01:58.000Z","_content":"tomcat是一款处理jsp页面的web套件，可以处理html页面和jsp页面。由于java语言的跨平台性，软件只要解压后即可运行，但运行java需要在系统中安装jdk的java虚拟机。tomcat的软件包可以去tomcat官网http://tomcat.apache.org获得，jdk的软件包需要去oracle官网下载`http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`。\n\n另外在部署tomcat虚拟机时我们一般会创建tomcat用户和组并将tomcat程序放在家目录下，家目录的权限为700，该目录只有tomcat用户有完整权限，其他用户无任何权限，可增加安全性。另一种部署软件的方法同我们平时安装源码软件相同，将软件放在/usr/lib/local目录下。这里就将软件部署在home/tomcat/目录下。\n\n### tomcat目录结构\n\n```shell\n  [root@serverc tomcat]# tar xf apache-tomcat-8.0.24.tar.gz  -C /home/tomcat/\n  [root@serverc tomcat]# cd /home/tomcat/apache-tomcat-8.0.24/\n  [root@serverc apache-tomcat-8.0.24]# ls -l\n  drwxr-xr-x 2 root root  4096 Dec 11 14:22 bin  #存放命令\n  drwxr-xr-x 2 root root  4096 Jul  2 04:23 conf  #存放配置文件\n  drwxr-xr-x 2 root root  4096 Dec 11 14:22 lib   #存放库文件，java的库文件后缀为jar\n  -rw-r--r-- 1 root root 57011 Jul  2 04:23 LICENSE\n  drwxr-xr-x 2 root root     6 Jul  2 04:20 logs   #存放相关日志\n  -rw-r--r-- 1 root root  1444 Jul  2 04:23 NOTICE\n  -rw-r--r-- 1 root root  6741 Jul  2 04:23 RELEASE-NOTES\n  -rw-r--r-- 1 root root 16204 Jul  2 04:23 RUNNING.txt\n  drwxr-xr-x 2 root root    29 Dec 11 14:22 temp   #存放临时文件\n  drwxr-xr-x 7 root root    76 Jul  2 04:21 webapps  #默认网站网页文件根目录\n  drwxr-xr-x 2 root root     6 Jul  2 04:20 work   #工作目录\n```\n\n### 启动tomcat\n```shell\nbin目录下有控制tomcat服务的启动关闭脚本，在启动jdk时我们声明下jdk的安装位置:\nexport  JAVA\\_HOME=\"/usr/java/jdk1.7.0\\_79/\" \n声明tomcat程序中命令和库文件所在位置\nexport CATALINA\\_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"\n声明tomcat程序中配置文件、网站根目录等所在位置\nexport CATALINA\\_BASE=\"/home/tomcat/apache-tomcat-8.0.24/\"\n启动tomcat服务的脚本名称为startup.sh。执行该脚本可启动tomcat服务。该服务默认监听tcp/8080端口。关闭脚本为shutdown.sh。\n\n  [root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/bin/\n  [root@serverc bin]# ./startup.sh\n  [root@serverc bin]# ps -ef | grep java\n  [root@serverc bin]# netstat -ltunp | grep 8080\n  tcp6       0      0 :::8080                 :::*                    LISTEN      1102/java\n\n```\n测试tomcat服务器\n\n在浏览器中输入地址访问8080，http://192.168.17.10:8080 来测试tomcat服务器是否正常\n\n![tomcat](/images/tomcat-300x84.png)","source":"_posts/tomcat-server.md","raw":"---\nlayout: post\ntitle: Tomcat搭建web服务器\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-24 10:01:58\ntags: [ tomcat, webserver, http]\ncategories:\n    - tomcat\n# permalink: '/2016/01/24/tomcat%e6%90%ad%e5%bb%baweb%e6%9c%8d%e5%8a%a1%e5%99%a8'\n---\ntomcat是一款处理jsp页面的web套件，可以处理html页面和jsp页面。由于java语言的跨平台性，软件只要解压后即可运行，但运行java需要在系统中安装jdk的java虚拟机。tomcat的软件包可以去tomcat官网http://tomcat.apache.org获得，jdk的软件包需要去oracle官网下载`http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`。\n\n另外在部署tomcat虚拟机时我们一般会创建tomcat用户和组并将tomcat程序放在家目录下，家目录的权限为700，该目录只有tomcat用户有完整权限，其他用户无任何权限，可增加安全性。另一种部署软件的方法同我们平时安装源码软件相同，将软件放在/usr/lib/local目录下。这里就将软件部署在home/tomcat/目录下。\n\n### tomcat目录结构\n\n```shell\n  [root@serverc tomcat]# tar xf apache-tomcat-8.0.24.tar.gz  -C /home/tomcat/\n  [root@serverc tomcat]# cd /home/tomcat/apache-tomcat-8.0.24/\n  [root@serverc apache-tomcat-8.0.24]# ls -l\n  drwxr-xr-x 2 root root  4096 Dec 11 14:22 bin  #存放命令\n  drwxr-xr-x 2 root root  4096 Jul  2 04:23 conf  #存放配置文件\n  drwxr-xr-x 2 root root  4096 Dec 11 14:22 lib   #存放库文件，java的库文件后缀为jar\n  -rw-r--r-- 1 root root 57011 Jul  2 04:23 LICENSE\n  drwxr-xr-x 2 root root     6 Jul  2 04:20 logs   #存放相关日志\n  -rw-r--r-- 1 root root  1444 Jul  2 04:23 NOTICE\n  -rw-r--r-- 1 root root  6741 Jul  2 04:23 RELEASE-NOTES\n  -rw-r--r-- 1 root root 16204 Jul  2 04:23 RUNNING.txt\n  drwxr-xr-x 2 root root    29 Dec 11 14:22 temp   #存放临时文件\n  drwxr-xr-x 7 root root    76 Jul  2 04:21 webapps  #默认网站网页文件根目录\n  drwxr-xr-x 2 root root     6 Jul  2 04:20 work   #工作目录\n```\n\n### 启动tomcat\n```shell\nbin目录下有控制tomcat服务的启动关闭脚本，在启动jdk时我们声明下jdk的安装位置:\nexport  JAVA\\_HOME=\"/usr/java/jdk1.7.0\\_79/\" \n声明tomcat程序中命令和库文件所在位置\nexport CATALINA\\_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"\n声明tomcat程序中配置文件、网站根目录等所在位置\nexport CATALINA\\_BASE=\"/home/tomcat/apache-tomcat-8.0.24/\"\n启动tomcat服务的脚本名称为startup.sh。执行该脚本可启动tomcat服务。该服务默认监听tcp/8080端口。关闭脚本为shutdown.sh。\n\n  [root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/bin/\n  [root@serverc bin]# ./startup.sh\n  [root@serverc bin]# ps -ef | grep java\n  [root@serverc bin]# netstat -ltunp | grep 8080\n  tcp6       0      0 :::8080                 :::*                    LISTEN      1102/java\n\n```\n测试tomcat服务器\n\n在浏览器中输入地址访问8080，http://192.168.17.10:8080 来测试tomcat服务器是否正常\n\n![tomcat](/images/tomcat-300x84.png)","slug":"tomcat-server","updated":"2019-10-21T06:57:43.018Z","photos":[],"link":"","_id":"ck42dyiga0094u9ur94n3k7ek","content":"<p>tomcat是一款处理jsp页面的web套件，可以处理html页面和jsp页面。由于java语言的跨平台性，软件只要解压后即可运行，但运行java需要在系统中安装jdk的java虚拟机。tomcat的软件包可以去tomcat官网<a href=\"http://tomcat.apache.org获得，jdk的软件包需要去oracle官网下载`http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`。\" target=\"_blank\" rel=\"noopener\">http://tomcat.apache.org获得，jdk的软件包需要去oracle官网下载`http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`。</a></p>\n<p>另外在部署tomcat虚拟机时我们一般会创建tomcat用户和组并将tomcat程序放在家目录下，家目录的权限为700，该目录只有tomcat用户有完整权限，其他用户无任何权限，可增加安全性。另一种部署软件的方法同我们平时安装源码软件相同，将软件放在/usr/lib/local目录下。这里就将软件部署在home/tomcat/目录下。</p>\n<h3 id=\"tomcat目录结构\"><a href=\"#tomcat目录结构\" class=\"headerlink\" title=\"tomcat目录结构\"></a>tomcat目录结构</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc tomcat]# tar xf apache-tomcat-8.0.24.tar.gz  -C /home/tomcat/</span><br><span class=\"line\">[root@serverc tomcat]# cd /home/tomcat/apache-tomcat-8.0.24/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# ls -l</span><br><span class=\"line\">drwxr-xr-x 2 root root  4096 Dec 11 14:22 bin  #存放命令</span><br><span class=\"line\">drwxr-xr-x 2 root root  4096 Jul  2 04:23 conf  #存放配置文件</span><br><span class=\"line\">drwxr-xr-x 2 root root  4096 Dec 11 14:22 lib   #存放库文件，java的库文件后缀为jar</span><br><span class=\"line\">-rw-r--r-- 1 root root 57011 Jul  2 04:23 LICENSE</span><br><span class=\"line\">drwxr-xr-x 2 root root     6 Jul  2 04:20 logs   #存放相关日志</span><br><span class=\"line\">-rw-r--r-- 1 root root  1444 Jul  2 04:23 NOTICE</span><br><span class=\"line\">-rw-r--r-- 1 root root  6741 Jul  2 04:23 RELEASE-NOTES</span><br><span class=\"line\">-rw-r--r-- 1 root root 16204 Jul  2 04:23 RUNNING.txt</span><br><span class=\"line\">drwxr-xr-x 2 root root    29 Dec 11 14:22 temp   #存放临时文件</span><br><span class=\"line\">drwxr-xr-x 7 root root    76 Jul  2 04:21 webapps  #默认网站网页文件根目录</span><br><span class=\"line\">drwxr-xr-x 2 root root     6 Jul  2 04:20 work   #工作目录</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动tomcat\"><a href=\"#启动tomcat\" class=\"headerlink\" title=\"启动tomcat\"></a>启动tomcat</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin目录下有控制tomcat服务的启动关闭脚本，在启动jdk时我们声明下jdk的安装位置:</span><br><span class=\"line\">export  JAVA\\_HOME=\"/usr/java/jdk1.7.0\\_79/\" </span><br><span class=\"line\">声明tomcat程序中命令和库文件所在位置</span><br><span class=\"line\">export CATALINA\\_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">声明tomcat程序中配置文件、网站根目录等所在位置</span><br><span class=\"line\">export CATALINA\\_BASE=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">启动tomcat服务的脚本名称为startup.sh。执行该脚本可启动tomcat服务。该服务默认监听tcp/8080端口。关闭脚本为shutdown.sh。</span><br><span class=\"line\"></span><br><span class=\"line\">  [root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/bin/</span><br><span class=\"line\">  [root@serverc bin]# ./startup.sh</span><br><span class=\"line\">  [root@serverc bin]# ps -ef | grep java</span><br><span class=\"line\">  [root@serverc bin]# netstat -ltunp | grep 8080</span><br><span class=\"line\">  tcp6       0      0 :::8080                 :::*                    LISTEN      1102/java</span><br></pre></td></tr></table></figure>\n\n<p>测试tomcat服务器</p>\n<p>在浏览器中输入地址访问8080，<a href=\"http://192.168.17.10:8080\" target=\"_blank\" rel=\"noopener\">http://192.168.17.10:8080</a> 来测试tomcat服务器是否正常</p>\n<p><img src=\"/images/tomcat-300x84.png\" alt=\"tomcat\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>tomcat是一款处理jsp页面的web套件，可以处理html页面和jsp页面。由于java语言的跨平台性，软件只要解压后即可运行，但运行java需要在系统中安装jdk的java虚拟机。tomcat的软件包可以去tomcat官网<a href=\"http://tomcat.apache.org获得，jdk的软件包需要去oracle官网下载`http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`。\" target=\"_blank\" rel=\"noopener\">http://tomcat.apache.org获得，jdk的软件包需要去oracle官网下载`http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html`。</a></p>\n<p>另外在部署tomcat虚拟机时我们一般会创建tomcat用户和组并将tomcat程序放在家目录下，家目录的权限为700，该目录只有tomcat用户有完整权限，其他用户无任何权限，可增加安全性。另一种部署软件的方法同我们平时安装源码软件相同，将软件放在/usr/lib/local目录下。这里就将软件部署在home/tomcat/目录下。</p>\n<h3 id=\"tomcat目录结构\"><a href=\"#tomcat目录结构\" class=\"headerlink\" title=\"tomcat目录结构\"></a>tomcat目录结构</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc tomcat]# tar xf apache-tomcat-8.0.24.tar.gz  -C /home/tomcat/</span><br><span class=\"line\">[root@serverc tomcat]# cd /home/tomcat/apache-tomcat-8.0.24/</span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# ls -l</span><br><span class=\"line\">drwxr-xr-x 2 root root  4096 Dec 11 14:22 bin  #存放命令</span><br><span class=\"line\">drwxr-xr-x 2 root root  4096 Jul  2 04:23 conf  #存放配置文件</span><br><span class=\"line\">drwxr-xr-x 2 root root  4096 Dec 11 14:22 lib   #存放库文件，java的库文件后缀为jar</span><br><span class=\"line\">-rw-r--r-- 1 root root 57011 Jul  2 04:23 LICENSE</span><br><span class=\"line\">drwxr-xr-x 2 root root     6 Jul  2 04:20 logs   #存放相关日志</span><br><span class=\"line\">-rw-r--r-- 1 root root  1444 Jul  2 04:23 NOTICE</span><br><span class=\"line\">-rw-r--r-- 1 root root  6741 Jul  2 04:23 RELEASE-NOTES</span><br><span class=\"line\">-rw-r--r-- 1 root root 16204 Jul  2 04:23 RUNNING.txt</span><br><span class=\"line\">drwxr-xr-x 2 root root    29 Dec 11 14:22 temp   #存放临时文件</span><br><span class=\"line\">drwxr-xr-x 7 root root    76 Jul  2 04:21 webapps  #默认网站网页文件根目录</span><br><span class=\"line\">drwxr-xr-x 2 root root     6 Jul  2 04:20 work   #工作目录</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动tomcat\"><a href=\"#启动tomcat\" class=\"headerlink\" title=\"启动tomcat\"></a>启动tomcat</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin目录下有控制tomcat服务的启动关闭脚本，在启动jdk时我们声明下jdk的安装位置:</span><br><span class=\"line\">export  JAVA\\_HOME=\"/usr/java/jdk1.7.0\\_79/\" </span><br><span class=\"line\">声明tomcat程序中命令和库文件所在位置</span><br><span class=\"line\">export CATALINA\\_HOME=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">声明tomcat程序中配置文件、网站根目录等所在位置</span><br><span class=\"line\">export CATALINA\\_BASE=\"/home/tomcat/apache-tomcat-8.0.24/\"</span><br><span class=\"line\">启动tomcat服务的脚本名称为startup.sh。执行该脚本可启动tomcat服务。该服务默认监听tcp/8080端口。关闭脚本为shutdown.sh。</span><br><span class=\"line\"></span><br><span class=\"line\">  [root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/bin/</span><br><span class=\"line\">  [root@serverc bin]# ./startup.sh</span><br><span class=\"line\">  [root@serverc bin]# ps -ef | grep java</span><br><span class=\"line\">  [root@serverc bin]# netstat -ltunp | grep 8080</span><br><span class=\"line\">  tcp6       0      0 :::8080                 :::*                    LISTEN      1102/java</span><br></pre></td></tr></table></figure>\n\n<p>测试tomcat服务器</p>\n<p>在浏览器中输入地址访问8080，<a href=\"http://192.168.17.10:8080\" target=\"_blank\" rel=\"noopener\">http://192.168.17.10:8080</a> 来测试tomcat服务器是否正常</p>\n<p><img src=\"/images/tomcat-300x84.png\" alt=\"tomcat\"></p>\n"},{"layout":"post","title":"Tomcat创建虚拟主机","published":1,"author":"xiemx","comments":1,"date":"2016-01-29T20:01:28.000Z","_content":"1.修改tomcat服务的主配置文件。该文件位于tomcat主程序下conf目录中，文件名称为server.xml\n\n```shell\n  [root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/conf/ \n  [root@serverc conf]# ls -l server.xml \n  -rw------- 1 tomcat root 6458 Jul  2 04:23 server.xml\n```\n\n2.编辑该文件，添加虚拟主机。host字段为tomcat服务的虚拟主机配置字段。配置两个虚拟主机，`www.tomcat1.com`和`www.tomcat2.com`，两台虚拟主机有自己的`appbase`（即网页文件根目录，下图中使用的是相对路径表示虚拟主机网页根目录，该路径是相对于tomcat服务主程序所在目录来说，该路径现不存在，后续再创建）和相关日志前缀。注`name`字段为虚拟主机名，`appBase`为根目录，`uppackwars`为自动解压是否开启，`autoDeploy`为自动部署是否开启\n\n```xml\n<Host name=\"www.tomcat1.com\"  appBase=\"tomcat1.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t \"%r\" %s %b\" />\n</Host>\n<Host name=\"www.tomcat2.com\"  appBase=\"tomcat2.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t \"%r\" %s %b\" />\n</Host>\n```\n\n3.进入tomcat服务主程序所在目录，创建上述步骤中虚拟主机所指定的appBase，分别进入每一个虚拟主机的appBase目录下创建ROOT目录，在ROOT目录写每一个虚拟主机对应的首页文件。\n```shell\n  [root@serverc conf]# cd /home/tomcat/apache-tomcat-8.0.24/ \n  [root@serverc apache-tomcat-8.0.24]# mkdir tomcat1.com/ \n  [root@serverc apache-tomcat-8.0.24]# cd tomcat1.com/ \n  [root@serverc tomcat1.com]# mkdir ROOT \n  [root@serverc tomcat1.com]# echo tomcat1 > ROOT/index.html \n  [root@serverc tomcat1.com]# cd ../ \n  [root@serverc apache-tomcat-8.0.24]# mkdir tomcat2.com \n  [root@serverc apache-tomcat-8.0.24]# cd tomcat2.com \n  [root@serverc tomcat2.com]# mkdir ROOT \n  [root@serverc tomcat2.com]# echo tomcat2 > ROOT/index.html\n```\n\n4.重启tomcat服务\n\n```shell\n  [root@serverc tomcat2.com]# /etc/init.d/tomcat stop\n  [root@serverc tomcat2.com]# /etc/init.d/tomcat start\n```\n\n5.在client端机器上测试\n\n```shell\n  [root@workstation ~]# echo 172.25.41.10 www.tomcat1.com >> /etc/hosts \n  [root@workstation ~]# echo 172.25.41.10 www.tomcat2.com >> /etc/hosts\n  [root@workstation ~]# curl www.tomcat1.com:8080\n  tomcat1\n  [root@workstation ~]# curl www.tomcat2.com:8080\n  tomcat2\n```\n ","source":"_posts/tomcat-virtual-host.md","raw":"---\nlayout: post\ntitle: Tomcat创建虚拟主机\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-30 04:01:28\ntags: [ tomcat, http, webserver ]\ncategories:\n    - tomcat\n# permalink: '/2016/01/30/tomcat-virtual-host'\n---\n1.修改tomcat服务的主配置文件。该文件位于tomcat主程序下conf目录中，文件名称为server.xml\n\n```shell\n  [root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/conf/ \n  [root@serverc conf]# ls -l server.xml \n  -rw------- 1 tomcat root 6458 Jul  2 04:23 server.xml\n```\n\n2.编辑该文件，添加虚拟主机。host字段为tomcat服务的虚拟主机配置字段。配置两个虚拟主机，`www.tomcat1.com`和`www.tomcat2.com`，两台虚拟主机有自己的`appbase`（即网页文件根目录，下图中使用的是相对路径表示虚拟主机网页根目录，该路径是相对于tomcat服务主程序所在目录来说，该路径现不存在，后续再创建）和相关日志前缀。注`name`字段为虚拟主机名，`appBase`为根目录，`uppackwars`为自动解压是否开启，`autoDeploy`为自动部署是否开启\n\n```xml\n<Host name=\"www.tomcat1.com\"  appBase=\"tomcat1.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t \"%r\" %s %b\" />\n</Host>\n<Host name=\"www.tomcat2.com\"  appBase=\"tomcat2.com\"\nunpackWARs=\"true\" autoDeploy=\"true\">\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\nprefix=\"localhost_access_log\" suffix=\".txt\"\npattern=\"%h %l %u %t \"%r\" %s %b\" />\n</Host>\n```\n\n3.进入tomcat服务主程序所在目录，创建上述步骤中虚拟主机所指定的appBase，分别进入每一个虚拟主机的appBase目录下创建ROOT目录，在ROOT目录写每一个虚拟主机对应的首页文件。\n```shell\n  [root@serverc conf]# cd /home/tomcat/apache-tomcat-8.0.24/ \n  [root@serverc apache-tomcat-8.0.24]# mkdir tomcat1.com/ \n  [root@serverc apache-tomcat-8.0.24]# cd tomcat1.com/ \n  [root@serverc tomcat1.com]# mkdir ROOT \n  [root@serverc tomcat1.com]# echo tomcat1 > ROOT/index.html \n  [root@serverc tomcat1.com]# cd ../ \n  [root@serverc apache-tomcat-8.0.24]# mkdir tomcat2.com \n  [root@serverc apache-tomcat-8.0.24]# cd tomcat2.com \n  [root@serverc tomcat2.com]# mkdir ROOT \n  [root@serverc tomcat2.com]# echo tomcat2 > ROOT/index.html\n```\n\n4.重启tomcat服务\n\n```shell\n  [root@serverc tomcat2.com]# /etc/init.d/tomcat stop\n  [root@serverc tomcat2.com]# /etc/init.d/tomcat start\n```\n\n5.在client端机器上测试\n\n```shell\n  [root@workstation ~]# echo 172.25.41.10 www.tomcat1.com >> /etc/hosts \n  [root@workstation ~]# echo 172.25.41.10 www.tomcat2.com >> /etc/hosts\n  [root@workstation ~]# curl www.tomcat1.com:8080\n  tomcat1\n  [root@workstation ~]# curl www.tomcat2.com:8080\n  tomcat2\n```\n ","slug":"tomcat-virtual-host","updated":"2019-10-19T07:20:12.516Z","photos":[],"link":"","_id":"ck42dyigb0097u9ur3m8l5chp","content":"<p>1.修改tomcat服务的主配置文件。该文件位于tomcat主程序下conf目录中，文件名称为server.xml</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/conf/ </span><br><span class=\"line\">[root@serverc conf]# ls -l server.xml </span><br><span class=\"line\">-rw------- 1 tomcat root 6458 Jul  2 04:23 server.xml</span><br></pre></td></tr></table></figure>\n\n<p>2.编辑该文件，添加虚拟主机。host字段为tomcat服务的虚拟主机配置字段。配置两个虚拟主机，<code>www.tomcat1.com</code>和<code>www.tomcat2.com</code>，两台虚拟主机有自己的<code>appbase</code>（即网页文件根目录，下图中使用的是相对路径表示虚拟主机网页根目录，该路径是相对于tomcat服务主程序所在目录来说，该路径现不存在，后续再创建）和相关日志前缀。注<code>name</code>字段为虚拟主机名，<code>appBase</code>为根目录，<code>uppackwars</code>为自动解压是否开启，<code>autoDeploy</code>为自动部署是否开启</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.tomcat1.com\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"tomcat1.com\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t \"</span>%<span class=\"attr\">r</span>\" %<span class=\"attr\">s</span> %<span class=\"attr\">b</span>\" /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.tomcat2.com\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"tomcat2.com\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t \"</span>%<span class=\"attr\">r</span>\" %<span class=\"attr\">s</span> %<span class=\"attr\">b</span>\" /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>3.进入tomcat服务主程序所在目录，创建上述步骤中虚拟主机所指定的appBase，分别进入每一个虚拟主机的appBase目录下创建ROOT目录，在ROOT目录写每一个虚拟主机对应的首页文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc conf]# cd /home/tomcat/apache-tomcat-8.0.24/ </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# mkdir tomcat1.com/ </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cd tomcat1.com/ </span><br><span class=\"line\">[root@serverc tomcat1.com]# mkdir ROOT </span><br><span class=\"line\">[root@serverc tomcat1.com]# echo tomcat1 &gt; ROOT/index.html </span><br><span class=\"line\">[root@serverc tomcat1.com]# cd ../ </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# mkdir tomcat2.com </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cd tomcat2.com </span><br><span class=\"line\">[root@serverc tomcat2.com]# mkdir ROOT </span><br><span class=\"line\">[root@serverc tomcat2.com]# echo tomcat2 &gt; ROOT/index.html</span><br></pre></td></tr></table></figure>\n\n<p>4.重启tomcat服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc tomcat2.com]# /etc/init.d/tomcat stop</span><br><span class=\"line\">[root@serverc tomcat2.com]# /etc/init.d/tomcat start</span><br></pre></td></tr></table></figure>\n\n<p>5.在client端机器上测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@workstation ~]# echo 172.25.41.10 www.tomcat1.com &gt;&gt; /etc/hosts </span><br><span class=\"line\">[root@workstation ~]# echo 172.25.41.10 www.tomcat2.com &gt;&gt; /etc/hosts</span><br><span class=\"line\">[root@workstation ~]# curl www.tomcat1.com:8080</span><br><span class=\"line\">tomcat1</span><br><span class=\"line\">[root@workstation ~]# curl www.tomcat2.com:8080</span><br><span class=\"line\">tomcat2</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>1.修改tomcat服务的主配置文件。该文件位于tomcat主程序下conf目录中，文件名称为server.xml</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc ~]# cd /home/tomcat/apache-tomcat-8.0.24/conf/ </span><br><span class=\"line\">[root@serverc conf]# ls -l server.xml </span><br><span class=\"line\">-rw------- 1 tomcat root 6458 Jul  2 04:23 server.xml</span><br></pre></td></tr></table></figure>\n\n<p>2.编辑该文件，添加虚拟主机。host字段为tomcat服务的虚拟主机配置字段。配置两个虚拟主机，<code>www.tomcat1.com</code>和<code>www.tomcat2.com</code>，两台虚拟主机有自己的<code>appbase</code>（即网页文件根目录，下图中使用的是相对路径表示虚拟主机网页根目录，该路径是相对于tomcat服务主程序所在目录来说，该路径现不存在，后续再创建）和相关日志前缀。注<code>name</code>字段为虚拟主机名，<code>appBase</code>为根目录，<code>uppackwars</code>为自动解压是否开启，<code>autoDeploy</code>为自动部署是否开启</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.tomcat1.com\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"tomcat1.com\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t \"</span>%<span class=\"attr\">r</span>\" %<span class=\"attr\">s</span> %<span class=\"attr\">b</span>\" /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"www.tomcat2.com\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"tomcat2.com\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t \"</span>%<span class=\"attr\">r</span>\" %<span class=\"attr\">s</span> %<span class=\"attr\">b</span>\" /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>3.进入tomcat服务主程序所在目录，创建上述步骤中虚拟主机所指定的appBase，分别进入每一个虚拟主机的appBase目录下创建ROOT目录，在ROOT目录写每一个虚拟主机对应的首页文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc conf]# cd /home/tomcat/apache-tomcat-8.0.24/ </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# mkdir tomcat1.com/ </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cd tomcat1.com/ </span><br><span class=\"line\">[root@serverc tomcat1.com]# mkdir ROOT </span><br><span class=\"line\">[root@serverc tomcat1.com]# echo tomcat1 &gt; ROOT/index.html </span><br><span class=\"line\">[root@serverc tomcat1.com]# cd ../ </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# mkdir tomcat2.com </span><br><span class=\"line\">[root@serverc apache-tomcat-8.0.24]# cd tomcat2.com </span><br><span class=\"line\">[root@serverc tomcat2.com]# mkdir ROOT </span><br><span class=\"line\">[root@serverc tomcat2.com]# echo tomcat2 &gt; ROOT/index.html</span><br></pre></td></tr></table></figure>\n\n<p>4.重启tomcat服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@serverc tomcat2.com]# /etc/init.d/tomcat stop</span><br><span class=\"line\">[root@serverc tomcat2.com]# /etc/init.d/tomcat start</span><br></pre></td></tr></table></figure>\n\n<p>5.在client端机器上测试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@workstation ~]# echo 172.25.41.10 www.tomcat1.com &gt;&gt; /etc/hosts </span><br><span class=\"line\">[root@workstation ~]# echo 172.25.41.10 www.tomcat2.com &gt;&gt; /etc/hosts</span><br><span class=\"line\">[root@workstation ~]# curl www.tomcat1.com:8080</span><br><span class=\"line\">tomcat1</span><br><span class=\"line\">[root@workstation ~]# curl www.tomcat2.com:8080</span><br><span class=\"line\">tomcat2</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"四种事务隔离级别","published":1,"author":"xiemx","comments":1,"date":"2016-01-30T21:01:30.000Z","_content":"数据库系统提供了四种事务隔离级别：\n  \nA.Serializable（串行化）：一个事务在执行过程中完全看不到其他事务对数据库所做的更新（事务执行的时候不允许别的事务并发执行。事务串行化执行，事务只能一个接着一个地执行，而不能并发执行。\n  \nB.Repeatable Read（可重复读）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，但是不能看到其他其他事务对已有记录的更新。\n  \nC.Read Commited（读已提交数据）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，而且能看到其他事务已经提交的对已有记录的更新。\n  \nD.Read Uncommitted（读未提交数据）：一个事务在执行过程中可以看到其他事务没有提交的新插入的记录，而且能看到其他事务没有提交的对已有记录的更新。\n","source":"_posts/transaction-isolation-level.md","raw":"---\nlayout: post\ntitle: 四种事务隔离级别\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-31 05:01:30\ntags: [ mysql ]\ncategories:\n    - mysql\n# permalink: '/2016/01/31/transaction-isolation-level'\n---\n数据库系统提供了四种事务隔离级别：\n  \nA.Serializable（串行化）：一个事务在执行过程中完全看不到其他事务对数据库所做的更新（事务执行的时候不允许别的事务并发执行。事务串行化执行，事务只能一个接着一个地执行，而不能并发执行。\n  \nB.Repeatable Read（可重复读）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，但是不能看到其他其他事务对已有记录的更新。\n  \nC.Read Commited（读已提交数据）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，而且能看到其他事务已经提交的对已有记录的更新。\n  \nD.Read Uncommitted（读未提交数据）：一个事务在执行过程中可以看到其他事务没有提交的新插入的记录，而且能看到其他事务没有提交的对已有记录的更新。\n","slug":"transaction-isolation-level","updated":"2019-10-22T06:48:18.709Z","photos":[],"link":"","_id":"ck42dyigd009cu9uraae46azw","content":"<p>数据库系统提供了四种事务隔离级别：</p>\n<p>A.Serializable（串行化）：一个事务在执行过程中完全看不到其他事务对数据库所做的更新（事务执行的时候不允许别的事务并发执行。事务串行化执行，事务只能一个接着一个地执行，而不能并发执行。</p>\n<p>B.Repeatable Read（可重复读）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，但是不能看到其他其他事务对已有记录的更新。</p>\n<p>C.Read Commited（读已提交数据）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，而且能看到其他事务已经提交的对已有记录的更新。</p>\n<p>D.Read Uncommitted（读未提交数据）：一个事务在执行过程中可以看到其他事务没有提交的新插入的记录，而且能看到其他事务没有提交的对已有记录的更新。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>数据库系统提供了四种事务隔离级别：</p>\n<p>A.Serializable（串行化）：一个事务在执行过程中完全看不到其他事务对数据库所做的更新（事务执行的时候不允许别的事务并发执行。事务串行化执行，事务只能一个接着一个地执行，而不能并发执行。</p>\n<p>B.Repeatable Read（可重复读）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，但是不能看到其他其他事务对已有记录的更新。</p>\n<p>C.Read Commited（读已提交数据）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，而且能看到其他事务已经提交的对已有记录的更新。</p>\n<p>D.Read Uncommitted（读未提交数据）：一个事务在执行过程中可以看到其他事务没有提交的新插入的记录，而且能看到其他事务没有提交的对已有记录的更新。</p>\n"},{"layout":"post","title":"twemproxy构建redis/memcache集群","author":"xiemx","comments":1,"date":"2017-02-08T21:02:12.000Z","_content":"twemproxy构建memcache集群，也可以用来构建reids集群。方法类似只是配置文件不同。\n\n官网描述：\n\t`A fast, light-weight proxy for memcached and redis`\n\n### 安装配置\n```shell\n$ apt-get install libtool automake -y\n$ git clone https://github.com/twitter/twemproxy.git\n$ cd twemproxy\n$ autoreconf -fvi\n$ ./configure\n$ make\n$ src/nutcracker -h\n\n\nroot@vagrant-ubuntu-trusty-64:~# nutcracker -h\nThis is nutcracker-0.4.1\n\nUsage: nutcracker [-?hVdDt] [-v verbosity level] [-o output file]\n                  [-c conf file] [-s stats port] [-a stats addr]\n                  [-i stats interval] [-p pid file] [-m mbuf size]\n\nOptions:\n  -h, --help             : this help\n  -V, --version          : show version and exit\n  -t, --test-conf        : test configuration for syntax errors and exit\n  -d, --daemonize        : run as a daemon\n  -D, --describe-stats   : print stats description and exit\n  -v, --verbose=N        : set logging level (default: 5, min: 0, max: 11)\n  -o, --output=S         : set logging file (default: stderr)\n  -c, --conf-file=S      : set configuration file (default: conf/nutcracker.yml)\n  -s, --stats-port=N     : set stats monitoring port (default: 22222)\n  -a, --stats-addr=S     : set stats monitoring ip (default: 0.0.0.0)\n  -i, --stats-interval=N : set stats aggregation interval in msec (default: 30000 msec)\n  -p, --pid-file=S       : set pid file (default: off)\n  -m, --mbuf-size=N      : set size of mbuf chunk in bytes (default: 16384 bytes)\n```\n\n  \n### 创建集群\n```shell\n#用tweaproxy启动代理一组memcached／redis非常简单，只需要指定配置文件即可，官方也提供了范本在仓库的conf/下\nvagrant@memcache-server:~$ cat nutcracker.yml\nmemcache:\n  listen: 127.0.0.1:11211\n  hash: fnv1a_64\n  distribution: ketama\n  auto_eject_hosts: true\n  server_retry_timeout: 2000\n  server_failure_limit: 1\n  servers:\n   - 127.0.0.1:11221:1\n   - 127.0.0.1:11222:1\n   - 127.0.0.1:11223:1\n\n#启动后端的memcached\nvagrant@memcache-server:~$ ps -ef | grep memcache\nvagrant  17934     1  0 09:07 ?        00:00:00 memcached -d -p 11221\nvagrant  17942     1  0 09:07 ?        00:00:00 memcached -d -p 11222\nvagrant  17950     1  0 09:07 ?        00:00:00 memcached -d -p 11223\nvagrant  18295 18083  0 09:20 pts/0    00:00:00 grep --color=auto memcache\n\nvagrant@memcache-server:~$ nutcracker -c nutcracker.yml -d\n\nvagrant@memcache-server:~$ telnet localhost 11211\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nset test 0 0 1\n1\nSTORED\nget test\nVALUE test 0 1\n1\nEND\n```","source":"_posts/twemproxu.md","raw":"---\nlayout: post\ntitle: twemproxy构建redis/memcache集群\nauthor: xiemx\ncomments: true\ndate: 2017-02-09 05:02:12\ntags: [ memcached, redis, twemproxy, cluster ]\ncategories:\n    - memcached\n    - redis\n# permalink: /2017/02/09/twemproxy\n---\ntwemproxy构建memcache集群，也可以用来构建reids集群。方法类似只是配置文件不同。\n\n官网描述：\n\t`A fast, light-weight proxy for memcached and redis`\n\n### 安装配置\n```shell\n$ apt-get install libtool automake -y\n$ git clone https://github.com/twitter/twemproxy.git\n$ cd twemproxy\n$ autoreconf -fvi\n$ ./configure\n$ make\n$ src/nutcracker -h\n\n\nroot@vagrant-ubuntu-trusty-64:~# nutcracker -h\nThis is nutcracker-0.4.1\n\nUsage: nutcracker [-?hVdDt] [-v verbosity level] [-o output file]\n                  [-c conf file] [-s stats port] [-a stats addr]\n                  [-i stats interval] [-p pid file] [-m mbuf size]\n\nOptions:\n  -h, --help             : this help\n  -V, --version          : show version and exit\n  -t, --test-conf        : test configuration for syntax errors and exit\n  -d, --daemonize        : run as a daemon\n  -D, --describe-stats   : print stats description and exit\n  -v, --verbose=N        : set logging level (default: 5, min: 0, max: 11)\n  -o, --output=S         : set logging file (default: stderr)\n  -c, --conf-file=S      : set configuration file (default: conf/nutcracker.yml)\n  -s, --stats-port=N     : set stats monitoring port (default: 22222)\n  -a, --stats-addr=S     : set stats monitoring ip (default: 0.0.0.0)\n  -i, --stats-interval=N : set stats aggregation interval in msec (default: 30000 msec)\n  -p, --pid-file=S       : set pid file (default: off)\n  -m, --mbuf-size=N      : set size of mbuf chunk in bytes (default: 16384 bytes)\n```\n\n  \n### 创建集群\n```shell\n#用tweaproxy启动代理一组memcached／redis非常简单，只需要指定配置文件即可，官方也提供了范本在仓库的conf/下\nvagrant@memcache-server:~$ cat nutcracker.yml\nmemcache:\n  listen: 127.0.0.1:11211\n  hash: fnv1a_64\n  distribution: ketama\n  auto_eject_hosts: true\n  server_retry_timeout: 2000\n  server_failure_limit: 1\n  servers:\n   - 127.0.0.1:11221:1\n   - 127.0.0.1:11222:1\n   - 127.0.0.1:11223:1\n\n#启动后端的memcached\nvagrant@memcache-server:~$ ps -ef | grep memcache\nvagrant  17934     1  0 09:07 ?        00:00:00 memcached -d -p 11221\nvagrant  17942     1  0 09:07 ?        00:00:00 memcached -d -p 11222\nvagrant  17950     1  0 09:07 ?        00:00:00 memcached -d -p 11223\nvagrant  18295 18083  0 09:20 pts/0    00:00:00 grep --color=auto memcache\n\nvagrant@memcache-server:~$ nutcracker -c nutcracker.yml -d\n\nvagrant@memcache-server:~$ telnet localhost 11211\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nset test 0 0 1\n1\nSTORED\nget test\nVALUE test 0 1\n1\nEND\n```","slug":"twemproxu","published":1,"updated":"2019-10-21T06:57:42.606Z","photos":[],"link":"","_id":"ck42dyige009fu9urmf7vta0g","content":"<p>twemproxy构建memcache集群，也可以用来构建reids集群。方法类似只是配置文件不同。</p>\n<p>官网描述：<br>    <code>A fast, light-weight proxy for memcached and redis</code></p>\n<h3 id=\"安装配置\"><a href=\"#安装配置\" class=\"headerlink\" title=\"安装配置\"></a>安装配置</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> apt-get install libtool automake -y</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/twitter/twemproxy.git</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> twemproxy</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> autoreconf -fvi</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ./configure</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> make</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> src/nutcracker -h</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">root@vagrant-ubuntu-trusty-64:~# nutcracker -h</span><br><span class=\"line\">This is nutcracker-0.4.1</span><br><span class=\"line\"></span><br><span class=\"line\">Usage: nutcracker [-?hVdDt] [-v verbosity level] [-o output file]</span><br><span class=\"line\">                  [-c conf file] [-s stats port] [-a stats addr]</span><br><span class=\"line\">                  [-i stats interval] [-p pid file] [-m mbuf size]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -h, --help             : this help</span><br><span class=\"line\">  -V, --version          : show version and exit</span><br><span class=\"line\">  -t, --test-conf        : test configuration for syntax errors and exit</span><br><span class=\"line\">  -d, --daemonize        : run as a daemon</span><br><span class=\"line\">  -D, --describe-stats   : print stats description and exit</span><br><span class=\"line\">  -v, --verbose=N        : set logging level (default: 5, min: 0, max: 11)</span><br><span class=\"line\">  -o, --output=S         : set logging file (default: stderr)</span><br><span class=\"line\">  -c, --conf-file=S      : set configuration file (default: conf/nutcracker.yml)</span><br><span class=\"line\">  -s, --stats-port=N     : set stats monitoring port (default: 22222)</span><br><span class=\"line\">  -a, --stats-addr=S     : set stats monitoring ip (default: 0.0.0.0)</span><br><span class=\"line\">  -i, --stats-interval=N : set stats aggregation interval in msec (default: 30000 msec)</span><br><span class=\"line\">  -p, --pid-file=S       : set pid file (default: off)</span><br><span class=\"line\">  -m, --mbuf-size=N      : set size of mbuf chunk in bytes (default: 16384 bytes)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"创建集群\"><a href=\"#创建集群\" class=\"headerlink\" title=\"创建集群\"></a>创建集群</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">用tweaproxy启动代理一组memcached／redis非常简单，只需要指定配置文件即可，官方也提供了范本在仓库的conf/下</span></span><br><span class=\"line\">vagrant@memcache-server:~$ cat nutcracker.yml</span><br><span class=\"line\">memcache:</span><br><span class=\"line\">  listen: 127.0.0.1:11211</span><br><span class=\"line\">  hash: fnv1a_64</span><br><span class=\"line\">  distribution: ketama</span><br><span class=\"line\">  auto_eject_hosts: true</span><br><span class=\"line\">  server_retry_timeout: 2000</span><br><span class=\"line\">  server_failure_limit: 1</span><br><span class=\"line\">  servers:</span><br><span class=\"line\">   - 127.0.0.1:11221:1</span><br><span class=\"line\">   - 127.0.0.1:11222:1</span><br><span class=\"line\">   - 127.0.0.1:11223:1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动后端的memcached</span></span><br><span class=\"line\">vagrant@memcache-server:~$ ps -ef | grep memcache</span><br><span class=\"line\">vagrant  17934     1  0 09:07 ?        00:00:00 memcached -d -p 11221</span><br><span class=\"line\">vagrant  17942     1  0 09:07 ?        00:00:00 memcached -d -p 11222</span><br><span class=\"line\">vagrant  17950     1  0 09:07 ?        00:00:00 memcached -d -p 11223</span><br><span class=\"line\">vagrant  18295 18083  0 09:20 pts/0    00:00:00 grep --color=auto memcache</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant@memcache-server:~$ nutcracker -c nutcracker.yml -d</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant@memcache-server:~$ telnet localhost 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to localhost.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">set test 0 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">STORED</span><br><span class=\"line\">get test</span><br><span class=\"line\">VALUE test 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>twemproxy构建memcache集群，也可以用来构建reids集群。方法类似只是配置文件不同。</p>\n<p>官网描述：<br>    <code>A fast, light-weight proxy for memcached and redis</code></p>\n<h3 id=\"安装配置\"><a href=\"#安装配置\" class=\"headerlink\" title=\"安装配置\"></a>安装配置</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> apt-get install libtool automake -y</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> https://github.com/twitter/twemproxy.git</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> twemproxy</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> autoreconf -fvi</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ./configure</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> make</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> src/nutcracker -h</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">root@vagrant-ubuntu-trusty-64:~# nutcracker -h</span><br><span class=\"line\">This is nutcracker-0.4.1</span><br><span class=\"line\"></span><br><span class=\"line\">Usage: nutcracker [-?hVdDt] [-v verbosity level] [-o output file]</span><br><span class=\"line\">                  [-c conf file] [-s stats port] [-a stats addr]</span><br><span class=\"line\">                  [-i stats interval] [-p pid file] [-m mbuf size]</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -h, --help             : this help</span><br><span class=\"line\">  -V, --version          : show version and exit</span><br><span class=\"line\">  -t, --test-conf        : test configuration for syntax errors and exit</span><br><span class=\"line\">  -d, --daemonize        : run as a daemon</span><br><span class=\"line\">  -D, --describe-stats   : print stats description and exit</span><br><span class=\"line\">  -v, --verbose=N        : set logging level (default: 5, min: 0, max: 11)</span><br><span class=\"line\">  -o, --output=S         : set logging file (default: stderr)</span><br><span class=\"line\">  -c, --conf-file=S      : set configuration file (default: conf/nutcracker.yml)</span><br><span class=\"line\">  -s, --stats-port=N     : set stats monitoring port (default: 22222)</span><br><span class=\"line\">  -a, --stats-addr=S     : set stats monitoring ip (default: 0.0.0.0)</span><br><span class=\"line\">  -i, --stats-interval=N : set stats aggregation interval in msec (default: 30000 msec)</span><br><span class=\"line\">  -p, --pid-file=S       : set pid file (default: off)</span><br><span class=\"line\">  -m, --mbuf-size=N      : set size of mbuf chunk in bytes (default: 16384 bytes)</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"创建集群\"><a href=\"#创建集群\" class=\"headerlink\" title=\"创建集群\"></a>创建集群</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">用tweaproxy启动代理一组memcached／redis非常简单，只需要指定配置文件即可，官方也提供了范本在仓库的conf/下</span></span><br><span class=\"line\">vagrant@memcache-server:~$ cat nutcracker.yml</span><br><span class=\"line\">memcache:</span><br><span class=\"line\">  listen: 127.0.0.1:11211</span><br><span class=\"line\">  hash: fnv1a_64</span><br><span class=\"line\">  distribution: ketama</span><br><span class=\"line\">  auto_eject_hosts: true</span><br><span class=\"line\">  server_retry_timeout: 2000</span><br><span class=\"line\">  server_failure_limit: 1</span><br><span class=\"line\">  servers:</span><br><span class=\"line\">   - 127.0.0.1:11221:1</span><br><span class=\"line\">   - 127.0.0.1:11222:1</span><br><span class=\"line\">   - 127.0.0.1:11223:1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">启动后端的memcached</span></span><br><span class=\"line\">vagrant@memcache-server:~$ ps -ef | grep memcache</span><br><span class=\"line\">vagrant  17934     1  0 09:07 ?        00:00:00 memcached -d -p 11221</span><br><span class=\"line\">vagrant  17942     1  0 09:07 ?        00:00:00 memcached -d -p 11222</span><br><span class=\"line\">vagrant  17950     1  0 09:07 ?        00:00:00 memcached -d -p 11223</span><br><span class=\"line\">vagrant  18295 18083  0 09:20 pts/0    00:00:00 grep --color=auto memcache</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant@memcache-server:~$ nutcracker -c nutcracker.yml -d</span><br><span class=\"line\"></span><br><span class=\"line\">vagrant@memcache-server:~$ telnet localhost 11211</span><br><span class=\"line\">Trying 127.0.0.1...</span><br><span class=\"line\">Connected to localhost.</span><br><span class=\"line\">Escape character is '^]'.</span><br><span class=\"line\">set test 0 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">STORED</span><br><span class=\"line\">get test</span><br><span class=\"line\">VALUE test 0 1</span><br><span class=\"line\">1</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"twemproxy配置文件详解","published":1,"author":"xiemx","comments":1,"date":"2017-02-08T21:02:29.000Z","_content":"配置文件详解：\n```conf\nlisten\ntwemproxy监听的端口。可以以ip:port或name:port的形式来书写。\n \nhash\n可以选择的key值的hash算法：\n> one_at_a_time\n> md5\n> crc16\n> crc32(crc32 implementation compatible with libmemcached)\n> crc32a(correct crc32 implementation as per the spec)\n> fnv1_64\n> fnv1a_64\n> fnv1_32\n> fnv1a_32\n> hsieh\n> murmur\n> jenkins\n如果没选择，默认是fnv1a_64。\n\nhash_tag\nhash_tag允许根据key的一个部分来计算key的hash值。hash_tag由两个字符组成，一个是hash_tag的开始，另外一个是hash_tag的结束，在hash_tag的开始和结束之间，是将用于计算key的hash值的部分，计算的结果会用于选择服务器。\n \n例如：如果hash_tag被定义为”{}”，那么key值为\"user:{user1}:ids\"和\"user:{user1}:tweets\"的hash值都是基于”user1”，最终会被映射到相同的服务器。而\"user:user1:ids\"将会使用整个key来计算hash，可能会被映射到不同的服务器。\n \ndistribution\n存在ketama、modula和random3种可选的配置。其含义如下：\n \n\t(1)ketama\n\tketama一致性hash算法，会根据服务器构造出一个hash ring，并为ring上的节点分配hash范围。ketama的优势在于单个节点添加、删除之后，会最大程度上保持整个群集中缓存的key值可以被重用。\n\t \n\t(2)modula\n\tmodula非常简单，就是根据key值的hash值取模，根据取模的结果选择对应的服务器。\n\t \n\t(3)random\n\trandom是无论key值的hash是什么，都随机的选择一个服务器作为key值操作的目标。\n \ntimeout\n单位是毫秒，是连接到server的超时值。默认是永久等待。\n \nbacklog\n监听TCP 的backlog（连接等待队列）的长度，默认是512。\n \npreconnect\n是一个boolean值，指示twemproxy是否应该预连接pool中的server。默认是false。\n \nredis\n是一个boolean值，用来识别到服务器的通讯协议是redis还是memcached。默认是false。\n \nserver_connections\n每个server可以被打开的连接数。默认，每个服务器开一个连接。\n \nauto_eject_hosts\n是一个boolean值，用于控制twemproxy是否应该根据server的连接状态重建群集。这个连接状态是由server_failure_limit 阀值来控制。\n默认是false。\n \nserver_retry_timeout\n单位是毫秒，控制服务器连接的时间间隔，在auto_eject_host被设置为true的时候产生作用。默认是30000 毫秒。\n \nserver_failure_limit\n控制连接服务器的次数，在auto_eject_host被设置为true的时候产生作用。默认是2。\n \nservers\n一个pool中的服务器的地址、端口和权重的列表，包括一个可选的服务器的名字，如果提供服务器的名字，将会使用它决定server的次序，从而提供对应的一致性hash的hash ring。否则，将使用server被定义的次序\n```\n\n","source":"_posts/twemproxy-configure.md","raw":"---\nlayout: post\ntitle: twemproxy配置文件详解\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-09 05:02:29\ntags: [ twemproxy, redis, memcache ]\ncategories:\n    - memcached\n    - redis\n# permalink: '/2017/02/09/twemproxy-configure'\n---\n配置文件详解：\n```conf\nlisten\ntwemproxy监听的端口。可以以ip:port或name:port的形式来书写。\n \nhash\n可以选择的key值的hash算法：\n> one_at_a_time\n> md5\n> crc16\n> crc32(crc32 implementation compatible with libmemcached)\n> crc32a(correct crc32 implementation as per the spec)\n> fnv1_64\n> fnv1a_64\n> fnv1_32\n> fnv1a_32\n> hsieh\n> murmur\n> jenkins\n如果没选择，默认是fnv1a_64。\n\nhash_tag\nhash_tag允许根据key的一个部分来计算key的hash值。hash_tag由两个字符组成，一个是hash_tag的开始，另外一个是hash_tag的结束，在hash_tag的开始和结束之间，是将用于计算key的hash值的部分，计算的结果会用于选择服务器。\n \n例如：如果hash_tag被定义为”{}”，那么key值为\"user:{user1}:ids\"和\"user:{user1}:tweets\"的hash值都是基于”user1”，最终会被映射到相同的服务器。而\"user:user1:ids\"将会使用整个key来计算hash，可能会被映射到不同的服务器。\n \ndistribution\n存在ketama、modula和random3种可选的配置。其含义如下：\n \n\t(1)ketama\n\tketama一致性hash算法，会根据服务器构造出一个hash ring，并为ring上的节点分配hash范围。ketama的优势在于单个节点添加、删除之后，会最大程度上保持整个群集中缓存的key值可以被重用。\n\t \n\t(2)modula\n\tmodula非常简单，就是根据key值的hash值取模，根据取模的结果选择对应的服务器。\n\t \n\t(3)random\n\trandom是无论key值的hash是什么，都随机的选择一个服务器作为key值操作的目标。\n \ntimeout\n单位是毫秒，是连接到server的超时值。默认是永久等待。\n \nbacklog\n监听TCP 的backlog（连接等待队列）的长度，默认是512。\n \npreconnect\n是一个boolean值，指示twemproxy是否应该预连接pool中的server。默认是false。\n \nredis\n是一个boolean值，用来识别到服务器的通讯协议是redis还是memcached。默认是false。\n \nserver_connections\n每个server可以被打开的连接数。默认，每个服务器开一个连接。\n \nauto_eject_hosts\n是一个boolean值，用于控制twemproxy是否应该根据server的连接状态重建群集。这个连接状态是由server_failure_limit 阀值来控制。\n默认是false。\n \nserver_retry_timeout\n单位是毫秒，控制服务器连接的时间间隔，在auto_eject_host被设置为true的时候产生作用。默认是30000 毫秒。\n \nserver_failure_limit\n控制连接服务器的次数，在auto_eject_host被设置为true的时候产生作用。默认是2。\n \nservers\n一个pool中的服务器的地址、端口和权重的列表，包括一个可选的服务器的名字，如果提供服务器的名字，将会使用它决定server的次序，从而提供对应的一致性hash的hash ring。否则，将使用server被定义的次序\n```\n\n","slug":"twemproxy-configure","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyigf009ku9ur4g7nst10","content":"<p>配置文件详解：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen</span><br><span class=\"line\">twemproxy监听的端口。可以以ip:port或name:port的形式来书写。</span><br><span class=\"line\"> </span><br><span class=\"line\">hash</span><br><span class=\"line\">可以选择的key值的hash算法：</span><br><span class=\"line\">&gt; one_at_a_time</span><br><span class=\"line\">&gt; md5</span><br><span class=\"line\">&gt; crc16</span><br><span class=\"line\">&gt; crc32(crc32 implementation compatible with libmemcached)</span><br><span class=\"line\">&gt; crc32a(correct crc32 implementation as per the spec)</span><br><span class=\"line\">&gt; fnv1_64</span><br><span class=\"line\">&gt; fnv1a_64</span><br><span class=\"line\">&gt; fnv1_32</span><br><span class=\"line\">&gt; fnv1a_32</span><br><span class=\"line\">&gt; hsieh</span><br><span class=\"line\">&gt; murmur</span><br><span class=\"line\">&gt; jenkins</span><br><span class=\"line\">如果没选择，默认是fnv1a_64。</span><br><span class=\"line\"></span><br><span class=\"line\">hash_tag</span><br><span class=\"line\">hash_tag允许根据key的一个部分来计算key的hash值。hash_tag由两个字符组成，一个是hash_tag的开始，另外一个是hash_tag的结束，在hash_tag的开始和结束之间，是将用于计算key的hash值的部分，计算的结果会用于选择服务器。</span><br><span class=\"line\"> </span><br><span class=\"line\">例如：如果hash_tag被定义为”&#123;&#125;”，那么key值为&quot;user:&#123;user1&#125;:ids&quot;和&quot;user:&#123;user1&#125;:tweets&quot;的hash值都是基于”user1”，最终会被映射到相同的服务器。而&quot;user:user1:ids&quot;将会使用整个key来计算hash，可能会被映射到不同的服务器。</span><br><span class=\"line\"> </span><br><span class=\"line\">distribution</span><br><span class=\"line\">存在ketama、modula和random3种可选的配置。其含义如下：</span><br><span class=\"line\"> </span><br><span class=\"line\">\t(1)ketama</span><br><span class=\"line\">\tketama一致性hash算法，会根据服务器构造出一个hash ring，并为ring上的节点分配hash范围。ketama的优势在于单个节点添加、删除之后，会最大程度上保持整个群集中缓存的key值可以被重用。</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t(2)modula</span><br><span class=\"line\">\tmodula非常简单，就是根据key值的hash值取模，根据取模的结果选择对应的服务器。</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t(3)random</span><br><span class=\"line\">\trandom是无论key值的hash是什么，都随机的选择一个服务器作为key值操作的目标。</span><br><span class=\"line\"> </span><br><span class=\"line\">timeout</span><br><span class=\"line\">单位是毫秒，是连接到server的超时值。默认是永久等待。</span><br><span class=\"line\"> </span><br><span class=\"line\">backlog</span><br><span class=\"line\">监听TCP 的backlog（连接等待队列）的长度，默认是512。</span><br><span class=\"line\"> </span><br><span class=\"line\">preconnect</span><br><span class=\"line\">是一个boolean值，指示twemproxy是否应该预连接pool中的server。默认是false。</span><br><span class=\"line\"> </span><br><span class=\"line\">redis</span><br><span class=\"line\">是一个boolean值，用来识别到服务器的通讯协议是redis还是memcached。默认是false。</span><br><span class=\"line\"> </span><br><span class=\"line\">server_connections</span><br><span class=\"line\">每个server可以被打开的连接数。默认，每个服务器开一个连接。</span><br><span class=\"line\"> </span><br><span class=\"line\">auto_eject_hosts</span><br><span class=\"line\">是一个boolean值，用于控制twemproxy是否应该根据server的连接状态重建群集。这个连接状态是由server_failure_limit 阀值来控制。</span><br><span class=\"line\">默认是false。</span><br><span class=\"line\"> </span><br><span class=\"line\">server_retry_timeout</span><br><span class=\"line\">单位是毫秒，控制服务器连接的时间间隔，在auto_eject_host被设置为true的时候产生作用。默认是30000 毫秒。</span><br><span class=\"line\"> </span><br><span class=\"line\">server_failure_limit</span><br><span class=\"line\">控制连接服务器的次数，在auto_eject_host被设置为true的时候产生作用。默认是2。</span><br><span class=\"line\"> </span><br><span class=\"line\">servers</span><br><span class=\"line\">一个pool中的服务器的地址、端口和权重的列表，包括一个可选的服务器的名字，如果提供服务器的名字，将会使用它决定server的次序，从而提供对应的一致性hash的hash ring。否则，将使用server被定义的次序</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>配置文件详解：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen</span><br><span class=\"line\">twemproxy监听的端口。可以以ip:port或name:port的形式来书写。</span><br><span class=\"line\"> </span><br><span class=\"line\">hash</span><br><span class=\"line\">可以选择的key值的hash算法：</span><br><span class=\"line\">&gt; one_at_a_time</span><br><span class=\"line\">&gt; md5</span><br><span class=\"line\">&gt; crc16</span><br><span class=\"line\">&gt; crc32(crc32 implementation compatible with libmemcached)</span><br><span class=\"line\">&gt; crc32a(correct crc32 implementation as per the spec)</span><br><span class=\"line\">&gt; fnv1_64</span><br><span class=\"line\">&gt; fnv1a_64</span><br><span class=\"line\">&gt; fnv1_32</span><br><span class=\"line\">&gt; fnv1a_32</span><br><span class=\"line\">&gt; hsieh</span><br><span class=\"line\">&gt; murmur</span><br><span class=\"line\">&gt; jenkins</span><br><span class=\"line\">如果没选择，默认是fnv1a_64。</span><br><span class=\"line\"></span><br><span class=\"line\">hash_tag</span><br><span class=\"line\">hash_tag允许根据key的一个部分来计算key的hash值。hash_tag由两个字符组成，一个是hash_tag的开始，另外一个是hash_tag的结束，在hash_tag的开始和结束之间，是将用于计算key的hash值的部分，计算的结果会用于选择服务器。</span><br><span class=\"line\"> </span><br><span class=\"line\">例如：如果hash_tag被定义为”&#123;&#125;”，那么key值为&quot;user:&#123;user1&#125;:ids&quot;和&quot;user:&#123;user1&#125;:tweets&quot;的hash值都是基于”user1”，最终会被映射到相同的服务器。而&quot;user:user1:ids&quot;将会使用整个key来计算hash，可能会被映射到不同的服务器。</span><br><span class=\"line\"> </span><br><span class=\"line\">distribution</span><br><span class=\"line\">存在ketama、modula和random3种可选的配置。其含义如下：</span><br><span class=\"line\"> </span><br><span class=\"line\">\t(1)ketama</span><br><span class=\"line\">\tketama一致性hash算法，会根据服务器构造出一个hash ring，并为ring上的节点分配hash范围。ketama的优势在于单个节点添加、删除之后，会最大程度上保持整个群集中缓存的key值可以被重用。</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t(2)modula</span><br><span class=\"line\">\tmodula非常简单，就是根据key值的hash值取模，根据取模的结果选择对应的服务器。</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t(3)random</span><br><span class=\"line\">\trandom是无论key值的hash是什么，都随机的选择一个服务器作为key值操作的目标。</span><br><span class=\"line\"> </span><br><span class=\"line\">timeout</span><br><span class=\"line\">单位是毫秒，是连接到server的超时值。默认是永久等待。</span><br><span class=\"line\"> </span><br><span class=\"line\">backlog</span><br><span class=\"line\">监听TCP 的backlog（连接等待队列）的长度，默认是512。</span><br><span class=\"line\"> </span><br><span class=\"line\">preconnect</span><br><span class=\"line\">是一个boolean值，指示twemproxy是否应该预连接pool中的server。默认是false。</span><br><span class=\"line\"> </span><br><span class=\"line\">redis</span><br><span class=\"line\">是一个boolean值，用来识别到服务器的通讯协议是redis还是memcached。默认是false。</span><br><span class=\"line\"> </span><br><span class=\"line\">server_connections</span><br><span class=\"line\">每个server可以被打开的连接数。默认，每个服务器开一个连接。</span><br><span class=\"line\"> </span><br><span class=\"line\">auto_eject_hosts</span><br><span class=\"line\">是一个boolean值，用于控制twemproxy是否应该根据server的连接状态重建群集。这个连接状态是由server_failure_limit 阀值来控制。</span><br><span class=\"line\">默认是false。</span><br><span class=\"line\"> </span><br><span class=\"line\">server_retry_timeout</span><br><span class=\"line\">单位是毫秒，控制服务器连接的时间间隔，在auto_eject_host被设置为true的时候产生作用。默认是30000 毫秒。</span><br><span class=\"line\"> </span><br><span class=\"line\">server_failure_limit</span><br><span class=\"line\">控制连接服务器的次数，在auto_eject_host被设置为true的时候产生作用。默认是2。</span><br><span class=\"line\"> </span><br><span class=\"line\">servers</span><br><span class=\"line\">一个pool中的服务器的地址、端口和权重的列表，包括一个可选的服务器的名字，如果提供服务器的名字，将会使用它决定server的次序，从而提供对应的一致性hash的hash ring。否则，将使用server被定义的次序</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"uwsgi 报错 invalid option --“x” getopt_long() error","published":1,"author":"xiemx","comments":1,"date":"2016-07-26T03:07:34.000Z","_content":"### 报错：\n\n```markdown\nuwsgi: invalid option — ‘x’\ngetopt_long() error \n```\n\n### 解决\n\n这个问题是因为编译uwsgi的时候少了libxml2库导致的，应该先安装库再编译，否则会少了xml的支持。\n\n1. uninstall uwsgi\n\n2. install  libxml*  \n\n3. install uwsgi\n\n","source":"_posts/uwsgi-invalid-option-x-getopt_long-error.md","raw":"---\nlayout: post\ntitle: uwsgi 报错 invalid option --“x” getopt_long() error\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-07-26 11:07:34\ntags: [ python, issue, uwsgi ]\ncategories:\n    - 'uwsgi'\n    - 'python'\n#permalink: '/2016/07/26/uwsgi-invalid-option-x-getopt_long-error'\n---\n### 报错：\n\n```markdown\nuwsgi: invalid option — ‘x’\ngetopt_long() error \n```\n\n### 解决\n\n这个问题是因为编译uwsgi的时候少了libxml2库导致的，应该先安装库再编译，否则会少了xml的支持。\n\n1. uninstall uwsgi\n\n2. install  libxml*  \n\n3. install uwsgi\n\n","slug":"uwsgi-invalid-option-x-getopt_long-error","updated":"2019-10-21T06:57:42.571Z","photos":[],"link":"","_id":"ck42dyigg009nu9urz1nleh1q","content":"<h3 id=\"报错：\"><a href=\"#报错：\" class=\"headerlink\" title=\"报错：\"></a>报错：</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi: invalid option — ‘x’</span><br><span class=\"line\">getopt_long() error</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>这个问题是因为编译uwsgi的时候少了libxml2库导致的，应该先安装库再编译，否则会少了xml的支持。</p>\n<ol>\n<li><p>uninstall uwsgi</p>\n</li>\n<li><p>install  libxml*  </p>\n</li>\n<li><p>install uwsgi</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"报错：\"><a href=\"#报错：\" class=\"headerlink\" title=\"报错：\"></a>报错：</h3><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi: invalid option — ‘x’</span><br><span class=\"line\">getopt_long() error</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>这个问题是因为编译uwsgi的时候少了libxml2库导致的，应该先安装库再编译，否则会少了xml的支持。</p>\n<ol>\n<li><p>uninstall uwsgi</p>\n</li>\n<li><p>install  libxml*  </p>\n</li>\n<li><p>install uwsgi</p>\n</li>\n</ol>\n"},{"layout":"post","title":"vagrant创建多个虚拟机","published":1,"author":"xiemx","comments":1,"date":"2017-02-08T22:02:30.000Z","_content":"建立多台VM，並且让他们之间能够相通信，一台是应用服务器、一台是DB服务器,参考如下\n\n```markdown\nVagrant.configure(\"2\") do |config|\n  config.vm.define :web do |web|\n    web.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]\n    end\n    web.vm.box = \"base\"\n    web.vm.hostname = \"xiemx-website\"\n    web.vm.network :private_network, ip: \"10.11.1.1\"\n  end\n\n  config.vm.define :db do |db|\n    db.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]\n    end\n    db.vm.box = \"base\"\n    db.vm.hostname = \"xiemx-db\"\n    db.vm.network :private_network, ip: \"10.11.1.2\"\n  end\nend\n```","source":"_posts/vagrant-mulit-vm.md","raw":"---\nlayout: post\ntitle: vagrant创建多个虚拟机\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-09 06:02:30\ntags: [ ]\ncategories:\n    - vagrant\n#permalink: '/2017/02/09/vagrant-mulit-vm'\n---\n建立多台VM，並且让他们之间能够相通信，一台是应用服务器、一台是DB服务器,参考如下\n\n```markdown\nVagrant.configure(\"2\") do |config|\n  config.vm.define :web do |web|\n    web.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]\n    end\n    web.vm.box = \"base\"\n    web.vm.hostname = \"xiemx-website\"\n    web.vm.network :private_network, ip: \"10.11.1.1\"\n  end\n\n  config.vm.define :db do |db|\n    db.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]\n    end\n    db.vm.box = \"base\"\n    db.vm.hostname = \"xiemx-db\"\n    db.vm.network :private_network, ip: \"10.11.1.2\"\n  end\nend\n```","slug":"vagrant-mulit-vm","updated":"2019-10-21T06:57:42.570Z","photos":[],"link":"","_id":"ck42dyigh009ru9ur96x379pm","content":"<p>建立多台VM，並且让他们之间能够相通信，一台是应用服务器、一台是DB服务器,参考如下</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vagrant.configure(\"2\") do |config|</span><br><span class=\"line\">  config.vm.define :web do |web|</span><br><span class=\"line\"><span class=\"code\">    web.vm.provider \"virtualbox\" do |v|</span></span><br><span class=\"line\"><span class=\"code\">          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]</span></span><br><span class=\"line\"><span class=\"code\">    end</span></span><br><span class=\"line\"><span class=\"code\">    web.vm.box = \"base\"</span></span><br><span class=\"line\"><span class=\"code\">    web.vm.hostname = \"xiemx-website\"</span></span><br><span class=\"line\"><span class=\"code\">    web.vm.network :private_network, ip: \"10.11.1.1\"</span></span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.define :db do |db|</span><br><span class=\"line\"><span class=\"code\">    db.vm.provider \"virtualbox\" do |v|</span></span><br><span class=\"line\"><span class=\"code\">          v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]</span></span><br><span class=\"line\"><span class=\"code\">    end</span></span><br><span class=\"line\"><span class=\"code\">    db.vm.box = \"base\"</span></span><br><span class=\"line\"><span class=\"code\">    db.vm.hostname = \"xiemx-db\"</span></span><br><span class=\"line\"><span class=\"code\">    db.vm.network :private_network, ip: \"10.11.1.2\"</span></span><br><span class=\"line\">  end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>建立多台VM，並且让他们之间能够相通信，一台是应用服务器、一台是DB服务器,参考如下</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vagrant.configure(\"2\") do |config|</span><br><span class=\"line\">  config.vm.define :web do |web|</span><br><span class=\"line\"><span class=\"code\">    web.vm.provider \"virtualbox\" do |v|</span></span><br><span class=\"line\"><span class=\"code\">          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]</span></span><br><span class=\"line\"><span class=\"code\">    end</span></span><br><span class=\"line\"><span class=\"code\">    web.vm.box = \"base\"</span></span><br><span class=\"line\"><span class=\"code\">    web.vm.hostname = \"xiemx-website\"</span></span><br><span class=\"line\"><span class=\"code\">    web.vm.network :private_network, ip: \"10.11.1.1\"</span></span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.define :db do |db|</span><br><span class=\"line\"><span class=\"code\">    db.vm.provider \"virtualbox\" do |v|</span></span><br><span class=\"line\"><span class=\"code\">          v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]</span></span><br><span class=\"line\"><span class=\"code\">    end</span></span><br><span class=\"line\"><span class=\"code\">    db.vm.box = \"base\"</span></span><br><span class=\"line\"><span class=\"code\">    db.vm.hostname = \"xiemx-db\"</span></span><br><span class=\"line\"><span class=\"code\">    db.vm.network :private_network, ip: \"10.11.1.2\"</span></span><br><span class=\"line\">  end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"vagrant使用","published":1,"author":"xiemx","comments":1,"date":"2017-02-08T21:02:54.000Z","_content":"删除文档，参考官方：[https://www.vagrantup.com/docs/cli/](https://www.vagrantup.com/docs/cli/)\n\n","source":"_posts/vagrant.md","raw":"---\nlayout: post\ntitle: vagrant使用\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-09 05:02:54\ntags: [ vagrant ]\ncategories:\n    - vagrant\n#permalink: '/2017/02/09/vagrant'\n---\n删除文档，参考官方：[https://www.vagrantup.com/docs/cli/](https://www.vagrantup.com/docs/cli/)\n\n","slug":"vagrant","updated":"2019-10-21T06:57:42.697Z","photos":[],"link":"","_id":"ck42dyigj009vu9uroluojkw0","content":"<p>删除文档，参考官方：<a href=\"https://www.vagrantup.com/docs/cli/\" target=\"_blank\" rel=\"noopener\">https://www.vagrantup.com/docs/cli/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>删除文档，参考官方：<a href=\"https://www.vagrantup.com/docs/cli/\" target=\"_blank\" rel=\"noopener\">https://www.vagrantup.com/docs/cli/</a></p>\n"},{"layout":"post","title":"Vagrantfile配置","published":1,"author":"xiemx","comments":1,"date":"2017-02-08T21:02:02.000Z","_content":"\n删除原始文档，参考官方文档：[https://www.vagrantup.com/docs/vagrantfile/](https://www.vagrantup.com/docs/vagrantfile/)\n\n","source":"_posts/vagrantfile.md","raw":"---\nlayout: post\ntitle: Vagrantfile配置\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-09 05:02:02\ntags: [ vagrant ]\ncategories:\n    - vagrant\n#permalink: '/2017/02/09/vagrantfile'\n---\n\n删除原始文档，参考官方文档：[https://www.vagrantup.com/docs/vagrantfile/](https://www.vagrantup.com/docs/vagrantfile/)\n\n","slug":"vagrantfile","updated":"2019-10-21T06:57:42.922Z","photos":[],"link":"","_id":"ck42dyigk009yu9urx3kbc4fp","content":"<p>删除原始文档，参考官方文档：<a href=\"https://www.vagrantup.com/docs/vagrantfile/\" target=\"_blank\" rel=\"noopener\">https://www.vagrantup.com/docs/vagrantfile/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>删除原始文档，参考官方文档：<a href=\"https://www.vagrantup.com/docs/vagrantfile/\" target=\"_blank\" rel=\"noopener\">https://www.vagrantup.com/docs/vagrantfile/</a></p>\n"},{"layout":"post","title":"vcenter扩容Linux虚拟机磁盘","published":1,"author":"xiemx","comments":1,"date":"2017-01-19T03:01:34.000Z","_content":"\n![img](/images/img_58802ffca93b9.png)\n\n![img](/images/img_5880322f10890.png)\n\n磁盘扩容100G\n1.vcenter扩容磁盘\nvcenter增加步骤参考：[vcenter扩容window磁盘](/2017/01/12/vcenter-expand-disk-to-windows)\n\n2.Linux需要rescan磁盘，重新读到大小\n```shell\n方法1:\nreboot\n方法2:\n[root@localhost ~]# echo 1 > /sys/block/sdc/device/rescan\n```\n3.fdisk创建新分区\n\t注意创建新的磁盘后内核可能无法识别到分区表，需要运行partprobe刷新下分区表信息\n\n4.lvm动态扩容\nlvm参考：[lvm动态磁盘管理](http://www.xiemx.com/2015/11/29/linux动态磁盘管理（lvm）/)\n\n完成后：\n\n![img](/images/img_588031f4a62e1.png)\n\n![img](/images/img_58803215d9370.png)\n\n","source":"_posts/vcenter-expand-disk-to-linux.md","raw":"---\nlayout: post\ntitle: vcenter扩容Linux虚拟机磁盘\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-01-19 11:01:34\ntags: [ vcenter ]\ncategories:\n    - 'vcenter'\n#permalink: '/2017/01/19/vcenter-expand-disk-to-linux'\n---\n\n![img](/images/img_58802ffca93b9.png)\n\n![img](/images/img_5880322f10890.png)\n\n磁盘扩容100G\n1.vcenter扩容磁盘\nvcenter增加步骤参考：[vcenter扩容window磁盘](/2017/01/12/vcenter-expand-disk-to-windows)\n\n2.Linux需要rescan磁盘，重新读到大小\n```shell\n方法1:\nreboot\n方法2:\n[root@localhost ~]# echo 1 > /sys/block/sdc/device/rescan\n```\n3.fdisk创建新分区\n\t注意创建新的磁盘后内核可能无法识别到分区表，需要运行partprobe刷新下分区表信息\n\n4.lvm动态扩容\nlvm参考：[lvm动态磁盘管理](http://www.xiemx.com/2015/11/29/linux动态磁盘管理（lvm）/)\n\n完成后：\n\n![img](/images/img_588031f4a62e1.png)\n\n![img](/images/img_58803215d9370.png)\n\n","slug":"vcenter-expand-disk-to-linux","updated":"2019-10-21T06:57:42.697Z","photos":[],"link":"","_id":"ck42dyigm00a2u9ur4vivbd1d","content":"<p><img src=\"/images/img_58802ffca93b9.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_5880322f10890.png\" alt=\"img\"></p>\n<p>磁盘扩容100G<br>1.vcenter扩容磁盘<br>vcenter增加步骤参考：<a href=\"/2017/01/12/vcenter-expand-disk-to-windows\">vcenter扩容window磁盘</a></p>\n<p>2.Linux需要rescan磁盘，重新读到大小</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法1:</span><br><span class=\"line\">reboot</span><br><span class=\"line\">方法2:</span><br><span class=\"line\">[root@localhost ~]# echo 1 &gt; /sys/block/sdc/device/rescan</span><br></pre></td></tr></table></figure>\n\n<p>3.fdisk创建新分区<br>    注意创建新的磁盘后内核可能无法识别到分区表，需要运行partprobe刷新下分区表信息</p>\n<p>4.lvm动态扩容<br>lvm参考：<a href=\"http://www.xiemx.com/2015/11/29/linux动态磁盘管理（lvm）/\">lvm动态磁盘管理</a></p>\n<p>完成后：</p>\n<p><img src=\"/images/img_588031f4a62e1.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_58803215d9370.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/img_58802ffca93b9.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_5880322f10890.png\" alt=\"img\"></p>\n<p>磁盘扩容100G<br>1.vcenter扩容磁盘<br>vcenter增加步骤参考：<a href=\"/2017/01/12/vcenter-expand-disk-to-windows\">vcenter扩容window磁盘</a></p>\n<p>2.Linux需要rescan磁盘，重新读到大小</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法1:</span><br><span class=\"line\">reboot</span><br><span class=\"line\">方法2:</span><br><span class=\"line\">[root@localhost ~]# echo 1 &gt; /sys/block/sdc/device/rescan</span><br></pre></td></tr></table></figure>\n\n<p>3.fdisk创建新分区<br>    注意创建新的磁盘后内核可能无法识别到分区表，需要运行partprobe刷新下分区表信息</p>\n<p>4.lvm动态扩容<br>lvm参考：<a href=\"http://www.xiemx.com/2015/11/29/linux动态磁盘管理（lvm）/\">lvm动态磁盘管理</a></p>\n<p>完成后：</p>\n<p><img src=\"/images/img_588031f4a62e1.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_58803215d9370.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"vcenter扩容window磁盘","published":1,"author":"xiemx","comments":1,"date":"2017-01-11T19:01:41.000Z","_content":"1.vcenter中增加磁盘大小，原本是80G现在扩容100G\n\n![img](/images/img_587733a5ae0ba.png)\n\n2.Linux系统中重新扫描磁盘\n\n![img](/images/img_5877340a43dea.png)\n\n![img](/images/img_5877344e51cd6.png)\n\n ","source":"_posts/vcenter-expand-disk-to-windows.md","raw":"---\nlayout: post\ntitle: vcenter扩容window磁盘\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-01-12 03:01:41\ntags: [ vcenter, windows ]\ncategories:\n    - 'windows'\n    - 'vcenter'\n#permalink: '/2017/01/12/vcenter-expand-disk-to-windows'\n---\n1.vcenter中增加磁盘大小，原本是80G现在扩容100G\n\n![img](/images/img_587733a5ae0ba.png)\n\n2.Linux系统中重新扫描磁盘\n\n![img](/images/img_5877340a43dea.png)\n\n![img](/images/img_5877344e51cd6.png)\n\n ","slug":"vcenter-expand-disk-to-windows","updated":"2019-10-21T06:57:42.593Z","photos":[],"link":"","_id":"ck42dyign00a6u9urk67e5qr1","content":"<p>1.vcenter中增加磁盘大小，原本是80G现在扩容100G</p>\n<p><img src=\"/images/img_587733a5ae0ba.png\" alt=\"img\"></p>\n<p>2.Linux系统中重新扫描磁盘</p>\n<p><img src=\"/images/img_5877340a43dea.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_5877344e51cd6.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.vcenter中增加磁盘大小，原本是80G现在扩容100G</p>\n<p><img src=\"/images/img_587733a5ae0ba.png\" alt=\"img\"></p>\n<p>2.Linux系统中重新扫描磁盘</p>\n<p><img src=\"/images/img_5877340a43dea.png\" alt=\"img\"></p>\n<p><img src=\"/images/img_5877344e51cd6.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"网站支持.apk文件下载的设置方法","published":1,"author":"xiemx","comments":1,"date":"2015-09-28T18:09:43.000Z","_content":"### iis支持.apk文件下载的设置\n\nIIS服务器不能下载.apk文件的原因：iis的默认MIME类型中没有.apk文件，所以无法下载。\n\nIIS服务器不能下载.apk文件的解决办法：既然.apk无法下载是因为没有MIME，那么添加一个MIME类型就可以了。\n\nIIS服务器不能下载.apk文件的解决步骤：\n```\n打开IIS服务管理器，找到服务器，右键-属性，打开IIS服务属性；\n单击MIME类型下的“MIME类型”按钮，打开MIME类型设置窗口；\n单击“新建”，建立新的MIME类型；\n扩展名中填写“.apk”,\nMIME类型中填写apk的MIME类型`application/vnd.android.package-archive`\n\n```\n重启IIS，使设置生效。\n\n### apache支持.apk文件下载的设置\n在Apache安装目录下的`mime.types`加上以下一行语句\n```\napplication/vnd.android.package-archive     apk;\n```\n重启apache即可\n\n### nginx支持.apk文件下载的设置\n\napk 和 .ipa分别是android应用和ios应用的扩展名。\n\n如果在浏览器下载这些文件为后缀的文件时，会自动重命名为zip文件。\n\n当然可以下载后手动修改后缀，依然可以安装。\n\n如果想下载后缀直接就是apk ipa的，可以修改 `/usr/local/nginx/conf`目录下的mime.types\n\n```\napplication/vnd.android.package-archive apk;\napplication/iphone          pxl ipa;\n```\n增加上述配置，重启nginx生效\n","source":"_posts/website-download-apk.md","raw":"---\nlayout: post\ntitle: 网站支持.apk文件下载的设置方法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-09-29 02:09:43\ntags: [ iis, nginx, debug ]\ncategories:\n    - iis\n    - nginx\n---\n### iis支持.apk文件下载的设置\n\nIIS服务器不能下载.apk文件的原因：iis的默认MIME类型中没有.apk文件，所以无法下载。\n\nIIS服务器不能下载.apk文件的解决办法：既然.apk无法下载是因为没有MIME，那么添加一个MIME类型就可以了。\n\nIIS服务器不能下载.apk文件的解决步骤：\n```\n打开IIS服务管理器，找到服务器，右键-属性，打开IIS服务属性；\n单击MIME类型下的“MIME类型”按钮，打开MIME类型设置窗口；\n单击“新建”，建立新的MIME类型；\n扩展名中填写“.apk”,\nMIME类型中填写apk的MIME类型`application/vnd.android.package-archive`\n\n```\n重启IIS，使设置生效。\n\n### apache支持.apk文件下载的设置\n在Apache安装目录下的`mime.types`加上以下一行语句\n```\napplication/vnd.android.package-archive     apk;\n```\n重启apache即可\n\n### nginx支持.apk文件下载的设置\n\napk 和 .ipa分别是android应用和ios应用的扩展名。\n\n如果在浏览器下载这些文件为后缀的文件时，会自动重命名为zip文件。\n\n当然可以下载后手动修改后缀，依然可以安装。\n\n如果想下载后缀直接就是apk ipa的，可以修改 `/usr/local/nginx/conf`目录下的mime.types\n\n```\napplication/vnd.android.package-archive apk;\napplication/iphone          pxl ipa;\n```\n增加上述配置，重启nginx生效\n","slug":"website-download-apk","updated":"2019-10-21T09:02:19.371Z","photos":[],"link":"","_id":"ck42dyigo00aau9urtv6ed9wt","content":"<h3 id=\"iis支持-apk文件下载的设置\"><a href=\"#iis支持-apk文件下载的设置\" class=\"headerlink\" title=\"iis支持.apk文件下载的设置\"></a>iis支持.apk文件下载的设置</h3><p>IIS服务器不能下载.apk文件的原因：iis的默认MIME类型中没有.apk文件，所以无法下载。</p>\n<p>IIS服务器不能下载.apk文件的解决办法：既然.apk无法下载是因为没有MIME，那么添加一个MIME类型就可以了。</p>\n<p>IIS服务器不能下载.apk文件的解决步骤：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开IIS服务管理器，找到服务器，右键-属性，打开IIS服务属性；</span><br><span class=\"line\">单击MIME类型下的“MIME类型”按钮，打开MIME类型设置窗口；</span><br><span class=\"line\">单击“新建”，建立新的MIME类型；</span><br><span class=\"line\">扩展名中填写“.apk”,</span><br><span class=\"line\">MIME类型中填写apk的MIME类型`application/vnd<span class=\"selector-class\">.android</span><span class=\"selector-class\">.package-archive</span>`</span><br></pre></td></tr></table></figure>\n\n<p>重启IIS，使设置生效。</p>\n<h3 id=\"apache支持-apk文件下载的设置\"><a href=\"#apache支持-apk文件下载的设置\" class=\"headerlink\" title=\"apache支持.apk文件下载的设置\"></a>apache支持.apk文件下载的设置</h3><p>在Apache安装目录下的<code>mime.types</code>加上以下一行语句</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">application/vnd.android.package-archive     apk<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<p>重启apache即可</p>\n<h3 id=\"nginx支持-apk文件下载的设置\"><a href=\"#nginx支持-apk文件下载的设置\" class=\"headerlink\" title=\"nginx支持.apk文件下载的设置\"></a>nginx支持.apk文件下载的设置</h3><p>apk 和 .ipa分别是android应用和ios应用的扩展名。</p>\n<p>如果在浏览器下载这些文件为后缀的文件时，会自动重命名为zip文件。</p>\n<p>当然可以下载后手动修改后缀，依然可以安装。</p>\n<p>如果想下载后缀直接就是apk ipa的，可以修改 <code>/usr/local/nginx/conf</code>目录下的mime.types</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">application/vnd.android.package-archive apk<span class=\"comment\">;</span></span><br><span class=\"line\">application/iphone          pxl ipa<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<p>增加上述配置，重启nginx生效</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"iis支持-apk文件下载的设置\"><a href=\"#iis支持-apk文件下载的设置\" class=\"headerlink\" title=\"iis支持.apk文件下载的设置\"></a>iis支持.apk文件下载的设置</h3><p>IIS服务器不能下载.apk文件的原因：iis的默认MIME类型中没有.apk文件，所以无法下载。</p>\n<p>IIS服务器不能下载.apk文件的解决办法：既然.apk无法下载是因为没有MIME，那么添加一个MIME类型就可以了。</p>\n<p>IIS服务器不能下载.apk文件的解决步骤：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开IIS服务管理器，找到服务器，右键-属性，打开IIS服务属性；</span><br><span class=\"line\">单击MIME类型下的“MIME类型”按钮，打开MIME类型设置窗口；</span><br><span class=\"line\">单击“新建”，建立新的MIME类型；</span><br><span class=\"line\">扩展名中填写“.apk”,</span><br><span class=\"line\">MIME类型中填写apk的MIME类型`application/vnd<span class=\"selector-class\">.android</span><span class=\"selector-class\">.package-archive</span>`</span><br></pre></td></tr></table></figure>\n\n<p>重启IIS，使设置生效。</p>\n<h3 id=\"apache支持-apk文件下载的设置\"><a href=\"#apache支持-apk文件下载的设置\" class=\"headerlink\" title=\"apache支持.apk文件下载的设置\"></a>apache支持.apk文件下载的设置</h3><p>在Apache安装目录下的<code>mime.types</code>加上以下一行语句</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">application/vnd.android.package-archive     apk<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<p>重启apache即可</p>\n<h3 id=\"nginx支持-apk文件下载的设置\"><a href=\"#nginx支持-apk文件下载的设置\" class=\"headerlink\" title=\"nginx支持.apk文件下载的设置\"></a>nginx支持.apk文件下载的设置</h3><p>apk 和 .ipa分别是android应用和ios应用的扩展名。</p>\n<p>如果在浏览器下载这些文件为后缀的文件时，会自动重命名为zip文件。</p>\n<p>当然可以下载后手动修改后缀，依然可以安装。</p>\n<p>如果想下载后缀直接就是apk ipa的，可以修改 <code>/usr/local/nginx/conf</code>目录下的mime.types</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">application/vnd.android.package-archive apk<span class=\"comment\">;</span></span><br><span class=\"line\">application/iphone          pxl ipa<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n\n<p>增加上述配置，重启nginx生效</p>\n"},{"layout":"post","title":"window系统文件或目录无法删除解决方法","published":1,"author":"xiemx","comments":1,"date":"2015-10-07T20:10:01.000Z","_content":"1. 新建.BAT批处理文件输入如下命令，然后将要删除的文件拖放到批处理文件图标上即可删除。\n\n```powershell\nDEL /F /A /Q\nRD /S /Q\n```\n\n2. 可利用软件来解锁占用文件的进程推荐unlock\n\n","source":"_posts/window-force-delete-file.md","raw":"---\nlayout: post\ntitle: window系统文件或目录无法删除解决方法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-10-08 04:10:01\ntags: [ windows, debug ]\ncategories:\n    - windows\n#permalink: '/2015/10/08/window-force-delete-file'\n---\n1. 新建.BAT批处理文件输入如下命令，然后将要删除的文件拖放到批处理文件图标上即可删除。\n\n```powershell\nDEL /F /A /Q\nRD /S /Q\n```\n\n2. 可利用软件来解锁占用文件的进程推荐unlock\n\n","slug":"window-force-delete-file","updated":"2019-10-22T07:12:54.182Z","photos":[],"link":"","_id":"ck42dyigq00adu9urbzrs2eiz","content":"<ol>\n<li>新建.BAT批处理文件输入如下命令，然后将要删除的文件拖放到批处理文件图标上即可删除。</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEL /F /A /Q</span><br><span class=\"line\">RD /S /Q</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>可利用软件来解锁占用文件的进程推荐unlock</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>新建.BAT批处理文件输入如下命令，然后将要删除的文件拖放到批处理文件图标上即可删除。</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEL /F /A /Q</span><br><span class=\"line\">RD /S /Q</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>可利用软件来解锁占用文件的进程推荐unlock</li>\n</ol>\n"},{"layout":"post","title":"2003系统控制面板打不开解决办法","published":1,"author":"xiemx","comments":1,"date":"2015-09-28T19:09:32.000Z","_content":"```\n运行regedit打开注册表\n把 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Locale下的两个项修改为\n\"(Default)\"=\"00000409\"\n\"00000804\"=\"1\"\n```","source":"_posts/windows-cant-open-contral.md","raw":"---\nlayout: post\ntitle: 2003系统控制面板打不开解决办法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-09-29 03:09:32\ntags: [ windows, debug ]\ncategories:\n    - windows\n---\n```\n运行regedit打开注册表\n把 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Locale下的两个项修改为\n\"(Default)\"=\"00000409\"\n\"00000804\"=\"1\"\n```","slug":"windows-cant-open-contral","updated":"2019-10-21T09:02:24.150Z","photos":[],"link":"","_id":"ck42dyigr00ahu9urh53qz04s","content":"<figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">运行regedit打开注册表</span><br><span class=\"line\">把 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Locale下的两个项修改为</span><br><span class=\"line\"><span class=\"string\">\"(Default)\"</span>=<span class=\"string\">\"00000409\"</span></span><br><span class=\"line\"><span class=\"string\">\"00000804\"</span>=<span class=\"string\">\"1\"</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">运行regedit打开注册表</span><br><span class=\"line\">把 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Locale下的两个项修改为</span><br><span class=\"line\"><span class=\"string\">\"(Default)\"</span>=<span class=\"string\">\"00000409\"</span></span><br><span class=\"line\"><span class=\"string\">\"00000804\"</span>=<span class=\"string\">\"1\"</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"zabbix微信报警脚本","published":1,"author":"xiemx","comments":1,"date":"2016-06-29T02:06:55.000Z","_content":"\n```python\n#!/usr/bin/python\n\n__author__ = 'xiemx'\n\nimport sys\nimport json,requests\nimport os\nimport logging\n\nclass Weixin(object):\n\n    def get_token(self):\n        CorpID = '-------4fa4'\n        Secret = 'Aew6oxx-----------FaTClkjXlmw_zH'\n        token_url = 'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid={}&corpsecret={}'.format(CorpID, Secret)\n        response = requests.get(token_url, verify=False).content\n        p = json.loads(response)\n        token = p['access_token']\n        return token\n\n    def send_msg(self, user_id, msg):\n        token = self.get_token()\n        url = 'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token={}'.format(token)\n        send_content={\n            \"touser\": user_id,\n            \"msgtype\": \"text\",\n            \"agentid\": \"2\",\n            \"text\": {\n               \"content\": msg\n            },\n            \"safe\":\"0\"\n            }\n        \n        p = requests.post(url, verify=False, data=json.dumps(send_content))\n        print p.content\n        logging.debug(\"weixin send success\")\n\nif __name__ == \"__main__\":\n    user_id = sys.argv[1]\n    msg = sys.argv[2] + '\\n' + sys.argv[3]\n    weixin = Weixin()\n    weixin.send_msg(user_id, msg)\n```","source":"_posts/zabbix-alert-to-wechat-script.md","raw":"---\nlayout: post\ntitle: zabbix微信报警脚本\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-06-29 10:06:55\ntags: [ ]\ncategories:\n    - zabbix\n#permalink: '/2016/06/29/zabbix-alert-to-wechat-script'\n---\n\n```python\n#!/usr/bin/python\n\n__author__ = 'xiemx'\n\nimport sys\nimport json,requests\nimport os\nimport logging\n\nclass Weixin(object):\n\n    def get_token(self):\n        CorpID = '-------4fa4'\n        Secret = 'Aew6oxx-----------FaTClkjXlmw_zH'\n        token_url = 'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid={}&corpsecret={}'.format(CorpID, Secret)\n        response = requests.get(token_url, verify=False).content\n        p = json.loads(response)\n        token = p['access_token']\n        return token\n\n    def send_msg(self, user_id, msg):\n        token = self.get_token()\n        url = 'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token={}'.format(token)\n        send_content={\n            \"touser\": user_id,\n            \"msgtype\": \"text\",\n            \"agentid\": \"2\",\n            \"text\": {\n               \"content\": msg\n            },\n            \"safe\":\"0\"\n            }\n        \n        p = requests.post(url, verify=False, data=json.dumps(send_content))\n        print p.content\n        logging.debug(\"weixin send success\")\n\nif __name__ == \"__main__\":\n    user_id = sys.argv[1]\n    msg = sys.argv[2] + '\\n' + sys.argv[3]\n    weixin = Weixin()\n    weixin.send_msg(user_id, msg)\n```","slug":"zabbix-alert-to-wechat-script","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyigt00alu9urjpn5t3ml","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"></span><br><span class=\"line\">__author__ = <span class=\"string\">'xiemx'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> json,requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Weixin</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_token</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        CorpID = <span class=\"string\">'-------4fa4'</span></span><br><span class=\"line\">        Secret = <span class=\"string\">'Aew6oxx-----------FaTClkjXlmw_zH'</span></span><br><span class=\"line\">        token_url = <span class=\"string\">'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&#123;&#125;&amp;corpsecret=&#123;&#125;'</span>.format(CorpID, Secret)</span><br><span class=\"line\">        response = requests.get(token_url, verify=<span class=\"literal\">False</span>).content</span><br><span class=\"line\">        p = json.loads(response)</span><br><span class=\"line\">        token = p[<span class=\"string\">'access_token'</span>]</span><br><span class=\"line\">        <span class=\"keyword\">return</span> token</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_msg</span><span class=\"params\">(self, user_id, msg)</span>:</span></span><br><span class=\"line\">        token = self.get_token()</span><br><span class=\"line\">        url = <span class=\"string\">'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#123;&#125;'</span>.format(token)</span><br><span class=\"line\">        send_content=&#123;</span><br><span class=\"line\">            <span class=\"string\">\"touser\"</span>: user_id,</span><br><span class=\"line\">            <span class=\"string\">\"msgtype\"</span>: <span class=\"string\">\"text\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"agentid\"</span>: <span class=\"string\">\"2\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"text\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"string\">\"content\"</span>: msg</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">\"safe\"</span>:<span class=\"string\">\"0\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        p = requests.post(url, verify=<span class=\"literal\">False</span>, data=json.dumps(send_content))</span><br><span class=\"line\">        <span class=\"keyword\">print</span> p.content</span><br><span class=\"line\">        logging.debug(<span class=\"string\">\"weixin send success\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    user_id = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">    msg = sys.argv[<span class=\"number\">2</span>] + <span class=\"string\">'\\n'</span> + sys.argv[<span class=\"number\">3</span>]</span><br><span class=\"line\">    weixin = Weixin()</span><br><span class=\"line\">    weixin.send_msg(user_id, msg)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"></span><br><span class=\"line\">__author__ = <span class=\"string\">'xiemx'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> json,requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Weixin</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_token</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        CorpID = <span class=\"string\">'-------4fa4'</span></span><br><span class=\"line\">        Secret = <span class=\"string\">'Aew6oxx-----------FaTClkjXlmw_zH'</span></span><br><span class=\"line\">        token_url = <span class=\"string\">'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&#123;&#125;&amp;corpsecret=&#123;&#125;'</span>.format(CorpID, Secret)</span><br><span class=\"line\">        response = requests.get(token_url, verify=<span class=\"literal\">False</span>).content</span><br><span class=\"line\">        p = json.loads(response)</span><br><span class=\"line\">        token = p[<span class=\"string\">'access_token'</span>]</span><br><span class=\"line\">        <span class=\"keyword\">return</span> token</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_msg</span><span class=\"params\">(self, user_id, msg)</span>:</span></span><br><span class=\"line\">        token = self.get_token()</span><br><span class=\"line\">        url = <span class=\"string\">'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#123;&#125;'</span>.format(token)</span><br><span class=\"line\">        send_content=&#123;</span><br><span class=\"line\">            <span class=\"string\">\"touser\"</span>: user_id,</span><br><span class=\"line\">            <span class=\"string\">\"msgtype\"</span>: <span class=\"string\">\"text\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"agentid\"</span>: <span class=\"string\">\"2\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"text\"</span>: &#123;</span><br><span class=\"line\">               <span class=\"string\">\"content\"</span>: msg</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">\"safe\"</span>:<span class=\"string\">\"0\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        p = requests.post(url, verify=<span class=\"literal\">False</span>, data=json.dumps(send_content))</span><br><span class=\"line\">        <span class=\"keyword\">print</span> p.content</span><br><span class=\"line\">        logging.debug(<span class=\"string\">\"weixin send success\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    user_id = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">    msg = sys.argv[<span class=\"number\">2</span>] + <span class=\"string\">'\\n'</span> + sys.argv[<span class=\"number\">3</span>]</span><br><span class=\"line\">    weixin = Weixin()</span><br><span class=\"line\">    weixin.send_msg(user_id, msg)</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"2003系统8G内存条只能识别3G解决办法","published":1,"author":"xiemx","comments":1,"date":"2015-09-28T18:09:15.000Z","_content":"#### 现象\n32位的2003系统的机器，8G内存条只能识别3G，这种情况需要进系统进行修改。具体修改如下：\nwin2003 32位企业版理论上能支持最大32G内存，但有些机器系统只认3.25G\n#### 解决办法：\n```\nC：\\boot.ini 修改里面的命令（\\boot.ini有可能被隐藏）\ndefault=multi(0)disk(0)rdisk(0)partition(2)\\WINDOWS\n[operating systems]\n(0)disk(0)rdisk(0)partition(2)\\WINDOWS=Windows Server 2003, Enterprise&quot; /fastdetect /PAE\n```","source":"_posts/windows-server-memory-limit.md","raw":"---\nlayout: post\ntitle: 2003系统8G内存条只能识别3G解决办法\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-09-29 02:09:15\ntags: [ windows, debug ]\ncategories:\n    - windows\n---\n#### 现象\n32位的2003系统的机器，8G内存条只能识别3G，这种情况需要进系统进行修改。具体修改如下：\nwin2003 32位企业版理论上能支持最大32G内存，但有些机器系统只认3.25G\n#### 解决办法：\n```\nC：\\boot.ini 修改里面的命令（\\boot.ini有可能被隐藏）\ndefault=multi(0)disk(0)rdisk(0)partition(2)\\WINDOWS\n[operating systems]\n(0)disk(0)rdisk(0)partition(2)\\WINDOWS=Windows Server 2003, Enterprise&quot; /fastdetect /PAE\n```","slug":"windows-server-memory-limit","updated":"2019-10-21T09:02:29.360Z","photos":[],"link":"","_id":"ck42dyigv00apu9urxqhrg3cs","content":"<h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><p>32位的2003系统的机器，8G内存条只能识别3G，这种情况需要进系统进行修改。具体修改如下：<br>win2003 32位企业版理论上能支持最大32G内存，但有些机器系统只认3.25G</p>\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C：\\boot.ini 修改里面的命令（\\boot.ini有可能被隐藏）</span><br><span class=\"line\"><span class=\"attribute\">default</span>=multi(0)disk(0)rdisk(0)partition(2)\\WINDOWS</span><br><span class=\"line\">[operating systems]</span><br><span class=\"line\">(0)disk(0)rdisk(0)partition(2)\\<span class=\"attribute\">WINDOWS</span>=Windows<span class=\"built_in\"> Server </span>2003, Enterprise&amp;quot; /fastdetect /PAE</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h4><p>32位的2003系统的机器，8G内存条只能识别3G，这种情况需要进系统进行修改。具体修改如下：<br>win2003 32位企业版理论上能支持最大32G内存，但有些机器系统只认3.25G</p>\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C：\\boot.ini 修改里面的命令（\\boot.ini有可能被隐藏）</span><br><span class=\"line\"><span class=\"attribute\">default</span>=multi(0)disk(0)rdisk(0)partition(2)\\WINDOWS</span><br><span class=\"line\">[operating systems]</span><br><span class=\"line\">(0)disk(0)rdisk(0)partition(2)\\<span class=\"attribute\">WINDOWS</span>=Windows<span class=\"built_in\"> Server </span>2003, Enterprise&amp;quot; /fastdetect /PAE</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"zabbix distrubuted monitor","published":1,"author":"xiemx","comments":1,"date":"2017-09-20T18:09:37.000Z","_content":"\nzabbix 分布式监控2种模式\n* node模式\n* proxy模式\n\nPS: node模式官方在2.4版本之后已经弃用，重点讨论proxy模式\n\n### proxy 模式\n\nZabbix proxy可以代替Zabbix服务器收集性能和可用性数据，一个代理可以承担一些收集数据的负载。使用代理是实现集中式和分布式监控的最简单方法。proxy需要使用单独的数据库来缓存agent数据，在发给server防止出现因网络问题造成的数据丢失。zabbix proxy只是一个数据收集组件，不会触发任何trigger／alert.\n\n![img](/images/img_59c35cd9ab71b.png)\n\n### 使用场景\n\n- Monitor remote locations\n- Monitor locations having unreliable communications\n- Offload the Zabbix server when monitoring thousands of devices\n- Simplify the maintenance of distributed monitoring\n\n### 安装配置\n\n```shell\n#同安装zabbix server 类似，不赘述,需要其他功能也可以在编译时自行开启。\n\n./configure --prefix=/opt/zabbix_proxy/ --enable-proxy --with-mysql --with-libcurl\nmake install\n\ncreate databases zabbix\ngrant all to zabbix.* to zabbix@'%' identified by \"zabbix\";\n#导入schema.sql\n\n#配置文件中hostname需要和zabbix上添加的保持一致\n#其它参考server设置参数\n\n#ps：设置适当的配置同步时间，默认一小时。建议设置短一点，这样如果有新机器加入配置修改都可以快速同步并监控。\nConfigFrequency=600\n```\n\nzabbix server 配置\n\n![img](/images/img_59c35d1d930c1.png)\n\n添加主机时选择指定的proxy\n\n![img](/images/img_59c35d389b1c5.png)","source":"_posts/zabbix-distrubuted-monitor.md","raw":"---\nlayout: post\ntitle: zabbix distrubuted monitor\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-09-21 02:09:37\ntags: [ zabbix ]\ncategories:\n    - zabbix\n#permalink: /2017/09/21/zabbix-distrubuted-monitor\n---\n\nzabbix 分布式监控2种模式\n* node模式\n* proxy模式\n\nPS: node模式官方在2.4版本之后已经弃用，重点讨论proxy模式\n\n### proxy 模式\n\nZabbix proxy可以代替Zabbix服务器收集性能和可用性数据，一个代理可以承担一些收集数据的负载。使用代理是实现集中式和分布式监控的最简单方法。proxy需要使用单独的数据库来缓存agent数据，在发给server防止出现因网络问题造成的数据丢失。zabbix proxy只是一个数据收集组件，不会触发任何trigger／alert.\n\n![img](/images/img_59c35cd9ab71b.png)\n\n### 使用场景\n\n- Monitor remote locations\n- Monitor locations having unreliable communications\n- Offload the Zabbix server when monitoring thousands of devices\n- Simplify the maintenance of distributed monitoring\n\n### 安装配置\n\n```shell\n#同安装zabbix server 类似，不赘述,需要其他功能也可以在编译时自行开启。\n\n./configure --prefix=/opt/zabbix_proxy/ --enable-proxy --with-mysql --with-libcurl\nmake install\n\ncreate databases zabbix\ngrant all to zabbix.* to zabbix@'%' identified by \"zabbix\";\n#导入schema.sql\n\n#配置文件中hostname需要和zabbix上添加的保持一致\n#其它参考server设置参数\n\n#ps：设置适当的配置同步时间，默认一小时。建议设置短一点，这样如果有新机器加入配置修改都可以快速同步并监控。\nConfigFrequency=600\n```\n\nzabbix server 配置\n\n![img](/images/img_59c35d1d930c1.png)\n\n添加主机时选择指定的proxy\n\n![img](/images/img_59c35d389b1c5.png)","slug":"zabbix-distrubuted-monitor","updated":"2019-10-21T06:57:42.570Z","photos":[],"link":"","_id":"ck42dyigw00asu9ur59k1lnri","content":"<p>zabbix 分布式监控2种模式</p>\n<ul>\n<li>node模式</li>\n<li>proxy模式</li>\n</ul>\n<p>PS: node模式官方在2.4版本之后已经弃用，重点讨论proxy模式</p>\n<h3 id=\"proxy-模式\"><a href=\"#proxy-模式\" class=\"headerlink\" title=\"proxy 模式\"></a>proxy 模式</h3><p>Zabbix proxy可以代替Zabbix服务器收集性能和可用性数据，一个代理可以承担一些收集数据的负载。使用代理是实现集中式和分布式监控的最简单方法。proxy需要使用单独的数据库来缓存agent数据，在发给server防止出现因网络问题造成的数据丢失。zabbix proxy只是一个数据收集组件，不会触发任何trigger／alert.</p>\n<p><img src=\"/images/img_59c35cd9ab71b.png\" alt=\"img\"></p>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><ul>\n<li>Monitor remote locations</li>\n<li>Monitor locations having unreliable communications</li>\n<li>Offload the Zabbix server when monitoring thousands of devices</li>\n<li>Simplify the maintenance of distributed monitoring</li>\n</ul>\n<h3 id=\"安装配置\"><a href=\"#安装配置\" class=\"headerlink\" title=\"安装配置\"></a>安装配置</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">同安装zabbix server 类似，不赘述,需要其他功能也可以在编译时自行开启。</span></span><br><span class=\"line\"></span><br><span class=\"line\">./configure --prefix=/opt/zabbix_proxy/ --enable-proxy --with-mysql --with-libcurl</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\">create databases zabbix</span><br><span class=\"line\">grant all to zabbix.* to zabbix@'%' identified by \"zabbix\";</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">导入schema.sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置文件中hostname需要和zabbix上添加的保持一致</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">其它参考server设置参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ps：设置适当的配置同步时间，默认一小时。建议设置短一点，这样如果有新机器加入配置修改都可以快速同步并监控。</span></span><br><span class=\"line\">ConfigFrequency=600</span><br></pre></td></tr></table></figure>\n\n<p>zabbix server 配置</p>\n<p><img src=\"/images/img_59c35d1d930c1.png\" alt=\"img\"></p>\n<p>添加主机时选择指定的proxy</p>\n<p><img src=\"/images/img_59c35d389b1c5.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>zabbix 分布式监控2种模式</p>\n<ul>\n<li>node模式</li>\n<li>proxy模式</li>\n</ul>\n<p>PS: node模式官方在2.4版本之后已经弃用，重点讨论proxy模式</p>\n<h3 id=\"proxy-模式\"><a href=\"#proxy-模式\" class=\"headerlink\" title=\"proxy 模式\"></a>proxy 模式</h3><p>Zabbix proxy可以代替Zabbix服务器收集性能和可用性数据，一个代理可以承担一些收集数据的负载。使用代理是实现集中式和分布式监控的最简单方法。proxy需要使用单独的数据库来缓存agent数据，在发给server防止出现因网络问题造成的数据丢失。zabbix proxy只是一个数据收集组件，不会触发任何trigger／alert.</p>\n<p><img src=\"/images/img_59c35cd9ab71b.png\" alt=\"img\"></p>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><ul>\n<li>Monitor remote locations</li>\n<li>Monitor locations having unreliable communications</li>\n<li>Offload the Zabbix server when monitoring thousands of devices</li>\n<li>Simplify the maintenance of distributed monitoring</li>\n</ul>\n<h3 id=\"安装配置\"><a href=\"#安装配置\" class=\"headerlink\" title=\"安装配置\"></a>安装配置</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">同安装zabbix server 类似，不赘述,需要其他功能也可以在编译时自行开启。</span></span><br><span class=\"line\"></span><br><span class=\"line\">./configure --prefix=/opt/zabbix_proxy/ --enable-proxy --with-mysql --with-libcurl</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br><span class=\"line\">create databases zabbix</span><br><span class=\"line\">grant all to zabbix.* to zabbix@'%' identified by \"zabbix\";</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">导入schema.sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置文件中hostname需要和zabbix上添加的保持一致</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">其它参考server设置参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">ps：设置适当的配置同步时间，默认一小时。建议设置短一点，这样如果有新机器加入配置修改都可以快速同步并监控。</span></span><br><span class=\"line\">ConfigFrequency=600</span><br></pre></td></tr></table></figure>\n\n<p>zabbix server 配置</p>\n<p><img src=\"/images/img_59c35d1d930c1.png\" alt=\"img\"></p>\n<p>添加主机时选择指定的proxy</p>\n<p><img src=\"/images/img_59c35d389b1c5.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"zabbix Less than 25% free in the configuration cache解决","published":1,"author":"xiemx","comments":1,"date":"2016-08-08T19:08:20.000Z","_content":"\n在zabbix server默认配置下，出现告警\n\n```markdown\nLess than 25% free in the configuration cache\n```\n可增加zabbix配置缓存解决\n\n```shell\nvim zabbix_server.conf\n##将缓存从8M提升到16M，可以调到最高8G\nCacheSize=16M\n\n##重启zabbix server\nservice zabbix_server restart\n```","source":"_posts/zabbix-less-than-25-free-in-the-configuration-cache.md","raw":"---\nlayout: post\ntitle: 'zabbix Less than 25% free in the configuration cache解决'\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-08-09 03:08:20\ntags: [ zabbix, issue ]\ncategories:\n    - zabbix\n#permalink: '/2016/08/09/zabbix-less-than-25-free-in-the-configuration-cache'\n---\n\n在zabbix server默认配置下，出现告警\n\n```markdown\nLess than 25% free in the configuration cache\n```\n可增加zabbix配置缓存解决\n\n```shell\nvim zabbix_server.conf\n##将缓存从8M提升到16M，可以调到最高8G\nCacheSize=16M\n\n##重启zabbix server\nservice zabbix_server restart\n```","slug":"zabbix-less-than-25-free-in-the-configuration-cache","updated":"2019-10-21T06:57:42.921Z","photos":[],"link":"","_id":"ck42dyigx00axu9ur34j2wuy5","content":"<p>在zabbix server默认配置下，出现告警</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Less than 25% free in the configuration cache</span><br></pre></td></tr></table></figure>\n\n<p>可增加zabbix配置缓存解决</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim zabbix_server.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#将缓存从8M提升到16M，可以调到最高8G</span></span></span><br><span class=\"line\">CacheSize=16M</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#重启zabbix server</span></span></span><br><span class=\"line\">service zabbix_server restart</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>在zabbix server默认配置下，出现告警</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Less than 25% free in the configuration cache</span><br></pre></td></tr></table></figure>\n\n<p>可增加zabbix配置缓存解决</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim zabbix_server.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#将缓存从8M提升到16M，可以调到最高8G</span></span></span><br><span class=\"line\">CacheSize=16M</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#重启zabbix server</span></span></span><br><span class=\"line\">service zabbix_server restart</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"zabbix监控memcache","published":1,"author":"xiemx","comments":1,"date":"2016-12-18T21:12:02.000Z","_content":"### script\n\n```shell\ncat memcached.sh\n\n#!/bin/bash\nport=$1\nmem_conn=\"/bin/nc 127.0.0.1 $port\"\n\ncase $2 in \n  conn)\n    conn=`echo -e \"stats\\nquit\"|$mem_conn|grep curr_connections | awk '{print $3}' `\n    echo $conn\n    ;;\n  bytes)\n    bytes=`echo -e \"stats\\nquit\"|$mem_conn|grep bytes|awk '{print $3}'`\n    echo `echo $bytes |tr -d \" \"`\n    ;;\n  cmd_get)\n    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}' `\n    echo $cmd_get\n    ;;\n  cmd_set)\n    cmd_set=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    echo $cmd_set\n    ;;\n  get_hits)\n    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '{print $3}' `\n    echo $get_hits\n    ;;\n  read_qps_sec)\n    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}'|tr -d '\\r' `\n    sleep 1\n    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}'|tr -d '\\r' `\n    count=` expr $count2 - $count1`\n    echo $count\n    ;;\n  write_qps_sec)\n    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    sleep 1\n    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    count=`echo $count2 $count1|awk '{printf($1-$2)}'`\n    echo $count\n    ;;\n  \n  hit_target)\n    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}' `\n    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '{print $3}' `\n    hit_target=`echo $get_hits $cmd_get|awk '{printf($1*100/$2)}'`\n    echo $hit_target\n    ;;\n  *)\n    echo \"please input conn|bytes|cmd_get|cmd_set|get_hits|read_qps_sec|write_qps_sec|hit_target\"\n    ;;\nesac\n```\n\n### 配置文件放到zabbix的conf.d/目录下，\n\n```shell\ncat zabbix_memcache.conf\nUserParameter=memcache[*],/opt/script/zabbix/memcached.sh $1 $2\n```","source":"_posts/zabbix-monitor-memcache.md","raw":"---\nlayout: post\ntitle: zabbix监控memcache\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-12-19 05:12:02\ntags: [ zabbix, monitor, memcache ]\ncategories:\n    - zabbix\n#permalink: '/2016/12/19/zabbix-monitor-memcache'\n---\n### script\n\n```shell\ncat memcached.sh\n\n#!/bin/bash\nport=$1\nmem_conn=\"/bin/nc 127.0.0.1 $port\"\n\ncase $2 in \n  conn)\n    conn=`echo -e \"stats\\nquit\"|$mem_conn|grep curr_connections | awk '{print $3}' `\n    echo $conn\n    ;;\n  bytes)\n    bytes=`echo -e \"stats\\nquit\"|$mem_conn|grep bytes|awk '{print $3}'`\n    echo `echo $bytes |tr -d \" \"`\n    ;;\n  cmd_get)\n    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}' `\n    echo $cmd_get\n    ;;\n  cmd_set)\n    cmd_set=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    echo $cmd_set\n    ;;\n  get_hits)\n    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '{print $3}' `\n    echo $get_hits\n    ;;\n  read_qps_sec)\n    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}'|tr -d '\\r' `\n    sleep 1\n    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}'|tr -d '\\r' `\n    count=` expr $count2 - $count1`\n    echo $count\n    ;;\n  write_qps_sec)\n    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    sleep 1\n    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    count=`echo $count2 $count1|awk '{printf($1-$2)}'`\n    echo $count\n    ;;\n  \n  hit_target)\n    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}' `\n    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '{print $3}' `\n    hit_target=`echo $get_hits $cmd_get|awk '{printf($1*100/$2)}'`\n    echo $hit_target\n    ;;\n  *)\n    echo \"please input conn|bytes|cmd_get|cmd_set|get_hits|read_qps_sec|write_qps_sec|hit_target\"\n    ;;\nesac\n```\n\n### 配置文件放到zabbix的conf.d/目录下，\n\n```shell\ncat zabbix_memcache.conf\nUserParameter=memcache[*],/opt/script/zabbix/memcached.sh $1 $2\n```","slug":"zabbix-monitor-memcache","updated":"2019-10-21T06:57:42.702Z","photos":[],"link":"","_id":"ck42dyigx00b0u9urcrqs040f","content":"<h3 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat memcached.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">port=$1</span><br><span class=\"line\">mem_conn=\"/bin/nc 127.0.0.1 $port\"</span><br><span class=\"line\"></span><br><span class=\"line\">case $2 in </span><br><span class=\"line\">  conn)</span><br><span class=\"line\">    conn=`echo -e \"stats\\nquit\"|$mem_conn|grep curr_connections | awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $conn</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  bytes)</span><br><span class=\"line\">    bytes=`echo -e \"stats\\nquit\"|$mem_conn|grep bytes|awk '&#123;print $3&#125;'`</span><br><span class=\"line\">    echo `echo $bytes |tr -d \" \"`</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  cmd_get)</span><br><span class=\"line\">    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $cmd_get</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  cmd_set)</span><br><span class=\"line\">    cmd_set=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $cmd_set</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  get_hits)</span><br><span class=\"line\">    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $get_hits</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  read_qps_sec)</span><br><span class=\"line\">    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;'|tr -d '\\r' `</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;'|tr -d '\\r' `</span><br><span class=\"line\">    count=` expr $count2 - $count1`</span><br><span class=\"line\">    echo $count</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  write_qps_sec)</span><br><span class=\"line\">    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    count=`echo $count2 $count1|awk '&#123;printf($1-$2)&#125;'`</span><br><span class=\"line\">    echo $count</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  hit_target)</span><br><span class=\"line\">    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    hit_target=`echo $get_hits $cmd_get|awk '&#123;printf($1*100/$2)&#125;'`</span><br><span class=\"line\">    echo $hit_target</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">    echo \"please input conn|bytes|cmd_get|cmd_set|get_hits|read_qps_sec|write_qps_sec|hit_target\"</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置文件放到zabbix的conf-d-目录下，\"><a href=\"#配置文件放到zabbix的conf-d-目录下，\" class=\"headerlink\" title=\"配置文件放到zabbix的conf.d/目录下，\"></a>配置文件放到zabbix的conf.d/目录下，</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat zabbix_memcache.conf</span><br><span class=\"line\">UserParameter=memcache[*],/opt/script/zabbix/memcached.sh $1 $2</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat memcached.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">port=$1</span><br><span class=\"line\">mem_conn=\"/bin/nc 127.0.0.1 $port\"</span><br><span class=\"line\"></span><br><span class=\"line\">case $2 in </span><br><span class=\"line\">  conn)</span><br><span class=\"line\">    conn=`echo -e \"stats\\nquit\"|$mem_conn|grep curr_connections | awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $conn</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  bytes)</span><br><span class=\"line\">    bytes=`echo -e \"stats\\nquit\"|$mem_conn|grep bytes|awk '&#123;print $3&#125;'`</span><br><span class=\"line\">    echo `echo $bytes |tr -d \" \"`</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  cmd_get)</span><br><span class=\"line\">    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $cmd_get</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  cmd_set)</span><br><span class=\"line\">    cmd_set=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $cmd_set</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  get_hits)</span><br><span class=\"line\">    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    echo $get_hits</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  read_qps_sec)</span><br><span class=\"line\">    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;'|tr -d '\\r' `</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;'|tr -d '\\r' `</span><br><span class=\"line\">    count=` expr $count2 - $count1`</span><br><span class=\"line\">    echo $count</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  write_qps_sec)</span><br><span class=\"line\">    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    count=`echo $count2 $count1|awk '&#123;printf($1-$2)&#125;'`</span><br><span class=\"line\">    echo $count</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  hit_target)</span><br><span class=\"line\">    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '&#123;print $3&#125;' `</span><br><span class=\"line\">    hit_target=`echo $get_hits $cmd_get|awk '&#123;printf($1*100/$2)&#125;'`</span><br><span class=\"line\">    echo $hit_target</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  *)</span><br><span class=\"line\">    echo \"please input conn|bytes|cmd_get|cmd_set|get_hits|read_qps_sec|write_qps_sec|hit_target\"</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置文件放到zabbix的conf-d-目录下，\"><a href=\"#配置文件放到zabbix的conf-d-目录下，\" class=\"headerlink\" title=\"配置文件放到zabbix的conf.d/目录下，\"></a>配置文件放到zabbix的conf.d/目录下，</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat zabbix_memcache.conf</span><br><span class=\"line\">UserParameter=memcache[*],/opt/script/zabbix/memcached.sh $1 $2</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"zabbix监控mongo","published":1,"author":"xiemx","comments":1,"date":"2016-12-18T21:12:27.000Z","_content":"可配合zabbix自动发现，自动监控服务\n### script\n\n```shell\ncat mongo.sh\n\n#!/bin/bash\n\ncase $1 in \n#  use_memory)\n#    used_memory=`echo \"db.serverStatus().mem\"|mongo admin|grep resident|awk -F':' '{print $2}'|tr -d \" ,\"`\n#    echo $used_memory\n#    ;;\n#  \n#  use_vmemory)\n#    used_vmemory=`echo \"db.serverStatus().mem\"|mongo admin|grep virtual|awk -F':' '{print $2}'|tr -d \" ,\"`\n#    echo $used_vmemory\n#    ;;\n#  \n#  used_conn)\n#    used_conn=`echo \"db.serverStatus().connections\"|mongo admin|grep current|awk -F':' '{print $2}'|tr -d ' ,'`\n#    echo $used_conn\n#    ;;\n#  \n#  available_conn)\n#    available=`echo \"db.serverStatus().connections\"|mongo admin|grep available|awk -F':' '{print $2}'|tr -d ' ,'`\n#    echo $availabe\n#  ;;\n  \n  insert)\n    insert=`mongostat -n1 | tail -n 1|awk '{print $1}'|tr -d ' *,'`\n    echo $insert\n    ;;\n  \n  query)\n    query=`mongostat -n1 | tail -n 1|awk '{print $2}'|tr -d ' *,'`\n    echo $query\n    ;;\n  \n  update)\n    update=`mongostat -n1 | tail -n 1|awk '{print $3}'|tr -d ' *,'`\n    echo $update\n    ;;\n  \n  delete)\n    delete=`mongostat -n1 | tail -n 1|awk '{print $4}'|tr -d ' *,'`\n    echo $delete\n    ;;\n  getmore)\n    getmore=`mongostat -n1 | tail -n 1|awk '{print $5}'|tr -d ' *,'`  \n    echo $getmore\n    ;;\n  command)\n    command=`mongostat -n1 | tail -n 1|awk '{print $6}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $command\n    ;;\n  vsize)\n    vsize=`mongostat -n1 | tail -n 1|awk '{print $10}'|tr -d ' *,G'`\n    echo $vsize\n    ;;\n  res)\n    res=`mongostat -n1 | tail -n 1|awk '{print $11}'|tr -d ' *,G'`\n    echo $res\n    ;;\n  qr)\n    qr=`mongostat -n1 | tail -n 1|awk '{print $12}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $qr\n    ;;\n  qw)\n    qw=`mongostat -n1 | tail -n 1|awk '{print $12}'|awk -F'|' '{print $2}'|tr -d ' *,'`\n    echo $qw\n    ;;\n  ar)\n    ar=`mongostat -n1 | tail -n 1|awk '{print $13}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $ar\n    ;;\n  aw)\n    aw=`mongostat -n1 | tail -n 1|awk '{print $13}'|awk -F'|' '{print $2}'|tr -d ' *,'`\n    echo $aw\n    ;;\n  conn)\n    conn=`mongostat -n1 | tail -n 1|awk '{print $16}'|tr -d ' *,'`\n    echo $conn\n    ;;\n\n  *)\n    echo \"please input  insert|query|update|delete\"\n    ;;\nesac\n```\n\n\n### conf配置文件\n\n```shell\ncat zabbix_mongo.conf\nUserParameter=mongo[*],/opt/script/zabbix/mongo.sh $1\n```","source":"_posts/zabbix-monitor-mongo.md","raw":"---\nlayout: post\ntitle: zabbix监控mongo\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-12-19 05:12:27\ntags: [ zabbix, mongo ]\ncategories:\n    - zabbix\n#permalink: '/2016/12/19/zabbix-monitor-mongo'\n---\n可配合zabbix自动发现，自动监控服务\n### script\n\n```shell\ncat mongo.sh\n\n#!/bin/bash\n\ncase $1 in \n#  use_memory)\n#    used_memory=`echo \"db.serverStatus().mem\"|mongo admin|grep resident|awk -F':' '{print $2}'|tr -d \" ,\"`\n#    echo $used_memory\n#    ;;\n#  \n#  use_vmemory)\n#    used_vmemory=`echo \"db.serverStatus().mem\"|mongo admin|grep virtual|awk -F':' '{print $2}'|tr -d \" ,\"`\n#    echo $used_vmemory\n#    ;;\n#  \n#  used_conn)\n#    used_conn=`echo \"db.serverStatus().connections\"|mongo admin|grep current|awk -F':' '{print $2}'|tr -d ' ,'`\n#    echo $used_conn\n#    ;;\n#  \n#  available_conn)\n#    available=`echo \"db.serverStatus().connections\"|mongo admin|grep available|awk -F':' '{print $2}'|tr -d ' ,'`\n#    echo $availabe\n#  ;;\n  \n  insert)\n    insert=`mongostat -n1 | tail -n 1|awk '{print $1}'|tr -d ' *,'`\n    echo $insert\n    ;;\n  \n  query)\n    query=`mongostat -n1 | tail -n 1|awk '{print $2}'|tr -d ' *,'`\n    echo $query\n    ;;\n  \n  update)\n    update=`mongostat -n1 | tail -n 1|awk '{print $3}'|tr -d ' *,'`\n    echo $update\n    ;;\n  \n  delete)\n    delete=`mongostat -n1 | tail -n 1|awk '{print $4}'|tr -d ' *,'`\n    echo $delete\n    ;;\n  getmore)\n    getmore=`mongostat -n1 | tail -n 1|awk '{print $5}'|tr -d ' *,'`  \n    echo $getmore\n    ;;\n  command)\n    command=`mongostat -n1 | tail -n 1|awk '{print $6}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $command\n    ;;\n  vsize)\n    vsize=`mongostat -n1 | tail -n 1|awk '{print $10}'|tr -d ' *,G'`\n    echo $vsize\n    ;;\n  res)\n    res=`mongostat -n1 | tail -n 1|awk '{print $11}'|tr -d ' *,G'`\n    echo $res\n    ;;\n  qr)\n    qr=`mongostat -n1 | tail -n 1|awk '{print $12}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $qr\n    ;;\n  qw)\n    qw=`mongostat -n1 | tail -n 1|awk '{print $12}'|awk -F'|' '{print $2}'|tr -d ' *,'`\n    echo $qw\n    ;;\n  ar)\n    ar=`mongostat -n1 | tail -n 1|awk '{print $13}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $ar\n    ;;\n  aw)\n    aw=`mongostat -n1 | tail -n 1|awk '{print $13}'|awk -F'|' '{print $2}'|tr -d ' *,'`\n    echo $aw\n    ;;\n  conn)\n    conn=`mongostat -n1 | tail -n 1|awk '{print $16}'|tr -d ' *,'`\n    echo $conn\n    ;;\n\n  *)\n    echo \"please input  insert|query|update|delete\"\n    ;;\nesac\n```\n\n\n### conf配置文件\n\n```shell\ncat zabbix_mongo.conf\nUserParameter=mongo[*],/opt/script/zabbix/mongo.sh $1\n```","slug":"zabbix-monitor-mongo","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyigz00b5u9ur8g0q60y9","content":"<p>可配合zabbix自动发现，自动监控服务</p>\n<h3 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat mongo.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">case $1 in </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  use_memory)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    used_memory=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().mem\"</span>|mongo admin|grep resident|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">\" ,\"</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$used_memory</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    ;;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  use_vmemory)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    used_vmemory=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().mem\"</span>|mongo admin|grep virtual|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">\" ,\"</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$used_vmemory</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    ;;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  used_conn)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    used_conn=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().connections\"</span>|mongo admin|grep current|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">' ,'</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$used_conn</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    ;;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  available_conn)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    available=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().connections\"</span>|mongo admin|grep available|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">' ,'</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$availabe</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  ;;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  insert)</span><br><span class=\"line\">    insert=`mongostat -n1 | tail -n 1|awk '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $insert</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  query)</span><br><span class=\"line\">    query=`mongostat -n1 | tail -n 1|awk '&#123;print $2&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $query</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  update)</span><br><span class=\"line\">    update=`mongostat -n1 | tail -n 1|awk '&#123;print $3&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $update</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  delete)</span><br><span class=\"line\">    delete=`mongostat -n1 | tail -n 1|awk '&#123;print $4&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $delete</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  getmore)</span><br><span class=\"line\">    getmore=`mongostat -n1 | tail -n 1|awk '&#123;print $5&#125;'|tr -d ' *,'`  </span><br><span class=\"line\">    echo $getmore</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  command)</span><br><span class=\"line\">    command=`mongostat -n1 | tail -n 1|awk '&#123;print $6&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $command</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  vsize)</span><br><span class=\"line\">    vsize=`mongostat -n1 | tail -n 1|awk '&#123;print $10&#125;'|tr -d ' *,G'`</span><br><span class=\"line\">    echo $vsize</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  res)</span><br><span class=\"line\">    res=`mongostat -n1 | tail -n 1|awk '&#123;print $11&#125;'|tr -d ' *,G'`</span><br><span class=\"line\">    echo $res</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  qr)</span><br><span class=\"line\">    qr=`mongostat -n1 | tail -n 1|awk '&#123;print $12&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $qr</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  qw)</span><br><span class=\"line\">    qw=`mongostat -n1 | tail -n 1|awk '&#123;print $12&#125;'|awk -F'|' '&#123;print $2&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $qw</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  ar)</span><br><span class=\"line\">    ar=`mongostat -n1 | tail -n 1|awk '&#123;print $13&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $ar</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  aw)</span><br><span class=\"line\">    aw=`mongostat -n1 | tail -n 1|awk '&#123;print $13&#125;'|awk -F'|' '&#123;print $2&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $aw</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  conn)</span><br><span class=\"line\">    conn=`mongostat -n1 | tail -n 1|awk '&#123;print $16&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $conn</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  *)</span><br><span class=\"line\">    echo \"please input  insert|query|update|delete\"</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"conf配置文件\"><a href=\"#conf配置文件\" class=\"headerlink\" title=\"conf配置文件\"></a>conf配置文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat zabbix_mongo.conf</span><br><span class=\"line\">UserParameter=mongo[*],/opt/script/zabbix/mongo.sh $1</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>可配合zabbix自动发现，自动监控服务</p>\n<h3 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat mongo.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">case $1 in </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  use_memory)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    used_memory=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().mem\"</span>|mongo admin|grep resident|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">\" ,\"</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$used_memory</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    ;;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  use_vmemory)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    used_vmemory=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().mem\"</span>|mongo admin|grep virtual|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">\" ,\"</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$used_vmemory</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    ;;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  used_conn)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    used_conn=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().connections\"</span>|mongo admin|grep current|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">' ,'</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$used_conn</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    ;;</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  </span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  available_conn)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    available=`<span class=\"built_in\">echo</span> <span class=\"string\">\"db.serverStatus().connections\"</span>|mongo admin|grep available|awk -F<span class=\"string\">':'</span> <span class=\"string\">'&#123;print $2&#125;'</span>|tr -d <span class=\"string\">' ,'</span>`</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$availabe</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">  ;;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  insert)</span><br><span class=\"line\">    insert=`mongostat -n1 | tail -n 1|awk '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $insert</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  query)</span><br><span class=\"line\">    query=`mongostat -n1 | tail -n 1|awk '&#123;print $2&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $query</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  update)</span><br><span class=\"line\">    update=`mongostat -n1 | tail -n 1|awk '&#123;print $3&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $update</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  </span><br><span class=\"line\">  delete)</span><br><span class=\"line\">    delete=`mongostat -n1 | tail -n 1|awk '&#123;print $4&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $delete</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  getmore)</span><br><span class=\"line\">    getmore=`mongostat -n1 | tail -n 1|awk '&#123;print $5&#125;'|tr -d ' *,'`  </span><br><span class=\"line\">    echo $getmore</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  command)</span><br><span class=\"line\">    command=`mongostat -n1 | tail -n 1|awk '&#123;print $6&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $command</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  vsize)</span><br><span class=\"line\">    vsize=`mongostat -n1 | tail -n 1|awk '&#123;print $10&#125;'|tr -d ' *,G'`</span><br><span class=\"line\">    echo $vsize</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  res)</span><br><span class=\"line\">    res=`mongostat -n1 | tail -n 1|awk '&#123;print $11&#125;'|tr -d ' *,G'`</span><br><span class=\"line\">    echo $res</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  qr)</span><br><span class=\"line\">    qr=`mongostat -n1 | tail -n 1|awk '&#123;print $12&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $qr</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  qw)</span><br><span class=\"line\">    qw=`mongostat -n1 | tail -n 1|awk '&#123;print $12&#125;'|awk -F'|' '&#123;print $2&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $qw</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  ar)</span><br><span class=\"line\">    ar=`mongostat -n1 | tail -n 1|awk '&#123;print $13&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $ar</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  aw)</span><br><span class=\"line\">    aw=`mongostat -n1 | tail -n 1|awk '&#123;print $13&#125;'|awk -F'|' '&#123;print $2&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $aw</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  conn)</span><br><span class=\"line\">    conn=`mongostat -n1 | tail -n 1|awk '&#123;print $16&#125;'|tr -d ' *,'`</span><br><span class=\"line\">    echo $conn</span><br><span class=\"line\">    ;;</span><br><span class=\"line\"></span><br><span class=\"line\">  *)</span><br><span class=\"line\">    echo \"please input  insert|query|update|delete\"</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"conf配置文件\"><a href=\"#conf配置文件\" class=\"headerlink\" title=\"conf配置文件\"></a>conf配置文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat zabbix_mongo.conf</span><br><span class=\"line\">UserParameter=mongo[*],/opt/script/zabbix/mongo.sh $1</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"zabbix监控指定端口","published":1,"author":"xiemx","comments":1,"date":"2016-06-29T02:06:32.000Z","_content":"\n1.登陆zabbix主界面\n\n选择：配置-模板\n\n选择模板组，这里我选择的是Template App Agentless，原因该自带模板组内包含各种常用服务的模板\n\n单击该模板组 项目\n\n![img](/images/img_577330bdc322e.png)点击右上角的 创建项目\n\n![img](/images/img_577330e1e5d06.png)这里添加的是mysql服务，按照如图配置\n\n![img](/images/img_577330f8871b5.png)单击下方 存档 保存。\n\n如图点击 触发器\n\n![img](/images/img_5773310c679a1.png)如图，点击右上方 创建触发器\n\n![img](/images/img_5773313591d94.png)按照如图配置\n\n![img](/images/img_57733153a13cb.png)点击 存档 保存，完毕。\n\n以上是将自定义模板服务添加到Template App Agentless模板组\n\n最后将Template App Agentless模板组添加到你需要监控的客户端主机内","source":"_posts/zabbix-monitor-port.md","raw":"---\nlayout: post\ntitle: zabbix监控指定端口\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-06-29 10:06:32\ntags: [ ]\ncategories:\n    - zabbix\n#permalink: '/2016/06/29/zabbix-monitor-port'\n---\n\n1.登陆zabbix主界面\n\n选择：配置-模板\n\n选择模板组，这里我选择的是Template App Agentless，原因该自带模板组内包含各种常用服务的模板\n\n单击该模板组 项目\n\n![img](/images/img_577330bdc322e.png)点击右上角的 创建项目\n\n![img](/images/img_577330e1e5d06.png)这里添加的是mysql服务，按照如图配置\n\n![img](/images/img_577330f8871b5.png)单击下方 存档 保存。\n\n如图点击 触发器\n\n![img](/images/img_5773310c679a1.png)如图，点击右上方 创建触发器\n\n![img](/images/img_5773313591d94.png)按照如图配置\n\n![img](/images/img_57733153a13cb.png)点击 存档 保存，完毕。\n\n以上是将自定义模板服务添加到Template App Agentless模板组\n\n最后将Template App Agentless模板组添加到你需要监控的客户端主机内","slug":"zabbix-monitor-port","updated":"2019-10-21T06:57:42.819Z","photos":[],"link":"","_id":"ck42dyigz00b8u9ur3peouryf","content":"<p>1.登陆zabbix主界面</p>\n<p>选择：配置-模板</p>\n<p>选择模板组，这里我选择的是Template App Agentless，原因该自带模板组内包含各种常用服务的模板</p>\n<p>单击该模板组 项目</p>\n<p><img src=\"/images/img_577330bdc322e.png\" alt=\"img\">点击右上角的 创建项目</p>\n<p><img src=\"/images/img_577330e1e5d06.png\" alt=\"img\">这里添加的是mysql服务，按照如图配置</p>\n<p><img src=\"/images/img_577330f8871b5.png\" alt=\"img\">单击下方 存档 保存。</p>\n<p>如图点击 触发器</p>\n<p><img src=\"/images/img_5773310c679a1.png\" alt=\"img\">如图，点击右上方 创建触发器</p>\n<p><img src=\"/images/img_5773313591d94.png\" alt=\"img\">按照如图配置</p>\n<p><img src=\"/images/img_57733153a13cb.png\" alt=\"img\">点击 存档 保存，完毕。</p>\n<p>以上是将自定义模板服务添加到Template App Agentless模板组</p>\n<p>最后将Template App Agentless模板组添加到你需要监控的客户端主机内</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.登陆zabbix主界面</p>\n<p>选择：配置-模板</p>\n<p>选择模板组，这里我选择的是Template App Agentless，原因该自带模板组内包含各种常用服务的模板</p>\n<p>单击该模板组 项目</p>\n<p><img src=\"/images/img_577330bdc322e.png\" alt=\"img\">点击右上角的 创建项目</p>\n<p><img src=\"/images/img_577330e1e5d06.png\" alt=\"img\">这里添加的是mysql服务，按照如图配置</p>\n<p><img src=\"/images/img_577330f8871b5.png\" alt=\"img\">单击下方 存档 保存。</p>\n<p>如图点击 触发器</p>\n<p><img src=\"/images/img_5773310c679a1.png\" alt=\"img\">如图，点击右上方 创建触发器</p>\n<p><img src=\"/images/img_5773313591d94.png\" alt=\"img\">按照如图配置</p>\n<p><img src=\"/images/img_57733153a13cb.png\" alt=\"img\">点击 存档 保存，完毕。</p>\n<p>以上是将自定义模板服务添加到Template App Agentless模板组</p>\n<p>最后将Template App Agentless模板组添加到你需要监控的客户端主机内</p>\n"},{"layout":"post","title":"zabbix监控特定进程","published":1,"author":"xiemx","comments":1,"date":"2016-03-25T03:03:04.000Z","_content":"\n1. 在特定机器或模板上创建新的监控项，点击Key 后面的Select 按钮，选择如下两项，一项是用来监控特定进程的数量，另一项是用来监控进程使用内存的大小。\n\n![img](/images/img_56f4a9789a5c5.png)\n\n2. 以下是对squid进程的监控配置，key中的参数说明，第一个参数是进程名字，没必要填写，填了反而会使监控不太准确（仅个人测试），第二个参数是运行进程的用户名，第三个为进程的状态 ，包括：*all*(default),*run*,*sleep*,*zomb*，第四个参数用来指定进程名中包含的字符，对进程进行过滤。\n\n![img](/images/img_56f4a9875257e.png)\n\n3. 配置好监控项后，添加触发器，如下触发器表示最后两次的值都是0，说明没有squid进程在运行，则出发报警。\n\n![img](/images/img_56f4a99aa9435.png)\n\n4. 当我们kill掉进程tomcat会如下报警\n\n![img](/images/img_56f4a9ab888d0.png)","source":"_posts/zabbix-monitor-process.md","raw":"---\nlayout: post\ntitle: zabbix监控特定进程\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-03-25 11:03:04\ntags: [ zabbix ]\ncategories:\n    - zabbix\n\n---\n\n1. 在特定机器或模板上创建新的监控项，点击Key 后面的Select 按钮，选择如下两项，一项是用来监控特定进程的数量，另一项是用来监控进程使用内存的大小。\n\n![img](/images/img_56f4a9789a5c5.png)\n\n2. 以下是对squid进程的监控配置，key中的参数说明，第一个参数是进程名字，没必要填写，填了反而会使监控不太准确（仅个人测试），第二个参数是运行进程的用户名，第三个为进程的状态 ，包括：*all*(default),*run*,*sleep*,*zomb*，第四个参数用来指定进程名中包含的字符，对进程进行过滤。\n\n![img](/images/img_56f4a9875257e.png)\n\n3. 配置好监控项后，添加触发器，如下触发器表示最后两次的值都是0，说明没有squid进程在运行，则出发报警。\n\n![img](/images/img_56f4a99aa9435.png)\n\n4. 当我们kill掉进程tomcat会如下报警\n\n![img](/images/img_56f4a9ab888d0.png)","slug":"zabbix-monitor-process","updated":"2019-10-21T06:57:42.493Z","photos":[],"link":"","_id":"ck42dyih100bdu9urzuerv6vk","content":"<ol>\n<li>在特定机器或模板上创建新的监控项，点击Key 后面的Select 按钮，选择如下两项，一项是用来监控特定进程的数量，另一项是用来监控进程使用内存的大小。</li>\n</ol>\n<p><img src=\"/images/img_56f4a9789a5c5.png\" alt=\"img\"></p>\n<ol start=\"2\">\n<li>以下是对squid进程的监控配置，key中的参数说明，第一个参数是进程名字，没必要填写，填了反而会使监控不太准确（仅个人测试），第二个参数是运行进程的用户名，第三个为进程的状态 ，包括：<em>all</em>(default),<em>run</em>,<em>sleep</em>,<em>zomb</em>，第四个参数用来指定进程名中包含的字符，对进程进行过滤。</li>\n</ol>\n<p><img src=\"/images/img_56f4a9875257e.png\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>配置好监控项后，添加触发器，如下触发器表示最后两次的值都是0，说明没有squid进程在运行，则出发报警。</li>\n</ol>\n<p><img src=\"/images/img_56f4a99aa9435.png\" alt=\"img\"></p>\n<ol start=\"4\">\n<li>当我们kill掉进程tomcat会如下报警</li>\n</ol>\n<p><img src=\"/images/img_56f4a9ab888d0.png\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>在特定机器或模板上创建新的监控项，点击Key 后面的Select 按钮，选择如下两项，一项是用来监控特定进程的数量，另一项是用来监控进程使用内存的大小。</li>\n</ol>\n<p><img src=\"/images/img_56f4a9789a5c5.png\" alt=\"img\"></p>\n<ol start=\"2\">\n<li>以下是对squid进程的监控配置，key中的参数说明，第一个参数是进程名字，没必要填写，填了反而会使监控不太准确（仅个人测试），第二个参数是运行进程的用户名，第三个为进程的状态 ，包括：<em>all</em>(default),<em>run</em>,<em>sleep</em>,<em>zomb</em>，第四个参数用来指定进程名中包含的字符，对进程进行过滤。</li>\n</ol>\n<p><img src=\"/images/img_56f4a9875257e.png\" alt=\"img\"></p>\n<ol start=\"3\">\n<li>配置好监控项后，添加触发器，如下触发器表示最后两次的值都是0，说明没有squid进程在运行，则出发报警。</li>\n</ol>\n<p><img src=\"/images/img_56f4a99aa9435.png\" alt=\"img\"></p>\n<ol start=\"4\">\n<li>当我们kill掉进程tomcat会如下报警</li>\n</ol>\n<p><img src=\"/images/img_56f4a9ab888d0.png\" alt=\"img\"></p>\n"},{"layout":"post","title":"zabbix监控redis","published":1,"author":"xiemx","comments":1,"date":"2016-12-18T21:12:43.000Z","_content":"可配合zabbix自动发现，来完成自动监控\n\n### scripts\n\n```shell\ncat redis.sh\n#!/bin/bash\nredis_conn=\"/usr/local/bin/redis-cli\"\nport=$1\n\ncase $2 in \n  \"used_memory\")\n    used_memory=`$redis_conn -p $port info | grep used_memory:|awk -F':' '{print $2}'`\n    echo $used_memory\n    ;;\n  \"ops_sec\")\n    ops=`$redis_conn -p $port info|grep instantaneous_ops_per_sec:|awk -F':' '{print $2}'`\n    echo $ops\n    ;;\n  \"connected_clients\")\n    connected_clients=`$redis_conn -p $port info|grep connected_clients: | awk -F ':' '{print $2}'`\n    echo $connected_clients\n    ;;\n  \"blocked_clients\")\n    blocked_clients=`$redis_conn -p $port info|grep blocked_clients:|awk -F':' '{print $2}'`\n    echo $blocked_clients\n    ;; \n  *)\n    echo \"please input used_memory|ops_sec|connected_clients|blocked_clients\"\n    ;; \nesac\n```\n\n### conf文件\n\n```yaml\ncat zabbix_redis.conf\n\nUserParameter=redis[*],/opt/script/zabbix/redis.sh $1 $2\n```\n","source":"_posts/zabbix-monitor-redis.md","raw":"---\nlayout: post\ntitle: zabbix监控redis\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-12-19 05:12:43\ntags: [ zabbix, scripts ]\ncategories:\n    - zabbix\n#permalink: '/2016/12/19/zabbix-monitor-redis'\n---\n可配合zabbix自动发现，来完成自动监控\n\n### scripts\n\n```shell\ncat redis.sh\n#!/bin/bash\nredis_conn=\"/usr/local/bin/redis-cli\"\nport=$1\n\ncase $2 in \n  \"used_memory\")\n    used_memory=`$redis_conn -p $port info | grep used_memory:|awk -F':' '{print $2}'`\n    echo $used_memory\n    ;;\n  \"ops_sec\")\n    ops=`$redis_conn -p $port info|grep instantaneous_ops_per_sec:|awk -F':' '{print $2}'`\n    echo $ops\n    ;;\n  \"connected_clients\")\n    connected_clients=`$redis_conn -p $port info|grep connected_clients: | awk -F ':' '{print $2}'`\n    echo $connected_clients\n    ;;\n  \"blocked_clients\")\n    blocked_clients=`$redis_conn -p $port info|grep blocked_clients:|awk -F':' '{print $2}'`\n    echo $blocked_clients\n    ;; \n  *)\n    echo \"please input used_memory|ops_sec|connected_clients|blocked_clients\"\n    ;; \nesac\n```\n\n### conf文件\n\n```yaml\ncat zabbix_redis.conf\n\nUserParameter=redis[*],/opt/script/zabbix/redis.sh $1 $2\n```\n","slug":"zabbix-monitor-redis","updated":"2019-10-21T06:57:42.697Z","photos":[],"link":"","_id":"ck42dyih300bgu9url7dxic2n","content":"<p>可配合zabbix自动发现，来完成自动监控</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat redis.sh</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">redis_conn=\"/usr/local/bin/redis-cli\"</span><br><span class=\"line\">port=$1</span><br><span class=\"line\"></span><br><span class=\"line\">case $2 in </span><br><span class=\"line\">  \"used_memory\")</span><br><span class=\"line\">    used_memory=`$redis_conn -p $port info | grep used_memory:|awk -F':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $used_memory</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  \"ops_sec\")</span><br><span class=\"line\">    ops=`$redis_conn -p $port info|grep instantaneous_ops_per_sec:|awk -F':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $ops</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  \"connected_clients\")</span><br><span class=\"line\">    connected_clients=`$redis_conn -p $port info|grep connected_clients: | awk -F ':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $connected_clients</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  \"blocked_clients\")</span><br><span class=\"line\">    blocked_clients=`$redis_conn -p $port info|grep blocked_clients:|awk -F':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $blocked_clients</span><br><span class=\"line\">    ;; </span><br><span class=\"line\">  *)</span><br><span class=\"line\">    echo \"please input used_memory|ops_sec|connected_clients|blocked_clients\"</span><br><span class=\"line\">    ;; </span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"conf文件\"><a href=\"#conf文件\" class=\"headerlink\" title=\"conf文件\"></a>conf文件</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">zabbix_redis.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">UserParameter=redis[*],/opt/script/zabbix/redis.sh</span> <span class=\"string\">$1</span> <span class=\"string\">$2</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>可配合zabbix自动发现，来完成自动监控</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat redis.sh</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">redis_conn=\"/usr/local/bin/redis-cli\"</span><br><span class=\"line\">port=$1</span><br><span class=\"line\"></span><br><span class=\"line\">case $2 in </span><br><span class=\"line\">  \"used_memory\")</span><br><span class=\"line\">    used_memory=`$redis_conn -p $port info | grep used_memory:|awk -F':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $used_memory</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  \"ops_sec\")</span><br><span class=\"line\">    ops=`$redis_conn -p $port info|grep instantaneous_ops_per_sec:|awk -F':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $ops</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  \"connected_clients\")</span><br><span class=\"line\">    connected_clients=`$redis_conn -p $port info|grep connected_clients: | awk -F ':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $connected_clients</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  \"blocked_clients\")</span><br><span class=\"line\">    blocked_clients=`$redis_conn -p $port info|grep blocked_clients:|awk -F':' '&#123;print $2&#125;'`</span><br><span class=\"line\">    echo $blocked_clients</span><br><span class=\"line\">    ;; </span><br><span class=\"line\">  *)</span><br><span class=\"line\">    echo \"please input used_memory|ops_sec|connected_clients|blocked_clients\"</span><br><span class=\"line\">    ;; </span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"conf文件\"><a href=\"#conf文件\" class=\"headerlink\" title=\"conf文件\"></a>conf文件</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">zabbix_redis.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">UserParameter=redis[*],/opt/script/zabbix/redis.sh</span> <span class=\"string\">$1</span> <span class=\"string\">$2</span></span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"zabbix 监控ssl证书过期时间","published":1,"author":"xiemx","comments":1,"date":"2016-12-05T02:12:45.000Z","_content":"脚本是参考网上修改过的版本，注意要指定servername参数，以免抓取到其它站点的证书。\n\n```shell\nmingxu.xie@t-slq-ops-1:/opt/script/zabbix# cat check_ssl_cert.sh \n#/bin/bash\nhost=1\nport=2\nend_date=openssl s_client -host $host -port $port -servername $host -showcerts &lt;/dev/null 2>/dev/null|sed -n '/BEGIN CERTIFICATE/,/END CERT/p' |openssl x509 -text 2>/dev/null |sed -n 's/ *Not After : *//p'\nif [ -n \"end_date\" ];then\n    end_date_seconds=`date '+%s' --date \"end_date\"now_seconds=date '+%s'`\n    echo \"(end_date_seconds-now_seconds)/24/3600\" | bc\nfi\n```","source":"_posts/zabbix-monitor-ssl-cert.md","raw":"---\nlayout: post\ntitle: zabbix 监控ssl证书过期时间\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-12-05 10:12:45\ntags: [ ]\ncategories:\n    - zabbix\n#permalink: '/2016/12/05/zabbix-monitor-ssl-cert'\n---\n脚本是参考网上修改过的版本，注意要指定servername参数，以免抓取到其它站点的证书。\n\n```shell\nmingxu.xie@t-slq-ops-1:/opt/script/zabbix# cat check_ssl_cert.sh \n#/bin/bash\nhost=1\nport=2\nend_date=openssl s_client -host $host -port $port -servername $host -showcerts &lt;/dev/null 2>/dev/null|sed -n '/BEGIN CERTIFICATE/,/END CERT/p' |openssl x509 -text 2>/dev/null |sed -n 's/ *Not After : *//p'\nif [ -n \"end_date\" ];then\n    end_date_seconds=`date '+%s' --date \"end_date\"now_seconds=date '+%s'`\n    echo \"(end_date_seconds-now_seconds)/24/3600\" | bc\nfi\n```","slug":"zabbix-monitor-ssl-cert","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyih400bku9urjjtg9xsl","content":"<p>脚本是参考网上修改过的版本，注意要指定servername参数，以免抓取到其它站点的证书。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mingxu.xie@t-slq-ops-1:/opt/script/zabbix# cat check_ssl_cert.sh </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">/bin/bash</span></span><br><span class=\"line\">host=1</span><br><span class=\"line\">port=2</span><br><span class=\"line\">end_date=openssl s_client -host $host -port $port -servername $host -showcerts &amp;lt;/dev/null 2&gt;/dev/null|sed -n '/BEGIN CERTIFICATE/,/END CERT/p' |openssl x509 -text 2&gt;/dev/null |sed -n 's/ *Not After : *//p'</span><br><span class=\"line\">if [ -n \"end_date\" ];then</span><br><span class=\"line\">    end_date_seconds=`date '+%s' --date \"end_date\"now_seconds=date '+%s'`</span><br><span class=\"line\">    echo \"(end_date_seconds-now_seconds)/24/3600\" | bc</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>脚本是参考网上修改过的版本，注意要指定servername参数，以免抓取到其它站点的证书。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mingxu.xie@t-slq-ops-1:/opt/script/zabbix# cat check_ssl_cert.sh </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">/bin/bash</span></span><br><span class=\"line\">host=1</span><br><span class=\"line\">port=2</span><br><span class=\"line\">end_date=openssl s_client -host $host -port $port -servername $host -showcerts &amp;lt;/dev/null 2&gt;/dev/null|sed -n '/BEGIN CERTIFICATE/,/END CERT/p' |openssl x509 -text 2&gt;/dev/null |sed -n 's/ *Not After : *//p'</span><br><span class=\"line\">if [ -n \"end_date\" ];then</span><br><span class=\"line\">    end_date_seconds=`date '+%s' --date \"end_date\"now_seconds=date '+%s'`</span><br><span class=\"line\">    echo \"(end_date_seconds-now_seconds)/24/3600\" | bc</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"zabbix-server.conf文件详解","published":1,"author":"xiemx","comments":1,"date":"2016-08-31T21:09:48.000Z","_content":"\n```markdown\nAlertScriptsPath 默认值：/usr/local/share/zabbix/alertscripts 说明：告警脚本目录\n\nAllowRoot 默认值：0 说明：是否允许使用root启动，0:不允许，1:允许，默认情况下她会使用zabbix用户来启动zabbix进程，不推荐使用root\n\nCacheSize 取值范围： 128K-8G 默认值：8M 说明：配置缓存，用于存储host，item，trigger数据，2.2.3版本之前最大支持2G，目前最大支持8G，一般用不了多少的。\n\nCacheUpdateFrequency 取值范围：1-3600 默认值：60 说明：多少秒更新一次配置缓存\n\nDBHost 默认值：localhost 说明：数据库主机地址\n\nDBName 默认值：无 必填：是\n\nDBPassword： 默认值：空 说明：数据库密码\n\nDBPort 取值范围：1024-65535 默认值:3306 说明：SQLite作为DB，这个选项请忽略，如果使用socket链接，也请忽略。\n\nDBSchema 说明：Schema名称. 用于 IBM DB2 、 PostgreSQL.\n\nDBSocket 默认值：/tmp/mysql.sock 说明：mysql sock文件路径\n\nDebugLevel 取值范围：0-5 默认值：3 说明: 指定debug级别 0 - 基本信息 1 - critical信息 2 - error信息 3 - warnings信息 4 - 调试日志，日志内容很多，慎重使用 5 - 用于调试web和vmware监控\n\nExternalScripts 默认值： /usr/local/share/zabbix/externalscripts 说明： 外部脚本目录\n\nFping6Location 默认值：/usr/sbin/fping6 说明：fping6路径，不懂fping的人可以百度一下，如果zabbix非root启动，请给fping6 SUID\n\nFpingLocation 默认值：/usr/sbin/fping 说明:和上面的一样\n\nHistoryCacheSize 取值范围：128K-2G 默认值：8M 说明： 历史记录缓存大小，用于存储历史记录\n\nHistoryTextCacheSize 取值范围：128K-2G 默认值：16M 说明：文本类型历史记录的缓存大小，存储character, text 、log历史记录.\n\nHousekeepingFrequency 取值范围：0-24 默认值：1 说明：housekeep执行频率，默认每小时回去删除一些过期数据。如果server重启，那么30分钟之后才执行一次，接下来，每隔一小时在执行一次。\n\nInclude 说明：include配置文件，可以使用正则表达式，例如：/usr/local/zabbix-2.4.4/conf/ttlsa.com/*.conf\n\nJavaGateway 说明：Zabbix Java gateway的主机名，需要启动Java pollers\n\nJavaGatewayPort 取值范围：1024-32767 默认值：10052 Zabbix Java gateway监听端口\n\nListenIP 默认值：0.0.0.0 说明：监听地址，留空则会在所有的地址上监听，可以监听多个IP地址，ip之间使用逗号分隔，例如：127.0.0.1,10.10.0.2\n\nListenPort 取值范围：1024-32767 默认值：10051 说明：监听端口\n\nLoadModule 说明：加载模块，格式: LoadModule=，文件必须在指定的LoadModulePath目录下，如果需要加载多个模块，那么写多个即可。\n\nLoadModulePath 模块目录，参考上面\n\nLogFile 日志文件，例如：/data/logs/zabbix/zabbix-server.log\n\nLogFileSize 取值范围：0-1024 默认值：1 0表示禁用日志自动rotation，如果日志达到了限制，并且rotation失败，老日志文件将会被清空掉，重新生成一个新日志。\n\nLogSlowQueries 取值范围：0-3600000 默认值：0 多慢的数据库查询将会被记录，单位：毫秒，0表示不记录慢查询。只有在DebugLevel=3时，这个配置才有效。\n\nMaxHousekeeperDelete 取值范围： 0-1000000 默认值：5000 housekeeping一次删除的数据不能大于MaxHousekeeperDelete\n\nPidFile 默认值：/tmp/zabbix_server.pid PID文件\n\nProxyConfigFrequency 取值范围：1-604800 默认值：3600 proxy被动模式下，server多少秒同步配置文件至proxy。\n\nProxyDataFrequency 取值范围：1-3600 默认值:1 被动模式下，zabbix server间隔多少秒向proxy请求历史数据\n\nSenderFrequency 取值范围：5-3600 默认值：30 间隔多少秒，再尝试发送为发送的报警\n\nSNMPTrapperFile 默认值：/tmp/zabbix_traps.tmp SNMP trap发送到server的数据临时存放文件。\n\nSourceIP 出口IP地址\n\nSSHKeyLocation SSH公钥私钥路径\n\nSSLCertLocation SSL证书目录，用于web监控\n\nSSLKeyLocation SSL认证私钥路径、用于web监控\n\nSSLCALocation SSL认证,CA路径，如果为空，将会使用系统默认的CA\n\nStartDBSyncers 取值范围：1-100 默认值：4 预先foke DB Syncers的数量，1.8.5以前最大值为64\n\nStartDiscoverers 取值范围：0-250 默认值：1 pre-forked discoverers的数量，1.8.5版本以前最大可为255\n\nStartHTTPPollers 取值范围：0-1000 默认值：1 pre-forked HTTP pollers的数量，1.8.5以前最大255\n\nStartIPMIPollers 取值范围：0-1000 默认值：0 pre-forked IPMI pollers的数量，1.8.5之前，最大为255\n\nTimeout 取值范围：1-30 默认值：3 agent，snmp，external check的超时时间，单位为秒\n\nTmpDir 默认值：/tmp\n\nTrapperTimeout 取值范围：1-300 默认值：300 处理trapper数据的超时时间\n\nTrendCacheSize 取值范围：128K-2G 默认值：4M 历史数据缓存大小\n\nUnavailableDelay 取值范围：1-3600 默认值：60 间隔多少秒再次检测主机是否可用\n\nUnreachableDelay 取值范围：1-3600 默认值：15 间隔多少秒再次检测主机是否可达。\n\nUnreachablePeriod 取值范围：1-3600 默认值：45 检测到主机不可用，多久将它置为不可达\n\nUser 默认值：zabbix 启动zabbix server的用户，在配置禁止root启动，并且当前shell用户是root得情况下有效。如果当前用户是xiemx，那么zabbix server的运行用户是xiemx\n\nValueCacheSize 取值范围：0,128K-64G 默认值：8M 0表示禁用，history value缓存大小，当缓存超标了，将会每隔5分钟往server日志里面记录。养成看日志的好习惯。\n```","source":"_posts/zabbix-server-configure.md","raw":"---\nlayout: post\ntitle: zabbix-server.conf文件详解\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-09-01 05:09:48\ntags: [ ]\ncategories:\n    - zabbix\n#permalink: '/2016/09/01/zabbix-server-configure'\n---\n\n```markdown\nAlertScriptsPath 默认值：/usr/local/share/zabbix/alertscripts 说明：告警脚本目录\n\nAllowRoot 默认值：0 说明：是否允许使用root启动，0:不允许，1:允许，默认情况下她会使用zabbix用户来启动zabbix进程，不推荐使用root\n\nCacheSize 取值范围： 128K-8G 默认值：8M 说明：配置缓存，用于存储host，item，trigger数据，2.2.3版本之前最大支持2G，目前最大支持8G，一般用不了多少的。\n\nCacheUpdateFrequency 取值范围：1-3600 默认值：60 说明：多少秒更新一次配置缓存\n\nDBHost 默认值：localhost 说明：数据库主机地址\n\nDBName 默认值：无 必填：是\n\nDBPassword： 默认值：空 说明：数据库密码\n\nDBPort 取值范围：1024-65535 默认值:3306 说明：SQLite作为DB，这个选项请忽略，如果使用socket链接，也请忽略。\n\nDBSchema 说明：Schema名称. 用于 IBM DB2 、 PostgreSQL.\n\nDBSocket 默认值：/tmp/mysql.sock 说明：mysql sock文件路径\n\nDebugLevel 取值范围：0-5 默认值：3 说明: 指定debug级别 0 - 基本信息 1 - critical信息 2 - error信息 3 - warnings信息 4 - 调试日志，日志内容很多，慎重使用 5 - 用于调试web和vmware监控\n\nExternalScripts 默认值： /usr/local/share/zabbix/externalscripts 说明： 外部脚本目录\n\nFping6Location 默认值：/usr/sbin/fping6 说明：fping6路径，不懂fping的人可以百度一下，如果zabbix非root启动，请给fping6 SUID\n\nFpingLocation 默认值：/usr/sbin/fping 说明:和上面的一样\n\nHistoryCacheSize 取值范围：128K-2G 默认值：8M 说明： 历史记录缓存大小，用于存储历史记录\n\nHistoryTextCacheSize 取值范围：128K-2G 默认值：16M 说明：文本类型历史记录的缓存大小，存储character, text 、log历史记录.\n\nHousekeepingFrequency 取值范围：0-24 默认值：1 说明：housekeep执行频率，默认每小时回去删除一些过期数据。如果server重启，那么30分钟之后才执行一次，接下来，每隔一小时在执行一次。\n\nInclude 说明：include配置文件，可以使用正则表达式，例如：/usr/local/zabbix-2.4.4/conf/ttlsa.com/*.conf\n\nJavaGateway 说明：Zabbix Java gateway的主机名，需要启动Java pollers\n\nJavaGatewayPort 取值范围：1024-32767 默认值：10052 Zabbix Java gateway监听端口\n\nListenIP 默认值：0.0.0.0 说明：监听地址，留空则会在所有的地址上监听，可以监听多个IP地址，ip之间使用逗号分隔，例如：127.0.0.1,10.10.0.2\n\nListenPort 取值范围：1024-32767 默认值：10051 说明：监听端口\n\nLoadModule 说明：加载模块，格式: LoadModule=，文件必须在指定的LoadModulePath目录下，如果需要加载多个模块，那么写多个即可。\n\nLoadModulePath 模块目录，参考上面\n\nLogFile 日志文件，例如：/data/logs/zabbix/zabbix-server.log\n\nLogFileSize 取值范围：0-1024 默认值：1 0表示禁用日志自动rotation，如果日志达到了限制，并且rotation失败，老日志文件将会被清空掉，重新生成一个新日志。\n\nLogSlowQueries 取值范围：0-3600000 默认值：0 多慢的数据库查询将会被记录，单位：毫秒，0表示不记录慢查询。只有在DebugLevel=3时，这个配置才有效。\n\nMaxHousekeeperDelete 取值范围： 0-1000000 默认值：5000 housekeeping一次删除的数据不能大于MaxHousekeeperDelete\n\nPidFile 默认值：/tmp/zabbix_server.pid PID文件\n\nProxyConfigFrequency 取值范围：1-604800 默认值：3600 proxy被动模式下，server多少秒同步配置文件至proxy。\n\nProxyDataFrequency 取值范围：1-3600 默认值:1 被动模式下，zabbix server间隔多少秒向proxy请求历史数据\n\nSenderFrequency 取值范围：5-3600 默认值：30 间隔多少秒，再尝试发送为发送的报警\n\nSNMPTrapperFile 默认值：/tmp/zabbix_traps.tmp SNMP trap发送到server的数据临时存放文件。\n\nSourceIP 出口IP地址\n\nSSHKeyLocation SSH公钥私钥路径\n\nSSLCertLocation SSL证书目录，用于web监控\n\nSSLKeyLocation SSL认证私钥路径、用于web监控\n\nSSLCALocation SSL认证,CA路径，如果为空，将会使用系统默认的CA\n\nStartDBSyncers 取值范围：1-100 默认值：4 预先foke DB Syncers的数量，1.8.5以前最大值为64\n\nStartDiscoverers 取值范围：0-250 默认值：1 pre-forked discoverers的数量，1.8.5版本以前最大可为255\n\nStartHTTPPollers 取值范围：0-1000 默认值：1 pre-forked HTTP pollers的数量，1.8.5以前最大255\n\nStartIPMIPollers 取值范围：0-1000 默认值：0 pre-forked IPMI pollers的数量，1.8.5之前，最大为255\n\nTimeout 取值范围：1-30 默认值：3 agent，snmp，external check的超时时间，单位为秒\n\nTmpDir 默认值：/tmp\n\nTrapperTimeout 取值范围：1-300 默认值：300 处理trapper数据的超时时间\n\nTrendCacheSize 取值范围：128K-2G 默认值：4M 历史数据缓存大小\n\nUnavailableDelay 取值范围：1-3600 默认值：60 间隔多少秒再次检测主机是否可用\n\nUnreachableDelay 取值范围：1-3600 默认值：15 间隔多少秒再次检测主机是否可达。\n\nUnreachablePeriod 取值范围：1-3600 默认值：45 检测到主机不可用，多久将它置为不可达\n\nUser 默认值：zabbix 启动zabbix server的用户，在配置禁止root启动，并且当前shell用户是root得情况下有效。如果当前用户是xiemx，那么zabbix server的运行用户是xiemx\n\nValueCacheSize 取值范围：0,128K-64G 默认值：8M 0表示禁用，history value缓存大小，当缓存超标了，将会每隔5分钟往server日志里面记录。养成看日志的好习惯。\n```","slug":"zabbix-server-configure","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyih500bou9ur0a68v93p","content":"<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AlertScriptsPath 默认值：/usr/local/share/zabbix/alertscripts 说明：告警脚本目录</span><br><span class=\"line\"></span><br><span class=\"line\">AllowRoot 默认值：0 说明：是否允许使用root启动，0:不允许，1:允许，默认情况下她会使用zabbix用户来启动zabbix进程，不推荐使用root</span><br><span class=\"line\"></span><br><span class=\"line\">CacheSize 取值范围： 128K-8G 默认值：8M 说明：配置缓存，用于存储host，item，trigger数据，2.2.3版本之前最大支持2G，目前最大支持8G，一般用不了多少的。</span><br><span class=\"line\"></span><br><span class=\"line\">CacheUpdateFrequency 取值范围：1-3600 默认值：60 说明：多少秒更新一次配置缓存</span><br><span class=\"line\"></span><br><span class=\"line\">DBHost 默认值：localhost 说明：数据库主机地址</span><br><span class=\"line\"></span><br><span class=\"line\">DBName 默认值：无 必填：是</span><br><span class=\"line\"></span><br><span class=\"line\">DBPassword： 默认值：空 说明：数据库密码</span><br><span class=\"line\"></span><br><span class=\"line\">DBPort 取值范围：1024-65535 默认值:3306 说明：SQLite作为DB，这个选项请忽略，如果使用socket链接，也请忽略。</span><br><span class=\"line\"></span><br><span class=\"line\">DBSchema 说明：Schema名称. 用于 IBM DB2 、 PostgreSQL.</span><br><span class=\"line\"></span><br><span class=\"line\">DBSocket 默认值：/tmp/mysql.sock 说明：mysql sock文件路径</span><br><span class=\"line\"></span><br><span class=\"line\">DebugLevel 取值范围：0-5 默认值：3 说明: 指定debug级别 0 - 基本信息 1 - critical信息 2 - error信息 3 - warnings信息 4 - 调试日志，日志内容很多，慎重使用 5 - 用于调试web和vmware监控</span><br><span class=\"line\"></span><br><span class=\"line\">ExternalScripts 默认值： /usr/local/share/zabbix/externalscripts 说明： 外部脚本目录</span><br><span class=\"line\"></span><br><span class=\"line\">Fping6Location 默认值：/usr/sbin/fping6 说明：fping6路径，不懂fping的人可以百度一下，如果zabbix非root启动，请给fping6 SUID</span><br><span class=\"line\"></span><br><span class=\"line\">FpingLocation 默认值：/usr/sbin/fping 说明:和上面的一样</span><br><span class=\"line\"></span><br><span class=\"line\">HistoryCacheSize 取值范围：128K-2G 默认值：8M 说明： 历史记录缓存大小，用于存储历史记录</span><br><span class=\"line\"></span><br><span class=\"line\">HistoryTextCacheSize 取值范围：128K-2G 默认值：16M 说明：文本类型历史记录的缓存大小，存储character, text 、log历史记录.</span><br><span class=\"line\"></span><br><span class=\"line\">HousekeepingFrequency 取值范围：0-24 默认值：1 说明：housekeep执行频率，默认每小时回去删除一些过期数据。如果server重启，那么30分钟之后才执行一次，接下来，每隔一小时在执行一次。</span><br><span class=\"line\"></span><br><span class=\"line\">Include 说明：include配置文件，可以使用正则表达式，例如：/usr/local/zabbix-2.4.4/conf/ttlsa.com/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\">JavaGateway 说明：Zabbix Java gateway的主机名，需要启动Java pollers</span><br><span class=\"line\"></span><br><span class=\"line\">JavaGatewayPort 取值范围：1024-32767 默认值：10052 Zabbix Java gateway监听端口</span><br><span class=\"line\"></span><br><span class=\"line\">ListenIP 默认值：0.0.0.0 说明：监听地址，留空则会在所有的地址上监听，可以监听多个IP地址，ip之间使用逗号分隔，例如：127.0.0.1,10.10.0.2</span><br><span class=\"line\"></span><br><span class=\"line\">ListenPort 取值范围：1024-32767 默认值：10051 说明：监听端口</span><br><span class=\"line\"></span><br><span class=\"line\">LoadModule 说明：加载模块，格式: LoadModule=，文件必须在指定的LoadModulePath目录下，如果需要加载多个模块，那么写多个即可。</span><br><span class=\"line\"></span><br><span class=\"line\">LoadModulePath 模块目录，参考上面</span><br><span class=\"line\"></span><br><span class=\"line\">LogFile 日志文件，例如：/data/logs/zabbix/zabbix-server.log</span><br><span class=\"line\"></span><br><span class=\"line\">LogFileSize 取值范围：0-1024 默认值：1 0表示禁用日志自动rotation，如果日志达到了限制，并且rotation失败，老日志文件将会被清空掉，重新生成一个新日志。</span><br><span class=\"line\"></span><br><span class=\"line\">LogSlowQueries 取值范围：0-3600000 默认值：0 多慢的数据库查询将会被记录，单位：毫秒，0表示不记录慢查询。只有在DebugLevel=3时，这个配置才有效。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxHousekeeperDelete 取值范围： 0-1000000 默认值：5000 housekeeping一次删除的数据不能大于MaxHousekeeperDelete</span><br><span class=\"line\"></span><br><span class=\"line\">PidFile 默认值：/tmp/zabbix_server.pid PID文件</span><br><span class=\"line\"></span><br><span class=\"line\">ProxyConfigFrequency 取值范围：1-604800 默认值：3600 proxy被动模式下，server多少秒同步配置文件至proxy。</span><br><span class=\"line\"></span><br><span class=\"line\">ProxyDataFrequency 取值范围：1-3600 默认值:1 被动模式下，zabbix server间隔多少秒向proxy请求历史数据</span><br><span class=\"line\"></span><br><span class=\"line\">SenderFrequency 取值范围：5-3600 默认值：30 间隔多少秒，再尝试发送为发送的报警</span><br><span class=\"line\"></span><br><span class=\"line\">SNMPTrapperFile 默认值：/tmp/zabbix_traps.tmp SNMP trap发送到server的数据临时存放文件。</span><br><span class=\"line\"></span><br><span class=\"line\">SourceIP 出口IP地址</span><br><span class=\"line\"></span><br><span class=\"line\">SSHKeyLocation SSH公钥私钥路径</span><br><span class=\"line\"></span><br><span class=\"line\">SSLCertLocation SSL证书目录，用于web监控</span><br><span class=\"line\"></span><br><span class=\"line\">SSLKeyLocation SSL认证私钥路径、用于web监控</span><br><span class=\"line\"></span><br><span class=\"line\">SSLCALocation SSL认证,CA路径，如果为空，将会使用系统默认的CA</span><br><span class=\"line\"></span><br><span class=\"line\">StartDBSyncers 取值范围：1-100 默认值：4 预先foke DB Syncers的数量，1.8.5以前最大值为64</span><br><span class=\"line\"></span><br><span class=\"line\">StartDiscoverers 取值范围：0-250 默认值：1 pre-forked discoverers的数量，1.8.5版本以前最大可为255</span><br><span class=\"line\"></span><br><span class=\"line\">StartHTTPPollers 取值范围：0-1000 默认值：1 pre-forked HTTP pollers的数量，1.8.5以前最大255</span><br><span class=\"line\"></span><br><span class=\"line\">StartIPMIPollers 取值范围：0-1000 默认值：0 pre-forked IPMI pollers的数量，1.8.5之前，最大为255</span><br><span class=\"line\"></span><br><span class=\"line\">Timeout 取值范围：1-30 默认值：3 agent，snmp，external check的超时时间，单位为秒</span><br><span class=\"line\"></span><br><span class=\"line\">TmpDir 默认值：/tmp</span><br><span class=\"line\"></span><br><span class=\"line\">TrapperTimeout 取值范围：1-300 默认值：300 处理trapper数据的超时时间</span><br><span class=\"line\"></span><br><span class=\"line\">TrendCacheSize 取值范围：128K-2G 默认值：4M 历史数据缓存大小</span><br><span class=\"line\"></span><br><span class=\"line\">UnavailableDelay 取值范围：1-3600 默认值：60 间隔多少秒再次检测主机是否可用</span><br><span class=\"line\"></span><br><span class=\"line\">UnreachableDelay 取值范围：1-3600 默认值：15 间隔多少秒再次检测主机是否可达。</span><br><span class=\"line\"></span><br><span class=\"line\">UnreachablePeriod 取值范围：1-3600 默认值：45 检测到主机不可用，多久将它置为不可达</span><br><span class=\"line\"></span><br><span class=\"line\">User 默认值：zabbix 启动zabbix server的用户，在配置禁止root启动，并且当前shell用户是root得情况下有效。如果当前用户是xiemx，那么zabbix server的运行用户是xiemx</span><br><span class=\"line\"></span><br><span class=\"line\">ValueCacheSize 取值范围：0,128K-64G 默认值：8M 0表示禁用，history value缓存大小，当缓存超标了，将会每隔5分钟往server日志里面记录。养成看日志的好习惯。</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AlertScriptsPath 默认值：/usr/local/share/zabbix/alertscripts 说明：告警脚本目录</span><br><span class=\"line\"></span><br><span class=\"line\">AllowRoot 默认值：0 说明：是否允许使用root启动，0:不允许，1:允许，默认情况下她会使用zabbix用户来启动zabbix进程，不推荐使用root</span><br><span class=\"line\"></span><br><span class=\"line\">CacheSize 取值范围： 128K-8G 默认值：8M 说明：配置缓存，用于存储host，item，trigger数据，2.2.3版本之前最大支持2G，目前最大支持8G，一般用不了多少的。</span><br><span class=\"line\"></span><br><span class=\"line\">CacheUpdateFrequency 取值范围：1-3600 默认值：60 说明：多少秒更新一次配置缓存</span><br><span class=\"line\"></span><br><span class=\"line\">DBHost 默认值：localhost 说明：数据库主机地址</span><br><span class=\"line\"></span><br><span class=\"line\">DBName 默认值：无 必填：是</span><br><span class=\"line\"></span><br><span class=\"line\">DBPassword： 默认值：空 说明：数据库密码</span><br><span class=\"line\"></span><br><span class=\"line\">DBPort 取值范围：1024-65535 默认值:3306 说明：SQLite作为DB，这个选项请忽略，如果使用socket链接，也请忽略。</span><br><span class=\"line\"></span><br><span class=\"line\">DBSchema 说明：Schema名称. 用于 IBM DB2 、 PostgreSQL.</span><br><span class=\"line\"></span><br><span class=\"line\">DBSocket 默认值：/tmp/mysql.sock 说明：mysql sock文件路径</span><br><span class=\"line\"></span><br><span class=\"line\">DebugLevel 取值范围：0-5 默认值：3 说明: 指定debug级别 0 - 基本信息 1 - critical信息 2 - error信息 3 - warnings信息 4 - 调试日志，日志内容很多，慎重使用 5 - 用于调试web和vmware监控</span><br><span class=\"line\"></span><br><span class=\"line\">ExternalScripts 默认值： /usr/local/share/zabbix/externalscripts 说明： 外部脚本目录</span><br><span class=\"line\"></span><br><span class=\"line\">Fping6Location 默认值：/usr/sbin/fping6 说明：fping6路径，不懂fping的人可以百度一下，如果zabbix非root启动，请给fping6 SUID</span><br><span class=\"line\"></span><br><span class=\"line\">FpingLocation 默认值：/usr/sbin/fping 说明:和上面的一样</span><br><span class=\"line\"></span><br><span class=\"line\">HistoryCacheSize 取值范围：128K-2G 默认值：8M 说明： 历史记录缓存大小，用于存储历史记录</span><br><span class=\"line\"></span><br><span class=\"line\">HistoryTextCacheSize 取值范围：128K-2G 默认值：16M 说明：文本类型历史记录的缓存大小，存储character, text 、log历史记录.</span><br><span class=\"line\"></span><br><span class=\"line\">HousekeepingFrequency 取值范围：0-24 默认值：1 说明：housekeep执行频率，默认每小时回去删除一些过期数据。如果server重启，那么30分钟之后才执行一次，接下来，每隔一小时在执行一次。</span><br><span class=\"line\"></span><br><span class=\"line\">Include 说明：include配置文件，可以使用正则表达式，例如：/usr/local/zabbix-2.4.4/conf/ttlsa.com/*.conf</span><br><span class=\"line\"></span><br><span class=\"line\">JavaGateway 说明：Zabbix Java gateway的主机名，需要启动Java pollers</span><br><span class=\"line\"></span><br><span class=\"line\">JavaGatewayPort 取值范围：1024-32767 默认值：10052 Zabbix Java gateway监听端口</span><br><span class=\"line\"></span><br><span class=\"line\">ListenIP 默认值：0.0.0.0 说明：监听地址，留空则会在所有的地址上监听，可以监听多个IP地址，ip之间使用逗号分隔，例如：127.0.0.1,10.10.0.2</span><br><span class=\"line\"></span><br><span class=\"line\">ListenPort 取值范围：1024-32767 默认值：10051 说明：监听端口</span><br><span class=\"line\"></span><br><span class=\"line\">LoadModule 说明：加载模块，格式: LoadModule=，文件必须在指定的LoadModulePath目录下，如果需要加载多个模块，那么写多个即可。</span><br><span class=\"line\"></span><br><span class=\"line\">LoadModulePath 模块目录，参考上面</span><br><span class=\"line\"></span><br><span class=\"line\">LogFile 日志文件，例如：/data/logs/zabbix/zabbix-server.log</span><br><span class=\"line\"></span><br><span class=\"line\">LogFileSize 取值范围：0-1024 默认值：1 0表示禁用日志自动rotation，如果日志达到了限制，并且rotation失败，老日志文件将会被清空掉，重新生成一个新日志。</span><br><span class=\"line\"></span><br><span class=\"line\">LogSlowQueries 取值范围：0-3600000 默认值：0 多慢的数据库查询将会被记录，单位：毫秒，0表示不记录慢查询。只有在DebugLevel=3时，这个配置才有效。</span><br><span class=\"line\"></span><br><span class=\"line\">MaxHousekeeperDelete 取值范围： 0-1000000 默认值：5000 housekeeping一次删除的数据不能大于MaxHousekeeperDelete</span><br><span class=\"line\"></span><br><span class=\"line\">PidFile 默认值：/tmp/zabbix_server.pid PID文件</span><br><span class=\"line\"></span><br><span class=\"line\">ProxyConfigFrequency 取值范围：1-604800 默认值：3600 proxy被动模式下，server多少秒同步配置文件至proxy。</span><br><span class=\"line\"></span><br><span class=\"line\">ProxyDataFrequency 取值范围：1-3600 默认值:1 被动模式下，zabbix server间隔多少秒向proxy请求历史数据</span><br><span class=\"line\"></span><br><span class=\"line\">SenderFrequency 取值范围：5-3600 默认值：30 间隔多少秒，再尝试发送为发送的报警</span><br><span class=\"line\"></span><br><span class=\"line\">SNMPTrapperFile 默认值：/tmp/zabbix_traps.tmp SNMP trap发送到server的数据临时存放文件。</span><br><span class=\"line\"></span><br><span class=\"line\">SourceIP 出口IP地址</span><br><span class=\"line\"></span><br><span class=\"line\">SSHKeyLocation SSH公钥私钥路径</span><br><span class=\"line\"></span><br><span class=\"line\">SSLCertLocation SSL证书目录，用于web监控</span><br><span class=\"line\"></span><br><span class=\"line\">SSLKeyLocation SSL认证私钥路径、用于web监控</span><br><span class=\"line\"></span><br><span class=\"line\">SSLCALocation SSL认证,CA路径，如果为空，将会使用系统默认的CA</span><br><span class=\"line\"></span><br><span class=\"line\">StartDBSyncers 取值范围：1-100 默认值：4 预先foke DB Syncers的数量，1.8.5以前最大值为64</span><br><span class=\"line\"></span><br><span class=\"line\">StartDiscoverers 取值范围：0-250 默认值：1 pre-forked discoverers的数量，1.8.5版本以前最大可为255</span><br><span class=\"line\"></span><br><span class=\"line\">StartHTTPPollers 取值范围：0-1000 默认值：1 pre-forked HTTP pollers的数量，1.8.5以前最大255</span><br><span class=\"line\"></span><br><span class=\"line\">StartIPMIPollers 取值范围：0-1000 默认值：0 pre-forked IPMI pollers的数量，1.8.5之前，最大为255</span><br><span class=\"line\"></span><br><span class=\"line\">Timeout 取值范围：1-30 默认值：3 agent，snmp，external check的超时时间，单位为秒</span><br><span class=\"line\"></span><br><span class=\"line\">TmpDir 默认值：/tmp</span><br><span class=\"line\"></span><br><span class=\"line\">TrapperTimeout 取值范围：1-300 默认值：300 处理trapper数据的超时时间</span><br><span class=\"line\"></span><br><span class=\"line\">TrendCacheSize 取值范围：128K-2G 默认值：4M 历史数据缓存大小</span><br><span class=\"line\"></span><br><span class=\"line\">UnavailableDelay 取值范围：1-3600 默认值：60 间隔多少秒再次检测主机是否可用</span><br><span class=\"line\"></span><br><span class=\"line\">UnreachableDelay 取值范围：1-3600 默认值：15 间隔多少秒再次检测主机是否可达。</span><br><span class=\"line\"></span><br><span class=\"line\">UnreachablePeriod 取值范围：1-3600 默认值：45 检测到主机不可用，多久将它置为不可达</span><br><span class=\"line\"></span><br><span class=\"line\">User 默认值：zabbix 启动zabbix server的用户，在配置禁止root启动，并且当前shell用户是root得情况下有效。如果当前用户是xiemx，那么zabbix server的运行用户是xiemx</span><br><span class=\"line\"></span><br><span class=\"line\">ValueCacheSize 取值范围：0,128K-64G 默认值：8M 0表示禁用，history value缓存大小，当缓存超标了，将会每隔5分钟往server日志里面记录。养成看日志的好习惯。</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"zabbix触发器函数","published":1,"author":"xiemx","comments":1,"date":"2016-12-05T01:12:36.000Z","_content":"\n\n\n不再一一列出，参考官方文档\n\n[https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions](https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions)\n\n","source":"_posts/zabbix-trigger-function.md","raw":"---\nlayout: post\ntitle: zabbix触发器函数\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-12-05 09:12:36\ntags: [ zabbix ]\ncategories:\n    - zabbix\n#permalink: '/2016/12/05/zabbix-trigger-function'\n---\n\n\n\n不再一一列出，参考官方文档\n\n[https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions](https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions)\n\n","slug":"zabbix-trigger-function","updated":"2019-10-21T06:57:42.328Z","photos":[],"link":"","_id":"ck42dyih600bsu9ur5bnjcns7","content":"<p>不再一一列出，参考官方文档</p>\n<p><a href=\"https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions\" target=\"_blank\" rel=\"noopener\">https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>不再一一列出，参考官方文档</p>\n<p><a href=\"https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions\" target=\"_blank\" rel=\"noopener\">https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions</a></p>\n"},{"layout":"post","title":"Zentaopms部署","published":1,"author":"xiemx","comments":1,"date":"2016-03-25T03:03:57.000Z","_content":"\n\n\n \n\n1. 获取软件\n\n   ```shell\n   wget http://sourceforge.net/projects/zentao/files/8.1.3/ZenTaoPMS.8.1.3.zip/download\n   ```\n\n2. 将软件解压放到web服务器的目录下\n\n    ![img](/images/img_56f4aa5d219ba-20190917143633356.png)\n\n3. 创建数据库，授权用户\n\n   ```sql\n   create database zentao;grant all zentao.* to zentao@localhost identified by 'zentap';\n   ```\n\n   \n\n   ![img](/images/img_56f4aa6c69a26-20190917143633077.png)\n\n4. Web访问页面开启安装进程\n\n   访问`http://localhost/zentaopms/www/install.php`，同dz等程序安装相同注意配置时使用授权的账户密码和数据库\n\n   \n\n5. 安装完成后需要破解zentaopms方可正常登录\n\n   通过下面的地址下载loader-wizard：http://www.ioncube.com/loader-wizard/loader-wizard.zip 下载之后，将其解压缩，到web服务器的DocumentRoot下。\n\n   \n\n6. 使用浏览器访问loader-wizard.php文件。该文件会检测当前环境，给出提示解决方法依照步骤处理\n  ![img](/images/img_56f4aa815cb3c-20190917143633401.png)\n\n\n7. 重新web服务启动之后，再次访问loader.php，如果安装成功，系统会提示。\n\n   ![img](/images/img_56f4aa8c14ae0-20190917145027287.png)\n\n   看到这个界面，就表示解密软件已经安装成功了。\n\n8. 再次访问zentaopms的首页测试是否可以正常登录\n  ![img](/images/img_56f4aa989af5e-20190917143633212.png)\n\n \n\n","source":"_posts/zentaopms-deployment.md","raw":"---\nlayout: post\ntitle: Zentaopms部署\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-03-25 11:03:57\ntags: [ zentaopms, deployment]\ncategories:\n    - 'zentaopms'\n    - 'deployment'\n#permalink: '/2016/03/25/zentaopms-deployment'\n---\n\n\n\n \n\n1. 获取软件\n\n   ```shell\n   wget http://sourceforge.net/projects/zentao/files/8.1.3/ZenTaoPMS.8.1.3.zip/download\n   ```\n\n2. 将软件解压放到web服务器的目录下\n\n    ![img](/images/img_56f4aa5d219ba-20190917143633356.png)\n\n3. 创建数据库，授权用户\n\n   ```sql\n   create database zentao;grant all zentao.* to zentao@localhost identified by 'zentap';\n   ```\n\n   \n\n   ![img](/images/img_56f4aa6c69a26-20190917143633077.png)\n\n4. Web访问页面开启安装进程\n\n   访问`http://localhost/zentaopms/www/install.php`，同dz等程序安装相同注意配置时使用授权的账户密码和数据库\n\n   \n\n5. 安装完成后需要破解zentaopms方可正常登录\n\n   通过下面的地址下载loader-wizard：http://www.ioncube.com/loader-wizard/loader-wizard.zip 下载之后，将其解压缩，到web服务器的DocumentRoot下。\n\n   \n\n6. 使用浏览器访问loader-wizard.php文件。该文件会检测当前环境，给出提示解决方法依照步骤处理\n  ![img](/images/img_56f4aa815cb3c-20190917143633401.png)\n\n\n7. 重新web服务启动之后，再次访问loader.php，如果安装成功，系统会提示。\n\n   ![img](/images/img_56f4aa8c14ae0-20190917145027287.png)\n\n   看到这个界面，就表示解密软件已经安装成功了。\n\n8. 再次访问zentaopms的首页测试是否可以正常登录\n  ![img](/images/img_56f4aa989af5e-20190917143633212.png)\n\n \n\n","slug":"zentaopms-deployment","updated":"2019-10-21T06:57:43.061Z","photos":[],"link":"","_id":"ck42dyih700bwu9urgfcgiqk6","content":"<ol>\n<li><p>获取软件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://sourceforge.net/projects/zentao/files/8.1.3/ZenTaoPMS.8.1.3.zip/download</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将软件解压放到web服务器的目录下</p>\n<p> <img src=\"/images/img_56f4aa5d219ba-20190917143633356.png\" alt=\"img\"></p>\n</li>\n<li><p>创建数据库，授权用户</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> zentao;<span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> zentao.* <span class=\"keyword\">to</span> zentao@localhost <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'zentap'</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<p>   <img src=\"/images/img_56f4aa6c69a26-20190917143633077.png\" alt=\"img\"></p>\n<ol start=\"4\">\n<li><p>Web访问页面开启安装进程</p>\n<p>访问<code>http://localhost/zentaopms/www/install.php</code>，同dz等程序安装相同注意配置时使用授权的账户密码和数据库</p>\n</li>\n</ol>\n<ol start=\"5\">\n<li><p>安装完成后需要破解zentaopms方可正常登录</p>\n<p>通过下面的地址下载loader-wizard：<a href=\"http://www.ioncube.com/loader-wizard/loader-wizard.zip\" target=\"_blank\" rel=\"noopener\">http://www.ioncube.com/loader-wizard/loader-wizard.zip</a> 下载之后，将其解压缩，到web服务器的DocumentRoot下。</p>\n</li>\n</ol>\n<ol start=\"6\">\n<li>使用浏览器访问loader-wizard.php文件。该文件会检测当前环境，给出提示解决方法依照步骤处理<br><img src=\"/images/img_56f4aa815cb3c-20190917143633401.png\" alt=\"img\"></li>\n</ol>\n<ol start=\"7\">\n<li><p>重新web服务启动之后，再次访问loader.php，如果安装成功，系统会提示。</p>\n<p><img src=\"/images/img_56f4aa8c14ae0-20190917145027287.png\" alt=\"img\"></p>\n<p>看到这个界面，就表示解密软件已经安装成功了。</p>\n</li>\n<li><p>再次访问zentaopms的首页测试是否可以正常登录<br><img src=\"/images/img_56f4aa989af5e-20190917143633212.png\" alt=\"img\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>获取软件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://sourceforge.net/projects/zentao/files/8.1.3/ZenTaoPMS.8.1.3.zip/download</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将软件解压放到web服务器的目录下</p>\n<p> <img src=\"/images/img_56f4aa5d219ba-20190917143633356.png\" alt=\"img\"></p>\n</li>\n<li><p>创建数据库，授权用户</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> zentao;<span class=\"keyword\">grant</span> <span class=\"keyword\">all</span> zentao.* <span class=\"keyword\">to</span> zentao@localhost <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">'zentap'</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<p>   <img src=\"/images/img_56f4aa6c69a26-20190917143633077.png\" alt=\"img\"></p>\n<ol start=\"4\">\n<li><p>Web访问页面开启安装进程</p>\n<p>访问<code>http://localhost/zentaopms/www/install.php</code>，同dz等程序安装相同注意配置时使用授权的账户密码和数据库</p>\n</li>\n</ol>\n<ol start=\"5\">\n<li><p>安装完成后需要破解zentaopms方可正常登录</p>\n<p>通过下面的地址下载loader-wizard：<a href=\"http://www.ioncube.com/loader-wizard/loader-wizard.zip\" target=\"_blank\" rel=\"noopener\">http://www.ioncube.com/loader-wizard/loader-wizard.zip</a> 下载之后，将其解压缩，到web服务器的DocumentRoot下。</p>\n</li>\n</ol>\n<ol start=\"6\">\n<li>使用浏览器访问loader-wizard.php文件。该文件会检测当前环境，给出提示解决方法依照步骤处理<br><img src=\"/images/img_56f4aa815cb3c-20190917143633401.png\" alt=\"img\"></li>\n</ol>\n<ol start=\"7\">\n<li><p>重新web服务启动之后，再次访问loader.php，如果安装成功，系统会提示。</p>\n<p><img src=\"/images/img_56f4aa8c14ae0-20190917145027287.png\" alt=\"img\"></p>\n<p>看到这个界面，就表示解密软件已经安装成功了。</p>\n</li>\n<li><p>再次访问zentaopms的首页测试是否可以正常登录<br><img src=\"/images/img_56f4aa989af5e-20190917143633212.png\" alt=\"img\"></p>\n</li>\n</ol>\n"},{"layout":"post","title":"Apache配置文件参数详解","published":1,"author":"xiemx","comments":1,"date":"2016-01-17T03:01:54.000Z","_content":"```conf\n[root@localhost ~]# grep -v '^#\\|^$\\|#' /etc/httpd/conf/httpd.conf\nServerTokens OS   当服务器响应主机头（header）信息时显示Apache的版本和\n\n操作系统名称\nServerRoot \"/etc/httpd\"   设置服务器的根目录\nPidFile run/httpd.pid     PID存放位置\nTimeout 60                若60秒后没有收到或送出任何数据就切断该连接\nKeepAlive Off             是否开启保持链接状态\nMaxKeepAliveRequests 100  在使用保持连接功能时，设置客户一次请求连接能\n\n响应文件的最大上限\nKeepAliveTimeout 15       在使用保持连接功能时，两个相邻的连接的时间间\n\n隔超过15秒，就切断连接\n<IfModule prefork.c>      设置使用Prefork MPM运行方式的参数，此运行方式\n\n是Red hat默认的方式\nStartServers       8      设置服务器启动时运行的进程数\nMinSpareServers    5      最小空闲进程数\nMaxSpareServers   20      最大空闲进程数\nServerLimit      256      最大的进程数\nMaxClients       256      最大的请求并发MaxClients=ServerLimit*进程的线\n\n程数\nMaxRequestsPerChild  4000 限制每个子进程在结束处理请求之前能处理的连接\n\n请求为1000\n</IfModule>\n<IfModule worker.c>      设置使用Worker MPM运行方式的参数\nStartServers         4\nMaxClients         300\nMinSpareThreads     25\nMaxSpareThreads     75\nThreadsPerChild     25\nMaxRequestsPerChild  0\n</IfModule>\nListen 80    监听端口\nLoadModule auth_basic_module modules/mod_auth_basic.so\nLoadModule auth_digest_module modules/mod_auth_digest.so\nLoadModule authn_file_module modules/mod_authn_file.so\nLoadModule authn_alias_module modules/mod_authn_alias.so\nLoadModule authn_anon_module modules/mod_authn_anon.so\nLoadModule authn_dbm_module modules/mod_authn_dbm.so\nLoadModule authn_default_module modules/mod_authn_default.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule authz_user_module modules/mod_authz_user.so\nLoadModule authz_owner_module modules/mod_authz_owner.so\nLoadModule authz_groupfile_module modules/mod_authz_groupfile.so\nLoadModule authz_dbm_module modules/mod_authz_dbm.so\nLoadModule authz_default_module modules/mod_authz_default.so\nLoadModule ldap_module modules/mod_ldap.so\nLoadModule authnz_ldap_module modules/mod_authnz_ldap.so\nLoadModule include_module modules/mod_include.so\nLoadModule log_config_module modules/mod_log_config.so\nLoadModule logio_module modules/mod_logio.so\nLoadModule env_module modules/mod_env.so\nLoadModule ext_filter_module modules/mod_ext_filter.so\nLoadModule mime_magic_module modules/mod_mime_magic.so\nLoadModule expires_module modules/mod_expires.so\nLoadModule deflate_module modules/mod_deflate.so\nLoadModule headers_module modules/mod_headers.so\nLoadModule usertrack_module modules/mod_usertrack.so\nLoadModule setenvif_module modules/mod_setenvif.so\nLoadModule mime_module modules/mod_mime.so\nLoadModule dav_module modules/mod_dav.so\nLoadModule status_module modules/mod_status.so\nLoadModule autoindex_module modules/mod_autoindex.so\nLoadModule info_module modules/mod_info.so\nLoadModule dav_fs_module modules/mod_dav_fs.so\nLoadModule vhost_alias_module modules/mod_vhost_alias.so\nLoadModule negotiation_module modules/mod_negotiation.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule actions_module modules/mod_actions.so\nLoadModule speling_module modules/mod_speling.so\nLoadModule userdir_module modules/mod_userdir.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule substitute_module modules/mod_substitute.so\nLoadModule rewrite_module modules/mod_rewrite.so\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_balancer_module modules/mod_proxy_balancer.so\nLoadModule proxy_ftp_module modules/mod_proxy_ftp.so\nLoadModule proxy_http_module modules/mod_proxy_http.so\nLoadModule proxy_ajp_module modules/mod_proxy_ajp.so\nLoadModule proxy_connect_module modules/mod_proxy_connect.so\nLoadModule cache_module modules/mod_cache.so\nLoadModule suexec_module modules/mod_suexec.so\nLoadModule disk_cache_module modules/mod_disk_cache.so\nLoadModule cgi_module modules/mod_cgi.so\nLoadModule version_module modules/mod_version.so\n以上为动态加载的模块\nInclude conf.d/*.conf                   将/etc/httpd/conf.d目录下所有以conf结尾的配置文件包含进来\nUser apache              进程运行账户\nGroup apache           进程运行群组\nServerAdmin root@localhost             Apache服务器管理员的E_mail地址\nUseCanonicalName Off\nDocumentRoot \"/var/www/html\"         设置网站根目录\n<Directory />  设置apache服务器根的访问权限\nOptions FollowSymLinks             允许符号链接\nAllowOverride None               禁止读取.htaccess配置文件的内容\n</Directory>\n<Directory \"/var/www/html\"> 设置Apache根的访问权限\nOptions Indexes FollowSymLinks                      FollowSymLinks允许符号链接，Indexes无首页时罗列出目录下文件\nAllowOverride None\nOrder allow,deny            先执行Allow访问规则，在执行Deny访问规则\nAllow from all                 allow访问规则，允许所有链接\n</Directory>\n<IfModule mod_userdir.c>\nUserDir disabled\n</IfModule>\nDirectoryIndex index.html index.html.var           网站首页文件名称定义\nAccessFileName .htaccess            访问控制文件的名称\n<Files ~ \"^\\.ht\">         关于.ht开头文件的权限控制\nOrder allow,deny\nDeny from all\nSatisfy All            访问.ht开头文件需要满足两种访问控制都允许\n</Files>\nTypesConfig /etc/mime.types            MIME对应格式的配置文件的存放位置\nDefaultType text/plain                        默认的MIME文件类型为纯文本或HTML文件\n<IfModule mod_mime_magic.c>    当mod_mime_magic.c模块被加载时，指定magic信息码配置文件的存放位置\nMIMEMagicFile conf/magic\n</IfModule>\nHostnameLookups Off          关闭记录访问web客户的hostname功能，只记录IP\nErrorLog logs/error_log        错误日志存放位置\nLogLevel warn                        记录日志的等级\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\n\n\\\"\" combined\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\nLogFormat \"%{Referer}i -> %U\" referer\nLogFormat \"%{User-agent}i\" agent\n\n以上为记录日志的四种格式\nCustomLog logs/access_log combined             访问日志的纪录格式为combined（混合型），并指定访问日志存放位置\nServerSignature On                             apache自己产生的页面中使用apache服务器版本的签名\nAlias /icons/ \"/var/www/icons/\"   定义别名/icons/\n<Directory \"/var/www/icons\">\nOptions Indexes MultiViews FollowSymLinks              MultiViews 使用内容协商来决定被发送的网页的性质\nAllowOverride None\nOrder allow,deny\nAllow from all\n</Directory>\n<IfModule mod_dav_fs.c>   DAV加锁数据库文件的存放位置\nDAVLockDB /var/lib/dav/lockdb\n</IfModule>\nScriptAlias /cgi-bin/ \"/var/www/cgi-bin/\"  设置CGI目录的访问别名\n<Directory \"/var/www/cgi-bin\">\nAllowOverride None\nOptions None\nOrder allow,deny\nAllow from all\n</Directory>\nIndexOptions FancyIndexing VersionSort NameWidth=* HTMLTable       未找到首页文件时生存目录列表的方式，FancyIndexing 对每种类型的文件前加上一个小图标以示区别，VersionSort 对同一个软件的多个版本进行排序，NameWidth=* 文件名字段自动适应当前目录下的最长文件名。生成小图标的时候使用AddIcon选项。\nCharset=UTF-8           字符编码\nAddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip\nAddIconByType (TXT,/icons/text.gif) text/*\nAddIconByType (IMG,/icons/image2.gif) image/*\nAddIconByType (SND,/icons/sound2.gif) audio/*\nAddIconByType (VID,/icons/movie.gif) video/*\nAddIcon /icons/binary.gif .bin .exe\nAddIcon /icons/binhex.gif .hqx\nAddIcon /icons/tar.gif .tar\nAddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv\nAddIcon /icons/compressed.gif .Z .z .tgz .gz .zip\nAddIcon /icons/a.gif .ps .ai .eps\nAddIcon /icons/layout.gif .html .shtml .htm .pdf\nAddIcon /icons/text.gif .txt\nAddIcon /icons/c.gif .c\nAddIcon /icons/p.gif .pl .py\nAddIcon /icons/f.gif .for\nAddIcon /icons/dvi.gif .dvi\nAddIcon /icons/uuencoded.gif .uu\nAddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl\nAddIcon /icons/tex.gif .tex\nAddIcon /icons/bomb.gif /core\nAddIcon /icons/back.gif ..\nAddIcon /icons/hand.right.gif README\nAddIcon /icons/folder.gif ^^DIRECTORY^^\nAddIcon /icons/blank.gif ^^BLANKICON^^\nDefaultIcon /icons/unknown.gif      位置类型文件使用此图像作为图标\nReadmeName README.html          当服务器自动列出目录列表时，在所生成的页面之后显示readme.html的内容\nHeaderName HEADER.html            当服务器自动列出目录列表时，在所生成的页面之前显示header.html的内容\nAddLanguage ca .ca\nAddLanguage cs .cz .cs\nAddLanguage da .dk\nAddLanguage de .de\nAddLanguage el .el\nAddLanguage en .en\nAddLanguage eo .eo\nAddLanguage es .es\nAddLanguage et .et\nAddLanguage fr .fr\nAddLanguage he .he\nAddLanguage hr .hr\nAddLanguage it .it\nAddLanguage ja .ja\nAddLanguage ko .ko\nAddLanguage ltz .ltz\nAddLanguage nl .nl\nAddLanguage nn .nn\nAddLanguage no .no\nAddLanguage pl .po\nAddLanguage pt .pt\nAddLanguage pt-BR .pt-br\nAddLanguage ru .ru\nAddLanguage sv .sv\nAddLanguage zh-CN .zh-cn\nAddLanguage zh-TW .zh-tw\n以上为设置网页内容的语言种类\nLanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn\n\nno pl pt pt-BR ru sv zh-CN zh-TW 生效的先后顺序\nForceLanguagePriority Prefer Fallback\nPrefer 当有多种语言可以匹配时，使用LanguagePriority 列表的第一项\nFallback 当没有语言可以匹配时，使用LanguagePriority 列表的第一项\nAddDefaultCharset UTF-8   设置默认字符集\nAddType application/x-compress .Z\nAddType application/x-gzip .gz .tgz\nAddType application/x-x509-ca-cert .crt\nAddType application/x-pkcs7-crl    .crl\n以上为添加一些mime类型\nAddHandler type-map var 设置apcche对某些扩展名的处理方式\nAddType text/html .shtml\nAddOutputFilter INCLUDES .shtml  使用过滤器执行SSI\nAlias /error/ \"/var/www/error/\"  定义错误页面别名\n<IfModule mod_negotiation.c>\n<IfModule mod_include.c>\n<Directory \"/var/www/error\"> 错误页的权限定义\nAllowOverride None\nOptions IncludesNoExec\nAddOutputFilter Includes html\nAddHandler type-map var\nOrder allow,deny\nAllow from all\nLanguagePriority en es de fr\nForceLanguagePriority Prefer Fallback\n</Directory>\n</IfModule>\n</IfModule>\n以下为设置浏览器匹配\nBrowserMatch \"Mozilla/2\" nokeepalive\nBrowserMatch \"MSIE 4\\.0b2;\" nokeepalive downgrade-1.0 force-response-\n\n1.0\nBrowserMatch \"RealPlayer 4\\.0\" force-response-1.0\nBrowserMatch \"Java/1\\.0\" force-response-1.0\nBrowserMatch \"JDK/1\\.0\" force-response-1.0\nBrowserMatch \"Microsoft Data Access Internet Publishing Provider\"\n\nredirect-carefully\nBrowserMatch \"MS FrontPage\" redirect-carefully\nBrowserMatch \"^WebDrive\" redirect-carefully\nBrowserMatch \"^WebDAVFS/1.[0123]\" redirect-carefully\nBrowserMatch \"^gnome-vfs/1.0\" redirect-carefully\nBrowserMatch \"^XML Spy\" redirect-carefully\nBrowserMatch \"^Dreamweaver-WebDAV-SCM1\" redirect-carefully\n```","source":"_posts/apache-configure.md","raw":"---\nlayout: post\ntitle: Apache配置文件参数详解\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-01-17 11:01:54\ntags: [ apache, webserver]\ncategories:\n    - apache\n---\n```conf\n[root@localhost ~]# grep -v '^#\\|^$\\|#' /etc/httpd/conf/httpd.conf\nServerTokens OS   当服务器响应主机头（header）信息时显示Apache的版本和\n\n操作系统名称\nServerRoot \"/etc/httpd\"   设置服务器的根目录\nPidFile run/httpd.pid     PID存放位置\nTimeout 60                若60秒后没有收到或送出任何数据就切断该连接\nKeepAlive Off             是否开启保持链接状态\nMaxKeepAliveRequests 100  在使用保持连接功能时，设置客户一次请求连接能\n\n响应文件的最大上限\nKeepAliveTimeout 15       在使用保持连接功能时，两个相邻的连接的时间间\n\n隔超过15秒，就切断连接\n<IfModule prefork.c>      设置使用Prefork MPM运行方式的参数，此运行方式\n\n是Red hat默认的方式\nStartServers       8      设置服务器启动时运行的进程数\nMinSpareServers    5      最小空闲进程数\nMaxSpareServers   20      最大空闲进程数\nServerLimit      256      最大的进程数\nMaxClients       256      最大的请求并发MaxClients=ServerLimit*进程的线\n\n程数\nMaxRequestsPerChild  4000 限制每个子进程在结束处理请求之前能处理的连接\n\n请求为1000\n</IfModule>\n<IfModule worker.c>      设置使用Worker MPM运行方式的参数\nStartServers         4\nMaxClients         300\nMinSpareThreads     25\nMaxSpareThreads     75\nThreadsPerChild     25\nMaxRequestsPerChild  0\n</IfModule>\nListen 80    监听端口\nLoadModule auth_basic_module modules/mod_auth_basic.so\nLoadModule auth_digest_module modules/mod_auth_digest.so\nLoadModule authn_file_module modules/mod_authn_file.so\nLoadModule authn_alias_module modules/mod_authn_alias.so\nLoadModule authn_anon_module modules/mod_authn_anon.so\nLoadModule authn_dbm_module modules/mod_authn_dbm.so\nLoadModule authn_default_module modules/mod_authn_default.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule authz_user_module modules/mod_authz_user.so\nLoadModule authz_owner_module modules/mod_authz_owner.so\nLoadModule authz_groupfile_module modules/mod_authz_groupfile.so\nLoadModule authz_dbm_module modules/mod_authz_dbm.so\nLoadModule authz_default_module modules/mod_authz_default.so\nLoadModule ldap_module modules/mod_ldap.so\nLoadModule authnz_ldap_module modules/mod_authnz_ldap.so\nLoadModule include_module modules/mod_include.so\nLoadModule log_config_module modules/mod_log_config.so\nLoadModule logio_module modules/mod_logio.so\nLoadModule env_module modules/mod_env.so\nLoadModule ext_filter_module modules/mod_ext_filter.so\nLoadModule mime_magic_module modules/mod_mime_magic.so\nLoadModule expires_module modules/mod_expires.so\nLoadModule deflate_module modules/mod_deflate.so\nLoadModule headers_module modules/mod_headers.so\nLoadModule usertrack_module modules/mod_usertrack.so\nLoadModule setenvif_module modules/mod_setenvif.so\nLoadModule mime_module modules/mod_mime.so\nLoadModule dav_module modules/mod_dav.so\nLoadModule status_module modules/mod_status.so\nLoadModule autoindex_module modules/mod_autoindex.so\nLoadModule info_module modules/mod_info.so\nLoadModule dav_fs_module modules/mod_dav_fs.so\nLoadModule vhost_alias_module modules/mod_vhost_alias.so\nLoadModule negotiation_module modules/mod_negotiation.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule actions_module modules/mod_actions.so\nLoadModule speling_module modules/mod_speling.so\nLoadModule userdir_module modules/mod_userdir.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule substitute_module modules/mod_substitute.so\nLoadModule rewrite_module modules/mod_rewrite.so\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_balancer_module modules/mod_proxy_balancer.so\nLoadModule proxy_ftp_module modules/mod_proxy_ftp.so\nLoadModule proxy_http_module modules/mod_proxy_http.so\nLoadModule proxy_ajp_module modules/mod_proxy_ajp.so\nLoadModule proxy_connect_module modules/mod_proxy_connect.so\nLoadModule cache_module modules/mod_cache.so\nLoadModule suexec_module modules/mod_suexec.so\nLoadModule disk_cache_module modules/mod_disk_cache.so\nLoadModule cgi_module modules/mod_cgi.so\nLoadModule version_module modules/mod_version.so\n以上为动态加载的模块\nInclude conf.d/*.conf                   将/etc/httpd/conf.d目录下所有以conf结尾的配置文件包含进来\nUser apache              进程运行账户\nGroup apache           进程运行群组\nServerAdmin root@localhost             Apache服务器管理员的E_mail地址\nUseCanonicalName Off\nDocumentRoot \"/var/www/html\"         设置网站根目录\n<Directory />  设置apache服务器根的访问权限\nOptions FollowSymLinks             允许符号链接\nAllowOverride None               禁止读取.htaccess配置文件的内容\n</Directory>\n<Directory \"/var/www/html\"> 设置Apache根的访问权限\nOptions Indexes FollowSymLinks                      FollowSymLinks允许符号链接，Indexes无首页时罗列出目录下文件\nAllowOverride None\nOrder allow,deny            先执行Allow访问规则，在执行Deny访问规则\nAllow from all                 allow访问规则，允许所有链接\n</Directory>\n<IfModule mod_userdir.c>\nUserDir disabled\n</IfModule>\nDirectoryIndex index.html index.html.var           网站首页文件名称定义\nAccessFileName .htaccess            访问控制文件的名称\n<Files ~ \"^\\.ht\">         关于.ht开头文件的权限控制\nOrder allow,deny\nDeny from all\nSatisfy All            访问.ht开头文件需要满足两种访问控制都允许\n</Files>\nTypesConfig /etc/mime.types            MIME对应格式的配置文件的存放位置\nDefaultType text/plain                        默认的MIME文件类型为纯文本或HTML文件\n<IfModule mod_mime_magic.c>    当mod_mime_magic.c模块被加载时，指定magic信息码配置文件的存放位置\nMIMEMagicFile conf/magic\n</IfModule>\nHostnameLookups Off          关闭记录访问web客户的hostname功能，只记录IP\nErrorLog logs/error_log        错误日志存放位置\nLogLevel warn                        记录日志的等级\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\n\n\\\"\" combined\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\nLogFormat \"%{Referer}i -> %U\" referer\nLogFormat \"%{User-agent}i\" agent\n\n以上为记录日志的四种格式\nCustomLog logs/access_log combined             访问日志的纪录格式为combined（混合型），并指定访问日志存放位置\nServerSignature On                             apache自己产生的页面中使用apache服务器版本的签名\nAlias /icons/ \"/var/www/icons/\"   定义别名/icons/\n<Directory \"/var/www/icons\">\nOptions Indexes MultiViews FollowSymLinks              MultiViews 使用内容协商来决定被发送的网页的性质\nAllowOverride None\nOrder allow,deny\nAllow from all\n</Directory>\n<IfModule mod_dav_fs.c>   DAV加锁数据库文件的存放位置\nDAVLockDB /var/lib/dav/lockdb\n</IfModule>\nScriptAlias /cgi-bin/ \"/var/www/cgi-bin/\"  设置CGI目录的访问别名\n<Directory \"/var/www/cgi-bin\">\nAllowOverride None\nOptions None\nOrder allow,deny\nAllow from all\n</Directory>\nIndexOptions FancyIndexing VersionSort NameWidth=* HTMLTable       未找到首页文件时生存目录列表的方式，FancyIndexing 对每种类型的文件前加上一个小图标以示区别，VersionSort 对同一个软件的多个版本进行排序，NameWidth=* 文件名字段自动适应当前目录下的最长文件名。生成小图标的时候使用AddIcon选项。\nCharset=UTF-8           字符编码\nAddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip\nAddIconByType (TXT,/icons/text.gif) text/*\nAddIconByType (IMG,/icons/image2.gif) image/*\nAddIconByType (SND,/icons/sound2.gif) audio/*\nAddIconByType (VID,/icons/movie.gif) video/*\nAddIcon /icons/binary.gif .bin .exe\nAddIcon /icons/binhex.gif .hqx\nAddIcon /icons/tar.gif .tar\nAddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv\nAddIcon /icons/compressed.gif .Z .z .tgz .gz .zip\nAddIcon /icons/a.gif .ps .ai .eps\nAddIcon /icons/layout.gif .html .shtml .htm .pdf\nAddIcon /icons/text.gif .txt\nAddIcon /icons/c.gif .c\nAddIcon /icons/p.gif .pl .py\nAddIcon /icons/f.gif .for\nAddIcon /icons/dvi.gif .dvi\nAddIcon /icons/uuencoded.gif .uu\nAddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl\nAddIcon /icons/tex.gif .tex\nAddIcon /icons/bomb.gif /core\nAddIcon /icons/back.gif ..\nAddIcon /icons/hand.right.gif README\nAddIcon /icons/folder.gif ^^DIRECTORY^^\nAddIcon /icons/blank.gif ^^BLANKICON^^\nDefaultIcon /icons/unknown.gif      位置类型文件使用此图像作为图标\nReadmeName README.html          当服务器自动列出目录列表时，在所生成的页面之后显示readme.html的内容\nHeaderName HEADER.html            当服务器自动列出目录列表时，在所生成的页面之前显示header.html的内容\nAddLanguage ca .ca\nAddLanguage cs .cz .cs\nAddLanguage da .dk\nAddLanguage de .de\nAddLanguage el .el\nAddLanguage en .en\nAddLanguage eo .eo\nAddLanguage es .es\nAddLanguage et .et\nAddLanguage fr .fr\nAddLanguage he .he\nAddLanguage hr .hr\nAddLanguage it .it\nAddLanguage ja .ja\nAddLanguage ko .ko\nAddLanguage ltz .ltz\nAddLanguage nl .nl\nAddLanguage nn .nn\nAddLanguage no .no\nAddLanguage pl .po\nAddLanguage pt .pt\nAddLanguage pt-BR .pt-br\nAddLanguage ru .ru\nAddLanguage sv .sv\nAddLanguage zh-CN .zh-cn\nAddLanguage zh-TW .zh-tw\n以上为设置网页内容的语言种类\nLanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn\n\nno pl pt pt-BR ru sv zh-CN zh-TW 生效的先后顺序\nForceLanguagePriority Prefer Fallback\nPrefer 当有多种语言可以匹配时，使用LanguagePriority 列表的第一项\nFallback 当没有语言可以匹配时，使用LanguagePriority 列表的第一项\nAddDefaultCharset UTF-8   设置默认字符集\nAddType application/x-compress .Z\nAddType application/x-gzip .gz .tgz\nAddType application/x-x509-ca-cert .crt\nAddType application/x-pkcs7-crl    .crl\n以上为添加一些mime类型\nAddHandler type-map var 设置apcche对某些扩展名的处理方式\nAddType text/html .shtml\nAddOutputFilter INCLUDES .shtml  使用过滤器执行SSI\nAlias /error/ \"/var/www/error/\"  定义错误页面别名\n<IfModule mod_negotiation.c>\n<IfModule mod_include.c>\n<Directory \"/var/www/error\"> 错误页的权限定义\nAllowOverride None\nOptions IncludesNoExec\nAddOutputFilter Includes html\nAddHandler type-map var\nOrder allow,deny\nAllow from all\nLanguagePriority en es de fr\nForceLanguagePriority Prefer Fallback\n</Directory>\n</IfModule>\n</IfModule>\n以下为设置浏览器匹配\nBrowserMatch \"Mozilla/2\" nokeepalive\nBrowserMatch \"MSIE 4\\.0b2;\" nokeepalive downgrade-1.0 force-response-\n\n1.0\nBrowserMatch \"RealPlayer 4\\.0\" force-response-1.0\nBrowserMatch \"Java/1\\.0\" force-response-1.0\nBrowserMatch \"JDK/1\\.0\" force-response-1.0\nBrowserMatch \"Microsoft Data Access Internet Publishing Provider\"\n\nredirect-carefully\nBrowserMatch \"MS FrontPage\" redirect-carefully\nBrowserMatch \"^WebDrive\" redirect-carefully\nBrowserMatch \"^WebDAVFS/1.[0123]\" redirect-carefully\nBrowserMatch \"^gnome-vfs/1.0\" redirect-carefully\nBrowserMatch \"^XML Spy\" redirect-carefully\nBrowserMatch \"^Dreamweaver-WebDAV-SCM1\" redirect-carefully\n```","slug":"apache-configure","updated":"2019-10-21T06:57:42.923Z","photos":[],"link":"","_id":"ck42dyijh00jqu9urj60iu6i2","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# grep -v &apos;^#\\|^$\\|#&apos; /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">ServerTokens OS   当服务器响应主机头（header）信息时显示Apache的版本和</span><br><span class=\"line\"></span><br><span class=\"line\">操作系统名称</span><br><span class=\"line\">ServerRoot &quot;/etc/httpd&quot;   设置服务器的根目录</span><br><span class=\"line\">PidFile run/httpd.pid     PID存放位置</span><br><span class=\"line\">Timeout 60                若60秒后没有收到或送出任何数据就切断该连接</span><br><span class=\"line\">KeepAlive Off             是否开启保持链接状态</span><br><span class=\"line\">MaxKeepAliveRequests 100  在使用保持连接功能时，设置客户一次请求连接能</span><br><span class=\"line\"></span><br><span class=\"line\">响应文件的最大上限</span><br><span class=\"line\">KeepAliveTimeout 15       在使用保持连接功能时，两个相邻的连接的时间间</span><br><span class=\"line\"></span><br><span class=\"line\">隔超过15秒，就切断连接</span><br><span class=\"line\">&lt;IfModule prefork.c&gt;      设置使用Prefork MPM运行方式的参数，此运行方式</span><br><span class=\"line\"></span><br><span class=\"line\">是Red hat默认的方式</span><br><span class=\"line\">StartServers       8      设置服务器启动时运行的进程数</span><br><span class=\"line\">MinSpareServers    5      最小空闲进程数</span><br><span class=\"line\">MaxSpareServers   20      最大空闲进程数</span><br><span class=\"line\">ServerLimit      256      最大的进程数</span><br><span class=\"line\">MaxClients       256      最大的请求并发MaxClients=ServerLimit*进程的线</span><br><span class=\"line\"></span><br><span class=\"line\">程数</span><br><span class=\"line\">MaxRequestsPerChild  4000 限制每个子进程在结束处理请求之前能处理的连接</span><br><span class=\"line\"></span><br><span class=\"line\">请求为1000</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">&lt;IfModule worker.c&gt;      设置使用Worker MPM运行方式的参数</span><br><span class=\"line\">StartServers         4</span><br><span class=\"line\">MaxClients         300</span><br><span class=\"line\">MinSpareThreads     25</span><br><span class=\"line\">MaxSpareThreads     75</span><br><span class=\"line\">ThreadsPerChild     25</span><br><span class=\"line\">MaxRequestsPerChild  0</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">Listen 80    监听端口</span><br><span class=\"line\">LoadModule auth_basic_module modules/mod_auth_basic.so</span><br><span class=\"line\">LoadModule auth_digest_module modules/mod_auth_digest.so</span><br><span class=\"line\">LoadModule authn_file_module modules/mod_authn_file.so</span><br><span class=\"line\">LoadModule authn_alias_module modules/mod_authn_alias.so</span><br><span class=\"line\">LoadModule authn_anon_module modules/mod_authn_anon.so</span><br><span class=\"line\">LoadModule authn_dbm_module modules/mod_authn_dbm.so</span><br><span class=\"line\">LoadModule authn_default_module modules/mod_authn_default.so</span><br><span class=\"line\">LoadModule authz_host_module modules/mod_authz_host.so</span><br><span class=\"line\">LoadModule authz_user_module modules/mod_authz_user.so</span><br><span class=\"line\">LoadModule authz_owner_module modules/mod_authz_owner.so</span><br><span class=\"line\">LoadModule authz_groupfile_module modules/mod_authz_groupfile.so</span><br><span class=\"line\">LoadModule authz_dbm_module modules/mod_authz_dbm.so</span><br><span class=\"line\">LoadModule authz_default_module modules/mod_authz_default.so</span><br><span class=\"line\">LoadModule ldap_module modules/mod_ldap.so</span><br><span class=\"line\">LoadModule authnz_ldap_module modules/mod_authnz_ldap.so</span><br><span class=\"line\">LoadModule include_module modules/mod_include.so</span><br><span class=\"line\">LoadModule log_config_module modules/mod_log_config.so</span><br><span class=\"line\">LoadModule logio_module modules/mod_logio.so</span><br><span class=\"line\">LoadModule env_module modules/mod_env.so</span><br><span class=\"line\">LoadModule ext_filter_module modules/mod_ext_filter.so</span><br><span class=\"line\">LoadModule mime_magic_module modules/mod_mime_magic.so</span><br><span class=\"line\">LoadModule expires_module modules/mod_expires.so</span><br><span class=\"line\">LoadModule deflate_module modules/mod_deflate.so</span><br><span class=\"line\">LoadModule headers_module modules/mod_headers.so</span><br><span class=\"line\">LoadModule usertrack_module modules/mod_usertrack.so</span><br><span class=\"line\">LoadModule setenvif_module modules/mod_setenvif.so</span><br><span class=\"line\">LoadModule mime_module modules/mod_mime.so</span><br><span class=\"line\">LoadModule dav_module modules/mod_dav.so</span><br><span class=\"line\">LoadModule status_module modules/mod_status.so</span><br><span class=\"line\">LoadModule autoindex_module modules/mod_autoindex.so</span><br><span class=\"line\">LoadModule info_module modules/mod_info.so</span><br><span class=\"line\">LoadModule dav_fs_module modules/mod_dav_fs.so</span><br><span class=\"line\">LoadModule vhost_alias_module modules/mod_vhost_alias.so</span><br><span class=\"line\">LoadModule negotiation_module modules/mod_negotiation.so</span><br><span class=\"line\">LoadModule dir_module modules/mod_dir.so</span><br><span class=\"line\">LoadModule actions_module modules/mod_actions.so</span><br><span class=\"line\">LoadModule speling_module modules/mod_speling.so</span><br><span class=\"line\">LoadModule userdir_module modules/mod_userdir.so</span><br><span class=\"line\">LoadModule alias_module modules/mod_alias.so</span><br><span class=\"line\">LoadModule substitute_module modules/mod_substitute.so</span><br><span class=\"line\">LoadModule rewrite_module modules/mod_rewrite.so</span><br><span class=\"line\">LoadModule proxy_module modules/mod_proxy.so</span><br><span class=\"line\">LoadModule proxy_balancer_module modules/mod_proxy_balancer.so</span><br><span class=\"line\">LoadModule proxy_ftp_module modules/mod_proxy_ftp.so</span><br><span class=\"line\">LoadModule proxy_http_module modules/mod_proxy_http.so</span><br><span class=\"line\">LoadModule proxy_ajp_module modules/mod_proxy_ajp.so</span><br><span class=\"line\">LoadModule proxy_connect_module modules/mod_proxy_connect.so</span><br><span class=\"line\">LoadModule cache_module modules/mod_cache.so</span><br><span class=\"line\">LoadModule suexec_module modules/mod_suexec.so</span><br><span class=\"line\">LoadModule disk_cache_module modules/mod_disk_cache.so</span><br><span class=\"line\">LoadModule cgi_module modules/mod_cgi.so</span><br><span class=\"line\">LoadModule version_module modules/mod_version.so</span><br><span class=\"line\">以上为动态加载的模块</span><br><span class=\"line\">Include conf.d/*.conf                   将/etc/httpd/conf.d目录下所有以conf结尾的配置文件包含进来</span><br><span class=\"line\">User apache              进程运行账户</span><br><span class=\"line\">Group apache           进程运行群组</span><br><span class=\"line\">ServerAdmin root@localhost             Apache服务器管理员的E_mail地址</span><br><span class=\"line\">UseCanonicalName Off</span><br><span class=\"line\">DocumentRoot &quot;/var/www/html&quot;         设置网站根目录</span><br><span class=\"line\">&lt;Directory /&gt;  设置apache服务器根的访问权限</span><br><span class=\"line\">Options FollowSymLinks             允许符号链接</span><br><span class=\"line\">AllowOverride None               禁止读取.htaccess配置文件的内容</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;Directory &quot;/var/www/html&quot;&gt; 设置Apache根的访问权限</span><br><span class=\"line\">Options Indexes FollowSymLinks                      FollowSymLinks允许符号链接，Indexes无首页时罗列出目录下文件</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Order allow,deny            先执行Allow访问规则，在执行Deny访问规则</span><br><span class=\"line\">Allow from all                 allow访问规则，允许所有链接</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;IfModule mod_userdir.c&gt;</span><br><span class=\"line\">UserDir disabled</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">DirectoryIndex index.html index.html.var           网站首页文件名称定义</span><br><span class=\"line\">AccessFileName .htaccess            访问控制文件的名称</span><br><span class=\"line\">&lt;Files ~ &quot;^\\.ht&quot;&gt;         关于.ht开头文件的权限控制</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Deny from all</span><br><span class=\"line\">Satisfy All            访问.ht开头文件需要满足两种访问控制都允许</span><br><span class=\"line\">&lt;/Files&gt;</span><br><span class=\"line\">TypesConfig /etc/mime.types            MIME对应格式的配置文件的存放位置</span><br><span class=\"line\">DefaultType text/plain                        默认的MIME文件类型为纯文本或HTML文件</span><br><span class=\"line\">&lt;IfModule mod_mime_magic.c&gt;    当mod_mime_magic.c模块被加载时，指定magic信息码配置文件的存放位置</span><br><span class=\"line\">MIMEMagicFile conf/magic</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">HostnameLookups Off          关闭记录访问web客户的hostname功能，只记录IP</span><br><span class=\"line\">ErrorLog logs/error_log        错误日志存放位置</span><br><span class=\"line\">LogLevel warn                        记录日志的等级</span><br><span class=\"line\">LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%&#123;Referer&#125;i\\&quot; \\&quot;%&#123;User-Agent&#125;i</span><br><span class=\"line\"></span><br><span class=\"line\">\\&quot;&quot; combined</span><br><span class=\"line\">LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b&quot; common</span><br><span class=\"line\">LogFormat &quot;%&#123;Referer&#125;i -&gt; %U&quot; referer</span><br><span class=\"line\">LogFormat &quot;%&#123;User-agent&#125;i&quot; agent</span><br><span class=\"line\"></span><br><span class=\"line\">以上为记录日志的四种格式</span><br><span class=\"line\">CustomLog logs/access_log combined             访问日志的纪录格式为combined（混合型），并指定访问日志存放位置</span><br><span class=\"line\">ServerSignature On                             apache自己产生的页面中使用apache服务器版本的签名</span><br><span class=\"line\">Alias /icons/ &quot;/var/www/icons/&quot;   定义别名/icons/</span><br><span class=\"line\">&lt;Directory &quot;/var/www/icons&quot;&gt;</span><br><span class=\"line\">Options Indexes MultiViews FollowSymLinks              MultiViews 使用内容协商来决定被发送的网页的性质</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Allow from all</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;IfModule mod_dav_fs.c&gt;   DAV加锁数据库文件的存放位置</span><br><span class=\"line\">DAVLockDB /var/lib/dav/lockdb</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">ScriptAlias /cgi-bin/ &quot;/var/www/cgi-bin/&quot;  设置CGI目录的访问别名</span><br><span class=\"line\">&lt;Directory &quot;/var/www/cgi-bin&quot;&gt;</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Options None</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Allow from all</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">IndexOptions FancyIndexing VersionSort NameWidth=* HTMLTable       未找到首页文件时生存目录列表的方式，FancyIndexing 对每种类型的文件前加上一个小图标以示区别，VersionSort 对同一个软件的多个版本进行排序，NameWidth=* 文件名字段自动适应当前目录下的最长文件名。生成小图标的时候使用AddIcon选项。</span><br><span class=\"line\">Charset=UTF-8           字符编码</span><br><span class=\"line\">AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip</span><br><span class=\"line\">AddIconByType (TXT,/icons/text.gif) text/*</span><br><span class=\"line\">AddIconByType (IMG,/icons/image2.gif) image/*</span><br><span class=\"line\">AddIconByType (SND,/icons/sound2.gif) audio/*</span><br><span class=\"line\">AddIconByType (VID,/icons/movie.gif) video/*</span><br><span class=\"line\">AddIcon /icons/binary.gif .bin .exe</span><br><span class=\"line\">AddIcon /icons/binhex.gif .hqx</span><br><span class=\"line\">AddIcon /icons/tar.gif .tar</span><br><span class=\"line\">AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv</span><br><span class=\"line\">AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip</span><br><span class=\"line\">AddIcon /icons/a.gif .ps .ai .eps</span><br><span class=\"line\">AddIcon /icons/layout.gif .html .shtml .htm .pdf</span><br><span class=\"line\">AddIcon /icons/text.gif .txt</span><br><span class=\"line\">AddIcon /icons/c.gif .c</span><br><span class=\"line\">AddIcon /icons/p.gif .pl .py</span><br><span class=\"line\">AddIcon /icons/f.gif .for</span><br><span class=\"line\">AddIcon /icons/dvi.gif .dvi</span><br><span class=\"line\">AddIcon /icons/uuencoded.gif .uu</span><br><span class=\"line\">AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl</span><br><span class=\"line\">AddIcon /icons/tex.gif .tex</span><br><span class=\"line\">AddIcon /icons/bomb.gif /core</span><br><span class=\"line\">AddIcon /icons/back.gif ..</span><br><span class=\"line\">AddIcon /icons/hand.right.gif README</span><br><span class=\"line\">AddIcon /icons/folder.gif ^^DIRECTORY^^</span><br><span class=\"line\">AddIcon /icons/blank.gif ^^BLANKICON^^</span><br><span class=\"line\">DefaultIcon /icons/unknown.gif      位置类型文件使用此图像作为图标</span><br><span class=\"line\">ReadmeName README.html          当服务器自动列出目录列表时，在所生成的页面之后显示readme.html的内容</span><br><span class=\"line\">HeaderName HEADER.html            当服务器自动列出目录列表时，在所生成的页面之前显示header.html的内容</span><br><span class=\"line\">AddLanguage ca .ca</span><br><span class=\"line\">AddLanguage cs .cz .cs</span><br><span class=\"line\">AddLanguage da .dk</span><br><span class=\"line\">AddLanguage de .de</span><br><span class=\"line\">AddLanguage el .el</span><br><span class=\"line\">AddLanguage en .en</span><br><span class=\"line\">AddLanguage eo .eo</span><br><span class=\"line\">AddLanguage es .es</span><br><span class=\"line\">AddLanguage et .et</span><br><span class=\"line\">AddLanguage fr .fr</span><br><span class=\"line\">AddLanguage he .he</span><br><span class=\"line\">AddLanguage hr .hr</span><br><span class=\"line\">AddLanguage it .it</span><br><span class=\"line\">AddLanguage ja .ja</span><br><span class=\"line\">AddLanguage ko .ko</span><br><span class=\"line\">AddLanguage ltz .ltz</span><br><span class=\"line\">AddLanguage nl .nl</span><br><span class=\"line\">AddLanguage nn .nn</span><br><span class=\"line\">AddLanguage no .no</span><br><span class=\"line\">AddLanguage pl .po</span><br><span class=\"line\">AddLanguage pt .pt</span><br><span class=\"line\">AddLanguage pt-BR .pt-br</span><br><span class=\"line\">AddLanguage ru .ru</span><br><span class=\"line\">AddLanguage sv .sv</span><br><span class=\"line\">AddLanguage zh-CN .zh-cn</span><br><span class=\"line\">AddLanguage zh-TW .zh-tw</span><br><span class=\"line\">以上为设置网页内容的语言种类</span><br><span class=\"line\">LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn</span><br><span class=\"line\"></span><br><span class=\"line\">no pl pt pt-BR ru sv zh-CN zh-TW 生效的先后顺序</span><br><span class=\"line\">ForceLanguagePriority Prefer Fallback</span><br><span class=\"line\">Prefer 当有多种语言可以匹配时，使用LanguagePriority 列表的第一项</span><br><span class=\"line\">Fallback 当没有语言可以匹配时，使用LanguagePriority 列表的第一项</span><br><span class=\"line\">AddDefaultCharset UTF-8   设置默认字符集</span><br><span class=\"line\">AddType application/x-compress .Z</span><br><span class=\"line\">AddType application/x-gzip .gz .tgz</span><br><span class=\"line\">AddType application/x-x509-ca-cert .crt</span><br><span class=\"line\">AddType application/x-pkcs7-crl    .crl</span><br><span class=\"line\">以上为添加一些mime类型</span><br><span class=\"line\">AddHandler type-map var 设置apcche对某些扩展名的处理方式</span><br><span class=\"line\">AddType text/html .shtml</span><br><span class=\"line\">AddOutputFilter INCLUDES .shtml  使用过滤器执行SSI</span><br><span class=\"line\">Alias /error/ &quot;/var/www/error/&quot;  定义错误页面别名</span><br><span class=\"line\">&lt;IfModule mod_negotiation.c&gt;</span><br><span class=\"line\">&lt;IfModule mod_include.c&gt;</span><br><span class=\"line\">&lt;Directory &quot;/var/www/error&quot;&gt; 错误页的权限定义</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Options IncludesNoExec</span><br><span class=\"line\">AddOutputFilter Includes html</span><br><span class=\"line\">AddHandler type-map var</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Allow from all</span><br><span class=\"line\">LanguagePriority en es de fr</span><br><span class=\"line\">ForceLanguagePriority Prefer Fallback</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">以下为设置浏览器匹配</span><br><span class=\"line\">BrowserMatch &quot;Mozilla/2&quot; nokeepalive</span><br><span class=\"line\">BrowserMatch &quot;MSIE 4\\.0b2;&quot; nokeepalive downgrade-1.0 force-response-</span><br><span class=\"line\"></span><br><span class=\"line\">1.0</span><br><span class=\"line\">BrowserMatch &quot;RealPlayer 4\\.0&quot; force-response-1.0</span><br><span class=\"line\">BrowserMatch &quot;Java/1\\.0&quot; force-response-1.0</span><br><span class=\"line\">BrowserMatch &quot;JDK/1\\.0&quot; force-response-1.0</span><br><span class=\"line\">BrowserMatch &quot;Microsoft Data Access Internet Publishing Provider&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;MS FrontPage&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^WebDrive&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^WebDAVFS/1.[0123]&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^gnome-vfs/1.0&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^XML Spy&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^Dreamweaver-WebDAV-SCM1&quot; redirect-carefully</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# grep -v &apos;^#\\|^$\\|#&apos; /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">ServerTokens OS   当服务器响应主机头（header）信息时显示Apache的版本和</span><br><span class=\"line\"></span><br><span class=\"line\">操作系统名称</span><br><span class=\"line\">ServerRoot &quot;/etc/httpd&quot;   设置服务器的根目录</span><br><span class=\"line\">PidFile run/httpd.pid     PID存放位置</span><br><span class=\"line\">Timeout 60                若60秒后没有收到或送出任何数据就切断该连接</span><br><span class=\"line\">KeepAlive Off             是否开启保持链接状态</span><br><span class=\"line\">MaxKeepAliveRequests 100  在使用保持连接功能时，设置客户一次请求连接能</span><br><span class=\"line\"></span><br><span class=\"line\">响应文件的最大上限</span><br><span class=\"line\">KeepAliveTimeout 15       在使用保持连接功能时，两个相邻的连接的时间间</span><br><span class=\"line\"></span><br><span class=\"line\">隔超过15秒，就切断连接</span><br><span class=\"line\">&lt;IfModule prefork.c&gt;      设置使用Prefork MPM运行方式的参数，此运行方式</span><br><span class=\"line\"></span><br><span class=\"line\">是Red hat默认的方式</span><br><span class=\"line\">StartServers       8      设置服务器启动时运行的进程数</span><br><span class=\"line\">MinSpareServers    5      最小空闲进程数</span><br><span class=\"line\">MaxSpareServers   20      最大空闲进程数</span><br><span class=\"line\">ServerLimit      256      最大的进程数</span><br><span class=\"line\">MaxClients       256      最大的请求并发MaxClients=ServerLimit*进程的线</span><br><span class=\"line\"></span><br><span class=\"line\">程数</span><br><span class=\"line\">MaxRequestsPerChild  4000 限制每个子进程在结束处理请求之前能处理的连接</span><br><span class=\"line\"></span><br><span class=\"line\">请求为1000</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">&lt;IfModule worker.c&gt;      设置使用Worker MPM运行方式的参数</span><br><span class=\"line\">StartServers         4</span><br><span class=\"line\">MaxClients         300</span><br><span class=\"line\">MinSpareThreads     25</span><br><span class=\"line\">MaxSpareThreads     75</span><br><span class=\"line\">ThreadsPerChild     25</span><br><span class=\"line\">MaxRequestsPerChild  0</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">Listen 80    监听端口</span><br><span class=\"line\">LoadModule auth_basic_module modules/mod_auth_basic.so</span><br><span class=\"line\">LoadModule auth_digest_module modules/mod_auth_digest.so</span><br><span class=\"line\">LoadModule authn_file_module modules/mod_authn_file.so</span><br><span class=\"line\">LoadModule authn_alias_module modules/mod_authn_alias.so</span><br><span class=\"line\">LoadModule authn_anon_module modules/mod_authn_anon.so</span><br><span class=\"line\">LoadModule authn_dbm_module modules/mod_authn_dbm.so</span><br><span class=\"line\">LoadModule authn_default_module modules/mod_authn_default.so</span><br><span class=\"line\">LoadModule authz_host_module modules/mod_authz_host.so</span><br><span class=\"line\">LoadModule authz_user_module modules/mod_authz_user.so</span><br><span class=\"line\">LoadModule authz_owner_module modules/mod_authz_owner.so</span><br><span class=\"line\">LoadModule authz_groupfile_module modules/mod_authz_groupfile.so</span><br><span class=\"line\">LoadModule authz_dbm_module modules/mod_authz_dbm.so</span><br><span class=\"line\">LoadModule authz_default_module modules/mod_authz_default.so</span><br><span class=\"line\">LoadModule ldap_module modules/mod_ldap.so</span><br><span class=\"line\">LoadModule authnz_ldap_module modules/mod_authnz_ldap.so</span><br><span class=\"line\">LoadModule include_module modules/mod_include.so</span><br><span class=\"line\">LoadModule log_config_module modules/mod_log_config.so</span><br><span class=\"line\">LoadModule logio_module modules/mod_logio.so</span><br><span class=\"line\">LoadModule env_module modules/mod_env.so</span><br><span class=\"line\">LoadModule ext_filter_module modules/mod_ext_filter.so</span><br><span class=\"line\">LoadModule mime_magic_module modules/mod_mime_magic.so</span><br><span class=\"line\">LoadModule expires_module modules/mod_expires.so</span><br><span class=\"line\">LoadModule deflate_module modules/mod_deflate.so</span><br><span class=\"line\">LoadModule headers_module modules/mod_headers.so</span><br><span class=\"line\">LoadModule usertrack_module modules/mod_usertrack.so</span><br><span class=\"line\">LoadModule setenvif_module modules/mod_setenvif.so</span><br><span class=\"line\">LoadModule mime_module modules/mod_mime.so</span><br><span class=\"line\">LoadModule dav_module modules/mod_dav.so</span><br><span class=\"line\">LoadModule status_module modules/mod_status.so</span><br><span class=\"line\">LoadModule autoindex_module modules/mod_autoindex.so</span><br><span class=\"line\">LoadModule info_module modules/mod_info.so</span><br><span class=\"line\">LoadModule dav_fs_module modules/mod_dav_fs.so</span><br><span class=\"line\">LoadModule vhost_alias_module modules/mod_vhost_alias.so</span><br><span class=\"line\">LoadModule negotiation_module modules/mod_negotiation.so</span><br><span class=\"line\">LoadModule dir_module modules/mod_dir.so</span><br><span class=\"line\">LoadModule actions_module modules/mod_actions.so</span><br><span class=\"line\">LoadModule speling_module modules/mod_speling.so</span><br><span class=\"line\">LoadModule userdir_module modules/mod_userdir.so</span><br><span class=\"line\">LoadModule alias_module modules/mod_alias.so</span><br><span class=\"line\">LoadModule substitute_module modules/mod_substitute.so</span><br><span class=\"line\">LoadModule rewrite_module modules/mod_rewrite.so</span><br><span class=\"line\">LoadModule proxy_module modules/mod_proxy.so</span><br><span class=\"line\">LoadModule proxy_balancer_module modules/mod_proxy_balancer.so</span><br><span class=\"line\">LoadModule proxy_ftp_module modules/mod_proxy_ftp.so</span><br><span class=\"line\">LoadModule proxy_http_module modules/mod_proxy_http.so</span><br><span class=\"line\">LoadModule proxy_ajp_module modules/mod_proxy_ajp.so</span><br><span class=\"line\">LoadModule proxy_connect_module modules/mod_proxy_connect.so</span><br><span class=\"line\">LoadModule cache_module modules/mod_cache.so</span><br><span class=\"line\">LoadModule suexec_module modules/mod_suexec.so</span><br><span class=\"line\">LoadModule disk_cache_module modules/mod_disk_cache.so</span><br><span class=\"line\">LoadModule cgi_module modules/mod_cgi.so</span><br><span class=\"line\">LoadModule version_module modules/mod_version.so</span><br><span class=\"line\">以上为动态加载的模块</span><br><span class=\"line\">Include conf.d/*.conf                   将/etc/httpd/conf.d目录下所有以conf结尾的配置文件包含进来</span><br><span class=\"line\">User apache              进程运行账户</span><br><span class=\"line\">Group apache           进程运行群组</span><br><span class=\"line\">ServerAdmin root@localhost             Apache服务器管理员的E_mail地址</span><br><span class=\"line\">UseCanonicalName Off</span><br><span class=\"line\">DocumentRoot &quot;/var/www/html&quot;         设置网站根目录</span><br><span class=\"line\">&lt;Directory /&gt;  设置apache服务器根的访问权限</span><br><span class=\"line\">Options FollowSymLinks             允许符号链接</span><br><span class=\"line\">AllowOverride None               禁止读取.htaccess配置文件的内容</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;Directory &quot;/var/www/html&quot;&gt; 设置Apache根的访问权限</span><br><span class=\"line\">Options Indexes FollowSymLinks                      FollowSymLinks允许符号链接，Indexes无首页时罗列出目录下文件</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Order allow,deny            先执行Allow访问规则，在执行Deny访问规则</span><br><span class=\"line\">Allow from all                 allow访问规则，允许所有链接</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;IfModule mod_userdir.c&gt;</span><br><span class=\"line\">UserDir disabled</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">DirectoryIndex index.html index.html.var           网站首页文件名称定义</span><br><span class=\"line\">AccessFileName .htaccess            访问控制文件的名称</span><br><span class=\"line\">&lt;Files ~ &quot;^\\.ht&quot;&gt;         关于.ht开头文件的权限控制</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Deny from all</span><br><span class=\"line\">Satisfy All            访问.ht开头文件需要满足两种访问控制都允许</span><br><span class=\"line\">&lt;/Files&gt;</span><br><span class=\"line\">TypesConfig /etc/mime.types            MIME对应格式的配置文件的存放位置</span><br><span class=\"line\">DefaultType text/plain                        默认的MIME文件类型为纯文本或HTML文件</span><br><span class=\"line\">&lt;IfModule mod_mime_magic.c&gt;    当mod_mime_magic.c模块被加载时，指定magic信息码配置文件的存放位置</span><br><span class=\"line\">MIMEMagicFile conf/magic</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">HostnameLookups Off          关闭记录访问web客户的hostname功能，只记录IP</span><br><span class=\"line\">ErrorLog logs/error_log        错误日志存放位置</span><br><span class=\"line\">LogLevel warn                        记录日志的等级</span><br><span class=\"line\">LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%&#123;Referer&#125;i\\&quot; \\&quot;%&#123;User-Agent&#125;i</span><br><span class=\"line\"></span><br><span class=\"line\">\\&quot;&quot; combined</span><br><span class=\"line\">LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b&quot; common</span><br><span class=\"line\">LogFormat &quot;%&#123;Referer&#125;i -&gt; %U&quot; referer</span><br><span class=\"line\">LogFormat &quot;%&#123;User-agent&#125;i&quot; agent</span><br><span class=\"line\"></span><br><span class=\"line\">以上为记录日志的四种格式</span><br><span class=\"line\">CustomLog logs/access_log combined             访问日志的纪录格式为combined（混合型），并指定访问日志存放位置</span><br><span class=\"line\">ServerSignature On                             apache自己产生的页面中使用apache服务器版本的签名</span><br><span class=\"line\">Alias /icons/ &quot;/var/www/icons/&quot;   定义别名/icons/</span><br><span class=\"line\">&lt;Directory &quot;/var/www/icons&quot;&gt;</span><br><span class=\"line\">Options Indexes MultiViews FollowSymLinks              MultiViews 使用内容协商来决定被发送的网页的性质</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Allow from all</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;IfModule mod_dav_fs.c&gt;   DAV加锁数据库文件的存放位置</span><br><span class=\"line\">DAVLockDB /var/lib/dav/lockdb</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">ScriptAlias /cgi-bin/ &quot;/var/www/cgi-bin/&quot;  设置CGI目录的访问别名</span><br><span class=\"line\">&lt;Directory &quot;/var/www/cgi-bin&quot;&gt;</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Options None</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Allow from all</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">IndexOptions FancyIndexing VersionSort NameWidth=* HTMLTable       未找到首页文件时生存目录列表的方式，FancyIndexing 对每种类型的文件前加上一个小图标以示区别，VersionSort 对同一个软件的多个版本进行排序，NameWidth=* 文件名字段自动适应当前目录下的最长文件名。生成小图标的时候使用AddIcon选项。</span><br><span class=\"line\">Charset=UTF-8           字符编码</span><br><span class=\"line\">AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip</span><br><span class=\"line\">AddIconByType (TXT,/icons/text.gif) text/*</span><br><span class=\"line\">AddIconByType (IMG,/icons/image2.gif) image/*</span><br><span class=\"line\">AddIconByType (SND,/icons/sound2.gif) audio/*</span><br><span class=\"line\">AddIconByType (VID,/icons/movie.gif) video/*</span><br><span class=\"line\">AddIcon /icons/binary.gif .bin .exe</span><br><span class=\"line\">AddIcon /icons/binhex.gif .hqx</span><br><span class=\"line\">AddIcon /icons/tar.gif .tar</span><br><span class=\"line\">AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv</span><br><span class=\"line\">AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip</span><br><span class=\"line\">AddIcon /icons/a.gif .ps .ai .eps</span><br><span class=\"line\">AddIcon /icons/layout.gif .html .shtml .htm .pdf</span><br><span class=\"line\">AddIcon /icons/text.gif .txt</span><br><span class=\"line\">AddIcon /icons/c.gif .c</span><br><span class=\"line\">AddIcon /icons/p.gif .pl .py</span><br><span class=\"line\">AddIcon /icons/f.gif .for</span><br><span class=\"line\">AddIcon /icons/dvi.gif .dvi</span><br><span class=\"line\">AddIcon /icons/uuencoded.gif .uu</span><br><span class=\"line\">AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl</span><br><span class=\"line\">AddIcon /icons/tex.gif .tex</span><br><span class=\"line\">AddIcon /icons/bomb.gif /core</span><br><span class=\"line\">AddIcon /icons/back.gif ..</span><br><span class=\"line\">AddIcon /icons/hand.right.gif README</span><br><span class=\"line\">AddIcon /icons/folder.gif ^^DIRECTORY^^</span><br><span class=\"line\">AddIcon /icons/blank.gif ^^BLANKICON^^</span><br><span class=\"line\">DefaultIcon /icons/unknown.gif      位置类型文件使用此图像作为图标</span><br><span class=\"line\">ReadmeName README.html          当服务器自动列出目录列表时，在所生成的页面之后显示readme.html的内容</span><br><span class=\"line\">HeaderName HEADER.html            当服务器自动列出目录列表时，在所生成的页面之前显示header.html的内容</span><br><span class=\"line\">AddLanguage ca .ca</span><br><span class=\"line\">AddLanguage cs .cz .cs</span><br><span class=\"line\">AddLanguage da .dk</span><br><span class=\"line\">AddLanguage de .de</span><br><span class=\"line\">AddLanguage el .el</span><br><span class=\"line\">AddLanguage en .en</span><br><span class=\"line\">AddLanguage eo .eo</span><br><span class=\"line\">AddLanguage es .es</span><br><span class=\"line\">AddLanguage et .et</span><br><span class=\"line\">AddLanguage fr .fr</span><br><span class=\"line\">AddLanguage he .he</span><br><span class=\"line\">AddLanguage hr .hr</span><br><span class=\"line\">AddLanguage it .it</span><br><span class=\"line\">AddLanguage ja .ja</span><br><span class=\"line\">AddLanguage ko .ko</span><br><span class=\"line\">AddLanguage ltz .ltz</span><br><span class=\"line\">AddLanguage nl .nl</span><br><span class=\"line\">AddLanguage nn .nn</span><br><span class=\"line\">AddLanguage no .no</span><br><span class=\"line\">AddLanguage pl .po</span><br><span class=\"line\">AddLanguage pt .pt</span><br><span class=\"line\">AddLanguage pt-BR .pt-br</span><br><span class=\"line\">AddLanguage ru .ru</span><br><span class=\"line\">AddLanguage sv .sv</span><br><span class=\"line\">AddLanguage zh-CN .zh-cn</span><br><span class=\"line\">AddLanguage zh-TW .zh-tw</span><br><span class=\"line\">以上为设置网页内容的语言种类</span><br><span class=\"line\">LanguagePriority en ca cs da de el eo es et fr he hr it ja ko ltz nl nn</span><br><span class=\"line\"></span><br><span class=\"line\">no pl pt pt-BR ru sv zh-CN zh-TW 生效的先后顺序</span><br><span class=\"line\">ForceLanguagePriority Prefer Fallback</span><br><span class=\"line\">Prefer 当有多种语言可以匹配时，使用LanguagePriority 列表的第一项</span><br><span class=\"line\">Fallback 当没有语言可以匹配时，使用LanguagePriority 列表的第一项</span><br><span class=\"line\">AddDefaultCharset UTF-8   设置默认字符集</span><br><span class=\"line\">AddType application/x-compress .Z</span><br><span class=\"line\">AddType application/x-gzip .gz .tgz</span><br><span class=\"line\">AddType application/x-x509-ca-cert .crt</span><br><span class=\"line\">AddType application/x-pkcs7-crl    .crl</span><br><span class=\"line\">以上为添加一些mime类型</span><br><span class=\"line\">AddHandler type-map var 设置apcche对某些扩展名的处理方式</span><br><span class=\"line\">AddType text/html .shtml</span><br><span class=\"line\">AddOutputFilter INCLUDES .shtml  使用过滤器执行SSI</span><br><span class=\"line\">Alias /error/ &quot;/var/www/error/&quot;  定义错误页面别名</span><br><span class=\"line\">&lt;IfModule mod_negotiation.c&gt;</span><br><span class=\"line\">&lt;IfModule mod_include.c&gt;</span><br><span class=\"line\">&lt;Directory &quot;/var/www/error&quot;&gt; 错误页的权限定义</span><br><span class=\"line\">AllowOverride None</span><br><span class=\"line\">Options IncludesNoExec</span><br><span class=\"line\">AddOutputFilter Includes html</span><br><span class=\"line\">AddHandler type-map var</span><br><span class=\"line\">Order allow,deny</span><br><span class=\"line\">Allow from all</span><br><span class=\"line\">LanguagePriority en es de fr</span><br><span class=\"line\">ForceLanguagePriority Prefer Fallback</span><br><span class=\"line\">&lt;/Directory&gt;</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br><span class=\"line\">以下为设置浏览器匹配</span><br><span class=\"line\">BrowserMatch &quot;Mozilla/2&quot; nokeepalive</span><br><span class=\"line\">BrowserMatch &quot;MSIE 4\\.0b2;&quot; nokeepalive downgrade-1.0 force-response-</span><br><span class=\"line\"></span><br><span class=\"line\">1.0</span><br><span class=\"line\">BrowserMatch &quot;RealPlayer 4\\.0&quot; force-response-1.0</span><br><span class=\"line\">BrowserMatch &quot;Java/1\\.0&quot; force-response-1.0</span><br><span class=\"line\">BrowserMatch &quot;JDK/1\\.0&quot; force-response-1.0</span><br><span class=\"line\">BrowserMatch &quot;Microsoft Data Access Internet Publishing Provider&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;MS FrontPage&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^WebDrive&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^WebDAVFS/1.[0123]&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^gnome-vfs/1.0&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^XML Spy&quot; redirect-carefully</span><br><span class=\"line\">BrowserMatch &quot;^Dreamweaver-WebDAV-SCM1&quot; redirect-carefully</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"DNS服务器搭建","published":1,"author":"xiemx","comments":1,"date":"2015-11-30T02:11:12.000Z","_content":"DNS即域名系统，用于将IP地址和域名之间的翻译。linux中搭建dns服务器一般使用BIND软件来实现。我们在网络中常常会有将域名转化成IP，和将IP转化成域名这两种需求，这两种需求对应了dns解析中的正向和反向解析。\n\n* 正向解析：将域名解析成IP地址\n\n* 反向解析：将ip地址解析成域名\n\n\n`完全合格域名（FQDN）`：点结尾的域名，例如\"www.xiemx.com.\" 就是一个完全合格域名。在一般的网络应用中，我们可以省略完全合格域名最右侧的点，但DNS对这个点不能随便省略。因为这个点代表了DNS的根，有了这个点，完全合格域名就可以表达为一个绝对路径，例如\"www.xiemx.com.\"就可以表示为DNS根下的com子域下xiemx.com域中一个名为www的主机。如果DNS发现一个域名不是以点结尾的完全合格域名，就会把这个域名加上当前的区域名称作为后缀，让其满足完全合格域名的形式需求。\n\n查询方法\n\n1. 递归查询:\n一般客户机和服务器之间属递归查询，即当客户机向DNS服务器发出请求后,若DNS服务器本身不能解析,则会向另外的DNS服务器发出查询请求，得到结果后转交给客户机；\n2. 迭代查询(反复查询):\n一般DNS服务器之间属迭代查询，如：若DNS2不能响应DNS1的请求，则它会将DNS3的IP给DNS1，以便其再向DNS3发出请求；DNS3不能响应DNS1的请求，则它会将DNS4的IP给DNS1。如此反复。\n\n记录类型\n\n* A记录：域名到IP地址的映射。\n\n* CNAME记录：也叫别名记录，用于定义A记录的别名\n\n* MX记录：邮件交换记录（MX）邮件服务器发送邮件时定位邮件服务器，可以有多个MX记录，但存在优先级差别\n\n* NS记录：用于标识区域的DNS服务器，即是说负责此DNS区域的权威名称服务器，用哪一台DNS服务器来解析该区域。\n\n* PTR记录：是IP地址到DNS名称的映射，用于反向解析\n\n \n\n安装软件：\n```shell\nyum  -y  install  bind\n\n我们使用的是软件版本是9.8.2，不同的版本配置的语法会有区别。\n\n[root@localhost ~]# yum info bind\nLoaded plugins: product-id, refresh-packagekit, security, subscription-manager\nThis system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.\nlocalyumdata | 3.9 kB 00:00 ...\nInstalled Packages\nName : bind\nArch : x86_64\nEpoch : 32\nVersion : 9.8.2\nRelease : 0.17.rc1.el6_4.6\n```\n配置文件：\n```\n/var/run/named/  ——进程pid文件\n/var/named/  ——数据文件目录\n/etc/named.conf ——主配置文件\n/etc/named.rfc1912.zones ——辅配置文件\n/etc/rc.d/init.d/named ——进程控制脚本文件\n\n[root@localhost ~]# cat /etc/named.conf\noptions {\n  listen-on port 53 { any; };——设置监听那些ipv4地址的53端口，默认为127.0.0.1。设置any允许所有，也可以；号间隔一个个罗列IP。\n  listen-on-v6 port 53 { any; };——ipv6\n  directory \"/var/named\";——数据目录\n  dump-file \"/var/named/data/cache_dump.db\";\n  statistics-file \"/var/named/data/named_stats.txt\";\n  memstatistics-file \"/var/named/data/named_mem_stats.txt\";\n  allow-query { any; };——允许哪些IP来查询，默认为localhost。any为允许所有\n  recursion yes;——是否允许递归\n\n  dnssec-enable yes; ——是否启用DNSSEC支持，DNS安全扩展（DNSSEC）提供了验证DNS数据由效性的系统\n  dnssec-validation yes;\n  dnssec-lookaside auto;\n\n  /* Path to ISC DLV key */\n  bindkeys-file \"/etc/named.iscdlv.key\";\n\n  managed-keys-directory \"/var/named/dynamic\";\n};\n\nlogging {\n  channel default_debug {\n    file \"data/named.run\";\n    severity dynamic;\n  };\n};\n\nzone \".\" IN {\n  type hint;\n  file \"named.ca\";\n};  ——定义根域服务器\n\ninclude \"/etc/named.rfc1912.zones\"; ——装载辅配置文件，我们一般将需要解析的域名配置写在这个文件中。\ninclude \"/etc/named.root.key\";\n```\n```shell\n[root@localhost ~]# cat /etc/named.rfc1912.zones\n\nzone \"xiemx.com\" IN {                    ——\" \"内写要解析的域名\n  type master;                                      ——设置类型为master主类型，还有其它的hint根类型、slave从类型。当2台dns做主辅同步时会设置辅DNS中的域类型为slave。\n  file \"xiemx.com.zone\";                    ——xiemx.com域的数据文件，默认在/var/named/中，缺省目录定义在主配置中directory行。\n  allow-update { none; };\n};                                                          —— xiemx.com域名的正向解析配置\n\nzone \"1.168.192.in-addr.arpa\" IN { ——\"\"内的IP反向写要解析的ip网段.in-addr-arpa,本条就是解析192.168.1这个网段\n  type master;\n  file \"192.168.1.zone\";\n  allow-update { none; };\n};                                                          ——192.168.1这个网段的反向解析配置\n\n 以上的named.rfc1912.zones内容只是节选了部分，如我们手动添加容易出现语法错误时，可以复制文件中原有的localhost区域信息，直接修改即可。\n```\n```shell\n[root@localhost ~]# cat /var/named/xiemx.com.zone\n$TTL    1D       ——TTL条目更新时间默认1D，当时间小时解析精度高，时间太大会导致更改解析记录后生效时间太长，TTL太小的话频繁更新也会影响域名访问速度。\n@          IN       SOA      @   rname.invalid. (\n0    ; serial   ——时间标识，一般都是写当前的日期，由于主辅同步时确定条目是不是新的\n1D    ; refresh——slave多长时间更新一次\n1H    ; retry——slave同步失败时间隔多长时间再次尝试\n1W    ; expire——当主辅不能同步时，1周之后认为其死亡，不再尝试同步\n3H )    ; minimum——条目缓存时间，一般为错误的记录保存此时间。当一个主机请求解析一条错误的条目时，3小时后才能再次请求查询\nNS              @\nA                 192.168.1.10\nwww    A                 192.168.1.100\nMX  5          mail                 ——MX记录后接5为优先级，mx记录有优先级属性需要定义\nmail     A                 192.168.1.101\nftp       CNAME      ftp1                \nftp1       A                192.168.1.103  \n$generate  150-200   test$        A           192.168.1.$      ——用变量定义一个连续范围的解析一一对应别名和IP 。例：test150.xiemx.com<——>192.168.1.150\n```\n```shell\n[root@localhost ~]# cat /var/named/192.168.1.zone\n$TTL    1D\n@          IN       SOA      @   rname.invalid. (\n0    ; serial\n1D    ; refresh\n1H    ; retry\n1W    ; expire\n3H )    ; minimum\nNS              xiemx.com.\n101    PTR    www.xiemx.com.\n102    PTR    mail.xiemx.com.\n103    PTR    ftp.xiemx.com.\n103    PTR    xxx.xiemx.com.\n\n以上的正反解只是测试时随便写的，一般正反解会相互对应。另外在写条目是要注意：\n\n1.mx记录、cname记录的值一般都会有对应A记录\n2.正反解中的@会继承配置文件中\" \"内的内容\n3.正反解时如果写的域名不是完全合格域名，dns会自动用继承的@来补全你的域名：如正解中的www，dns会自动补全为www.xiemx.com.。\n4.同一个IP可对应多个域名（PTR记录可以存在多条），一个域名只能有1条A记录（一个域名只能对应一个IP）\n```\n```shell\n测试：\n\n[root@localhost ~]# nslookup\n> server 192.168.17.6\nDefault server: 192.168.17.6\nAddress: 192.168.17.6#53\n\n> xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    xiemx.com\nAddress: 127.0.0.1\n\n> www.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    www.xiemx.com\nAddress: 192.168.1.100\n> mail.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    mail.xiemx.com\nAddress: 192.168.1.101\n\n> ftp.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nftp.xiemx.com    canonical name = ftp1.xiemx.com.\nName:    xxx.xiemx.com\nAddress: 192.168.1.103\n\n> test88.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    test88.xiemx.com\nAddress: 192.168.1.88\n\n> 192.168.1.181\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\n181.1.168.192.in-addr.arpa    name = test181.xiemx.com.\n```","source":"_posts/dns-server.md","raw":"---\nlayout: post\ntitle: DNS服务器搭建\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-30 10:11:12\ntags: [ dns ]\ncategories:\n    - dns\n---\nDNS即域名系统，用于将IP地址和域名之间的翻译。linux中搭建dns服务器一般使用BIND软件来实现。我们在网络中常常会有将域名转化成IP，和将IP转化成域名这两种需求，这两种需求对应了dns解析中的正向和反向解析。\n\n* 正向解析：将域名解析成IP地址\n\n* 反向解析：将ip地址解析成域名\n\n\n`完全合格域名（FQDN）`：点结尾的域名，例如\"www.xiemx.com.\" 就是一个完全合格域名。在一般的网络应用中，我们可以省略完全合格域名最右侧的点，但DNS对这个点不能随便省略。因为这个点代表了DNS的根，有了这个点，完全合格域名就可以表达为一个绝对路径，例如\"www.xiemx.com.\"就可以表示为DNS根下的com子域下xiemx.com域中一个名为www的主机。如果DNS发现一个域名不是以点结尾的完全合格域名，就会把这个域名加上当前的区域名称作为后缀，让其满足完全合格域名的形式需求。\n\n查询方法\n\n1. 递归查询:\n一般客户机和服务器之间属递归查询，即当客户机向DNS服务器发出请求后,若DNS服务器本身不能解析,则会向另外的DNS服务器发出查询请求，得到结果后转交给客户机；\n2. 迭代查询(反复查询):\n一般DNS服务器之间属迭代查询，如：若DNS2不能响应DNS1的请求，则它会将DNS3的IP给DNS1，以便其再向DNS3发出请求；DNS3不能响应DNS1的请求，则它会将DNS4的IP给DNS1。如此反复。\n\n记录类型\n\n* A记录：域名到IP地址的映射。\n\n* CNAME记录：也叫别名记录，用于定义A记录的别名\n\n* MX记录：邮件交换记录（MX）邮件服务器发送邮件时定位邮件服务器，可以有多个MX记录，但存在优先级差别\n\n* NS记录：用于标识区域的DNS服务器，即是说负责此DNS区域的权威名称服务器，用哪一台DNS服务器来解析该区域。\n\n* PTR记录：是IP地址到DNS名称的映射，用于反向解析\n\n \n\n安装软件：\n```shell\nyum  -y  install  bind\n\n我们使用的是软件版本是9.8.2，不同的版本配置的语法会有区别。\n\n[root@localhost ~]# yum info bind\nLoaded plugins: product-id, refresh-packagekit, security, subscription-manager\nThis system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.\nlocalyumdata | 3.9 kB 00:00 ...\nInstalled Packages\nName : bind\nArch : x86_64\nEpoch : 32\nVersion : 9.8.2\nRelease : 0.17.rc1.el6_4.6\n```\n配置文件：\n```\n/var/run/named/  ——进程pid文件\n/var/named/  ——数据文件目录\n/etc/named.conf ——主配置文件\n/etc/named.rfc1912.zones ——辅配置文件\n/etc/rc.d/init.d/named ——进程控制脚本文件\n\n[root@localhost ~]# cat /etc/named.conf\noptions {\n  listen-on port 53 { any; };——设置监听那些ipv4地址的53端口，默认为127.0.0.1。设置any允许所有，也可以；号间隔一个个罗列IP。\n  listen-on-v6 port 53 { any; };——ipv6\n  directory \"/var/named\";——数据目录\n  dump-file \"/var/named/data/cache_dump.db\";\n  statistics-file \"/var/named/data/named_stats.txt\";\n  memstatistics-file \"/var/named/data/named_mem_stats.txt\";\n  allow-query { any; };——允许哪些IP来查询，默认为localhost。any为允许所有\n  recursion yes;——是否允许递归\n\n  dnssec-enable yes; ——是否启用DNSSEC支持，DNS安全扩展（DNSSEC）提供了验证DNS数据由效性的系统\n  dnssec-validation yes;\n  dnssec-lookaside auto;\n\n  /* Path to ISC DLV key */\n  bindkeys-file \"/etc/named.iscdlv.key\";\n\n  managed-keys-directory \"/var/named/dynamic\";\n};\n\nlogging {\n  channel default_debug {\n    file \"data/named.run\";\n    severity dynamic;\n  };\n};\n\nzone \".\" IN {\n  type hint;\n  file \"named.ca\";\n};  ——定义根域服务器\n\ninclude \"/etc/named.rfc1912.zones\"; ——装载辅配置文件，我们一般将需要解析的域名配置写在这个文件中。\ninclude \"/etc/named.root.key\";\n```\n```shell\n[root@localhost ~]# cat /etc/named.rfc1912.zones\n\nzone \"xiemx.com\" IN {                    ——\" \"内写要解析的域名\n  type master;                                      ——设置类型为master主类型，还有其它的hint根类型、slave从类型。当2台dns做主辅同步时会设置辅DNS中的域类型为slave。\n  file \"xiemx.com.zone\";                    ——xiemx.com域的数据文件，默认在/var/named/中，缺省目录定义在主配置中directory行。\n  allow-update { none; };\n};                                                          —— xiemx.com域名的正向解析配置\n\nzone \"1.168.192.in-addr.arpa\" IN { ——\"\"内的IP反向写要解析的ip网段.in-addr-arpa,本条就是解析192.168.1这个网段\n  type master;\n  file \"192.168.1.zone\";\n  allow-update { none; };\n};                                                          ——192.168.1这个网段的反向解析配置\n\n 以上的named.rfc1912.zones内容只是节选了部分，如我们手动添加容易出现语法错误时，可以复制文件中原有的localhost区域信息，直接修改即可。\n```\n```shell\n[root@localhost ~]# cat /var/named/xiemx.com.zone\n$TTL    1D       ——TTL条目更新时间默认1D，当时间小时解析精度高，时间太大会导致更改解析记录后生效时间太长，TTL太小的话频繁更新也会影响域名访问速度。\n@          IN       SOA      @   rname.invalid. (\n0    ; serial   ——时间标识，一般都是写当前的日期，由于主辅同步时确定条目是不是新的\n1D    ; refresh——slave多长时间更新一次\n1H    ; retry——slave同步失败时间隔多长时间再次尝试\n1W    ; expire——当主辅不能同步时，1周之后认为其死亡，不再尝试同步\n3H )    ; minimum——条目缓存时间，一般为错误的记录保存此时间。当一个主机请求解析一条错误的条目时，3小时后才能再次请求查询\nNS              @\nA                 192.168.1.10\nwww    A                 192.168.1.100\nMX  5          mail                 ——MX记录后接5为优先级，mx记录有优先级属性需要定义\nmail     A                 192.168.1.101\nftp       CNAME      ftp1                \nftp1       A                192.168.1.103  \n$generate  150-200   test$        A           192.168.1.$      ——用变量定义一个连续范围的解析一一对应别名和IP 。例：test150.xiemx.com<——>192.168.1.150\n```\n```shell\n[root@localhost ~]# cat /var/named/192.168.1.zone\n$TTL    1D\n@          IN       SOA      @   rname.invalid. (\n0    ; serial\n1D    ; refresh\n1H    ; retry\n1W    ; expire\n3H )    ; minimum\nNS              xiemx.com.\n101    PTR    www.xiemx.com.\n102    PTR    mail.xiemx.com.\n103    PTR    ftp.xiemx.com.\n103    PTR    xxx.xiemx.com.\n\n以上的正反解只是测试时随便写的，一般正反解会相互对应。另外在写条目是要注意：\n\n1.mx记录、cname记录的值一般都会有对应A记录\n2.正反解中的@会继承配置文件中\" \"内的内容\n3.正反解时如果写的域名不是完全合格域名，dns会自动用继承的@来补全你的域名：如正解中的www，dns会自动补全为www.xiemx.com.。\n4.同一个IP可对应多个域名（PTR记录可以存在多条），一个域名只能有1条A记录（一个域名只能对应一个IP）\n```\n```shell\n测试：\n\n[root@localhost ~]# nslookup\n> server 192.168.17.6\nDefault server: 192.168.17.6\nAddress: 192.168.17.6#53\n\n> xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    xiemx.com\nAddress: 127.0.0.1\n\n> www.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    www.xiemx.com\nAddress: 192.168.1.100\n> mail.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    mail.xiemx.com\nAddress: 192.168.1.101\n\n> ftp.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nftp.xiemx.com    canonical name = ftp1.xiemx.com.\nName:    xxx.xiemx.com\nAddress: 192.168.1.103\n\n> test88.xiemx.com\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\nName:    test88.xiemx.com\nAddress: 192.168.1.88\n\n> 192.168.1.181\nServer:        192.168.17.6\nAddress:    192.168.17.6#53\n\n181.1.168.192.in-addr.arpa    name = test181.xiemx.com.\n```","slug":"dns-server","updated":"2019-10-21T06:57:42.819Z","photos":[],"link":"","_id":"ck42dyijm00jru9urw3mpqfku","content":"<p>DNS即域名系统，用于将IP地址和域名之间的翻译。linux中搭建dns服务器一般使用BIND软件来实现。我们在网络中常常会有将域名转化成IP，和将IP转化成域名这两种需求，这两种需求对应了dns解析中的正向和反向解析。</p>\n<ul>\n<li><p>正向解析：将域名解析成IP地址</p>\n</li>\n<li><p>反向解析：将ip地址解析成域名</p>\n</li>\n</ul>\n<p><code>完全合格域名（FQDN）</code>：点结尾的域名，例如”<a href=\"http://www.xiemx.com.&quot;\" target=\"_blank\" rel=\"noopener\">www.xiemx.com.&quot;</a> 就是一个完全合格域名。在一般的网络应用中，我们可以省略完全合格域名最右侧的点，但DNS对这个点不能随便省略。因为这个点代表了DNS的根，有了这个点，完全合格域名就可以表达为一个绝对路径，例如”<a href=\"http://www.xiemx.com.&quot;就可以表示为DNS根下的com子域下xiemx.com域中一个名为www的主机。如果DNS发现一个域名不是以点结尾的完全合格域名，就会把这个域名加上当前的区域名称作为后缀，让其满足完全合格域名的形式需求。\" target=\"_blank\" rel=\"noopener\">www.xiemx.com.&quot;就可以表示为DNS根下的com子域下xiemx.com域中一个名为www的主机。如果DNS发现一个域名不是以点结尾的完全合格域名，就会把这个域名加上当前的区域名称作为后缀，让其满足完全合格域名的形式需求。</a></p>\n<p>查询方法</p>\n<ol>\n<li>递归查询:<br>一般客户机和服务器之间属递归查询，即当客户机向DNS服务器发出请求后,若DNS服务器本身不能解析,则会向另外的DNS服务器发出查询请求，得到结果后转交给客户机；</li>\n<li>迭代查询(反复查询):<br>一般DNS服务器之间属迭代查询，如：若DNS2不能响应DNS1的请求，则它会将DNS3的IP给DNS1，以便其再向DNS3发出请求；DNS3不能响应DNS1的请求，则它会将DNS4的IP给DNS1。如此反复。</li>\n</ol>\n<p>记录类型</p>\n<ul>\n<li><p>A记录：域名到IP地址的映射。</p>\n</li>\n<li><p>CNAME记录：也叫别名记录，用于定义A记录的别名</p>\n</li>\n<li><p>MX记录：邮件交换记录（MX）邮件服务器发送邮件时定位邮件服务器，可以有多个MX记录，但存在优先级差别</p>\n</li>\n<li><p>NS记录：用于标识区域的DNS服务器，即是说负责此DNS区域的权威名称服务器，用哪一台DNS服务器来解析该区域。</p>\n</li>\n<li><p>PTR记录：是IP地址到DNS名称的映射，用于反向解析</p>\n</li>\n</ul>\n<p>安装软件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum  -y  install  bind</span><br><span class=\"line\"></span><br><span class=\"line\">我们使用的是软件版本是9.8.2，不同的版本配置的语法会有区别。</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# yum info bind</span><br><span class=\"line\">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</span><br><span class=\"line\">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class=\"line\">localyumdata | 3.9 kB 00:00 ...</span><br><span class=\"line\">Installed Packages</span><br><span class=\"line\">Name : bind</span><br><span class=\"line\">Arch : x86_64</span><br><span class=\"line\">Epoch : 32</span><br><span class=\"line\">Version : 9.8.2</span><br><span class=\"line\">Release : 0.17.rc1.el6_4.6</span><br></pre></td></tr></table></figure>\n\n<p>配置文件：</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"keyword\">var</span>/<span class=\"keyword\">run</span>/named/  ——进程pid文件</span><br><span class=\"line\">/<span class=\"keyword\">var</span>/named/  ——数据文件目录</span><br><span class=\"line\">/etc/named.<span class=\"keyword\">conf</span> ——主配置文件</span><br><span class=\"line\">/etc/named.rfc1912.zones ——辅配置文件</span><br><span class=\"line\">/etc/rc.<span class=\"keyword\">d</span>/init.<span class=\"keyword\">d</span>/named ——进程控制脚本文件</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# <span class=\"keyword\">cat</span> /etc/named.<span class=\"keyword\">conf</span></span><br><span class=\"line\">options &#123;</span><br><span class=\"line\">  listen-<span class=\"keyword\">on</span> port 53 &#123; any; &#125;;——设置监听那些ipv4地址的53端口，默认为127.0.0.1。设置any允许所有，也可以；号间隔一个个罗列IP。</span><br><span class=\"line\">  listen-<span class=\"keyword\">on</span>-v6 port 53 &#123; any; &#125;;——ipv6</span><br><span class=\"line\">  directory <span class=\"string\">\"/var/named\"</span>;——数据目录</span><br><span class=\"line\">  dump-<span class=\"keyword\">file</span> <span class=\"string\">\"/var/named/data/cache_dump.db\"</span>;</span><br><span class=\"line\">  statistics-<span class=\"keyword\">file</span> <span class=\"string\">\"/var/named/data/named_stats.txt\"</span>;</span><br><span class=\"line\">  memstatistics-<span class=\"keyword\">file</span> <span class=\"string\">\"/var/named/data/named_mem_stats.txt\"</span>;</span><br><span class=\"line\">  allow-<span class=\"keyword\">query</span> &#123; any; &#125;;——允许哪些IP来查询，默认为localhost。any为允许所有</span><br><span class=\"line\">  recursion yes;——是否允许递归</span><br><span class=\"line\"></span><br><span class=\"line\">  dnssec-enable yes; ——是否启用DNSSEC支持，DNS安全扩展（DNSSEC）提供了验证DNS数据由效性的系统</span><br><span class=\"line\">  dnssec-validation yes;</span><br><span class=\"line\">  dnssec-lookaside auto;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Path to ISC DLV key */</span></span><br><span class=\"line\">  bindkeys-<span class=\"keyword\">file</span> <span class=\"string\">\"/etc/named.iscdlv.key\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  managed-keys-directory <span class=\"string\">\"/var/named/dynamic\"</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">logging &#123;</span><br><span class=\"line\">  channel default_debug &#123;</span><br><span class=\"line\">    <span class=\"keyword\">file</span> <span class=\"string\">\"data/named.run\"</span>;</span><br><span class=\"line\">    severity dynamic;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">zone <span class=\"string\">\".\"</span> <span class=\"keyword\">IN</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">type</span> hint;</span><br><span class=\"line\">  <span class=\"keyword\">file</span> <span class=\"string\">\"named.ca\"</span>;</span><br><span class=\"line\">&#125;;  ——定义根域服务器</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>; ——装载辅配置文件，我们一般将需要解析的域名配置写在这个文件中。</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"/etc/named.root.key\"</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/named.rfc1912.zones</span><br><span class=\"line\"></span><br><span class=\"line\">zone \"xiemx.com\" IN &#123;                    ——\" \"内写要解析的域名</span><br><span class=\"line\">  type master;                                      ——设置类型为master主类型，还有其它的hint根类型、slave从类型。当2台dns做主辅同步时会设置辅DNS中的域类型为slave。</span><br><span class=\"line\">  file \"xiemx.com.zone\";                    ——xiemx.com域的数据文件，默认在/var/named/中，缺省目录定义在主配置中directory行。</span><br><span class=\"line\">  allow-update &#123; none; &#125;;</span><br><span class=\"line\">&#125;;                                                          —— xiemx.com域名的正向解析配置</span><br><span class=\"line\"></span><br><span class=\"line\">zone \"1.168.192.in-addr.arpa\" IN &#123; ——\"\"内的IP反向写要解析的ip网段.in-addr-arpa,本条就是解析192.168.1这个网段</span><br><span class=\"line\">  type master;</span><br><span class=\"line\">  file \"192.168.1.zone\";</span><br><span class=\"line\">  allow-update &#123; none; &#125;;</span><br><span class=\"line\">&#125;;                                                          ——192.168.1这个网段的反向解析配置</span><br><span class=\"line\"></span><br><span class=\"line\"> 以上的named.rfc1912.zones内容只是节选了部分，如我们手动添加容易出现语法错误时，可以复制文件中原有的localhost区域信息，直接修改即可。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /var/named/xiemx.com.zone</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">TTL    1D       ——TTL条目更新时间默认1D，当时间小时解析精度高，时间太大会导致更改解析记录后生效时间太长，TTL太小的话频繁更新也会影响域名访问速度。</span></span><br><span class=\"line\">@          IN       SOA      @   rname.invalid. (</span><br><span class=\"line\">0    ; serial   ——时间标识，一般都是写当前的日期，由于主辅同步时确定条目是不是新的</span><br><span class=\"line\">1D    ; refresh——slave多长时间更新一次</span><br><span class=\"line\">1H    ; retry——slave同步失败时间隔多长时间再次尝试</span><br><span class=\"line\">1W    ; expire——当主辅不能同步时，1周之后认为其死亡，不再尝试同步</span><br><span class=\"line\">3H )    ; minimum——条目缓存时间，一般为错误的记录保存此时间。当一个主机请求解析一条错误的条目时，3小时后才能再次请求查询</span><br><span class=\"line\">NS              @</span><br><span class=\"line\">A                 192.168.1.10</span><br><span class=\"line\">www    A                 192.168.1.100</span><br><span class=\"line\">MX  5          mail                 ——MX记录后接5为优先级，mx记录有优先级属性需要定义</span><br><span class=\"line\">mail     A                 192.168.1.101</span><br><span class=\"line\">ftp       CNAME      ftp1                </span><br><span class=\"line\">ftp1       A                192.168.1.103  </span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">generate  150-200   <span class=\"built_in\">test</span>$        A           192.168.1.$      ——用变量定义一个连续范围的解析一一对应别名和IP 。例：test150.xiemx.com&lt;——&gt;192.168.1.150</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /var/named/192.168.1.zone</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">TTL    1D</span></span><br><span class=\"line\">@          IN       SOA      @   rname.invalid. (</span><br><span class=\"line\">0    ; serial</span><br><span class=\"line\">1D    ; refresh</span><br><span class=\"line\">1H    ; retry</span><br><span class=\"line\">1W    ; expire</span><br><span class=\"line\">3H )    ; minimum</span><br><span class=\"line\">NS              xiemx.com.</span><br><span class=\"line\">101    PTR    www.xiemx.com.</span><br><span class=\"line\">102    PTR    mail.xiemx.com.</span><br><span class=\"line\">103    PTR    ftp.xiemx.com.</span><br><span class=\"line\">103    PTR    xxx.xiemx.com.</span><br><span class=\"line\"></span><br><span class=\"line\">以上的正反解只是测试时随便写的，一般正反解会相互对应。另外在写条目是要注意：</span><br><span class=\"line\"></span><br><span class=\"line\">1.mx记录、cname记录的值一般都会有对应A记录</span><br><span class=\"line\">2.正反解中的@会继承配置文件中\" \"内的内容</span><br><span class=\"line\">3.正反解时如果写的域名不是完全合格域名，dns会自动用继承的@来补全你的域名：如正解中的www，dns会自动补全为www.xiemx.com.。</span><br><span class=\"line\">4.同一个IP可对应多个域名（PTR记录可以存在多条），一个域名只能有1条A记录（一个域名只能对应一个IP）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">测试：</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# nslookup</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> server 192.168.17.6</span></span><br><span class=\"line\">Default server: 192.168.17.6</span><br><span class=\"line\">Address: 192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    xiemx.com</span><br><span class=\"line\">Address: 127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> www.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    www.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.100</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> mail.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    mail.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.101</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> ftp.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">ftp.xiemx.com    canonical name = ftp1.xiemx.com.</span><br><span class=\"line\">Name:    xxx.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.103</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> test88.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    test88.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.88</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> 192.168.1.181</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">181.1.168.192.in-addr.arpa    name = test181.xiemx.com.</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>DNS即域名系统，用于将IP地址和域名之间的翻译。linux中搭建dns服务器一般使用BIND软件来实现。我们在网络中常常会有将域名转化成IP，和将IP转化成域名这两种需求，这两种需求对应了dns解析中的正向和反向解析。</p>\n<ul>\n<li><p>正向解析：将域名解析成IP地址</p>\n</li>\n<li><p>反向解析：将ip地址解析成域名</p>\n</li>\n</ul>\n<p><code>完全合格域名（FQDN）</code>：点结尾的域名，例如”<a href=\"http://www.xiemx.com.&quot;\" target=\"_blank\" rel=\"noopener\">www.xiemx.com.&quot;</a> 就是一个完全合格域名。在一般的网络应用中，我们可以省略完全合格域名最右侧的点，但DNS对这个点不能随便省略。因为这个点代表了DNS的根，有了这个点，完全合格域名就可以表达为一个绝对路径，例如”<a href=\"http://www.xiemx.com.&quot;就可以表示为DNS根下的com子域下xiemx.com域中一个名为www的主机。如果DNS发现一个域名不是以点结尾的完全合格域名，就会把这个域名加上当前的区域名称作为后缀，让其满足完全合格域名的形式需求。\" target=\"_blank\" rel=\"noopener\">www.xiemx.com.&quot;就可以表示为DNS根下的com子域下xiemx.com域中一个名为www的主机。如果DNS发现一个域名不是以点结尾的完全合格域名，就会把这个域名加上当前的区域名称作为后缀，让其满足完全合格域名的形式需求。</a></p>\n<p>查询方法</p>\n<ol>\n<li>递归查询:<br>一般客户机和服务器之间属递归查询，即当客户机向DNS服务器发出请求后,若DNS服务器本身不能解析,则会向另外的DNS服务器发出查询请求，得到结果后转交给客户机；</li>\n<li>迭代查询(反复查询):<br>一般DNS服务器之间属迭代查询，如：若DNS2不能响应DNS1的请求，则它会将DNS3的IP给DNS1，以便其再向DNS3发出请求；DNS3不能响应DNS1的请求，则它会将DNS4的IP给DNS1。如此反复。</li>\n</ol>\n<p>记录类型</p>\n<ul>\n<li><p>A记录：域名到IP地址的映射。</p>\n</li>\n<li><p>CNAME记录：也叫别名记录，用于定义A记录的别名</p>\n</li>\n<li><p>MX记录：邮件交换记录（MX）邮件服务器发送邮件时定位邮件服务器，可以有多个MX记录，但存在优先级差别</p>\n</li>\n<li><p>NS记录：用于标识区域的DNS服务器，即是说负责此DNS区域的权威名称服务器，用哪一台DNS服务器来解析该区域。</p>\n</li>\n<li><p>PTR记录：是IP地址到DNS名称的映射，用于反向解析</p>\n</li>\n</ul>\n<p>安装软件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum  -y  install  bind</span><br><span class=\"line\"></span><br><span class=\"line\">我们使用的是软件版本是9.8.2，不同的版本配置的语法会有区别。</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# yum info bind</span><br><span class=\"line\">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</span><br><span class=\"line\">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class=\"line\">localyumdata | 3.9 kB 00:00 ...</span><br><span class=\"line\">Installed Packages</span><br><span class=\"line\">Name : bind</span><br><span class=\"line\">Arch : x86_64</span><br><span class=\"line\">Epoch : 32</span><br><span class=\"line\">Version : 9.8.2</span><br><span class=\"line\">Release : 0.17.rc1.el6_4.6</span><br></pre></td></tr></table></figure>\n\n<p>配置文件：</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"keyword\">var</span>/<span class=\"keyword\">run</span>/named/  ——进程pid文件</span><br><span class=\"line\">/<span class=\"keyword\">var</span>/named/  ——数据文件目录</span><br><span class=\"line\">/etc/named.<span class=\"keyword\">conf</span> ——主配置文件</span><br><span class=\"line\">/etc/named.rfc1912.zones ——辅配置文件</span><br><span class=\"line\">/etc/rc.<span class=\"keyword\">d</span>/init.<span class=\"keyword\">d</span>/named ——进程控制脚本文件</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# <span class=\"keyword\">cat</span> /etc/named.<span class=\"keyword\">conf</span></span><br><span class=\"line\">options &#123;</span><br><span class=\"line\">  listen-<span class=\"keyword\">on</span> port 53 &#123; any; &#125;;——设置监听那些ipv4地址的53端口，默认为127.0.0.1。设置any允许所有，也可以；号间隔一个个罗列IP。</span><br><span class=\"line\">  listen-<span class=\"keyword\">on</span>-v6 port 53 &#123; any; &#125;;——ipv6</span><br><span class=\"line\">  directory <span class=\"string\">\"/var/named\"</span>;——数据目录</span><br><span class=\"line\">  dump-<span class=\"keyword\">file</span> <span class=\"string\">\"/var/named/data/cache_dump.db\"</span>;</span><br><span class=\"line\">  statistics-<span class=\"keyword\">file</span> <span class=\"string\">\"/var/named/data/named_stats.txt\"</span>;</span><br><span class=\"line\">  memstatistics-<span class=\"keyword\">file</span> <span class=\"string\">\"/var/named/data/named_mem_stats.txt\"</span>;</span><br><span class=\"line\">  allow-<span class=\"keyword\">query</span> &#123; any; &#125;;——允许哪些IP来查询，默认为localhost。any为允许所有</span><br><span class=\"line\">  recursion yes;——是否允许递归</span><br><span class=\"line\"></span><br><span class=\"line\">  dnssec-enable yes; ——是否启用DNSSEC支持，DNS安全扩展（DNSSEC）提供了验证DNS数据由效性的系统</span><br><span class=\"line\">  dnssec-validation yes;</span><br><span class=\"line\">  dnssec-lookaside auto;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Path to ISC DLV key */</span></span><br><span class=\"line\">  bindkeys-<span class=\"keyword\">file</span> <span class=\"string\">\"/etc/named.iscdlv.key\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  managed-keys-directory <span class=\"string\">\"/var/named/dynamic\"</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">logging &#123;</span><br><span class=\"line\">  channel default_debug &#123;</span><br><span class=\"line\">    <span class=\"keyword\">file</span> <span class=\"string\">\"data/named.run\"</span>;</span><br><span class=\"line\">    severity dynamic;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">zone <span class=\"string\">\".\"</span> <span class=\"keyword\">IN</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">type</span> hint;</span><br><span class=\"line\">  <span class=\"keyword\">file</span> <span class=\"string\">\"named.ca\"</span>;</span><br><span class=\"line\">&#125;;  ——定义根域服务器</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"/etc/named.rfc1912.zones\"</span>; ——装载辅配置文件，我们一般将需要解析的域名配置写在这个文件中。</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">\"/etc/named.root.key\"</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/named.rfc1912.zones</span><br><span class=\"line\"></span><br><span class=\"line\">zone \"xiemx.com\" IN &#123;                    ——\" \"内写要解析的域名</span><br><span class=\"line\">  type master;                                      ——设置类型为master主类型，还有其它的hint根类型、slave从类型。当2台dns做主辅同步时会设置辅DNS中的域类型为slave。</span><br><span class=\"line\">  file \"xiemx.com.zone\";                    ——xiemx.com域的数据文件，默认在/var/named/中，缺省目录定义在主配置中directory行。</span><br><span class=\"line\">  allow-update &#123; none; &#125;;</span><br><span class=\"line\">&#125;;                                                          —— xiemx.com域名的正向解析配置</span><br><span class=\"line\"></span><br><span class=\"line\">zone \"1.168.192.in-addr.arpa\" IN &#123; ——\"\"内的IP反向写要解析的ip网段.in-addr-arpa,本条就是解析192.168.1这个网段</span><br><span class=\"line\">  type master;</span><br><span class=\"line\">  file \"192.168.1.zone\";</span><br><span class=\"line\">  allow-update &#123; none; &#125;;</span><br><span class=\"line\">&#125;;                                                          ——192.168.1这个网段的反向解析配置</span><br><span class=\"line\"></span><br><span class=\"line\"> 以上的named.rfc1912.zones内容只是节选了部分，如我们手动添加容易出现语法错误时，可以复制文件中原有的localhost区域信息，直接修改即可。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /var/named/xiemx.com.zone</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">TTL    1D       ——TTL条目更新时间默认1D，当时间小时解析精度高，时间太大会导致更改解析记录后生效时间太长，TTL太小的话频繁更新也会影响域名访问速度。</span></span><br><span class=\"line\">@          IN       SOA      @   rname.invalid. (</span><br><span class=\"line\">0    ; serial   ——时间标识，一般都是写当前的日期，由于主辅同步时确定条目是不是新的</span><br><span class=\"line\">1D    ; refresh——slave多长时间更新一次</span><br><span class=\"line\">1H    ; retry——slave同步失败时间隔多长时间再次尝试</span><br><span class=\"line\">1W    ; expire——当主辅不能同步时，1周之后认为其死亡，不再尝试同步</span><br><span class=\"line\">3H )    ; minimum——条目缓存时间，一般为错误的记录保存此时间。当一个主机请求解析一条错误的条目时，3小时后才能再次请求查询</span><br><span class=\"line\">NS              @</span><br><span class=\"line\">A                 192.168.1.10</span><br><span class=\"line\">www    A                 192.168.1.100</span><br><span class=\"line\">MX  5          mail                 ——MX记录后接5为优先级，mx记录有优先级属性需要定义</span><br><span class=\"line\">mail     A                 192.168.1.101</span><br><span class=\"line\">ftp       CNAME      ftp1                </span><br><span class=\"line\">ftp1       A                192.168.1.103  </span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">generate  150-200   <span class=\"built_in\">test</span>$        A           192.168.1.$      ——用变量定义一个连续范围的解析一一对应别名和IP 。例：test150.xiemx.com&lt;——&gt;192.168.1.150</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /var/named/192.168.1.zone</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">TTL    1D</span></span><br><span class=\"line\">@          IN       SOA      @   rname.invalid. (</span><br><span class=\"line\">0    ; serial</span><br><span class=\"line\">1D    ; refresh</span><br><span class=\"line\">1H    ; retry</span><br><span class=\"line\">1W    ; expire</span><br><span class=\"line\">3H )    ; minimum</span><br><span class=\"line\">NS              xiemx.com.</span><br><span class=\"line\">101    PTR    www.xiemx.com.</span><br><span class=\"line\">102    PTR    mail.xiemx.com.</span><br><span class=\"line\">103    PTR    ftp.xiemx.com.</span><br><span class=\"line\">103    PTR    xxx.xiemx.com.</span><br><span class=\"line\"></span><br><span class=\"line\">以上的正反解只是测试时随便写的，一般正反解会相互对应。另外在写条目是要注意：</span><br><span class=\"line\"></span><br><span class=\"line\">1.mx记录、cname记录的值一般都会有对应A记录</span><br><span class=\"line\">2.正反解中的@会继承配置文件中\" \"内的内容</span><br><span class=\"line\">3.正反解时如果写的域名不是完全合格域名，dns会自动用继承的@来补全你的域名：如正解中的www，dns会自动补全为www.xiemx.com.。</span><br><span class=\"line\">4.同一个IP可对应多个域名（PTR记录可以存在多条），一个域名只能有1条A记录（一个域名只能对应一个IP）</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">测试：</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# nslookup</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> server 192.168.17.6</span></span><br><span class=\"line\">Default server: 192.168.17.6</span><br><span class=\"line\">Address: 192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    xiemx.com</span><br><span class=\"line\">Address: 127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> www.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    www.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.100</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> mail.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    mail.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.101</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> ftp.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">ftp.xiemx.com    canonical name = ftp1.xiemx.com.</span><br><span class=\"line\">Name:    xxx.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.103</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> test88.xiemx.com</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:    test88.xiemx.com</span><br><span class=\"line\">Address: 192.168.1.88</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> 192.168.1.181</span></span><br><span class=\"line\">Server:        192.168.17.6</span><br><span class=\"line\">Address:    192.168.17.6#53</span><br><span class=\"line\"></span><br><span class=\"line\">181.1.168.192.in-addr.arpa    name = test181.xiemx.com.</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"k8s ingress-nginx动态balance实现解析","published":1,"author":"xiemx","comments":1,"date":"2019-09-15T23:09:52.000Z","_content":"只节选了比较关键的代码，删除了比较多的干扰项。纯属个人理解！！！\n\n#### 1. 初始化balancer.init_worker()，使用balancer.balance()动态获取\n```lua\nhttp {\n        lua_package_path \"/etc/nginx/lua/?.lua;/etc/nginx/lua/vendor/?.lua;/usr/local/lib/lua/?.lua;;\";\n        init_by_lua_block {\n                ok, res = pcall(require, \"configuration\")\n        }\n\n        init_worker_by_lua_block {\n                balancer.init_worker()  #####创建定时任务 ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)\n        }\n     \n###upstream configure\nupstream upstream_balancer {\n\t\tserver 0.0.0.1; # placeholder\n\n\t\tbalancer_by_lua_block {\n\t\t\tbalancer.balance()\n\t\t}\n\t\tkeepalive 32;\n\t\tkeepalive_timeout  60s;\n\t\tkeepalive_requests 100;\n\t}\n```\n#### 2. 获取backend信息，balancer.init_worker()\n```lua\n####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L223\n\nlocal configuration = require(\"configuration\")\n\nfunction _M.init_worker()\n  sync_backends() -- when worker starts, sync backends without delay\n  local _, err = ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)\n  if err then\n    ngx.log(ngx.ERR, string.format(\"error when setting up timer.every for sync_backends: %s\", tostring(err)))\n  end\nend\n\n\nlocal function sync_backends()\n  local backends_data = configuration.get_backends_data()\n\n  local new_backends, err = cjson.decode(backends_data)\n\n\n  local balancers_to_keep = {}\n  for _, new_backend in ipairs(new_backends) do\n    sync_backend(new_backend)\n    balancers_to_keep[new_backend.name] = balancers[new_backend.name]\n  end\nend\n```\n```lua\n####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/configuration.lua?utm_source=share#L10:10\n\nlocal configuration_data = ngx.shared.configuration_data\nlocal certificate_data = ngx.shared.certificate_data\n\nlocal _M = {}\n\nfunction _M.get_backends_data()\n  return configuration_data:get(\"backends\")\nend\n\nfunction _M.call()\n  if ngx.var.request_method ~= \"POST\" and ngx.var.request_method ~= \"GET\" then\n    ngx.status = ngx.HTTP_BAD_REQUEST\n    ngx.print(\"Only POST and GET requests are allowed!\")\n    return\n  end\n\n  if ngx.var.request_uri == \"/configuration/servers\" then\n    handle_servers()\n    return\n  end\n\n  if ngx.var.request_uri == \"/configuration/general\" then\n    handle_general()\n    return\n  end\n\n  if ngx.var.uri == \"/configuration/certs\" then\n    handle_certs()\n    return\n  end\n\n  if ngx.var.request_uri ~= \"/configuration/backends\" then ####只接受以上4类型URL\n    ngx.status = ngx.HTTP_NOT_FOUND\n    ngx.print(\"Not found!\")\n    return\n  end\n\n  local backends = fetch_request_body()\n\n  local success, err = configuration_data:set(\"backends\", backends)\n\nend\n```\n```lua\n### fetch_request_body()，从此函数可以看出此函数是一个外部调用，可以得出原始的数据来源为外部触发的POST，可以查询Call()函数的引用位置\nlocal function fetch_request_body()\n  ngx.req.read_body() ###防止ngx.req.get_body_data()返回nil,显示执行一下\n  local body = ngx.req.get_body_data()\n\n  if not body then\n    local file_name = ngx.req.get_body_file() ###读取cache file\n\n    local file = io.open(file_name, \"rb\")\n    if not file then\n      return nil\n    end\n\n    body = file:read(\"*all\")\n    file:close()\n  end\n\n  return body\nend\n```\n```\n####nginx.conf 查看nginx配置文件中显示调用call()函数的位置为当前server切url /configuration 符合函数要求，在查找外部调用的代码（基本可以定位为控制器的逻辑控制）\n        server {\n                listen unix:/tmp/nginx-status-server.sock;\n                set $proxy_upstream_name \"internal\";\n\n                keepalive_timeout 0;\n                gzip off;\n\n                access_log off;\n\n                location /configuration {\n                        # this should be equals to configuration_data dict\n                        client_max_body_size                    10m;\n                        client_body_buffer_size                 10m;\n                        proxy_buffering                         off;\n\n                        content_by_lua_block {\n                                configuration.call()\n                        }\n                }\n```\n#### 3. 通过上面的信息检索，在Ingress中监听pod变化信息，动态调用/configuration/backends, 函数为configureBackends()\n```go\n####https://github.com/kubernetes/ingress-nginx/blob/ce3e3d51c397ff6a0cd6731cc64360ecdb69ea54/internal/ingress/controller/nginx.go#L982\nfunc configureBackends(rawBackends []*ingress.Backend) error {\n\tbackends := make([]*ingress.Backend, len(rawBackends))\n\n\tfor i, backend := range rawBackends {\n\t\tvar service *apiv1.Service\n\t\tif backend.Service != nil {\n\t\t\tservice = &apiv1.Service{Spec: backend.Service.Spec}\n\t\t}\n\t\tluaBackend := &ingress.Backend{\n\t\t\tName:                 backend.Name,\n\t\t\tPort:                 backend.Port,\n\t\t\tSSLPassthrough:       backend.SSLPassthrough,\n\t\t\tSessionAffinity:      backend.SessionAffinity,\n\t\t\tUpstreamHashBy:       backend.UpstreamHashBy,\n\t\t\tLoadBalancing:        backend.LoadBalancing,\n\t\t\tService:              service,\n\t\t\tNoServer:             backend.NoServer,\n\t\t\tTrafficShapingPolicy: backend.TrafficShapingPolicy,\n\t\t\tAlternativeBackends:  backend.AlternativeBackends,\n\t\t}\n\n\t\tvar endpoints []ingress.Endpoint\n\t\tfor _, endpoint := range backend.Endpoints {\n\t\t\tendpoints = append(endpoints, ingress.Endpoint{\n\t\t\t\tAddress: endpoint.Address,\n\t\t\t\tPort:    endpoint.Port,\n\t\t\t})\n\t\t}\n\n\t\tluaBackend.Endpoints = endpoints\n\t\tbackends[i] = luaBackend\n\t}\n\n\tstatusCode, _, err := nginx.NewPostStatusRequest(\"/configuration/backends\", \"application/json\", backends) ####backends 为request.body,却内容为IP/PORT，以下给出了backend的struct\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif statusCode != http.StatusCreated {\n\t\treturn fmt.Errorf(\"unexpected error code: %d\", statusCode)\n\t}\n\n\treturn nil\n}\n\n####Backend struct\ntype Backend struct {\n\tName    string             `json:\"name\"`\n\tService *apiv1.Service     `json:\"service,omitempty\"`\n\tPort    intstr.IntOrString `json:\"port\"`\n\tSecureCACert resolver.AuthSSLCert `json:\"secureCACert\"`\n\tSSLPassthrough bool `json:\"sslPassthrough\"`\n\tEndpoints []Endpoint `json:\"endpoints,omitempty\"`\n\tSessionAffinity SessionAffinityConfig `json:\"sessionAffinityConfig\"`\n\tUpstreamHashBy UpstreamHashByConfig `json:\"upstreamHashByConfig,omitempty\"`\n\tLoadBalancing string `json:\"load-balance,omitempty\"`\n\tNoServer bool `json:\"noServer\"`\n\tTrafficShapingPolicy TrafficShapingPolicy `json:\"trafficShapingPolicy,omitempty\"`\n\tAlternativeBackends []string `json:\"alternativeBackends,omitempty\"`\n}\n```\n#### 4. ngx\\_balancer.set\\_current_peer()设置backend信息\n```lua\n####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L232:13\n\nfunction _M.balance()\n  local balancer = get_balancer()\n  if not balancer then\n    return\n  end\n\n  local peer = balancer:balance()\n  if not peer then\n    ngx.log(ngx.WARN, \"no peer was returned, balancer: \" .. balancer.name)\n    return\n  end\n\n  ngx_balancer.set_more_tries(1)\n\n  local ok, err = ngx_balancer.set_current_peer(peer) ####设置server信息\n  if not ok then\n    ngx.log(ngx.ERR, string.format(\"error while setting current upstream peer %s: %s\", peer, err))\n  end\nend\n\n\nlocal function get_balancer()\n  if ngx.ctx.balancer then\n    return ngx.ctx.balancer\n  end\n\n  local backend_name = ngx.var.proxy_upstream_name ###获取当前request上下文中共享的变量proxy_upstream_name\n\n  local balancer = balancers[backend_name] ###获取balancers信息由sync_backend()函数定时轮询\n  if not balancer then\n    return\n  end\n\n  if route_to_alternative_balancer(balancer) then\n    local alternative_backend_name = balancer.alternative_backends[1]\n    ngx.var.proxy_alternative_upstream_name = alternative_backend_name\n\n    balancer = balancers[alternative_backend_name]\n  end\n\n  ngx.ctx.balancer = balancer\n\n  return balancer\nend\n```\n```\n###nginx.conf\nset $proxy_upstream_name    \"dev-dev-auto-deploy-5000\";\nset $proxy_host             $proxy_upstream_name;\n\nproxy_pass http://upstream_balancer;\n```","source":"_posts/k8s-ingress-nginx.md","raw":"---\nlayout: post\ntitle: k8s ingress-nginx动态balance实现解析\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2019-09-16 07:09:52\ntags: [ k8s, ingress]\ncategories:\n    - k8s\n---\n只节选了比较关键的代码，删除了比较多的干扰项。纯属个人理解！！！\n\n#### 1. 初始化balancer.init_worker()，使用balancer.balance()动态获取\n```lua\nhttp {\n        lua_package_path \"/etc/nginx/lua/?.lua;/etc/nginx/lua/vendor/?.lua;/usr/local/lib/lua/?.lua;;\";\n        init_by_lua_block {\n                ok, res = pcall(require, \"configuration\")\n        }\n\n        init_worker_by_lua_block {\n                balancer.init_worker()  #####创建定时任务 ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)\n        }\n     \n###upstream configure\nupstream upstream_balancer {\n\t\tserver 0.0.0.1; # placeholder\n\n\t\tbalancer_by_lua_block {\n\t\t\tbalancer.balance()\n\t\t}\n\t\tkeepalive 32;\n\t\tkeepalive_timeout  60s;\n\t\tkeepalive_requests 100;\n\t}\n```\n#### 2. 获取backend信息，balancer.init_worker()\n```lua\n####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L223\n\nlocal configuration = require(\"configuration\")\n\nfunction _M.init_worker()\n  sync_backends() -- when worker starts, sync backends without delay\n  local _, err = ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)\n  if err then\n    ngx.log(ngx.ERR, string.format(\"error when setting up timer.every for sync_backends: %s\", tostring(err)))\n  end\nend\n\n\nlocal function sync_backends()\n  local backends_data = configuration.get_backends_data()\n\n  local new_backends, err = cjson.decode(backends_data)\n\n\n  local balancers_to_keep = {}\n  for _, new_backend in ipairs(new_backends) do\n    sync_backend(new_backend)\n    balancers_to_keep[new_backend.name] = balancers[new_backend.name]\n  end\nend\n```\n```lua\n####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/configuration.lua?utm_source=share#L10:10\n\nlocal configuration_data = ngx.shared.configuration_data\nlocal certificate_data = ngx.shared.certificate_data\n\nlocal _M = {}\n\nfunction _M.get_backends_data()\n  return configuration_data:get(\"backends\")\nend\n\nfunction _M.call()\n  if ngx.var.request_method ~= \"POST\" and ngx.var.request_method ~= \"GET\" then\n    ngx.status = ngx.HTTP_BAD_REQUEST\n    ngx.print(\"Only POST and GET requests are allowed!\")\n    return\n  end\n\n  if ngx.var.request_uri == \"/configuration/servers\" then\n    handle_servers()\n    return\n  end\n\n  if ngx.var.request_uri == \"/configuration/general\" then\n    handle_general()\n    return\n  end\n\n  if ngx.var.uri == \"/configuration/certs\" then\n    handle_certs()\n    return\n  end\n\n  if ngx.var.request_uri ~= \"/configuration/backends\" then ####只接受以上4类型URL\n    ngx.status = ngx.HTTP_NOT_FOUND\n    ngx.print(\"Not found!\")\n    return\n  end\n\n  local backends = fetch_request_body()\n\n  local success, err = configuration_data:set(\"backends\", backends)\n\nend\n```\n```lua\n### fetch_request_body()，从此函数可以看出此函数是一个外部调用，可以得出原始的数据来源为外部触发的POST，可以查询Call()函数的引用位置\nlocal function fetch_request_body()\n  ngx.req.read_body() ###防止ngx.req.get_body_data()返回nil,显示执行一下\n  local body = ngx.req.get_body_data()\n\n  if not body then\n    local file_name = ngx.req.get_body_file() ###读取cache file\n\n    local file = io.open(file_name, \"rb\")\n    if not file then\n      return nil\n    end\n\n    body = file:read(\"*all\")\n    file:close()\n  end\n\n  return body\nend\n```\n```\n####nginx.conf 查看nginx配置文件中显示调用call()函数的位置为当前server切url /configuration 符合函数要求，在查找外部调用的代码（基本可以定位为控制器的逻辑控制）\n        server {\n                listen unix:/tmp/nginx-status-server.sock;\n                set $proxy_upstream_name \"internal\";\n\n                keepalive_timeout 0;\n                gzip off;\n\n                access_log off;\n\n                location /configuration {\n                        # this should be equals to configuration_data dict\n                        client_max_body_size                    10m;\n                        client_body_buffer_size                 10m;\n                        proxy_buffering                         off;\n\n                        content_by_lua_block {\n                                configuration.call()\n                        }\n                }\n```\n#### 3. 通过上面的信息检索，在Ingress中监听pod变化信息，动态调用/configuration/backends, 函数为configureBackends()\n```go\n####https://github.com/kubernetes/ingress-nginx/blob/ce3e3d51c397ff6a0cd6731cc64360ecdb69ea54/internal/ingress/controller/nginx.go#L982\nfunc configureBackends(rawBackends []*ingress.Backend) error {\n\tbackends := make([]*ingress.Backend, len(rawBackends))\n\n\tfor i, backend := range rawBackends {\n\t\tvar service *apiv1.Service\n\t\tif backend.Service != nil {\n\t\t\tservice = &apiv1.Service{Spec: backend.Service.Spec}\n\t\t}\n\t\tluaBackend := &ingress.Backend{\n\t\t\tName:                 backend.Name,\n\t\t\tPort:                 backend.Port,\n\t\t\tSSLPassthrough:       backend.SSLPassthrough,\n\t\t\tSessionAffinity:      backend.SessionAffinity,\n\t\t\tUpstreamHashBy:       backend.UpstreamHashBy,\n\t\t\tLoadBalancing:        backend.LoadBalancing,\n\t\t\tService:              service,\n\t\t\tNoServer:             backend.NoServer,\n\t\t\tTrafficShapingPolicy: backend.TrafficShapingPolicy,\n\t\t\tAlternativeBackends:  backend.AlternativeBackends,\n\t\t}\n\n\t\tvar endpoints []ingress.Endpoint\n\t\tfor _, endpoint := range backend.Endpoints {\n\t\t\tendpoints = append(endpoints, ingress.Endpoint{\n\t\t\t\tAddress: endpoint.Address,\n\t\t\t\tPort:    endpoint.Port,\n\t\t\t})\n\t\t}\n\n\t\tluaBackend.Endpoints = endpoints\n\t\tbackends[i] = luaBackend\n\t}\n\n\tstatusCode, _, err := nginx.NewPostStatusRequest(\"/configuration/backends\", \"application/json\", backends) ####backends 为request.body,却内容为IP/PORT，以下给出了backend的struct\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif statusCode != http.StatusCreated {\n\t\treturn fmt.Errorf(\"unexpected error code: %d\", statusCode)\n\t}\n\n\treturn nil\n}\n\n####Backend struct\ntype Backend struct {\n\tName    string             `json:\"name\"`\n\tService *apiv1.Service     `json:\"service,omitempty\"`\n\tPort    intstr.IntOrString `json:\"port\"`\n\tSecureCACert resolver.AuthSSLCert `json:\"secureCACert\"`\n\tSSLPassthrough bool `json:\"sslPassthrough\"`\n\tEndpoints []Endpoint `json:\"endpoints,omitempty\"`\n\tSessionAffinity SessionAffinityConfig `json:\"sessionAffinityConfig\"`\n\tUpstreamHashBy UpstreamHashByConfig `json:\"upstreamHashByConfig,omitempty\"`\n\tLoadBalancing string `json:\"load-balance,omitempty\"`\n\tNoServer bool `json:\"noServer\"`\n\tTrafficShapingPolicy TrafficShapingPolicy `json:\"trafficShapingPolicy,omitempty\"`\n\tAlternativeBackends []string `json:\"alternativeBackends,omitempty\"`\n}\n```\n#### 4. ngx\\_balancer.set\\_current_peer()设置backend信息\n```lua\n####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L232:13\n\nfunction _M.balance()\n  local balancer = get_balancer()\n  if not balancer then\n    return\n  end\n\n  local peer = balancer:balance()\n  if not peer then\n    ngx.log(ngx.WARN, \"no peer was returned, balancer: \" .. balancer.name)\n    return\n  end\n\n  ngx_balancer.set_more_tries(1)\n\n  local ok, err = ngx_balancer.set_current_peer(peer) ####设置server信息\n  if not ok then\n    ngx.log(ngx.ERR, string.format(\"error while setting current upstream peer %s: %s\", peer, err))\n  end\nend\n\n\nlocal function get_balancer()\n  if ngx.ctx.balancer then\n    return ngx.ctx.balancer\n  end\n\n  local backend_name = ngx.var.proxy_upstream_name ###获取当前request上下文中共享的变量proxy_upstream_name\n\n  local balancer = balancers[backend_name] ###获取balancers信息由sync_backend()函数定时轮询\n  if not balancer then\n    return\n  end\n\n  if route_to_alternative_balancer(balancer) then\n    local alternative_backend_name = balancer.alternative_backends[1]\n    ngx.var.proxy_alternative_upstream_name = alternative_backend_name\n\n    balancer = balancers[alternative_backend_name]\n  end\n\n  ngx.ctx.balancer = balancer\n\n  return balancer\nend\n```\n```\n###nginx.conf\nset $proxy_upstream_name    \"dev-dev-auto-deploy-5000\";\nset $proxy_host             $proxy_upstream_name;\n\nproxy_pass http://upstream_balancer;\n```","slug":"k8s-ingress-nginx","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyijn00jtu9ur9ciwf7nc","content":"<p>只节选了比较关键的代码，删除了比较多的干扰项。纯属个人理解！！！</p>\n<h4 id=\"1-初始化balancer-init-worker-，使用balancer-balance-动态获取\"><a href=\"#1-初始化balancer-init-worker-，使用balancer-balance-动态获取\" class=\"headerlink\" title=\"1. 初始化balancer.init_worker()，使用balancer.balance()动态获取\"></a>1. 初始化balancer.init_worker()，使用balancer.balance()动态获取</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">        lua_package_path <span class=\"string\">\"/etc/nginx/lua/?.lua;/etc/nginx/lua/vendor/?.lua;/usr/local/lib/lua/?.lua;;\"</span>;</span><br><span class=\"line\">        init_by_lua_block &#123;</span><br><span class=\"line\">                ok, res = <span class=\"built_in\">pcall</span>(<span class=\"built_in\">require</span>, <span class=\"string\">\"configuration\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        init_worker_by_lua_block &#123;</span><br><span class=\"line\">                balancer.init_worker()  #####创建定时任务 ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">###upstream configure</span><br><span class=\"line\">upstream upstream_balancer &#123;</span><br><span class=\"line\">\t\tserver <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>; # placeholder</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbalancer_by_lua_block &#123;</span><br><span class=\"line\">\t\t\tbalancer.balance()</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tkeepalive <span class=\"number\">32</span>;</span><br><span class=\"line\">\t\tkeepalive_timeout  <span class=\"number\">60</span>s;</span><br><span class=\"line\">\t\tkeepalive_requests <span class=\"number\">100</span>;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-获取backend信息，balancer-init-worker\"><a href=\"#2-获取backend信息，balancer-init-worker\" class=\"headerlink\" title=\"2. 获取backend信息，balancer.init_worker()\"></a>2. 获取backend信息，balancer.init_worker()</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L223</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> configuration = <span class=\"built_in\">require</span>(<span class=\"string\">\"configuration\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.init_worker</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  sync_backends() <span class=\"comment\">-- when worker starts, sync backends without delay</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> _, err = ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">\"error when setting up timer.every for sync_backends: %s\"</span>, <span class=\"built_in\">tostring</span>(err)))</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sync_backends</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> backends_data = configuration.get_backends_data()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> new_backends, err = cjson.decode(backends_data)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> balancers_to_keep = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> _, new_backend <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(new_backends) <span class=\"keyword\">do</span></span><br><span class=\"line\">    sync_backend(new_backend)</span><br><span class=\"line\">    balancers_to_keep[new_backend.name] = balancers[new_backend.name]</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/configuration.lua?utm_source=share#L10:<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> configuration_data = ngx.shared.configuration_data</span><br><span class=\"line\"><span class=\"keyword\">local</span> certificate_data = ngx.shared.certificate_data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> _M = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.get_backends_data</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> configuration_data:get(<span class=\"string\">\"backends\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.call</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_method ~= <span class=\"string\">\"POST\"</span> <span class=\"keyword\">and</span> ngx.var.request_method ~= <span class=\"string\">\"GET\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">status</span> = ngx.HTTP_BAD_REQUEST</span><br><span class=\"line\">    ngx.<span class=\"built_in\">print</span>(<span class=\"string\">\"Only POST and GET requests are allowed!\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_uri == <span class=\"string\">\"/configuration/servers\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    handle_servers()</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_uri == <span class=\"string\">\"/configuration/general\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    handle_general()</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.uri == <span class=\"string\">\"/configuration/certs\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    handle_certs()</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_uri ~= <span class=\"string\">\"/configuration/backends\"</span> <span class=\"keyword\">then</span> ####只接受以上<span class=\"number\">4</span>类型URL</span><br><span class=\"line\">    ngx.<span class=\"built_in\">status</span> = ngx.HTTP_NOT_FOUND</span><br><span class=\"line\">    ngx.<span class=\"built_in\">print</span>(<span class=\"string\">\"Not found!\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> backends = fetch_request_body()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> success, err = configuration_data:set(<span class=\"string\">\"backends\"</span>, backends)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### fetch_request_body()，从此函数可以看出此函数是一个外部调用，可以得出原始的数据来源为外部触发的POST，可以查询Call()函数的引用位置</span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetch_request_body</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  ngx.req.read_body() ###防止ngx.req.get_body_data()返回<span class=\"literal\">nil</span>,显示执行一下</span><br><span class=\"line\">  <span class=\"keyword\">local</span> body = ngx.req.get_body_data()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> body <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> file_name = ngx.req.get_body_file() ###读取cache file</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> file = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"rb\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> file <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    body = file:<span class=\"built_in\">read</span>(<span class=\"string\">\"*all\"</span>)</span><br><span class=\"line\">    file:<span class=\"built_in\">close</span>()</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> body</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">####nginx.conf 查看nginx配置文件中显示调用call()函数的位置为当前server切url /configuration 符合函数要求，在查找外部调用的代码（基本可以定位为控制器的逻辑控制）</span></span><br><span class=\"line\">       <span class=\"built_in\"> server </span>&#123;</span><br><span class=\"line\">                listen unix:/tmp/nginx-status-server.sock;</span><br><span class=\"line\">                <span class=\"builtin-name\">set</span> <span class=\"variable\">$proxy_upstream_name</span> <span class=\"string\">\"internal\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                keepalive_timeout 0;</span><br><span class=\"line\">                gzip off;</span><br><span class=\"line\"></span><br><span class=\"line\">                access_log off;</span><br><span class=\"line\"></span><br><span class=\"line\">                location /configuration &#123;</span><br><span class=\"line\">                        # this should be equals <span class=\"keyword\">to</span> configuration_data dict</span><br><span class=\"line\">                        client_max_body_size                    10m;</span><br><span class=\"line\">                        client_body_buffer_size                 10m;</span><br><span class=\"line\">                        proxy_buffering                         off;</span><br><span class=\"line\"></span><br><span class=\"line\">                        content_by_lua_block &#123;</span><br><span class=\"line\">                                configuration.call()</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-通过上面的信息检索，在Ingress中监听pod变化信息，动态调用-configuration-backends-函数为configureBackends\"><a href=\"#3-通过上面的信息检索，在Ingress中监听pod变化信息，动态调用-configuration-backends-函数为configureBackends\" class=\"headerlink\" title=\"3. 通过上面的信息检索，在Ingress中监听pod变化信息，动态调用/configuration/backends, 函数为configureBackends()\"></a>3. 通过上面的信息检索，在Ingress中监听pod变化信息，动态调用/configuration/backends, 函数为configureBackends()</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https:<span class=\"comment\">//github.com/kubernetes/ingress-nginx/blob/ce3e3d51c397ff6a0cd6731cc64360ecdb69ea54/internal/ingress/controller/nginx.go#L982</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">configureBackends</span><span class=\"params\">(rawBackends []*ingress.Backend)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\tbackends := <span class=\"built_in\">make</span>([]*ingress.Backend, <span class=\"built_in\">len</span>(rawBackends))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i, backend := <span class=\"keyword\">range</span> rawBackends &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> service *apiv1.Service</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> backend.Service != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\tservice = &amp;apiv1.Service&#123;Spec: backend.Service.Spec&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tluaBackend := &amp;ingress.Backend&#123;</span><br><span class=\"line\">\t\t\tName:                 backend.Name,</span><br><span class=\"line\">\t\t\tPort:                 backend.Port,</span><br><span class=\"line\">\t\t\tSSLPassthrough:       backend.SSLPassthrough,</span><br><span class=\"line\">\t\t\tSessionAffinity:      backend.SessionAffinity,</span><br><span class=\"line\">\t\t\tUpstreamHashBy:       backend.UpstreamHashBy,</span><br><span class=\"line\">\t\t\tLoadBalancing:        backend.LoadBalancing,</span><br><span class=\"line\">\t\t\tService:              service,</span><br><span class=\"line\">\t\t\tNoServer:             backend.NoServer,</span><br><span class=\"line\">\t\t\tTrafficShapingPolicy: backend.TrafficShapingPolicy,</span><br><span class=\"line\">\t\t\tAlternativeBackends:  backend.AlternativeBackends,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> endpoints []ingress.Endpoint</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, endpoint := <span class=\"keyword\">range</span> backend.Endpoints &#123;</span><br><span class=\"line\">\t\t\tendpoints = <span class=\"built_in\">append</span>(endpoints, ingress.Endpoint&#123;</span><br><span class=\"line\">\t\t\t\tAddress: endpoint.Address,</span><br><span class=\"line\">\t\t\t\tPort:    endpoint.Port,</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tluaBackend.Endpoints = endpoints</span><br><span class=\"line\">\t\tbackends[i] = luaBackend</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstatusCode, _, err := nginx.NewPostStatusRequest(<span class=\"string\">\"/configuration/backends\"</span>, <span class=\"string\">\"application/json\"</span>, backends) ####backends 为request.body,却内容为IP/PORT，以下给出了backend的<span class=\"keyword\">struct</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> statusCode != http.StatusCreated &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Errorf(<span class=\"string\">\"unexpected error code: %d\"</span>, statusCode)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">####Backend <span class=\"keyword\">struct</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Backend <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tName    <span class=\"keyword\">string</span>             <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">\tService *apiv1.Service     <span class=\"string\">`json:\"service,omitempty\"`</span></span><br><span class=\"line\">\tPort    intstr.IntOrString <span class=\"string\">`json:\"port\"`</span></span><br><span class=\"line\">\tSecureCACert resolver.AuthSSLCert <span class=\"string\">`json:\"secureCACert\"`</span></span><br><span class=\"line\">\tSSLPassthrough <span class=\"keyword\">bool</span> <span class=\"string\">`json:\"sslPassthrough\"`</span></span><br><span class=\"line\">\tEndpoints []Endpoint <span class=\"string\">`json:\"endpoints,omitempty\"`</span></span><br><span class=\"line\">\tSessionAffinity SessionAffinityConfig <span class=\"string\">`json:\"sessionAffinityConfig\"`</span></span><br><span class=\"line\">\tUpstreamHashBy UpstreamHashByConfig <span class=\"string\">`json:\"upstreamHashByConfig,omitempty\"`</span></span><br><span class=\"line\">\tLoadBalancing <span class=\"keyword\">string</span> <span class=\"string\">`json:\"load-balance,omitempty\"`</span></span><br><span class=\"line\">\tNoServer <span class=\"keyword\">bool</span> <span class=\"string\">`json:\"noServer\"`</span></span><br><span class=\"line\">\tTrafficShapingPolicy TrafficShapingPolicy <span class=\"string\">`json:\"trafficShapingPolicy,omitempty\"`</span></span><br><span class=\"line\">\tAlternativeBackends []<span class=\"keyword\">string</span> <span class=\"string\">`json:\"alternativeBackends,omitempty\"`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-ngx-balancer-set-current-peer-设置backend信息\"><a href=\"#4-ngx-balancer-set-current-peer-设置backend信息\" class=\"headerlink\" title=\"4. ngx_balancer.set_current_peer()设置backend信息\"></a>4. ngx_balancer.set_current_peer()设置backend信息</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L232:<span class=\"number\">13</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.balance</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> balancer = get_balancer()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> balancer <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> peer = balancer:balance()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> peer <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.WARN, <span class=\"string\">\"no peer was returned, balancer: \"</span> .. balancer.name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ngx_balancer.set_more_tries(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> ok, err = ngx_balancer.set_current_peer(peer) ####设置server信息</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">\"error while setting current upstream peer %s: %s\"</span>, peer, err))</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_balancer</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.ctx.balancer <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ngx.ctx.balancer</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> backend_name = ngx.var.proxy_upstream_name ###获取当前request上下文中共享的变量proxy_upstream_name</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> balancer = balancers[backend_name] ###获取balancers信息由sync_backend()函数定时轮询</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> balancer <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> route_to_alternative_balancer(balancer) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> alternative_backend_name = balancer.alternative_backends[<span class=\"number\">1</span>]</span><br><span class=\"line\">    ngx.var.proxy_alternative_upstream_name = alternative_backend_name</span><br><span class=\"line\"></span><br><span class=\"line\">    balancer = balancers[alternative_backend_name]</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ngx.ctx.balancer = balancer</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> balancer</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">###nginx.conf</span></span><br><span class=\"line\"><span class=\"attribute\">set</span> <span class=\"variable\">$proxy_upstream_name</span>    <span class=\"string\">\"dev-dev-auto-deploy-5000\"</span>;</span><br><span class=\"line\"><span class=\"attribute\">set</span> <span class=\"variable\">$proxy_host</span>             <span class=\"variable\">$proxy_upstream_name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">proxy_pass</span> http://upstream_balancer;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>只节选了比较关键的代码，删除了比较多的干扰项。纯属个人理解！！！</p>\n<h4 id=\"1-初始化balancer-init-worker-，使用balancer-balance-动态获取\"><a href=\"#1-初始化balancer-init-worker-，使用balancer-balance-动态获取\" class=\"headerlink\" title=\"1. 初始化balancer.init_worker()，使用balancer.balance()动态获取\"></a>1. 初始化balancer.init_worker()，使用balancer.balance()动态获取</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">        lua_package_path <span class=\"string\">\"/etc/nginx/lua/?.lua;/etc/nginx/lua/vendor/?.lua;/usr/local/lib/lua/?.lua;;\"</span>;</span><br><span class=\"line\">        init_by_lua_block &#123;</span><br><span class=\"line\">                ok, res = <span class=\"built_in\">pcall</span>(<span class=\"built_in\">require</span>, <span class=\"string\">\"configuration\"</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        init_worker_by_lua_block &#123;</span><br><span class=\"line\">                balancer.init_worker()  #####创建定时任务 ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">###upstream configure</span><br><span class=\"line\">upstream upstream_balancer &#123;</span><br><span class=\"line\">\t\tserver <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>; # placeholder</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tbalancer_by_lua_block &#123;</span><br><span class=\"line\">\t\t\tbalancer.balance()</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tkeepalive <span class=\"number\">32</span>;</span><br><span class=\"line\">\t\tkeepalive_timeout  <span class=\"number\">60</span>s;</span><br><span class=\"line\">\t\tkeepalive_requests <span class=\"number\">100</span>;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-获取backend信息，balancer-init-worker\"><a href=\"#2-获取backend信息，balancer-init-worker\" class=\"headerlink\" title=\"2. 获取backend信息，balancer.init_worker()\"></a>2. 获取backend信息，balancer.init_worker()</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L223</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> configuration = <span class=\"built_in\">require</span>(<span class=\"string\">\"configuration\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.init_worker</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  sync_backends() <span class=\"comment\">-- when worker starts, sync backends without delay</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> _, err = ngx.timer.every(BACKENDS_SYNC_INTERVAL, sync_backends)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">\"error when setting up timer.every for sync_backends: %s\"</span>, <span class=\"built_in\">tostring</span>(err)))</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sync_backends</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> backends_data = configuration.get_backends_data()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> new_backends, err = cjson.decode(backends_data)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> balancers_to_keep = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> _, new_backend <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(new_backends) <span class=\"keyword\">do</span></span><br><span class=\"line\">    sync_backend(new_backend)</span><br><span class=\"line\">    balancers_to_keep[new_backend.name] = balancers[new_backend.name]</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/configuration.lua?utm_source=share#L10:<span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> configuration_data = ngx.shared.configuration_data</span><br><span class=\"line\"><span class=\"keyword\">local</span> certificate_data = ngx.shared.certificate_data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> _M = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.get_backends_data</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> configuration_data:get(<span class=\"string\">\"backends\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.call</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_method ~= <span class=\"string\">\"POST\"</span> <span class=\"keyword\">and</span> ngx.var.request_method ~= <span class=\"string\">\"GET\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">status</span> = ngx.HTTP_BAD_REQUEST</span><br><span class=\"line\">    ngx.<span class=\"built_in\">print</span>(<span class=\"string\">\"Only POST and GET requests are allowed!\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_uri == <span class=\"string\">\"/configuration/servers\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    handle_servers()</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_uri == <span class=\"string\">\"/configuration/general\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    handle_general()</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.uri == <span class=\"string\">\"/configuration/certs\"</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">    handle_certs()</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.var.request_uri ~= <span class=\"string\">\"/configuration/backends\"</span> <span class=\"keyword\">then</span> ####只接受以上<span class=\"number\">4</span>类型URL</span><br><span class=\"line\">    ngx.<span class=\"built_in\">status</span> = ngx.HTTP_NOT_FOUND</span><br><span class=\"line\">    ngx.<span class=\"built_in\">print</span>(<span class=\"string\">\"Not found!\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> backends = fetch_request_body()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> success, err = configuration_data:set(<span class=\"string\">\"backends\"</span>, backends)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">### fetch_request_body()，从此函数可以看出此函数是一个外部调用，可以得出原始的数据来源为外部触发的POST，可以查询Call()函数的引用位置</span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fetch_request_body</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  ngx.req.read_body() ###防止ngx.req.get_body_data()返回<span class=\"literal\">nil</span>,显示执行一下</span><br><span class=\"line\">  <span class=\"keyword\">local</span> body = ngx.req.get_body_data()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> body <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> file_name = ngx.req.get_body_file() ###读取cache file</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> file = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"rb\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> file <span class=\"keyword\">then</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    body = file:<span class=\"built_in\">read</span>(<span class=\"string\">\"*all\"</span>)</span><br><span class=\"line\">    file:<span class=\"built_in\">close</span>()</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> body</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">####nginx.conf 查看nginx配置文件中显示调用call()函数的位置为当前server切url /configuration 符合函数要求，在查找外部调用的代码（基本可以定位为控制器的逻辑控制）</span></span><br><span class=\"line\">       <span class=\"built_in\"> server </span>&#123;</span><br><span class=\"line\">                listen unix:/tmp/nginx-status-server.sock;</span><br><span class=\"line\">                <span class=\"builtin-name\">set</span> <span class=\"variable\">$proxy_upstream_name</span> <span class=\"string\">\"internal\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                keepalive_timeout 0;</span><br><span class=\"line\">                gzip off;</span><br><span class=\"line\"></span><br><span class=\"line\">                access_log off;</span><br><span class=\"line\"></span><br><span class=\"line\">                location /configuration &#123;</span><br><span class=\"line\">                        # this should be equals <span class=\"keyword\">to</span> configuration_data dict</span><br><span class=\"line\">                        client_max_body_size                    10m;</span><br><span class=\"line\">                        client_body_buffer_size                 10m;</span><br><span class=\"line\">                        proxy_buffering                         off;</span><br><span class=\"line\"></span><br><span class=\"line\">                        content_by_lua_block &#123;</span><br><span class=\"line\">                                configuration.call()</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-通过上面的信息检索，在Ingress中监听pod变化信息，动态调用-configuration-backends-函数为configureBackends\"><a href=\"#3-通过上面的信息检索，在Ingress中监听pod变化信息，动态调用-configuration-backends-函数为configureBackends\" class=\"headerlink\" title=\"3. 通过上面的信息检索，在Ingress中监听pod变化信息，动态调用/configuration/backends, 函数为configureBackends()\"></a>3. 通过上面的信息检索，在Ingress中监听pod变化信息，动态调用/configuration/backends, 函数为configureBackends()</h4><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https:<span class=\"comment\">//github.com/kubernetes/ingress-nginx/blob/ce3e3d51c397ff6a0cd6731cc64360ecdb69ea54/internal/ingress/controller/nginx.go#L982</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">configureBackends</span><span class=\"params\">(rawBackends []*ingress.Backend)</span> <span class=\"title\">error</span></span> &#123;</span><br><span class=\"line\">\tbackends := <span class=\"built_in\">make</span>([]*ingress.Backend, <span class=\"built_in\">len</span>(rawBackends))</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> i, backend := <span class=\"keyword\">range</span> rawBackends &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> service *apiv1.Service</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> backend.Service != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\tservice = &amp;apiv1.Service&#123;Spec: backend.Service.Spec&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tluaBackend := &amp;ingress.Backend&#123;</span><br><span class=\"line\">\t\t\tName:                 backend.Name,</span><br><span class=\"line\">\t\t\tPort:                 backend.Port,</span><br><span class=\"line\">\t\t\tSSLPassthrough:       backend.SSLPassthrough,</span><br><span class=\"line\">\t\t\tSessionAffinity:      backend.SessionAffinity,</span><br><span class=\"line\">\t\t\tUpstreamHashBy:       backend.UpstreamHashBy,</span><br><span class=\"line\">\t\t\tLoadBalancing:        backend.LoadBalancing,</span><br><span class=\"line\">\t\t\tService:              service,</span><br><span class=\"line\">\t\t\tNoServer:             backend.NoServer,</span><br><span class=\"line\">\t\t\tTrafficShapingPolicy: backend.TrafficShapingPolicy,</span><br><span class=\"line\">\t\t\tAlternativeBackends:  backend.AlternativeBackends,</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> endpoints []ingress.Endpoint</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> _, endpoint := <span class=\"keyword\">range</span> backend.Endpoints &#123;</span><br><span class=\"line\">\t\t\tendpoints = <span class=\"built_in\">append</span>(endpoints, ingress.Endpoint&#123;</span><br><span class=\"line\">\t\t\t\tAddress: endpoint.Address,</span><br><span class=\"line\">\t\t\t\tPort:    endpoint.Port,</span><br><span class=\"line\">\t\t\t&#125;)</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tluaBackend.Endpoints = endpoints</span><br><span class=\"line\">\t\tbackends[i] = luaBackend</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstatusCode, _, err := nginx.NewPostStatusRequest(<span class=\"string\">\"/configuration/backends\"</span>, <span class=\"string\">\"application/json\"</span>, backends) ####backends 为request.body,却内容为IP/PORT，以下给出了backend的<span class=\"keyword\">struct</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> err</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> statusCode != http.StatusCreated &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> fmt.Errorf(<span class=\"string\">\"unexpected error code: %d\"</span>, statusCode)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">####Backend <span class=\"keyword\">struct</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> Backend <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tName    <span class=\"keyword\">string</span>             <span class=\"string\">`json:\"name\"`</span></span><br><span class=\"line\">\tService *apiv1.Service     <span class=\"string\">`json:\"service,omitempty\"`</span></span><br><span class=\"line\">\tPort    intstr.IntOrString <span class=\"string\">`json:\"port\"`</span></span><br><span class=\"line\">\tSecureCACert resolver.AuthSSLCert <span class=\"string\">`json:\"secureCACert\"`</span></span><br><span class=\"line\">\tSSLPassthrough <span class=\"keyword\">bool</span> <span class=\"string\">`json:\"sslPassthrough\"`</span></span><br><span class=\"line\">\tEndpoints []Endpoint <span class=\"string\">`json:\"endpoints,omitempty\"`</span></span><br><span class=\"line\">\tSessionAffinity SessionAffinityConfig <span class=\"string\">`json:\"sessionAffinityConfig\"`</span></span><br><span class=\"line\">\tUpstreamHashBy UpstreamHashByConfig <span class=\"string\">`json:\"upstreamHashByConfig,omitempty\"`</span></span><br><span class=\"line\">\tLoadBalancing <span class=\"keyword\">string</span> <span class=\"string\">`json:\"load-balance,omitempty\"`</span></span><br><span class=\"line\">\tNoServer <span class=\"keyword\">bool</span> <span class=\"string\">`json:\"noServer\"`</span></span><br><span class=\"line\">\tTrafficShapingPolicy TrafficShapingPolicy <span class=\"string\">`json:\"trafficShapingPolicy,omitempty\"`</span></span><br><span class=\"line\">\tAlternativeBackends []<span class=\"keyword\">string</span> <span class=\"string\">`json:\"alternativeBackends,omitempty\"`</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-ngx-balancer-set-current-peer-设置backend信息\"><a href=\"#4-ngx-balancer-set-current-peer-设置backend信息\" class=\"headerlink\" title=\"4. ngx_balancer.set_current_peer()设置backend信息\"></a>4. ngx_balancer.set_current_peer()设置backend信息</h4><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">####https://sourcegraph.com/github.com/kubernetes/ingress-nginx@dd0fe4b458cc5520f25eb8bba25bbe6f0c72ee98/-/blob/rootfs/etc/nginx/lua/balancer.lua?utm_source=share#L232:<span class=\"number\">13</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.balance</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> balancer = get_balancer()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> balancer <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> peer = balancer:balance()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> peer <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.WARN, <span class=\"string\">\"no peer was returned, balancer: \"</span> .. balancer.name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ngx_balancer.set_more_tries(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> ok, err = ngx_balancer.set_current_peer(peer) ####设置server信息</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">\"error while setting current upstream peer %s: %s\"</span>, peer, err))</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_balancer</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ngx.ctx.balancer <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ngx.ctx.balancer</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> backend_name = ngx.var.proxy_upstream_name ###获取当前request上下文中共享的变量proxy_upstream_name</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">local</span> balancer = balancers[backend_name] ###获取balancers信息由sync_backend()函数定时轮询</span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> balancer <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> route_to_alternative_balancer(balancer) <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> alternative_backend_name = balancer.alternative_backends[<span class=\"number\">1</span>]</span><br><span class=\"line\">    ngx.var.proxy_alternative_upstream_name = alternative_backend_name</span><br><span class=\"line\"></span><br><span class=\"line\">    balancer = balancers[alternative_backend_name]</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ngx.ctx.balancer = balancer</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> balancer</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">###nginx.conf</span></span><br><span class=\"line\"><span class=\"attribute\">set</span> <span class=\"variable\">$proxy_upstream_name</span>    <span class=\"string\">\"dev-dev-auto-deploy-5000\"</span>;</span><br><span class=\"line\"><span class=\"attribute\">set</span> <span class=\"variable\">$proxy_host</span>             <span class=\"variable\">$proxy_upstream_name</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">proxy_pass</span> http://upstream_balancer;</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"linux磁盘配额","published":1,"author":"xiemx","comments":1,"date":"2015-11-28T20:11:32.000Z","_content":"再多用户的模式下，linux中常常需要对用户进行磁盘空间限制，例如虚拟主机需要限制用户的空间。linux大多数的发行版都采用quota来对磁盘配额来进行管理，quota是系统内核中的一个功能，要使用quota需要系统内核支持quota功能。目前使用的发行本中都是支持次功能的，如果内核不支持此功能那么就需要重新编译下内核来开启此功能\n```shell\n### grep CONFIG_QUOTA /boot/config-`uname -r` 来检查下内核是否支持\n\n[root@localhost mnt]# grep CONFIG_QUOTA /boot/config-2.6.32-431.el6.x86_64\nCONFIG_QUOTA=y\nCONFIG_QUOTA_NETLINK_INTERFACE=y\n# CONFIG_QUOTA_DEBUG is not set\nCONFIG_QUOTA_TREE=y\nCONFIG_QUOTACTL=y\n```\n如有以上两条则说明支持，另外quota是针对用户去限制其可使用的block和inode，所以应该是一个基于文件系统的配置，所以我们要在文件系统中开启quota功能，针对已经挂载过的文件系统我们可以使用\n`mount -o  remount,usrquota,grpquota,default    /mnt` \n来重新挂载激活（mnt只是个举例，实际中先df 命令查看当前挂载信息，在选择要开启的文件系统），也可以写在`/etc/fstab`文件中`umount` 后再`mount -a` 或重启系统\n```shell\n[root@localhost mnt]# mount\n/dev/mapper/VolGroup-lv_root on / type ext4 (rw)\nproc on /proc type proc (rw)\nsysfs on /sys type sysfs (rw)\ndevpts on /dev/pts type devpts (rw,gid=5,mode=620)\ntmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")\n/dev/sda1 on /boot type ext4 (rw)\nnone on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)\n/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw)\n\n[root@localhost mnt]# mount -o remount,grpquota,usrquota,defaults /mnt\n\n[root@localhost mnt]# mount\n/dev/mapper/VolGroup-lv_root on / type ext4 (rw)\nproc on /proc type proc (rw)\nsysfs on /sys type sysfs (rw)\ndevpts on /dev/pts type devpts (rw,gid=5,mode=620)\ntmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")\n/dev/sda1 on /boot type ext4 (rw)\nnone on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)\n/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw,usrquota,grpquota)\n[root@localhost mnt]#\n```\n**此时已开启/mnt对应的文件系统的quota功能，我们可针对/mnt目录下进行用户配额限制**\n\n\n1. 检查文件系统的quota信息，生成quota数据库，会在文件系统的根目录下生成quota.user和quota.group二个data类型的文件可用file命令查看\n```shell\n[root@localhost mnt]# quotacheck -avug\nquotacheck: Your kernel probably supports journaled quota but you are not using it. Consider switching to journaled quota to avoid running quotacheck after an unclean shutdown.\nquotacheck: Scanning /dev/mapper/vgxiemx-lv1 [/mnt] done\nquotacheck: Checked 3 directories and 6 files\n[root@localhost mnt]# ls\naquota.group  aquota.user  lost+found\n```\n2. 启动quota\nquotaon -av —a选项启动所有文件系统，也可指定具体某个文件系统。关闭`quotaoff`命令，参数相同。\n```shell\n[root@localhost /]# quotaon -av\n/dev/mapper/vgxiemx-lv1 [/mnt]: group quotas turned on\n/dev/mapper/vgxiemx-lv1 [/mnt]: user quotas turned on\n```\n3. 编辑用户的quota信息\nedquota  -u testuser——会打开一个vi界面\n```shell\nDisk quotas for user testuser (uid 500):\nFilesystem                                    blocks       soft       hard     inodes     soft     hard\n/dev/mapper/vgxiemx-lv1                        0             10        100       0          10       100\n\nfilesystem：目标文件系统\nblock：现在已使用的block数量\ninode：现在已使用的inode数量\nsoft：软限制，可使用的soft数量，0为不限制，具体数值设定后超过数值进行警告，但依旧可以写入，知道宽限时间到达后无法写入默认宽限7天\nhard：硬限制，可使用block/inode数量，0为不限制，具体数值设定后超过数值，立即无法写入。\n```\n例：\n```shell\n[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=20 ——生成一个20M的文件，查过soft block限制\ndm-2: warning, user block quota exceeded.\n1+0 records in\n0+0 records out\n98304 bytes (98 kB) copied, 0.00147599 s, 66.6 MB/s\n\n[testuser@localhost mnt]$ du bigfile ——统计文件大小20M\n20 bigfile\n\n[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=110——生成一个110M的文件，超过hard block限制，最后10M数据无法写入\ndm-2: warning, user block quota exceeded.\ndm-2: write failed, user block limit reached.\ndd: writing `/mnt/bigfile': Disk quota exceeded\n1+0 records in\n0+0 records out\n98304 bytes (98 kB) copied, 0.000795784 s, 124 MB/s\n\n[testuser@localhost mnt]$ du bigfile——统计文件大小为100M\n100 bigfile\n\n[testuser@localhost mnt]$ ll\ntotal 132\n-rw-------. 1 root root 7168 Nov 22 04:01 aquota.group\n-rw-------. 1 root root 7168 Nov 22 03:58 aquota.user\n-rw-rw-r--. 1 testuser testuser 98304 Nov 22 04:02 bigfile\ndrwxrwxrwx. 2 root root 16384 Nov 22 02:31 lost+found\n\n[testuser@localhost mnt]$ touch file{1..10}——创建10个文件，此时已有1个bigfile，总共11个文件超过soft inode限制\ndm-2: warning, user file quota exceeded.\n\n[testuser@localhost mnt]$ ls\naquota.group bigfile file10 file3 file5 file7 file9\naquota.user file1 file2 file4 file6 file8 lost+found\n\n[testuser@localhost mnt]$ touch test{1..100}——创建100个文件，此时已有11个文件，所以最后的11个文件应该创建不成功\ndm-2: write failed, user file limit reached.\ntouch: cannot touch `test90': Disk quota exceeded\ntouch: cannot touch `test91': Disk quota exceeded\ntouch: cannot touch `test92': Disk quota exceeded\ntouch: cannot touch `test93': Disk quota exceeded\ntouch: cannot touch `test94': Disk quota exceeded\ntouch: cannot touch `test95': Disk quota exceeded\ntouch: cannot touch `test96': Disk quota exceeded\ntouch: cannot touch `test97': Disk quota exceeded\ntouch: cannot touch `test98': Disk quota exceeded\ntouch: cannot touch `test99': Disk quota exceeded\ntouch: cannot touch `test100': Disk quota exceeded\n\n[testuser@localhost mnt]$ ls\naquota.group file7 test15 test24 test33 test42 test51 test60 test7 test79 test88\naquota.user file8 test16 test25 test34 test43 test52 test61 test70 test8 test89\nbigfile file9 test17 test26 test35 test44 test53 test62 test71 test80 test9\nfile1 lost+found test18 test27 test36 test45 test54 test63 test72 test81\nfile10 test1 test19 test28 test37 test46 test55 test64 test73 test82\nfile2 test10 test2 test29 test38 test47 test56 test65 test74 test83\nfile3 test11 test20 test3 test39 test48 test57 test66 test75 test84\nfile4 test12 test21 test30 test4 test49 test58 test67 test76 test85\nfile5 test13 test22 test31 test40 test5 test59 test68 test77 test86\nfile6 test14 test23 test32 test41 test50 test6 test69 test78 test87\n```\n\n4.设置宽限时间\n```\nedquota -t  ——默认7天\nGrace period before enforcing soft limits for users:\nTime units may be: days, hours, minutes, or seconds\nFilesystem                                   Block grace period                        Inode grace period\n/dev/mapper/vgxiemx-lv1                      7days                                     7days\n```\n5.查询所有用户的磁盘配额情况，用户也可用quota查询当前用户的quota信息\n```\nrepquota -a\n\n[root@localhost mnt]# repquota -a\n*** Report for user quotas on device /dev/mapper/vgxiemx-lv1\nBlock grace time: 7days; Inode grace time: 7days\nBlock limits File limits\nUser                      used      soft      hard    grace    used      soft      hard       grace\n-------------------------------------------------------------------------------------------\nroot           --        956592     0         0                 6          0        0\ntestuser       ++        100        10        100      6days    100        10       100       6days\n```\n*如果要设置quota，建议在/etc/rc.d/rc.local中写入quotacheck和quotaon 已保证系统启动时quota服务开启且数据都是最新的。分区的quote功能开启建议在/etc/fstab中。*\n\n例：\n```\n/etc/fstab\n# Created by anaconda on Sun May 24 08:16:25 2015\n#\n# Accessible filesystems, by reference, are maintained under '/dev/disk'\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n#\n/dev/mapper/VolGroup-lv_root / ext4 defaults 1 1\nUUID=3fe6311e-b3fe-4f7f-8558-4f011eab1dde /boot ext4 defaults 1 2\n/dev/mapper/VolGroup-lv_swap swap swap defaults 0 0\ntmpfs /dev/shm tmpfs defaults 0 0\ndevpts /dev/pts devpts gid=5,mode=620 0 0\nsysfs /sys sysfs defaults 0 0\nproc /proc proc defaults 0 0\n/dev/mapper/vgxiemx-lv1 /mnt ext3 defaults,usrquota,grpquota 0 0\n```","source":"_posts/linux-disk-quota.md","raw":"---\nlayout: post\ntitle: linux磁盘配额\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-29 04:11:32\ntags: [ linux, command ]\ncategories:\n    - linux\n---\n再多用户的模式下，linux中常常需要对用户进行磁盘空间限制，例如虚拟主机需要限制用户的空间。linux大多数的发行版都采用quota来对磁盘配额来进行管理，quota是系统内核中的一个功能，要使用quota需要系统内核支持quota功能。目前使用的发行本中都是支持次功能的，如果内核不支持此功能那么就需要重新编译下内核来开启此功能\n```shell\n### grep CONFIG_QUOTA /boot/config-`uname -r` 来检查下内核是否支持\n\n[root@localhost mnt]# grep CONFIG_QUOTA /boot/config-2.6.32-431.el6.x86_64\nCONFIG_QUOTA=y\nCONFIG_QUOTA_NETLINK_INTERFACE=y\n# CONFIG_QUOTA_DEBUG is not set\nCONFIG_QUOTA_TREE=y\nCONFIG_QUOTACTL=y\n```\n如有以上两条则说明支持，另外quota是针对用户去限制其可使用的block和inode，所以应该是一个基于文件系统的配置，所以我们要在文件系统中开启quota功能，针对已经挂载过的文件系统我们可以使用\n`mount -o  remount,usrquota,grpquota,default    /mnt` \n来重新挂载激活（mnt只是个举例，实际中先df 命令查看当前挂载信息，在选择要开启的文件系统），也可以写在`/etc/fstab`文件中`umount` 后再`mount -a` 或重启系统\n```shell\n[root@localhost mnt]# mount\n/dev/mapper/VolGroup-lv_root on / type ext4 (rw)\nproc on /proc type proc (rw)\nsysfs on /sys type sysfs (rw)\ndevpts on /dev/pts type devpts (rw,gid=5,mode=620)\ntmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")\n/dev/sda1 on /boot type ext4 (rw)\nnone on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)\n/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw)\n\n[root@localhost mnt]# mount -o remount,grpquota,usrquota,defaults /mnt\n\n[root@localhost mnt]# mount\n/dev/mapper/VolGroup-lv_root on / type ext4 (rw)\nproc on /proc type proc (rw)\nsysfs on /sys type sysfs (rw)\ndevpts on /dev/pts type devpts (rw,gid=5,mode=620)\ntmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")\n/dev/sda1 on /boot type ext4 (rw)\nnone on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)\n/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw,usrquota,grpquota)\n[root@localhost mnt]#\n```\n**此时已开启/mnt对应的文件系统的quota功能，我们可针对/mnt目录下进行用户配额限制**\n\n\n1. 检查文件系统的quota信息，生成quota数据库，会在文件系统的根目录下生成quota.user和quota.group二个data类型的文件可用file命令查看\n```shell\n[root@localhost mnt]# quotacheck -avug\nquotacheck: Your kernel probably supports journaled quota but you are not using it. Consider switching to journaled quota to avoid running quotacheck after an unclean shutdown.\nquotacheck: Scanning /dev/mapper/vgxiemx-lv1 [/mnt] done\nquotacheck: Checked 3 directories and 6 files\n[root@localhost mnt]# ls\naquota.group  aquota.user  lost+found\n```\n2. 启动quota\nquotaon -av —a选项启动所有文件系统，也可指定具体某个文件系统。关闭`quotaoff`命令，参数相同。\n```shell\n[root@localhost /]# quotaon -av\n/dev/mapper/vgxiemx-lv1 [/mnt]: group quotas turned on\n/dev/mapper/vgxiemx-lv1 [/mnt]: user quotas turned on\n```\n3. 编辑用户的quota信息\nedquota  -u testuser——会打开一个vi界面\n```shell\nDisk quotas for user testuser (uid 500):\nFilesystem                                    blocks       soft       hard     inodes     soft     hard\n/dev/mapper/vgxiemx-lv1                        0             10        100       0          10       100\n\nfilesystem：目标文件系统\nblock：现在已使用的block数量\ninode：现在已使用的inode数量\nsoft：软限制，可使用的soft数量，0为不限制，具体数值设定后超过数值进行警告，但依旧可以写入，知道宽限时间到达后无法写入默认宽限7天\nhard：硬限制，可使用block/inode数量，0为不限制，具体数值设定后超过数值，立即无法写入。\n```\n例：\n```shell\n[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=20 ——生成一个20M的文件，查过soft block限制\ndm-2: warning, user block quota exceeded.\n1+0 records in\n0+0 records out\n98304 bytes (98 kB) copied, 0.00147599 s, 66.6 MB/s\n\n[testuser@localhost mnt]$ du bigfile ——统计文件大小20M\n20 bigfile\n\n[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=110——生成一个110M的文件，超过hard block限制，最后10M数据无法写入\ndm-2: warning, user block quota exceeded.\ndm-2: write failed, user block limit reached.\ndd: writing `/mnt/bigfile': Disk quota exceeded\n1+0 records in\n0+0 records out\n98304 bytes (98 kB) copied, 0.000795784 s, 124 MB/s\n\n[testuser@localhost mnt]$ du bigfile——统计文件大小为100M\n100 bigfile\n\n[testuser@localhost mnt]$ ll\ntotal 132\n-rw-------. 1 root root 7168 Nov 22 04:01 aquota.group\n-rw-------. 1 root root 7168 Nov 22 03:58 aquota.user\n-rw-rw-r--. 1 testuser testuser 98304 Nov 22 04:02 bigfile\ndrwxrwxrwx. 2 root root 16384 Nov 22 02:31 lost+found\n\n[testuser@localhost mnt]$ touch file{1..10}——创建10个文件，此时已有1个bigfile，总共11个文件超过soft inode限制\ndm-2: warning, user file quota exceeded.\n\n[testuser@localhost mnt]$ ls\naquota.group bigfile file10 file3 file5 file7 file9\naquota.user file1 file2 file4 file6 file8 lost+found\n\n[testuser@localhost mnt]$ touch test{1..100}——创建100个文件，此时已有11个文件，所以最后的11个文件应该创建不成功\ndm-2: write failed, user file limit reached.\ntouch: cannot touch `test90': Disk quota exceeded\ntouch: cannot touch `test91': Disk quota exceeded\ntouch: cannot touch `test92': Disk quota exceeded\ntouch: cannot touch `test93': Disk quota exceeded\ntouch: cannot touch `test94': Disk quota exceeded\ntouch: cannot touch `test95': Disk quota exceeded\ntouch: cannot touch `test96': Disk quota exceeded\ntouch: cannot touch `test97': Disk quota exceeded\ntouch: cannot touch `test98': Disk quota exceeded\ntouch: cannot touch `test99': Disk quota exceeded\ntouch: cannot touch `test100': Disk quota exceeded\n\n[testuser@localhost mnt]$ ls\naquota.group file7 test15 test24 test33 test42 test51 test60 test7 test79 test88\naquota.user file8 test16 test25 test34 test43 test52 test61 test70 test8 test89\nbigfile file9 test17 test26 test35 test44 test53 test62 test71 test80 test9\nfile1 lost+found test18 test27 test36 test45 test54 test63 test72 test81\nfile10 test1 test19 test28 test37 test46 test55 test64 test73 test82\nfile2 test10 test2 test29 test38 test47 test56 test65 test74 test83\nfile3 test11 test20 test3 test39 test48 test57 test66 test75 test84\nfile4 test12 test21 test30 test4 test49 test58 test67 test76 test85\nfile5 test13 test22 test31 test40 test5 test59 test68 test77 test86\nfile6 test14 test23 test32 test41 test50 test6 test69 test78 test87\n```\n\n4.设置宽限时间\n```\nedquota -t  ——默认7天\nGrace period before enforcing soft limits for users:\nTime units may be: days, hours, minutes, or seconds\nFilesystem                                   Block grace period                        Inode grace period\n/dev/mapper/vgxiemx-lv1                      7days                                     7days\n```\n5.查询所有用户的磁盘配额情况，用户也可用quota查询当前用户的quota信息\n```\nrepquota -a\n\n[root@localhost mnt]# repquota -a\n*** Report for user quotas on device /dev/mapper/vgxiemx-lv1\nBlock grace time: 7days; Inode grace time: 7days\nBlock limits File limits\nUser                      used      soft      hard    grace    used      soft      hard       grace\n-------------------------------------------------------------------------------------------\nroot           --        956592     0         0                 6          0        0\ntestuser       ++        100        10        100      6days    100        10       100       6days\n```\n*如果要设置quota，建议在/etc/rc.d/rc.local中写入quotacheck和quotaon 已保证系统启动时quota服务开启且数据都是最新的。分区的quote功能开启建议在/etc/fstab中。*\n\n例：\n```\n/etc/fstab\n# Created by anaconda on Sun May 24 08:16:25 2015\n#\n# Accessible filesystems, by reference, are maintained under '/dev/disk'\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n#\n/dev/mapper/VolGroup-lv_root / ext4 defaults 1 1\nUUID=3fe6311e-b3fe-4f7f-8558-4f011eab1dde /boot ext4 defaults 1 2\n/dev/mapper/VolGroup-lv_swap swap swap defaults 0 0\ntmpfs /dev/shm tmpfs defaults 0 0\ndevpts /dev/pts devpts gid=5,mode=620 0 0\nsysfs /sys sysfs defaults 0 0\nproc /proc proc defaults 0 0\n/dev/mapper/vgxiemx-lv1 /mnt ext3 defaults,usrquota,grpquota 0 0\n```","slug":"linux-disk-quota","updated":"2019-10-21T06:57:43.047Z","photos":[],"link":"","_id":"ck42dyijo00jvu9urn6oa27sg","content":"<p>再多用户的模式下，linux中常常需要对用户进行磁盘空间限制，例如虚拟主机需要限制用户的空间。linux大多数的发行版都采用quota来对磁盘配额来进行管理，quota是系统内核中的一个功能，要使用quota需要系统内核支持quota功能。目前使用的发行本中都是支持次功能的，如果内核不支持此功能那么就需要重新编译下内核来开启此功能</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## grep CONFIG_QUOTA /boot/config-`uname -r` 来检查下内核是否支持</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# grep CONFIG_QUOTA /boot/config-2.6.32-431.el6.x86_64</span><br><span class=\"line\">CONFIG_QUOTA=y</span><br><span class=\"line\">CONFIG_QUOTA_NETLINK_INTERFACE=y</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> CONFIG_QUOTA_DEBUG is not <span class=\"built_in\">set</span></span></span><br><span class=\"line\">CONFIG_QUOTA_TREE=y</span><br><span class=\"line\">CONFIG_QUOTACTL=y</span><br></pre></td></tr></table></figure>\n\n<p>如有以上两条则说明支持，另外quota是针对用户去限制其可使用的block和inode，所以应该是一个基于文件系统的配置，所以我们要在文件系统中开启quota功能，针对已经挂载过的文件系统我们可以使用<br><code>mount -o  remount,usrquota,grpquota,default    /mnt</code><br>来重新挂载激活（mnt只是个举例，实际中先df 命令查看当前挂载信息，在选择要开启的文件系统），也可以写在<code>/etc/fstab</code>文件中<code>umount</code> 后再<code>mount -a</code> 或重启系统</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mnt]# mount</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root on / type ext4 (rw)</span><br><span class=\"line\">proc on /proc type proc (rw)</span><br><span class=\"line\">sysfs on /sys type sysfs (rw)</span><br><span class=\"line\">devpts on /dev/pts type devpts (rw,gid=5,mode=620)</span><br><span class=\"line\">tmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")</span><br><span class=\"line\">/dev/sda1 on /boot type ext4 (rw)</span><br><span class=\"line\">none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw)</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# mount -o remount,grpquota,usrquota,defaults /mnt</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# mount</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root on / type ext4 (rw)</span><br><span class=\"line\">proc on /proc type proc (rw)</span><br><span class=\"line\">sysfs on /sys type sysfs (rw)</span><br><span class=\"line\">devpts on /dev/pts type devpts (rw,gid=5,mode=620)</span><br><span class=\"line\">tmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")</span><br><span class=\"line\">/dev/sda1 on /boot type ext4 (rw)</span><br><span class=\"line\">none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw,usrquota,grpquota)</span><br><span class=\"line\">[root@localhost mnt]#</span><br></pre></td></tr></table></figure>\n\n<p><strong>此时已开启/mnt对应的文件系统的quota功能，我们可针对/mnt目录下进行用户配额限制</strong></p>\n<ol>\n<li><p>检查文件系统的quota信息，生成quota数据库，会在文件系统的根目录下生成quota.user和quota.group二个data类型的文件可用file命令查看</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mnt]# quotacheck -avug</span><br><span class=\"line\">quotacheck: Your kernel probably supports journaled quota but you are not using it. Consider switching to journaled quota to avoid running quotacheck after an unclean shutdown.</span><br><span class=\"line\">quotacheck: Scanning /dev/mapper/vgxiemx-lv1 [/mnt] done</span><br><span class=\"line\">quotacheck: Checked 3 directories and 6 files</span><br><span class=\"line\">[root@localhost mnt]# ls</span><br><span class=\"line\">aquota.group  aquota.user  lost+found</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动quota<br>quotaon -av —a选项启动所有文件系统，也可指定具体某个文件系统。关闭<code>quotaoff</code>命令，参数相同。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# quotaon -av</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 [/mnt]: group quotas turned on</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 [/mnt]: user quotas turned on</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑用户的quota信息<br>edquota  -u testuser——会打开一个vi界面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Disk quotas for user testuser (uid 500):</span><br><span class=\"line\">Filesystem                                    blocks       soft       hard     inodes     soft     hard</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1                        0             10        100       0          10       100</span><br><span class=\"line\"></span><br><span class=\"line\">filesystem：目标文件系统</span><br><span class=\"line\">block：现在已使用的block数量</span><br><span class=\"line\">inode：现在已使用的inode数量</span><br><span class=\"line\">soft：软限制，可使用的soft数量，0为不限制，具体数值设定后超过数值进行警告，但依旧可以写入，知道宽限时间到达后无法写入默认宽限7天</span><br><span class=\"line\">hard：硬限制，可使用block/inode数量，0为不限制，具体数值设定后超过数值，立即无法写入。</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=20 ——生成一个20M的文件，查过soft block限制</span><br><span class=\"line\">dm-2: warning, user block quota exceeded.</span><br><span class=\"line\">1+0 records in</span><br><span class=\"line\">0+0 records out</span><br><span class=\"line\">98304 bytes (98 kB) copied, 0.00147599 s, 66.6 MB/s</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ du bigfile ——统计文件大小20M</span><br><span class=\"line\">20 bigfile</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=110——生成一个110M的文件，超过hard block限制，最后10M数据无法写入</span><br><span class=\"line\">dm-2: warning, user block quota exceeded.</span><br><span class=\"line\">dm-2: write failed, user block limit reached.</span><br><span class=\"line\">dd: writing `/mnt/bigfile': Disk quota exceeded</span><br><span class=\"line\">1+0 records in</span><br><span class=\"line\">0+0 records out</span><br><span class=\"line\">98304 bytes (98 kB) copied, 0.000795784 s, 124 MB/s</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ du bigfile——统计文件大小为100M</span><br><span class=\"line\">100 bigfile</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ ll</span><br><span class=\"line\">total 132</span><br><span class=\"line\">-rw-------. 1 root root 7168 Nov 22 04:01 aquota.group</span><br><span class=\"line\">-rw-------. 1 root root 7168 Nov 22 03:58 aquota.user</span><br><span class=\"line\">-rw-rw-r--. 1 testuser testuser 98304 Nov 22 04:02 bigfile</span><br><span class=\"line\">drwxrwxrwx. 2 root root 16384 Nov 22 02:31 lost+found</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ touch file&#123;1..10&#125;——创建10个文件，此时已有1个bigfile，总共11个文件超过soft inode限制</span><br><span class=\"line\">dm-2: warning, user file quota exceeded.</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ ls</span><br><span class=\"line\">aquota.group bigfile file10 file3 file5 file7 file9</span><br><span class=\"line\">aquota.user file1 file2 file4 file6 file8 lost+found</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ touch test&#123;1..100&#125;——创建100个文件，此时已有11个文件，所以最后的11个文件应该创建不成功</span><br><span class=\"line\">dm-2: write failed, user file limit reached.</span><br><span class=\"line\">touch: cannot touch `test90': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test91': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test92': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test93': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test94': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test95': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test96': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test97': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test98': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test99': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test100': Disk quota exceeded</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ ls</span><br><span class=\"line\">aquota.group file7 test15 test24 test33 test42 test51 test60 test7 test79 test88</span><br><span class=\"line\">aquota.user file8 test16 test25 test34 test43 test52 test61 test70 test8 test89</span><br><span class=\"line\">bigfile file9 test17 test26 test35 test44 test53 test62 test71 test80 test9</span><br><span class=\"line\">file1 lost+found test18 test27 test36 test45 test54 test63 test72 test81</span><br><span class=\"line\">file10 test1 test19 test28 test37 test46 test55 test64 test73 test82</span><br><span class=\"line\">file2 test10 test2 test29 test38 test47 test56 test65 test74 test83</span><br><span class=\"line\">file3 test11 test20 test3 test39 test48 test57 test66 test75 test84</span><br><span class=\"line\">file4 test12 test21 test30 test4 test49 test58 test67 test76 test85</span><br><span class=\"line\">file5 test13 test22 test31 test40 test5 test59 test68 test77 test86</span><br><span class=\"line\">file6 test14 test23 test32 test41 test50 test6 test69 test78 test87</span><br></pre></td></tr></table></figure>\n\n<p>4.设置宽限时间</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edquota -<span class=\"built_in\">t</span>  ——默认<span class=\"number\">7</span>天</span><br><span class=\"line\">Grace period before enforcing soft limits for use<span class=\"symbol\">rs:</span></span><br><span class=\"line\"><span class=\"built_in\">Time</span> units may <span class=\"symbol\">be:</span> <span class=\"built_in\">days</span>, hours, minutes, <span class=\"built_in\">or</span> seconds</span><br><span class=\"line\">Filesystem                                   Block grace period                        Inode grace period</span><br><span class=\"line\">/dev/mapper/vgxiemx-<span class=\"symbol\">lv1</span>                      <span class=\"number\">7</span><span class=\"built_in\">days</span>                                     <span class=\"number\">7</span><span class=\"built_in\">days</span></span><br></pre></td></tr></table></figure>\n\n<p>5.查询所有用户的磁盘配额情况，用户也可用quota查询当前用户的quota信息</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repquota -a</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# repquota -a</span><br><span class=\"line\">*** Report <span class=\"keyword\">for</span><span class=\"built_in\"> user </span>quotas on device /dev/mapper/vgxiemx-lv1</span><br><span class=\"line\">Block grace time: 7days; Inode grace time: 7days</span><br><span class=\"line\">Block limits File limits</span><br><span class=\"line\">User                      used      soft      hard    grace    used      soft      hard       grace</span><br><span class=\"line\">-------------------------------------------------------------------------------------------</span><br><span class=\"line\">root           --        956592     0         0                 6          0        0</span><br><span class=\"line\">testuser       ++        100        10        100      6days    100        10       100       6days</span><br></pre></td></tr></table></figure>\n\n<p><em>如果要设置quota，建议在/etc/rc.d/rc.local中写入quotacheck和quotaon 已保证系统启动时quota服务开启且数据都是最新的。分区的quote功能开启建议在/etc/fstab中。</em></p>\n<p>例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/fstab</span><br><span class=\"line\"># Created by anaconda on Sun May <span class=\"number\">24</span> <span class=\"number\">08</span>:<span class=\"number\">16</span>:<span class=\"number\">25</span> <span class=\"number\">2015</span></span><br><span class=\"line\">#</span><br><span class=\"line\"># Accessible filesystems, by <span class=\"built_in\">ref</span>erence, are maintained under <span class=\"string\">'/dev/disk'</span></span><br><span class=\"line\"># See man pages fstab(<span class=\"number\">5</span>), findfs(<span class=\"number\">8</span>), mount(<span class=\"number\">8</span>) <span class=\"keyword\">and</span>/<span class=\"keyword\">or</span> blkid(<span class=\"number\">8</span>) <span class=\"keyword\">for</span> more info</span><br><span class=\"line\">#</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root / ext4 defaults <span class=\"number\">1</span> <span class=\"number\">1</span></span><br><span class=\"line\">UUID=<span class=\"number\">3fe6311</span>e-b3fe<span class=\"number\">-4f</span>7f<span class=\"number\">-8558</span><span class=\"number\">-4f</span>011eab1dde /boot ext4 defaults <span class=\"number\">1</span> <span class=\"number\">2</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_swap swap swap defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">tmpfs /dev/shm tmpfs defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">devpts /dev/pts devpts gid=<span class=\"number\">5</span>,mode=<span class=\"number\">620</span> <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">sysfs /sys sysfs defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">proc /proc proc defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 /mnt ext3 defaults,usrquota,grpquota <span class=\"number\">0</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>再多用户的模式下，linux中常常需要对用户进行磁盘空间限制，例如虚拟主机需要限制用户的空间。linux大多数的发行版都采用quota来对磁盘配额来进行管理，quota是系统内核中的一个功能，要使用quota需要系统内核支持quota功能。目前使用的发行本中都是支持次功能的，如果内核不支持此功能那么就需要重新编译下内核来开启此功能</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">## grep CONFIG_QUOTA /boot/config-`uname -r` 来检查下内核是否支持</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# grep CONFIG_QUOTA /boot/config-2.6.32-431.el6.x86_64</span><br><span class=\"line\">CONFIG_QUOTA=y</span><br><span class=\"line\">CONFIG_QUOTA_NETLINK_INTERFACE=y</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> CONFIG_QUOTA_DEBUG is not <span class=\"built_in\">set</span></span></span><br><span class=\"line\">CONFIG_QUOTA_TREE=y</span><br><span class=\"line\">CONFIG_QUOTACTL=y</span><br></pre></td></tr></table></figure>\n\n<p>如有以上两条则说明支持，另外quota是针对用户去限制其可使用的block和inode，所以应该是一个基于文件系统的配置，所以我们要在文件系统中开启quota功能，针对已经挂载过的文件系统我们可以使用<br><code>mount -o  remount,usrquota,grpquota,default    /mnt</code><br>来重新挂载激活（mnt只是个举例，实际中先df 命令查看当前挂载信息，在选择要开启的文件系统），也可以写在<code>/etc/fstab</code>文件中<code>umount</code> 后再<code>mount -a</code> 或重启系统</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mnt]# mount</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root on / type ext4 (rw)</span><br><span class=\"line\">proc on /proc type proc (rw)</span><br><span class=\"line\">sysfs on /sys type sysfs (rw)</span><br><span class=\"line\">devpts on /dev/pts type devpts (rw,gid=5,mode=620)</span><br><span class=\"line\">tmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")</span><br><span class=\"line\">/dev/sda1 on /boot type ext4 (rw)</span><br><span class=\"line\">none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw)</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# mount -o remount,grpquota,usrquota,defaults /mnt</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# mount</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root on / type ext4 (rw)</span><br><span class=\"line\">proc on /proc type proc (rw)</span><br><span class=\"line\">sysfs on /sys type sysfs (rw)</span><br><span class=\"line\">devpts on /dev/pts type devpts (rw,gid=5,mode=620)</span><br><span class=\"line\">tmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")</span><br><span class=\"line\">/dev/sda1 on /boot type ext4 (rw)</span><br><span class=\"line\">none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 on /mnt type ext3 (rw,usrquota,grpquota)</span><br><span class=\"line\">[root@localhost mnt]#</span><br></pre></td></tr></table></figure>\n\n<p><strong>此时已开启/mnt对应的文件系统的quota功能，我们可针对/mnt目录下进行用户配额限制</strong></p>\n<ol>\n<li><p>检查文件系统的quota信息，生成quota数据库，会在文件系统的根目录下生成quota.user和quota.group二个data类型的文件可用file命令查看</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost mnt]# quotacheck -avug</span><br><span class=\"line\">quotacheck: Your kernel probably supports journaled quota but you are not using it. Consider switching to journaled quota to avoid running quotacheck after an unclean shutdown.</span><br><span class=\"line\">quotacheck: Scanning /dev/mapper/vgxiemx-lv1 [/mnt] done</span><br><span class=\"line\">quotacheck: Checked 3 directories and 6 files</span><br><span class=\"line\">[root@localhost mnt]# ls</span><br><span class=\"line\">aquota.group  aquota.user  lost+found</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动quota<br>quotaon -av —a选项启动所有文件系统，也可指定具体某个文件系统。关闭<code>quotaoff</code>命令，参数相同。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost /]# quotaon -av</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 [/mnt]: group quotas turned on</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 [/mnt]: user quotas turned on</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑用户的quota信息<br>edquota  -u testuser——会打开一个vi界面</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Disk quotas for user testuser (uid 500):</span><br><span class=\"line\">Filesystem                                    blocks       soft       hard     inodes     soft     hard</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1                        0             10        100       0          10       100</span><br><span class=\"line\"></span><br><span class=\"line\">filesystem：目标文件系统</span><br><span class=\"line\">block：现在已使用的block数量</span><br><span class=\"line\">inode：现在已使用的inode数量</span><br><span class=\"line\">soft：软限制，可使用的soft数量，0为不限制，具体数值设定后超过数值进行警告，但依旧可以写入，知道宽限时间到达后无法写入默认宽限7天</span><br><span class=\"line\">hard：硬限制，可使用block/inode数量，0为不限制，具体数值设定后超过数值，立即无法写入。</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<p>例：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=20 ——生成一个20M的文件，查过soft block限制</span><br><span class=\"line\">dm-2: warning, user block quota exceeded.</span><br><span class=\"line\">1+0 records in</span><br><span class=\"line\">0+0 records out</span><br><span class=\"line\">98304 bytes (98 kB) copied, 0.00147599 s, 66.6 MB/s</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ du bigfile ——统计文件大小20M</span><br><span class=\"line\">20 bigfile</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ dd if=/dev/zero of=/mnt/bigfile bs=1M count=110——生成一个110M的文件，超过hard block限制，最后10M数据无法写入</span><br><span class=\"line\">dm-2: warning, user block quota exceeded.</span><br><span class=\"line\">dm-2: write failed, user block limit reached.</span><br><span class=\"line\">dd: writing `/mnt/bigfile': Disk quota exceeded</span><br><span class=\"line\">1+0 records in</span><br><span class=\"line\">0+0 records out</span><br><span class=\"line\">98304 bytes (98 kB) copied, 0.000795784 s, 124 MB/s</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ du bigfile——统计文件大小为100M</span><br><span class=\"line\">100 bigfile</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ ll</span><br><span class=\"line\">total 132</span><br><span class=\"line\">-rw-------. 1 root root 7168 Nov 22 04:01 aquota.group</span><br><span class=\"line\">-rw-------. 1 root root 7168 Nov 22 03:58 aquota.user</span><br><span class=\"line\">-rw-rw-r--. 1 testuser testuser 98304 Nov 22 04:02 bigfile</span><br><span class=\"line\">drwxrwxrwx. 2 root root 16384 Nov 22 02:31 lost+found</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ touch file&#123;1..10&#125;——创建10个文件，此时已有1个bigfile，总共11个文件超过soft inode限制</span><br><span class=\"line\">dm-2: warning, user file quota exceeded.</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ ls</span><br><span class=\"line\">aquota.group bigfile file10 file3 file5 file7 file9</span><br><span class=\"line\">aquota.user file1 file2 file4 file6 file8 lost+found</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ touch test&#123;1..100&#125;——创建100个文件，此时已有11个文件，所以最后的11个文件应该创建不成功</span><br><span class=\"line\">dm-2: write failed, user file limit reached.</span><br><span class=\"line\">touch: cannot touch `test90': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test91': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test92': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test93': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test94': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test95': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test96': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test97': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test98': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test99': Disk quota exceeded</span><br><span class=\"line\">touch: cannot touch `test100': Disk quota exceeded</span><br><span class=\"line\"></span><br><span class=\"line\">[testuser@localhost mnt]$ ls</span><br><span class=\"line\">aquota.group file7 test15 test24 test33 test42 test51 test60 test7 test79 test88</span><br><span class=\"line\">aquota.user file8 test16 test25 test34 test43 test52 test61 test70 test8 test89</span><br><span class=\"line\">bigfile file9 test17 test26 test35 test44 test53 test62 test71 test80 test9</span><br><span class=\"line\">file1 lost+found test18 test27 test36 test45 test54 test63 test72 test81</span><br><span class=\"line\">file10 test1 test19 test28 test37 test46 test55 test64 test73 test82</span><br><span class=\"line\">file2 test10 test2 test29 test38 test47 test56 test65 test74 test83</span><br><span class=\"line\">file3 test11 test20 test3 test39 test48 test57 test66 test75 test84</span><br><span class=\"line\">file4 test12 test21 test30 test4 test49 test58 test67 test76 test85</span><br><span class=\"line\">file5 test13 test22 test31 test40 test5 test59 test68 test77 test86</span><br><span class=\"line\">file6 test14 test23 test32 test41 test50 test6 test69 test78 test87</span><br></pre></td></tr></table></figure>\n\n<p>4.设置宽限时间</p>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">edquota -<span class=\"built_in\">t</span>  ——默认<span class=\"number\">7</span>天</span><br><span class=\"line\">Grace period before enforcing soft limits for use<span class=\"symbol\">rs:</span></span><br><span class=\"line\"><span class=\"built_in\">Time</span> units may <span class=\"symbol\">be:</span> <span class=\"built_in\">days</span>, hours, minutes, <span class=\"built_in\">or</span> seconds</span><br><span class=\"line\">Filesystem                                   Block grace period                        Inode grace period</span><br><span class=\"line\">/dev/mapper/vgxiemx-<span class=\"symbol\">lv1</span>                      <span class=\"number\">7</span><span class=\"built_in\">days</span>                                     <span class=\"number\">7</span><span class=\"built_in\">days</span></span><br></pre></td></tr></table></figure>\n\n<p>5.查询所有用户的磁盘配额情况，用户也可用quota查询当前用户的quota信息</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repquota -a</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost mnt]# repquota -a</span><br><span class=\"line\">*** Report <span class=\"keyword\">for</span><span class=\"built_in\"> user </span>quotas on device /dev/mapper/vgxiemx-lv1</span><br><span class=\"line\">Block grace time: 7days; Inode grace time: 7days</span><br><span class=\"line\">Block limits File limits</span><br><span class=\"line\">User                      used      soft      hard    grace    used      soft      hard       grace</span><br><span class=\"line\">-------------------------------------------------------------------------------------------</span><br><span class=\"line\">root           --        956592     0         0                 6          0        0</span><br><span class=\"line\">testuser       ++        100        10        100      6days    100        10       100       6days</span><br></pre></td></tr></table></figure>\n\n<p><em>如果要设置quota，建议在/etc/rc.d/rc.local中写入quotacheck和quotaon 已保证系统启动时quota服务开启且数据都是最新的。分区的quote功能开启建议在/etc/fstab中。</em></p>\n<p>例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/fstab</span><br><span class=\"line\"># Created by anaconda on Sun May <span class=\"number\">24</span> <span class=\"number\">08</span>:<span class=\"number\">16</span>:<span class=\"number\">25</span> <span class=\"number\">2015</span></span><br><span class=\"line\">#</span><br><span class=\"line\"># Accessible filesystems, by <span class=\"built_in\">ref</span>erence, are maintained under <span class=\"string\">'/dev/disk'</span></span><br><span class=\"line\"># See man pages fstab(<span class=\"number\">5</span>), findfs(<span class=\"number\">8</span>), mount(<span class=\"number\">8</span>) <span class=\"keyword\">and</span>/<span class=\"keyword\">or</span> blkid(<span class=\"number\">8</span>) <span class=\"keyword\">for</span> more info</span><br><span class=\"line\">#</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root / ext4 defaults <span class=\"number\">1</span> <span class=\"number\">1</span></span><br><span class=\"line\">UUID=<span class=\"number\">3fe6311</span>e-b3fe<span class=\"number\">-4f</span>7f<span class=\"number\">-8558</span><span class=\"number\">-4f</span>011eab1dde /boot ext4 defaults <span class=\"number\">1</span> <span class=\"number\">2</span></span><br><span class=\"line\">/dev/mapper/VolGroup-lv_swap swap swap defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">tmpfs /dev/shm tmpfs defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">devpts /dev/pts devpts gid=<span class=\"number\">5</span>,mode=<span class=\"number\">620</span> <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">sysfs /sys sysfs defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">proc /proc proc defaults <span class=\"number\">0</span> <span class=\"number\">0</span></span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 /mnt ext3 defaults,usrquota,grpquota <span class=\"number\">0</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"Linux动态磁盘管理（lvm）","published":1,"author":"xiemx","comments":1,"date":"2015-11-28T18:11:11.000Z","_content":"lvm是将底层硬件存储屏蔽整合，通过软件组合在对系统开放，此时系统查看到的就不是底层一块块的物理磁盘了而是我们虚拟的逻辑磁盘，我们可以自由的对这些磁盘进行容量管理。lvm从系统层面到物理层面分别对应“文件系统——lv——vg——pv——磁盘”。所有对磁盘的管理都要遵循这个物理结构的顺序来处理。创建时由下而上，删除时由上而下，调整中间部分是也要结合上下部分分析需求具体在进行处理。\n\npv——物理卷\nvg——卷组\nlv——逻辑卷\npe——最小存储单元，类似与磁盘block\n\nlvm是介于系统与硬件之间的一种磁盘组织方法，下层为上层的基础，下层制约上层。\n\n## lvm管理\n\n1. 磁盘分区\n```\nfdisk ／dev/vda\n```\n2. 同步内核中的分区表信息（如果是新硬盘一般不需要这一部分）\n```\npartx  -a   /dev/vda\n```\n3. 创建pv\n```\npvcreate ／dev/vda1  ——有多个分区时可以依次空格间隔写在后面，也可以针对整块硬盘去直接创建\n\npvs和pvdisplay查看pv缩略和详细信息\n\n[root@localhost ~]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n/dev/sdb lvm2 a-- 10.00g 10.00g\n\n[root@localhost ~]# pvdisplay\n--- Physical volume ---\nPV Name               /dev/sda2\nVG Name               VolGroup\nPV Size               19.51 GiB / not usable 3.00 MiB\nAllocatable           yes (but full)\nPE Size               4.00 MiB\nTotal PE              4994\nFree PE               0\nAllocated PE          4994\nPV UUID               fcQLJh-oq2G-adfr-QeEK-sdtl-3XND-m1YtPA\n\n\"/dev/sdb\" is a new physical volume of \"10.00 GiB\"\n--- NEW Physical volume ---\nPV Name               /dev/sdb\nVG Name\nPV Size               10.00 GiB\nAllocatable           NO\nPE Size               0\nTotal PE              0\nFree PE               0\nAllocated PE          0\nPV UUID               WQpkNi-1cN6-QogB-TLB2-R2wT-Agmh-BRBiUN\n```\n4. 创建vg\n```\nvgcreate  -s 8M vgname /dev/vda1  /dev/vda2  —— s选项制定pe的大小默认为4M\n\nvgs和vgdisplay查看vg信息\n\n[root@localhost ~]# vgcreate -s 8M vgxiemx /dev/sdb\nVolume group \"vgxiemx\" successfully created\n[root@localhost ~]# vgs\nVG       #PV #LV #SN Attr   VSize  VFree\nVolGroup   1   2   0 wz--n- 19.51g    0\nvgxiemx    1   0   0 wz--n-  9.99g 9.99g\n[root@localhost ~]# vgdisplay\n--- Volume group ---\nVG Name               vgxiemx\nSystem ID\nFormat                lvm2\nMetadata Areas        1\nMetadata Sequence No  1\nVG Access             read/write\nVG Status             resizable\nMAX LV                0\nCur LV                0\nOpen LV               0\nMax PV                0\nCur PV                1\nAct PV                1\nVG Size               9.99 GiB\nPE Size               8.00 MiB\nTotal PE              1279\nAlloc PE / Size       0 / 0\nFree  PE / Size       1279 / 9.99 GiB\nVG UUID               5WZfct-snfo-aEDl-gHuO-QDbz-v83j-L0lwmR\n```\n5. 创建lv\n```\nlvcreate -l 100 -n lvname vgname——l选项指定分配100个pe给lv ，n指定名称，最后从哪个vg创建。\n\nlvcreate -L1000M -n lvname vgname——L便是直接分配多大空间单位为K M G。L和l参数还有很多种容量表示方法man查阅\n\nlvs和lvdisplay查看lv信息\n\n[root@localhost ~]# lvcreate -n lv1 -l 1279 vgxiemx\nLogical volume \"lv1\" created\n[root@localhost ~]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\nlv1 vgxiemx -wi-a----- 9.99g\n[root@localhost ~]# lvdisplay\n--- Logical volume ---\nLV Path /dev/vgxiemx/lv1\nLV Name lv1\nVG Name vgxiemx\nLV UUID nViafR-nrnS-REMQ-bGOT-uhDe-Skd0-XUNwmU\nLV Write Access read/write\nLV Creation host, time localhost.localdomain, 2015-11-22 01:50:41 +0800\nLV Status available\n# open 0\nLV Size 9.99 GiB\nCurrent LE 1279\nSegments 1\nAllocation inherit\nRead ahead sectors auto\n- currently set to 256\nBlock device 253:2\n```\n6. 创建文件系统\n```\nmkfs.ext3  /dev/vgname/lvname ——创建文件系统\n\n[root@localhost ~]# mkfs -t ext3 /dev/vgxiemx/lv1\nmke2fs 1.41.12 (17-May-2010)\nFilesystem label=\nOS type: Linux\nBlock size=4096 (log=2)\nFragment size=4096 (log=2)\nStride=0 blocks, Stripe width=0 blocks\n655360 inodes, 2619392 blocks\n130969 blocks (5.00%) reserved for the super user\nFirst data block=0\nMaximum filesystem blocks=2684354560\n80 block groups\n32768 blocks per group, 32768 fragments per group\n8192 inodes per group\nSuperblock backups stored on blocks:\n32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632\n\nWriting inode tables: done\nCreating journal (32768 blocks): done\nWriting superblocks and filesystem accounting information: done\n\nThis filesystem will be automatically checked every 30 mounts or\n180 days, whichever comes first.  Use tune2fs -c or -i to override.\n```\n7. 挂载lv\n```\nmount /dev/vgname/lvname  /mnt\n\n[root@localhost ~]# mount /dev/vgxiemx/lv1 /mnt\n[root@localhost mnt]# df -l\nFilesystem 1K-blocks Used Available Use% Mounted on\n/dev/mapper/VolGroup-lv_root 18069936 6767876 10384148 40% /\ntmpfs 953788 72 953716 1% /dev/shm\n/dev/sda1 495844 39915 430329 9% /boot\n/dev/mapper/vgxiemx-lv1 10313016 154232 9634908 2% /mnt\n```\n## lvm调整\n\n### pv的新增、删除\n\n#### pv的新增\n就是增加新的空闲分区或者新的硬盘创建成新的空闲pv同上pv创建命令一致\n\n#### pv删除\n```\npvremove /dev/vdb\n\n[root@localhost /]# pvremove /dev/sdb\nLabels on physical volume \"/dev/sdb\" successfully wiped\n[root@localhost /]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n```\n#### 移动pv中的数据\n\n由下图我们可以看到pv/dev/sdb1中的1G数据已经被我们移动到/dev/sdb2中去了，如果是单硬盘做的pv此时我们就可以撤除/dev/sdb1对应的这块硬盘，而数据没有丢失\n```\npvremove /dev/sdb1 /dev/sdb2\n\n[root@localhost mnt]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 8.00m\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5           lvm2 a--   2.01g 2.01g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n[root@localhost mnt]# pvmove /dev/sdb1 /dev/sdb2\n/dev/sdb1: Moved: 1.6%\n/dev/sdb1: Moved: 45.3%\n/dev/sdb1: Moved: 89.8%\n/dev/sdb1: Moved: 100.0%\n[root@localhost mnt]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 8.00m\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5           lvm2 a--   2.01g 2.01g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n```\n### vg扩容、缩小、删除\n\n#### vg的扩容\n\nvg的容量来自于pv，如果vg的容量不够那么vg扩容其实就是新增空闲的pv到vg中去\n```\nvgextend  /dev/sdb5  vgxiemx\n\n[root@localhost /]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n/dev/sdb1 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb2 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb3 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb5                 lvm2 a-- 2.01g 2.01g\n/dev/sdb6                 lvm2 a-- 4.96g 4.96g\n[root@localhost /]# vgextend vgxiemx /dev/sdb5\nVolume group \"vgxiemx\" successfully extended\n[root@localhost /]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n/dev/sdb1 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb2 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb3 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb5 vgxiemx lvm2 a-- 2.00g 2.00g\n/dev/sdb6                 lvm2 a-- 4.96g 4.96g\n```\n#### vg的减小\n\n也就是将vg中的pv移除，但pv移除是存在pv中的pe都已经被使用存在数据，这是我们就需要移动要删除的数据到新的pv中去，新的pv空间必须要比旧的pv空间大。\n```\nvgreduce vgxiemx /dev/sdb5\n\n[root@localhost /]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5  vgxiemx  lvm2 a--   2.00g 2.00g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n[root@localhost /]# vgreduce vgxiemx /dev/sdb5\nRemoved \"/dev/sdb5\" from volume group \"vgxiemx\"\n[root@localhost /]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5           lvm2 a--   2.01g 2.01g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n```\n#### vg的删除\n\n```\nvgremove vgxiemx\n\n[root@localhost /]# vgremove vgxiemx\nVolume group \"vgxiemx\" successfully removed\n[root@localhost /]# vgs\nVG #PV #LV #SN Attr VSize VFree\nVolGroup 1 2 0 wz--n- 19.51g 0\n```\n### lv的扩容、缩小、删除\n\n#### lv的缩小\n```\nlvreduce -L 9000M /dev/vgxiemx/lv1\n\n[root@localhost /]# lvreduce -L 9000M /dev/vgxiemx/lv1\nWARNING: Reducing active logical volume to 8.79 GiB\nTHIS MAY DESTROY YOUR DATA (filesystem etc.)\nDo you really want to reduce lv1? [y/n]: y\nReducing logical volume lv1 to 8.79 GiB\nLogical volume lv1 successfully resized\n[root@localhost /]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\nlv1 vgxiemx -wi-a----- 8.79g\n```\n#### lv的扩容\n```\nlvextend -L 10000M /dev/vgxiemx/lv1\n\n[root@localhost /]# lvextend -L 10000M /dev/vgxiemx/lv1\nExtending logical volume lv1 to 9.77 GiB\nLogical volume lv1 successfully resized\n[root@localhost /]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\nlv1 vgxiemx -wi-a----- 9.77g\n```\n#### lv的删除\n```\nlvremove /dev/vgxiemx/lv1\n\n[root@localhost /]# lvremove /dev/vgxiemx/lv1\nDo you really want to remove active logical volume lv1? [y/n]: y\nLogical volume \"lv1\" successfully removed\n[root@localhost /]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\n```\n### 文件系统的扩缩\n\n#### 检测文件系统\n```\ne2fsck /dev/vgxiemx/lv1\n\n[root@localhost /]# e2fsck -f /dev/vgxiemx/lv1\ne2fsck 1.41.12 (17-May-2010)\nPass 1: Checking inodes, blocks, and sizes\nPass 2: Checking directory structure\nPass 3: Checking directory connectivity\nPass 4: Checking reference counts\nPass 5: Checking group summary information\n/dev/vgxiemx/lv1: 11/655360 files (0.0% non-contiguous), 79696/2619392 blocks\n```\n#### 调整文件系统大小\n```\nresize2fs /dev/vgxiemx/lv1 9000M\n\n[root@localhost /]# resize2fs /dev/vgxiemx/lv1 9000M\nresize2fs 1.41.12 (17-May-2010)\nResizing the filesystem on /dev/vgxiemx/lv1 to 2304000 (4k) blocks.\nThe filesystem on /dev/vgxiemx/lv1 is now 2304000 blocks long.\n```\n ","source":"_posts/linux-lvm.md","raw":"---\nlayout: post\ntitle: Linux动态磁盘管理（lvm）\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-29 02:11:11\ntags: [ linux, lvm]\ncategories:\n    - linux\n---\nlvm是将底层硬件存储屏蔽整合，通过软件组合在对系统开放，此时系统查看到的就不是底层一块块的物理磁盘了而是我们虚拟的逻辑磁盘，我们可以自由的对这些磁盘进行容量管理。lvm从系统层面到物理层面分别对应“文件系统——lv——vg——pv——磁盘”。所有对磁盘的管理都要遵循这个物理结构的顺序来处理。创建时由下而上，删除时由上而下，调整中间部分是也要结合上下部分分析需求具体在进行处理。\n\npv——物理卷\nvg——卷组\nlv——逻辑卷\npe——最小存储单元，类似与磁盘block\n\nlvm是介于系统与硬件之间的一种磁盘组织方法，下层为上层的基础，下层制约上层。\n\n## lvm管理\n\n1. 磁盘分区\n```\nfdisk ／dev/vda\n```\n2. 同步内核中的分区表信息（如果是新硬盘一般不需要这一部分）\n```\npartx  -a   /dev/vda\n```\n3. 创建pv\n```\npvcreate ／dev/vda1  ——有多个分区时可以依次空格间隔写在后面，也可以针对整块硬盘去直接创建\n\npvs和pvdisplay查看pv缩略和详细信息\n\n[root@localhost ~]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n/dev/sdb lvm2 a-- 10.00g 10.00g\n\n[root@localhost ~]# pvdisplay\n--- Physical volume ---\nPV Name               /dev/sda2\nVG Name               VolGroup\nPV Size               19.51 GiB / not usable 3.00 MiB\nAllocatable           yes (but full)\nPE Size               4.00 MiB\nTotal PE              4994\nFree PE               0\nAllocated PE          4994\nPV UUID               fcQLJh-oq2G-adfr-QeEK-sdtl-3XND-m1YtPA\n\n\"/dev/sdb\" is a new physical volume of \"10.00 GiB\"\n--- NEW Physical volume ---\nPV Name               /dev/sdb\nVG Name\nPV Size               10.00 GiB\nAllocatable           NO\nPE Size               0\nTotal PE              0\nFree PE               0\nAllocated PE          0\nPV UUID               WQpkNi-1cN6-QogB-TLB2-R2wT-Agmh-BRBiUN\n```\n4. 创建vg\n```\nvgcreate  -s 8M vgname /dev/vda1  /dev/vda2  —— s选项制定pe的大小默认为4M\n\nvgs和vgdisplay查看vg信息\n\n[root@localhost ~]# vgcreate -s 8M vgxiemx /dev/sdb\nVolume group \"vgxiemx\" successfully created\n[root@localhost ~]# vgs\nVG       #PV #LV #SN Attr   VSize  VFree\nVolGroup   1   2   0 wz--n- 19.51g    0\nvgxiemx    1   0   0 wz--n-  9.99g 9.99g\n[root@localhost ~]# vgdisplay\n--- Volume group ---\nVG Name               vgxiemx\nSystem ID\nFormat                lvm2\nMetadata Areas        1\nMetadata Sequence No  1\nVG Access             read/write\nVG Status             resizable\nMAX LV                0\nCur LV                0\nOpen LV               0\nMax PV                0\nCur PV                1\nAct PV                1\nVG Size               9.99 GiB\nPE Size               8.00 MiB\nTotal PE              1279\nAlloc PE / Size       0 / 0\nFree  PE / Size       1279 / 9.99 GiB\nVG UUID               5WZfct-snfo-aEDl-gHuO-QDbz-v83j-L0lwmR\n```\n5. 创建lv\n```\nlvcreate -l 100 -n lvname vgname——l选项指定分配100个pe给lv ，n指定名称，最后从哪个vg创建。\n\nlvcreate -L1000M -n lvname vgname——L便是直接分配多大空间单位为K M G。L和l参数还有很多种容量表示方法man查阅\n\nlvs和lvdisplay查看lv信息\n\n[root@localhost ~]# lvcreate -n lv1 -l 1279 vgxiemx\nLogical volume \"lv1\" created\n[root@localhost ~]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\nlv1 vgxiemx -wi-a----- 9.99g\n[root@localhost ~]# lvdisplay\n--- Logical volume ---\nLV Path /dev/vgxiemx/lv1\nLV Name lv1\nVG Name vgxiemx\nLV UUID nViafR-nrnS-REMQ-bGOT-uhDe-Skd0-XUNwmU\nLV Write Access read/write\nLV Creation host, time localhost.localdomain, 2015-11-22 01:50:41 +0800\nLV Status available\n# open 0\nLV Size 9.99 GiB\nCurrent LE 1279\nSegments 1\nAllocation inherit\nRead ahead sectors auto\n- currently set to 256\nBlock device 253:2\n```\n6. 创建文件系统\n```\nmkfs.ext3  /dev/vgname/lvname ——创建文件系统\n\n[root@localhost ~]# mkfs -t ext3 /dev/vgxiemx/lv1\nmke2fs 1.41.12 (17-May-2010)\nFilesystem label=\nOS type: Linux\nBlock size=4096 (log=2)\nFragment size=4096 (log=2)\nStride=0 blocks, Stripe width=0 blocks\n655360 inodes, 2619392 blocks\n130969 blocks (5.00%) reserved for the super user\nFirst data block=0\nMaximum filesystem blocks=2684354560\n80 block groups\n32768 blocks per group, 32768 fragments per group\n8192 inodes per group\nSuperblock backups stored on blocks:\n32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632\n\nWriting inode tables: done\nCreating journal (32768 blocks): done\nWriting superblocks and filesystem accounting information: done\n\nThis filesystem will be automatically checked every 30 mounts or\n180 days, whichever comes first.  Use tune2fs -c or -i to override.\n```\n7. 挂载lv\n```\nmount /dev/vgname/lvname  /mnt\n\n[root@localhost ~]# mount /dev/vgxiemx/lv1 /mnt\n[root@localhost mnt]# df -l\nFilesystem 1K-blocks Used Available Use% Mounted on\n/dev/mapper/VolGroup-lv_root 18069936 6767876 10384148 40% /\ntmpfs 953788 72 953716 1% /dev/shm\n/dev/sda1 495844 39915 430329 9% /boot\n/dev/mapper/vgxiemx-lv1 10313016 154232 9634908 2% /mnt\n```\n## lvm调整\n\n### pv的新增、删除\n\n#### pv的新增\n就是增加新的空闲分区或者新的硬盘创建成新的空闲pv同上pv创建命令一致\n\n#### pv删除\n```\npvremove /dev/vdb\n\n[root@localhost /]# pvremove /dev/sdb\nLabels on physical volume \"/dev/sdb\" successfully wiped\n[root@localhost /]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n```\n#### 移动pv中的数据\n\n由下图我们可以看到pv/dev/sdb1中的1G数据已经被我们移动到/dev/sdb2中去了，如果是单硬盘做的pv此时我们就可以撤除/dev/sdb1对应的这块硬盘，而数据没有丢失\n```\npvremove /dev/sdb1 /dev/sdb2\n\n[root@localhost mnt]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 8.00m\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5           lvm2 a--   2.01g 2.01g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n[root@localhost mnt]# pvmove /dev/sdb1 /dev/sdb2\n/dev/sdb1: Moved: 1.6%\n/dev/sdb1: Moved: 45.3%\n/dev/sdb1: Moved: 89.8%\n/dev/sdb1: Moved: 100.0%\n[root@localhost mnt]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 8.00m\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5           lvm2 a--   2.01g 2.01g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n```\n### vg扩容、缩小、删除\n\n#### vg的扩容\n\nvg的容量来自于pv，如果vg的容量不够那么vg扩容其实就是新增空闲的pv到vg中去\n```\nvgextend  /dev/sdb5  vgxiemx\n\n[root@localhost /]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n/dev/sdb1 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb2 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb3 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb5                 lvm2 a-- 2.01g 2.01g\n/dev/sdb6                 lvm2 a-- 4.96g 4.96g\n[root@localhost /]# vgextend vgxiemx /dev/sdb5\nVolume group \"vgxiemx\" successfully extended\n[root@localhost /]# pvs\nPV VG Fmt Attr PSize PFree\n/dev/sda2 VolGroup lvm2 a-- 19.51g 0\n/dev/sdb1 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb2 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb3 vgxiemx lvm2 a-- 1.01g 1.01g\n/dev/sdb5 vgxiemx lvm2 a-- 2.00g 2.00g\n/dev/sdb6                 lvm2 a-- 4.96g 4.96g\n```\n#### vg的减小\n\n也就是将vg中的pv移除，但pv移除是存在pv中的pe都已经被使用存在数据，这是我们就需要移动要删除的数据到新的pv中去，新的pv空间必须要比旧的pv空间大。\n```\nvgreduce vgxiemx /dev/sdb5\n\n[root@localhost /]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5  vgxiemx  lvm2 a--   2.00g 2.00g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n[root@localhost /]# vgreduce vgxiemx /dev/sdb5\nRemoved \"/dev/sdb5\" from volume group \"vgxiemx\"\n[root@localhost /]# pvs\nPV         VG       Fmt  Attr PSize  PFree\n/dev/sda2  VolGroup lvm2 a--  19.51g    0\n/dev/sdb1  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb2  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb3  vgxiemx  lvm2 a--   1.01g 1.01g\n/dev/sdb5           lvm2 a--   2.01g 2.01g\n/dev/sdb6           lvm2 a--   4.96g 4.96g\n```\n#### vg的删除\n\n```\nvgremove vgxiemx\n\n[root@localhost /]# vgremove vgxiemx\nVolume group \"vgxiemx\" successfully removed\n[root@localhost /]# vgs\nVG #PV #LV #SN Attr VSize VFree\nVolGroup 1 2 0 wz--n- 19.51g 0\n```\n### lv的扩容、缩小、删除\n\n#### lv的缩小\n```\nlvreduce -L 9000M /dev/vgxiemx/lv1\n\n[root@localhost /]# lvreduce -L 9000M /dev/vgxiemx/lv1\nWARNING: Reducing active logical volume to 8.79 GiB\nTHIS MAY DESTROY YOUR DATA (filesystem etc.)\nDo you really want to reduce lv1? [y/n]: y\nReducing logical volume lv1 to 8.79 GiB\nLogical volume lv1 successfully resized\n[root@localhost /]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\nlv1 vgxiemx -wi-a----- 8.79g\n```\n#### lv的扩容\n```\nlvextend -L 10000M /dev/vgxiemx/lv1\n\n[root@localhost /]# lvextend -L 10000M /dev/vgxiemx/lv1\nExtending logical volume lv1 to 9.77 GiB\nLogical volume lv1 successfully resized\n[root@localhost /]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\nlv1 vgxiemx -wi-a----- 9.77g\n```\n#### lv的删除\n```\nlvremove /dev/vgxiemx/lv1\n\n[root@localhost /]# lvremove /dev/vgxiemx/lv1\nDo you really want to remove active logical volume lv1? [y/n]: y\nLogical volume \"lv1\" successfully removed\n[root@localhost /]# lvs\nLV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert\nlv_root VolGroup -wi-ao---- 17.51g\nlv_swap VolGroup -wi-ao---- 2.00g\n```\n### 文件系统的扩缩\n\n#### 检测文件系统\n```\ne2fsck /dev/vgxiemx/lv1\n\n[root@localhost /]# e2fsck -f /dev/vgxiemx/lv1\ne2fsck 1.41.12 (17-May-2010)\nPass 1: Checking inodes, blocks, and sizes\nPass 2: Checking directory structure\nPass 3: Checking directory connectivity\nPass 4: Checking reference counts\nPass 5: Checking group summary information\n/dev/vgxiemx/lv1: 11/655360 files (0.0% non-contiguous), 79696/2619392 blocks\n```\n#### 调整文件系统大小\n```\nresize2fs /dev/vgxiemx/lv1 9000M\n\n[root@localhost /]# resize2fs /dev/vgxiemx/lv1 9000M\nresize2fs 1.41.12 (17-May-2010)\nResizing the filesystem on /dev/vgxiemx/lv1 to 2304000 (4k) blocks.\nThe filesystem on /dev/vgxiemx/lv1 is now 2304000 blocks long.\n```\n ","slug":"linux-lvm","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyijp00jzu9uruvjqylwh","content":"<p>lvm是将底层硬件存储屏蔽整合，通过软件组合在对系统开放，此时系统查看到的就不是底层一块块的物理磁盘了而是我们虚拟的逻辑磁盘，我们可以自由的对这些磁盘进行容量管理。lvm从系统层面到物理层面分别对应“文件系统——lv——vg——pv——磁盘”。所有对磁盘的管理都要遵循这个物理结构的顺序来处理。创建时由下而上，删除时由上而下，调整中间部分是也要结合上下部分分析需求具体在进行处理。</p>\n<p>pv——物理卷<br>vg——卷组<br>lv——逻辑卷<br>pe——最小存储单元，类似与磁盘block</p>\n<p>lvm是介于系统与硬件之间的一种磁盘组织方法，下层为上层的基础，下层制约上层。</p>\n<h2 id=\"lvm管理\"><a href=\"#lvm管理\" class=\"headerlink\" title=\"lvm管理\"></a>lvm管理</h2><ol>\n<li><p>磁盘分区</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">fdisk</span> ／dev/vda</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>同步内核中的分区表信息（如果是新硬盘一般不需要这一部分）</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">partx  -<span class=\"selector-tag\">a</span>   /dev/vda</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建pv</p>\n<figure class=\"highlight irpf90\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pvcreate ／dev/vda1  ——有多个分区时可以依次空格间隔写在后面，也可以针对整块硬盘去直接创建</span><br><span class=\"line\"></span><br><span class=\"line\">pvs和pvdisplay查看pv缩略和详细信息</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# pvs</span><br><span class=\"line\">PV VG <span class=\"keyword\">Fmt</span> Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19.</span>1g <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb lvm2 a-- <span class=\"number\">10.</span>0g <span class=\"number\">10.</span>0g</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# pvdisplay</span><br><span class=\"line\">--- Physical volume ---</span><br><span class=\"line\">PV <span class=\"keyword\">Name</span>               /dev/sda2</span><br><span class=\"line\">VG <span class=\"keyword\">Name</span>               VolGroup</span><br><span class=\"line\">PV <span class=\"built_in\">Size</span>               <span class=\"number\">19.51</span> GiB / not usable <span class=\"number\">3.00</span> MiB</span><br><span class=\"line\"><span class=\"keyword\">Allocatable</span>           yes (but full)</span><br><span class=\"line\">PE <span class=\"built_in\">Size</span>               <span class=\"number\">4.00</span> MiB</span><br><span class=\"line\">Total PE              <span class=\"number\">4994</span></span><br><span class=\"line\"><span class=\"keyword\">Free</span> PE               <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">Allocated</span> PE          <span class=\"number\">4994</span></span><br><span class=\"line\">PV UUID               fcQLJh-oq2G-adfr-QeEK-sdtl-XND-m1YtPA</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"/dev/sdb\"</span> is a new physical volume of <span class=\"string\">\"10.00 GiB\"</span></span><br><span class=\"line\">--- NEW Physical volume ---</span><br><span class=\"line\">PV <span class=\"keyword\">Name</span>               /dev/sdb</span><br><span class=\"line\">VG <span class=\"keyword\">Name</span></span><br><span class=\"line\">PV <span class=\"built_in\">Size</span>               <span class=\"number\">10.00</span> GiB</span><br><span class=\"line\"><span class=\"keyword\">Allocatable</span>           NO</span><br><span class=\"line\">PE <span class=\"built_in\">Size</span>               <span class=\"number\">0</span></span><br><span class=\"line\">Total PE              <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">Free</span> PE               <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">Allocated</span> PE          <span class=\"number\">0</span></span><br><span class=\"line\">PV UUID               WQpkNi-cN6-QogB-TLB2-R2wT-Agmh-BRBiUN</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建vg</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgcreate  -s <span class=\"number\">8</span>M vgname /dev/vda1  /dev/vda2  —— s选项制定pe的大小默认为<span class=\"number\">4</span>M</span><br><span class=\"line\"></span><br><span class=\"line\">vgs和vgdisplay查看vg信息</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vgcreate -s <span class=\"number\">8</span>M vgxiemx /dev/sdb</span><br><span class=\"line\">Volume group <span class=\"string\">\"vgxiemx\"</span> successfully created</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vgs</span><br><span class=\"line\">VG       #PV #LV #SN Attr   VSize  VFree</span><br><span class=\"line\">VolGroup   <span class=\"number\">1</span>   <span class=\"number\">2</span>   <span class=\"number\">0</span> wz--n- <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">vgxiemx    <span class=\"number\">1</span>   <span class=\"number\">0</span>   <span class=\"number\">0</span> wz--n-  <span class=\"number\">9.99</span>g <span class=\"number\">9.99</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vgdisplay</span><br><span class=\"line\">--- Volume group ---</span><br><span class=\"line\">VG Name               vgxiemx</span><br><span class=\"line\">System ID</span><br><span class=\"line\">Format                lvm2</span><br><span class=\"line\">Metadata Areas        <span class=\"number\">1</span></span><br><span class=\"line\">Metadata Sequence No  <span class=\"number\">1</span></span><br><span class=\"line\">VG Access             read/write</span><br><span class=\"line\">VG Status             resizable</span><br><span class=\"line\">MAX LV                <span class=\"number\">0</span></span><br><span class=\"line\">Cur LV                <span class=\"number\">0</span></span><br><span class=\"line\">Open LV               <span class=\"number\">0</span></span><br><span class=\"line\">Max PV                <span class=\"number\">0</span></span><br><span class=\"line\">Cur PV                <span class=\"number\">1</span></span><br><span class=\"line\">Act PV                <span class=\"number\">1</span></span><br><span class=\"line\">VG Size               <span class=\"number\">9.99</span> GiB</span><br><span class=\"line\">PE Size               <span class=\"number\">8.00</span> MiB</span><br><span class=\"line\">Total PE              <span class=\"number\">1279</span></span><br><span class=\"line\">Alloc PE / Size       <span class=\"number\">0</span> / <span class=\"number\">0</span></span><br><span class=\"line\">Free  PE / Size       <span class=\"number\">1279</span> / <span class=\"number\">9.99</span> GiB</span><br><span class=\"line\">VG UUID               <span class=\"number\">5</span>WZfct-snfo-aEDl-gHuO-QDbz-v83j-L0lwmR</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建lv</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvcreate -l <span class=\"number\">100</span> -n lvname vgname——l选项指定分配<span class=\"number\">100</span>个pe给lv ，n指定名称，最后从哪个vg创建。</span><br><span class=\"line\"></span><br><span class=\"line\">lvcreate -L1000M -n lvname vgname——L便是直接分配多大空间单位为K M G。L和l参数还有很多种容量表示方法man查阅</span><br><span class=\"line\"></span><br><span class=\"line\">lvs和lvdisplay查看lv信息</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# lvcreate -n lv1 -l <span class=\"number\">1279</span> vgxiemx</span><br><span class=\"line\">Logical volume <span class=\"string\">\"lv1\"</span> created</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# lvs</span><br><span class=\"line\">LV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert</span><br><span class=\"line\">lv_root VolGroup -wi-ao---- <span class=\"number\">17.51</span>g</span><br><span class=\"line\">lv_swap VolGroup -wi-ao---- <span class=\"number\">2.00</span>g</span><br><span class=\"line\">lv1 vgxiemx -wi-a----- <span class=\"number\">9.99</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# lvdisplay</span><br><span class=\"line\">--- Logical volume ---</span><br><span class=\"line\">LV Path /dev/vgxiemx/lv1</span><br><span class=\"line\">LV Name lv1</span><br><span class=\"line\">VG Name vgxiemx</span><br><span class=\"line\">LV UUID nViafR-nrnS-REMQ-bGOT-uhDe-Skd0-XUNwmU</span><br><span class=\"line\">LV Write Access read/write</span><br><span class=\"line\">LV Creation host, time localhost.localdomain, <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-22</span> <span class=\"number\">01</span>:<span class=\"number\">50</span>:<span class=\"number\">41</span> +<span class=\"number\">0800</span></span><br><span class=\"line\">LV Status available</span><br><span class=\"line\"># open <span class=\"number\">0</span></span><br><span class=\"line\">LV Size <span class=\"number\">9.99</span> GiB</span><br><span class=\"line\">Current LE <span class=\"number\">1279</span></span><br><span class=\"line\">Segments <span class=\"number\">1</span></span><br><span class=\"line\">Allocation inherit</span><br><span class=\"line\">Read ahead sectors <span class=\"built_in\">auto</span></span><br><span class=\"line\">- currently <span class=\"keyword\">set</span> to <span class=\"number\">256</span></span><br><span class=\"line\">Block device <span class=\"number\">253</span>:<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建文件系统</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext3  /dev/vgname/lvname ——创建文件系统</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# mkfs -t ext3 /dev/vgxiemx/lv1</span><br><span class=\"line\">mke2fs 1.41.12 (17-May-2010)</span><br><span class=\"line\">Filesystem label=</span><br><span class=\"line\">OS type: Linux</span><br><span class=\"line\">Block <span class=\"attribute\">size</span>=4096 (<span class=\"attribute\">log</span>=2)</span><br><span class=\"line\">Fragment <span class=\"attribute\">size</span>=4096 (<span class=\"attribute\">log</span>=2)</span><br><span class=\"line\"><span class=\"attribute\">Stride</span>=0 blocks, Stripe <span class=\"attribute\">width</span>=0 blocks</span><br><span class=\"line\">655360 inodes, 2619392 blocks</span><br><span class=\"line\">130969 blocks (5.00%) reserved <span class=\"keyword\">for</span> the super user</span><br><span class=\"line\">First data <span class=\"attribute\">block</span>=0</span><br><span class=\"line\">Maximum filesystem <span class=\"attribute\">blocks</span>=2684354560</span><br><span class=\"line\">80 block groups</span><br><span class=\"line\">32768 blocks per group, 32768 fragments per group</span><br><span class=\"line\">8192 inodes per group</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632</span><br><span class=\"line\"></span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (32768 blocks): done</span><br><span class=\"line\">Writing superblocks <span class=\"keyword\">and</span> filesystem<span class=\"built_in\"> accounting </span>information: done</span><br><span class=\"line\"></span><br><span class=\"line\">This filesystem will be automatically checked every 30 mounts <span class=\"keyword\">or</span></span><br><span class=\"line\">180 days, whichever comes first.  Use tune2fs -c <span class=\"keyword\">or</span> -i <span class=\"keyword\">to</span> override.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>挂载lv</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount /dev/vgname/lvname  /mnt</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# mount /dev/vgxiemx/lv1 /mnt</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# df -l</span><br><span class=\"line\">Filesystem <span class=\"number\">1</span>K-blocks Used Available Use% Mounted on</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root <span class=\"number\">18069936</span> <span class=\"number\">6767876</span> <span class=\"number\">10384148</span> <span class=\"number\">40</span>% /</span><br><span class=\"line\">tmpfs <span class=\"number\">953788</span> <span class=\"number\">72</span> <span class=\"number\">953716</span> <span class=\"number\">1</span>% /dev/shm</span><br><span class=\"line\">/dev/sda1 <span class=\"number\">495844</span> <span class=\"number\">39915</span> <span class=\"number\">430329</span> <span class=\"number\">9</span>% /boot</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 <span class=\"number\">10313016</span> <span class=\"number\">154232</span> <span class=\"number\">9634908</span> <span class=\"number\">2</span>% /mnt</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"lvm调整\"><a href=\"#lvm调整\" class=\"headerlink\" title=\"lvm调整\"></a>lvm调整</h2><h3 id=\"pv的新增、删除\"><a href=\"#pv的新增、删除\" class=\"headerlink\" title=\"pv的新增、删除\"></a>pv的新增、删除</h3><h4 id=\"pv的新增\"><a href=\"#pv的新增\" class=\"headerlink\" title=\"pv的新增\"></a>pv的新增</h4><p>就是增加新的空闲分区或者新的硬盘创建成新的空闲pv同上pv创建命令一致</p>\n<h4 id=\"pv删除\"><a href=\"#pv删除\" class=\"headerlink\" title=\"pv删除\"></a>pv删除</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">pvremove</span> /dev/vdb</span><br><span class=\"line\"></span><br><span class=\"line\">[root<span class=\"variable\">@localhost</span> /]<span class=\"comment\"># pvremove /dev/sdb</span></span><br><span class=\"line\">Labels <span class=\"literal\">on</span> physical volume <span class=\"string\">\"/dev/sdb\"</span> successfully wiped</span><br><span class=\"line\">[root<span class=\"variable\">@localhost</span> /]<span class=\"comment\"># pvs</span></span><br><span class=\"line\">PV VG Fmt Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19</span>.<span class=\"number\">51g</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"移动pv中的数据\"><a href=\"#移动pv中的数据\" class=\"headerlink\" title=\"移动pv中的数据\"></a>移动pv中的数据</h4><p>由下图我们可以看到pv/dev/sdb1中的1G数据已经被我们移动到/dev/sdb2中去了，如果是单硬盘做的pv此时我们就可以撤除/dev/sdb1对应的这块硬盘，而数据没有丢失</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pvremove /dev/sdb1 /dev/sdb2</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">8.00</span>m</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5           lvm2 a--   <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# pvmove /dev/sdb1 /dev/sdb2</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">1.6</span>%</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">45.3</span>%</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">89.8</span>%</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">100.0</span>%</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">8.00</span>m</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5           lvm2 a--   <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vg扩容、缩小、删除\"><a href=\"#vg扩容、缩小、删除\" class=\"headerlink\" title=\"vg扩容、缩小、删除\"></a>vg扩容、缩小、删除</h3><h4 id=\"vg的扩容\"><a href=\"#vg的扩容\" class=\"headerlink\" title=\"vg的扩容\"></a>vg的扩容</h4><p>vg的容量来自于pv，如果vg的容量不够那么vg扩容其实就是新增空闲的pv到vg中去</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgextend  /dev/sdb5  vgxiemx</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV VG Fmt Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19.51</span>g <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5                 lvm2 a-- <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6                 lvm2 a-- <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# vgextend vgxiemx /dev/sdb5</span><br><span class=\"line\">Volume group <span class=\"string\">\"vgxiemx\"</span> successfully extended</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV VG Fmt Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19.51</span>g <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5 vgxiemx lvm2 a-- <span class=\"number\">2.00</span>g <span class=\"number\">2.00</span>g</span><br><span class=\"line\">/dev/sdb6                 lvm2 a-- <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"vg的减小\"><a href=\"#vg的减小\" class=\"headerlink\" title=\"vg的减小\"></a>vg的减小</h4><p>也就是将vg中的pv移除，但pv移除是存在pv中的pe都已经被使用存在数据，这是我们就需要移动要删除的数据到新的pv中去，新的pv空间必须要比旧的pv空间大。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgreduce vgxiemx /dev/sdb5</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5  vgxiemx  lvm2 a--   <span class=\"number\">2.00</span>g <span class=\"number\">2.00</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# vgreduce vgxiemx /dev/sdb5</span><br><span class=\"line\">Removed <span class=\"string\">\"/dev/sdb5\"</span> <span class=\"keyword\">from</span> volume group <span class=\"string\">\"vgxiemx\"</span></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5           lvm2 a--   <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"vg的删除\"><a href=\"#vg的删除\" class=\"headerlink\" title=\"vg的删除\"></a>vg的删除</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgremove vgxiemx</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]# vgremove vgxiemx</span><br><span class=\"line\">Volume<span class=\"built_in\"> group </span><span class=\"string\">\"vgxiemx\"</span> successfully removed</span><br><span class=\"line\">[root@localhost /]# vgs</span><br><span class=\"line\">VG #PV #LV #SN Attr VSize VFree</span><br><span class=\"line\">VolGroup 1 2 0 wz--n- 19.51g 0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lv的扩容、缩小、删除\"><a href=\"#lv的扩容、缩小、删除\" class=\"headerlink\" title=\"lv的扩容、缩小、删除\"></a>lv的扩容、缩小、删除</h3><h4 id=\"lv的缩小\"><a href=\"#lv的缩小\" class=\"headerlink\" title=\"lv的缩小\"></a>lv的缩小</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvreduce -L 9000M /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]<span class=\"comment\"># lvreduce -L 9000M /dev/vgxiemx/lv1</span></span><br><span class=\"line\">WARNING: Reducing active logical volume to 8.79 GiB</span><br><span class=\"line\">THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class=\"line\"><span class=\"keyword\">Do</span> you really want <span class=\"keyword\">to</span> reduce lv1? [y/n]: y</span><br><span class=\"line\">Reducing <span class=\"keyword\">logical</span> volume lv1 <span class=\"keyword\">to</span> <span class=\"number\">8.79</span> GiB</span><br><span class=\"line\"><span class=\"keyword\">Logical</span> volume lv1 successfully resized</span><br><span class=\"line\">[root@localhost /]<span class=\"comment\"># lvs</span></span><br><span class=\"line\">LV VG <span class=\"keyword\">Attr</span> LSize Pool Origin <span class=\"keyword\">Data</span>% <span class=\"keyword\">Move</span> <span class=\"keyword\">Log</span> Cpy%<span class=\"keyword\">Sync</span> <span class=\"keyword\">Convert</span></span><br><span class=\"line\">lv_root VolGroup -wi-ao<span class=\"comment\">---- 17.51g</span></span><br><span class=\"line\">lv_swap VolGroup -wi-ao<span class=\"comment\">---- 2.00g</span></span><br><span class=\"line\">lv1 vgxiemx -wi-a<span class=\"comment\">----- 8.79g</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"lv的扩容\"><a href=\"#lv的扩容\" class=\"headerlink\" title=\"lv的扩容\"></a>lv的扩容</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvextend -L 10000M /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]# lvextend -L 10000M /dev/vgxiemx/lv1</span><br><span class=\"line\">Extending logical volume lv1 <span class=\"keyword\">to</span> 9.77 GiB</span><br><span class=\"line\">Logical volume lv1 successfully resized</span><br><span class=\"line\">[root@localhost /]# lvs</span><br><span class=\"line\">LV VG Attr LSize<span class=\"built_in\"> Pool </span>Origin Data% Move Log Cpy%Sync Convert</span><br><span class=\"line\">lv_root VolGroup -wi-ao---- 17.51g</span><br><span class=\"line\">lv_swap VolGroup -wi-ao---- 2.00g</span><br><span class=\"line\">lv1 vgxiemx -wi-a----- 9.77g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"lv的删除\"><a href=\"#lv的删除\" class=\"headerlink\" title=\"lv的删除\"></a>lv的删除</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvremove /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]# lvremove /dev/vgxiemx/lv1</span><br><span class=\"line\"><span class=\"keyword\">Do</span> you really want <span class=\"keyword\">to</span> <span class=\"builtin-name\">remove</span> active logical volume lv1? [y/n]: y</span><br><span class=\"line\">Logical volume <span class=\"string\">\"lv1\"</span> successfully removed</span><br><span class=\"line\">[root@localhost /]# lvs</span><br><span class=\"line\">LV VG Attr LSize<span class=\"built_in\"> Pool </span>Origin Data% Move Log Cpy%Sync Convert</span><br><span class=\"line\">lv_root VolGroup -wi-ao---- 17.51g</span><br><span class=\"line\">lv_swap VolGroup -wi-ao---- 2.00g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件系统的扩缩\"><a href=\"#文件系统的扩缩\" class=\"headerlink\" title=\"文件系统的扩缩\"></a>文件系统的扩缩</h3><h4 id=\"检测文件系统\"><a href=\"#检测文件系统\" class=\"headerlink\" title=\"检测文件系统\"></a>检测文件系统</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e2fsck /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# e2fsck -f /dev/vgxiemx/lv1</span><br><span class=\"line\">e2fsck <span class=\"number\">1.41</span><span class=\"number\">.12</span> (<span class=\"number\">17</span>-May<span class=\"number\">-2010</span>)</span><br><span class=\"line\">Pass <span class=\"number\">1</span>: Checking inodes, blocks, <span class=\"keyword\">and</span> sizes</span><br><span class=\"line\">Pass <span class=\"number\">2</span>: Checking directory structure</span><br><span class=\"line\">Pass <span class=\"number\">3</span>: Checking directory connectivity</span><br><span class=\"line\">Pass <span class=\"number\">4</span>: Checking <span class=\"built_in\">ref</span>erence counts</span><br><span class=\"line\">Pass <span class=\"number\">5</span>: Checking group summary information</span><br><span class=\"line\">/dev/vgxiemx/lv1: <span class=\"number\">11</span>/<span class=\"number\">655360</span> files (<span class=\"number\">0.0</span>% non-contiguous), <span class=\"number\">79696</span>/<span class=\"number\">2619392</span> blocks</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"调整文件系统大小\"><a href=\"#调整文件系统大小\" class=\"headerlink\" title=\"调整文件系统大小\"></a>调整文件系统大小</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resize2fs /dev/vgxiemx/lv1 <span class=\"number\">9000</span>M</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# resize2fs /dev/vgxiemx/lv1 <span class=\"number\">9000</span>M</span><br><span class=\"line\">resize2fs <span class=\"number\">1.41</span><span class=\"number\">.12</span> (<span class=\"number\">17</span>-May<span class=\"number\">-2010</span>)</span><br><span class=\"line\">Resizing the filesystem on /dev/vgxiemx/lv1 to <span class=\"number\">2304000</span> (<span class=\"number\">4</span>k) blocks.</span><br><span class=\"line\">The filesystem on /dev/vgxiemx/lv1 <span class=\"keyword\">is</span> now <span class=\"number\">2304000</span> blocks long.</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>lvm是将底层硬件存储屏蔽整合，通过软件组合在对系统开放，此时系统查看到的就不是底层一块块的物理磁盘了而是我们虚拟的逻辑磁盘，我们可以自由的对这些磁盘进行容量管理。lvm从系统层面到物理层面分别对应“文件系统——lv——vg——pv——磁盘”。所有对磁盘的管理都要遵循这个物理结构的顺序来处理。创建时由下而上，删除时由上而下，调整中间部分是也要结合上下部分分析需求具体在进行处理。</p>\n<p>pv——物理卷<br>vg——卷组<br>lv——逻辑卷<br>pe——最小存储单元，类似与磁盘block</p>\n<p>lvm是介于系统与硬件之间的一种磁盘组织方法，下层为上层的基础，下层制约上层。</p>\n<h2 id=\"lvm管理\"><a href=\"#lvm管理\" class=\"headerlink\" title=\"lvm管理\"></a>lvm管理</h2><ol>\n<li><p>磁盘分区</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">fdisk</span> ／dev/vda</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>同步内核中的分区表信息（如果是新硬盘一般不需要这一部分）</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">partx  -<span class=\"selector-tag\">a</span>   /dev/vda</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建pv</p>\n<figure class=\"highlight irpf90\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pvcreate ／dev/vda1  ——有多个分区时可以依次空格间隔写在后面，也可以针对整块硬盘去直接创建</span><br><span class=\"line\"></span><br><span class=\"line\">pvs和pvdisplay查看pv缩略和详细信息</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# pvs</span><br><span class=\"line\">PV VG <span class=\"keyword\">Fmt</span> Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19.</span>1g <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb lvm2 a-- <span class=\"number\">10.</span>0g <span class=\"number\">10.</span>0g</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# pvdisplay</span><br><span class=\"line\">--- Physical volume ---</span><br><span class=\"line\">PV <span class=\"keyword\">Name</span>               /dev/sda2</span><br><span class=\"line\">VG <span class=\"keyword\">Name</span>               VolGroup</span><br><span class=\"line\">PV <span class=\"built_in\">Size</span>               <span class=\"number\">19.51</span> GiB / not usable <span class=\"number\">3.00</span> MiB</span><br><span class=\"line\"><span class=\"keyword\">Allocatable</span>           yes (but full)</span><br><span class=\"line\">PE <span class=\"built_in\">Size</span>               <span class=\"number\">4.00</span> MiB</span><br><span class=\"line\">Total PE              <span class=\"number\">4994</span></span><br><span class=\"line\"><span class=\"keyword\">Free</span> PE               <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">Allocated</span> PE          <span class=\"number\">4994</span></span><br><span class=\"line\">PV UUID               fcQLJh-oq2G-adfr-QeEK-sdtl-XND-m1YtPA</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"/dev/sdb\"</span> is a new physical volume of <span class=\"string\">\"10.00 GiB\"</span></span><br><span class=\"line\">--- NEW Physical volume ---</span><br><span class=\"line\">PV <span class=\"keyword\">Name</span>               /dev/sdb</span><br><span class=\"line\">VG <span class=\"keyword\">Name</span></span><br><span class=\"line\">PV <span class=\"built_in\">Size</span>               <span class=\"number\">10.00</span> GiB</span><br><span class=\"line\"><span class=\"keyword\">Allocatable</span>           NO</span><br><span class=\"line\">PE <span class=\"built_in\">Size</span>               <span class=\"number\">0</span></span><br><span class=\"line\">Total PE              <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">Free</span> PE               <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"built_in\">Allocated</span> PE          <span class=\"number\">0</span></span><br><span class=\"line\">PV UUID               WQpkNi-cN6-QogB-TLB2-R2wT-Agmh-BRBiUN</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建vg</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgcreate  -s <span class=\"number\">8</span>M vgname /dev/vda1  /dev/vda2  —— s选项制定pe的大小默认为<span class=\"number\">4</span>M</span><br><span class=\"line\"></span><br><span class=\"line\">vgs和vgdisplay查看vg信息</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vgcreate -s <span class=\"number\">8</span>M vgxiemx /dev/sdb</span><br><span class=\"line\">Volume group <span class=\"string\">\"vgxiemx\"</span> successfully created</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vgs</span><br><span class=\"line\">VG       #PV #LV #SN Attr   VSize  VFree</span><br><span class=\"line\">VolGroup   <span class=\"number\">1</span>   <span class=\"number\">2</span>   <span class=\"number\">0</span> wz--n- <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">vgxiemx    <span class=\"number\">1</span>   <span class=\"number\">0</span>   <span class=\"number\">0</span> wz--n-  <span class=\"number\">9.99</span>g <span class=\"number\">9.99</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vgdisplay</span><br><span class=\"line\">--- Volume group ---</span><br><span class=\"line\">VG Name               vgxiemx</span><br><span class=\"line\">System ID</span><br><span class=\"line\">Format                lvm2</span><br><span class=\"line\">Metadata Areas        <span class=\"number\">1</span></span><br><span class=\"line\">Metadata Sequence No  <span class=\"number\">1</span></span><br><span class=\"line\">VG Access             read/write</span><br><span class=\"line\">VG Status             resizable</span><br><span class=\"line\">MAX LV                <span class=\"number\">0</span></span><br><span class=\"line\">Cur LV                <span class=\"number\">0</span></span><br><span class=\"line\">Open LV               <span class=\"number\">0</span></span><br><span class=\"line\">Max PV                <span class=\"number\">0</span></span><br><span class=\"line\">Cur PV                <span class=\"number\">1</span></span><br><span class=\"line\">Act PV                <span class=\"number\">1</span></span><br><span class=\"line\">VG Size               <span class=\"number\">9.99</span> GiB</span><br><span class=\"line\">PE Size               <span class=\"number\">8.00</span> MiB</span><br><span class=\"line\">Total PE              <span class=\"number\">1279</span></span><br><span class=\"line\">Alloc PE / Size       <span class=\"number\">0</span> / <span class=\"number\">0</span></span><br><span class=\"line\">Free  PE / Size       <span class=\"number\">1279</span> / <span class=\"number\">9.99</span> GiB</span><br><span class=\"line\">VG UUID               <span class=\"number\">5</span>WZfct-snfo-aEDl-gHuO-QDbz-v83j-L0lwmR</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建lv</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvcreate -l <span class=\"number\">100</span> -n lvname vgname——l选项指定分配<span class=\"number\">100</span>个pe给lv ，n指定名称，最后从哪个vg创建。</span><br><span class=\"line\"></span><br><span class=\"line\">lvcreate -L1000M -n lvname vgname——L便是直接分配多大空间单位为K M G。L和l参数还有很多种容量表示方法man查阅</span><br><span class=\"line\"></span><br><span class=\"line\">lvs和lvdisplay查看lv信息</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# lvcreate -n lv1 -l <span class=\"number\">1279</span> vgxiemx</span><br><span class=\"line\">Logical volume <span class=\"string\">\"lv1\"</span> created</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# lvs</span><br><span class=\"line\">LV VG Attr LSize Pool Origin Data% Move Log Cpy%Sync Convert</span><br><span class=\"line\">lv_root VolGroup -wi-ao---- <span class=\"number\">17.51</span>g</span><br><span class=\"line\">lv_swap VolGroup -wi-ao---- <span class=\"number\">2.00</span>g</span><br><span class=\"line\">lv1 vgxiemx -wi-a----- <span class=\"number\">9.99</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# lvdisplay</span><br><span class=\"line\">--- Logical volume ---</span><br><span class=\"line\">LV Path /dev/vgxiemx/lv1</span><br><span class=\"line\">LV Name lv1</span><br><span class=\"line\">VG Name vgxiemx</span><br><span class=\"line\">LV UUID nViafR-nrnS-REMQ-bGOT-uhDe-Skd0-XUNwmU</span><br><span class=\"line\">LV Write Access read/write</span><br><span class=\"line\">LV Creation host, time localhost.localdomain, <span class=\"number\">2015</span><span class=\"number\">-11</span><span class=\"number\">-22</span> <span class=\"number\">01</span>:<span class=\"number\">50</span>:<span class=\"number\">41</span> +<span class=\"number\">0800</span></span><br><span class=\"line\">LV Status available</span><br><span class=\"line\"># open <span class=\"number\">0</span></span><br><span class=\"line\">LV Size <span class=\"number\">9.99</span> GiB</span><br><span class=\"line\">Current LE <span class=\"number\">1279</span></span><br><span class=\"line\">Segments <span class=\"number\">1</span></span><br><span class=\"line\">Allocation inherit</span><br><span class=\"line\">Read ahead sectors <span class=\"built_in\">auto</span></span><br><span class=\"line\">- currently <span class=\"keyword\">set</span> to <span class=\"number\">256</span></span><br><span class=\"line\">Block device <span class=\"number\">253</span>:<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建文件系统</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext3  /dev/vgname/lvname ——创建文件系统</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# mkfs -t ext3 /dev/vgxiemx/lv1</span><br><span class=\"line\">mke2fs 1.41.12 (17-May-2010)</span><br><span class=\"line\">Filesystem label=</span><br><span class=\"line\">OS type: Linux</span><br><span class=\"line\">Block <span class=\"attribute\">size</span>=4096 (<span class=\"attribute\">log</span>=2)</span><br><span class=\"line\">Fragment <span class=\"attribute\">size</span>=4096 (<span class=\"attribute\">log</span>=2)</span><br><span class=\"line\"><span class=\"attribute\">Stride</span>=0 blocks, Stripe <span class=\"attribute\">width</span>=0 blocks</span><br><span class=\"line\">655360 inodes, 2619392 blocks</span><br><span class=\"line\">130969 blocks (5.00%) reserved <span class=\"keyword\">for</span> the super user</span><br><span class=\"line\">First data <span class=\"attribute\">block</span>=0</span><br><span class=\"line\">Maximum filesystem <span class=\"attribute\">blocks</span>=2684354560</span><br><span class=\"line\">80 block groups</span><br><span class=\"line\">32768 blocks per group, 32768 fragments per group</span><br><span class=\"line\">8192 inodes per group</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632</span><br><span class=\"line\"></span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (32768 blocks): done</span><br><span class=\"line\">Writing superblocks <span class=\"keyword\">and</span> filesystem<span class=\"built_in\"> accounting </span>information: done</span><br><span class=\"line\"></span><br><span class=\"line\">This filesystem will be automatically checked every 30 mounts <span class=\"keyword\">or</span></span><br><span class=\"line\">180 days, whichever comes first.  Use tune2fs -c <span class=\"keyword\">or</span> -i <span class=\"keyword\">to</span> override.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>挂载lv</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount /dev/vgname/lvname  /mnt</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# mount /dev/vgxiemx/lv1 /mnt</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# df -l</span><br><span class=\"line\">Filesystem <span class=\"number\">1</span>K-blocks Used Available Use% Mounted on</span><br><span class=\"line\">/dev/mapper/VolGroup-lv_root <span class=\"number\">18069936</span> <span class=\"number\">6767876</span> <span class=\"number\">10384148</span> <span class=\"number\">40</span>% /</span><br><span class=\"line\">tmpfs <span class=\"number\">953788</span> <span class=\"number\">72</span> <span class=\"number\">953716</span> <span class=\"number\">1</span>% /dev/shm</span><br><span class=\"line\">/dev/sda1 <span class=\"number\">495844</span> <span class=\"number\">39915</span> <span class=\"number\">430329</span> <span class=\"number\">9</span>% /boot</span><br><span class=\"line\">/dev/mapper/vgxiemx-lv1 <span class=\"number\">10313016</span> <span class=\"number\">154232</span> <span class=\"number\">9634908</span> <span class=\"number\">2</span>% /mnt</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h2 id=\"lvm调整\"><a href=\"#lvm调整\" class=\"headerlink\" title=\"lvm调整\"></a>lvm调整</h2><h3 id=\"pv的新增、删除\"><a href=\"#pv的新增、删除\" class=\"headerlink\" title=\"pv的新增、删除\"></a>pv的新增、删除</h3><h4 id=\"pv的新增\"><a href=\"#pv的新增\" class=\"headerlink\" title=\"pv的新增\"></a>pv的新增</h4><p>就是增加新的空闲分区或者新的硬盘创建成新的空闲pv同上pv创建命令一致</p>\n<h4 id=\"pv删除\"><a href=\"#pv删除\" class=\"headerlink\" title=\"pv删除\"></a>pv删除</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">pvremove</span> /dev/vdb</span><br><span class=\"line\"></span><br><span class=\"line\">[root<span class=\"variable\">@localhost</span> /]<span class=\"comment\"># pvremove /dev/sdb</span></span><br><span class=\"line\">Labels <span class=\"literal\">on</span> physical volume <span class=\"string\">\"/dev/sdb\"</span> successfully wiped</span><br><span class=\"line\">[root<span class=\"variable\">@localhost</span> /]<span class=\"comment\"># pvs</span></span><br><span class=\"line\">PV VG Fmt Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19</span>.<span class=\"number\">51g</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"移动pv中的数据\"><a href=\"#移动pv中的数据\" class=\"headerlink\" title=\"移动pv中的数据\"></a>移动pv中的数据</h4><p>由下图我们可以看到pv/dev/sdb1中的1G数据已经被我们移动到/dev/sdb2中去了，如果是单硬盘做的pv此时我们就可以撤除/dev/sdb1对应的这块硬盘，而数据没有丢失</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pvremove /dev/sdb1 /dev/sdb2</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">8.00</span>m</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5           lvm2 a--   <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# pvmove /dev/sdb1 /dev/sdb2</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">1.6</span>%</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">45.3</span>%</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">89.8</span>%</span><br><span class=\"line\">/dev/sdb1: Moved: <span class=\"number\">100.0</span>%</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost mnt]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">8.00</span>m</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5           lvm2 a--   <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"vg扩容、缩小、删除\"><a href=\"#vg扩容、缩小、删除\" class=\"headerlink\" title=\"vg扩容、缩小、删除\"></a>vg扩容、缩小、删除</h3><h4 id=\"vg的扩容\"><a href=\"#vg的扩容\" class=\"headerlink\" title=\"vg的扩容\"></a>vg的扩容</h4><p>vg的容量来自于pv，如果vg的容量不够那么vg扩容其实就是新增空闲的pv到vg中去</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgextend  /dev/sdb5  vgxiemx</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV VG Fmt Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19.51</span>g <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5                 lvm2 a-- <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6                 lvm2 a-- <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# vgextend vgxiemx /dev/sdb5</span><br><span class=\"line\">Volume group <span class=\"string\">\"vgxiemx\"</span> successfully extended</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV VG Fmt Attr PSize PFree</span><br><span class=\"line\">/dev/sda2 VolGroup lvm2 a-- <span class=\"number\">19.51</span>g <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3 vgxiemx lvm2 a-- <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5 vgxiemx lvm2 a-- <span class=\"number\">2.00</span>g <span class=\"number\">2.00</span>g</span><br><span class=\"line\">/dev/sdb6                 lvm2 a-- <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"vg的减小\"><a href=\"#vg的减小\" class=\"headerlink\" title=\"vg的减小\"></a>vg的减小</h4><p>也就是将vg中的pv移除，但pv移除是存在pv中的pe都已经被使用存在数据，这是我们就需要移动要删除的数据到新的pv中去，新的pv空间必须要比旧的pv空间大。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgreduce vgxiemx /dev/sdb5</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5  vgxiemx  lvm2 a--   <span class=\"number\">2.00</span>g <span class=\"number\">2.00</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# vgreduce vgxiemx /dev/sdb5</span><br><span class=\"line\">Removed <span class=\"string\">\"/dev/sdb5\"</span> <span class=\"keyword\">from</span> volume group <span class=\"string\">\"vgxiemx\"</span></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# pvs</span><br><span class=\"line\">PV         VG       Fmt  Attr PSize  PFree</span><br><span class=\"line\">/dev/sda2  VolGroup lvm2 a--  <span class=\"number\">19.51</span>g    <span class=\"number\">0</span></span><br><span class=\"line\">/dev/sdb1  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb2  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb3  vgxiemx  lvm2 a--   <span class=\"number\">1.01</span>g <span class=\"number\">1.01</span>g</span><br><span class=\"line\">/dev/sdb5           lvm2 a--   <span class=\"number\">2.01</span>g <span class=\"number\">2.01</span>g</span><br><span class=\"line\">/dev/sdb6           lvm2 a--   <span class=\"number\">4.96</span>g <span class=\"number\">4.96</span>g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"vg的删除\"><a href=\"#vg的删除\" class=\"headerlink\" title=\"vg的删除\"></a>vg的删除</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgremove vgxiemx</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]# vgremove vgxiemx</span><br><span class=\"line\">Volume<span class=\"built_in\"> group </span><span class=\"string\">\"vgxiemx\"</span> successfully removed</span><br><span class=\"line\">[root@localhost /]# vgs</span><br><span class=\"line\">VG #PV #LV #SN Attr VSize VFree</span><br><span class=\"line\">VolGroup 1 2 0 wz--n- 19.51g 0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"lv的扩容、缩小、删除\"><a href=\"#lv的扩容、缩小、删除\" class=\"headerlink\" title=\"lv的扩容、缩小、删除\"></a>lv的扩容、缩小、删除</h3><h4 id=\"lv的缩小\"><a href=\"#lv的缩小\" class=\"headerlink\" title=\"lv的缩小\"></a>lv的缩小</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvreduce -L 9000M /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]<span class=\"comment\"># lvreduce -L 9000M /dev/vgxiemx/lv1</span></span><br><span class=\"line\">WARNING: Reducing active logical volume to 8.79 GiB</span><br><span class=\"line\">THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class=\"line\"><span class=\"keyword\">Do</span> you really want <span class=\"keyword\">to</span> reduce lv1? [y/n]: y</span><br><span class=\"line\">Reducing <span class=\"keyword\">logical</span> volume lv1 <span class=\"keyword\">to</span> <span class=\"number\">8.79</span> GiB</span><br><span class=\"line\"><span class=\"keyword\">Logical</span> volume lv1 successfully resized</span><br><span class=\"line\">[root@localhost /]<span class=\"comment\"># lvs</span></span><br><span class=\"line\">LV VG <span class=\"keyword\">Attr</span> LSize Pool Origin <span class=\"keyword\">Data</span>% <span class=\"keyword\">Move</span> <span class=\"keyword\">Log</span> Cpy%<span class=\"keyword\">Sync</span> <span class=\"keyword\">Convert</span></span><br><span class=\"line\">lv_root VolGroup -wi-ao<span class=\"comment\">---- 17.51g</span></span><br><span class=\"line\">lv_swap VolGroup -wi-ao<span class=\"comment\">---- 2.00g</span></span><br><span class=\"line\">lv1 vgxiemx -wi-a<span class=\"comment\">----- 8.79g</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"lv的扩容\"><a href=\"#lv的扩容\" class=\"headerlink\" title=\"lv的扩容\"></a>lv的扩容</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvextend -L 10000M /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]# lvextend -L 10000M /dev/vgxiemx/lv1</span><br><span class=\"line\">Extending logical volume lv1 <span class=\"keyword\">to</span> 9.77 GiB</span><br><span class=\"line\">Logical volume lv1 successfully resized</span><br><span class=\"line\">[root@localhost /]# lvs</span><br><span class=\"line\">LV VG Attr LSize<span class=\"built_in\"> Pool </span>Origin Data% Move Log Cpy%Sync Convert</span><br><span class=\"line\">lv_root VolGroup -wi-ao---- 17.51g</span><br><span class=\"line\">lv_swap VolGroup -wi-ao---- 2.00g</span><br><span class=\"line\">lv1 vgxiemx -wi-a----- 9.77g</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"lv的删除\"><a href=\"#lv的删除\" class=\"headerlink\" title=\"lv的删除\"></a>lv的删除</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lvremove /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost /]# lvremove /dev/vgxiemx/lv1</span><br><span class=\"line\"><span class=\"keyword\">Do</span> you really want <span class=\"keyword\">to</span> <span class=\"builtin-name\">remove</span> active logical volume lv1? [y/n]: y</span><br><span class=\"line\">Logical volume <span class=\"string\">\"lv1\"</span> successfully removed</span><br><span class=\"line\">[root@localhost /]# lvs</span><br><span class=\"line\">LV VG Attr LSize<span class=\"built_in\"> Pool </span>Origin Data% Move Log Cpy%Sync Convert</span><br><span class=\"line\">lv_root VolGroup -wi-ao---- 17.51g</span><br><span class=\"line\">lv_swap VolGroup -wi-ao---- 2.00g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文件系统的扩缩\"><a href=\"#文件系统的扩缩\" class=\"headerlink\" title=\"文件系统的扩缩\"></a>文件系统的扩缩</h3><h4 id=\"检测文件系统\"><a href=\"#检测文件系统\" class=\"headerlink\" title=\"检测文件系统\"></a>检测文件系统</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">e2fsck /dev/vgxiemx/lv1</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# e2fsck -f /dev/vgxiemx/lv1</span><br><span class=\"line\">e2fsck <span class=\"number\">1.41</span><span class=\"number\">.12</span> (<span class=\"number\">17</span>-May<span class=\"number\">-2010</span>)</span><br><span class=\"line\">Pass <span class=\"number\">1</span>: Checking inodes, blocks, <span class=\"keyword\">and</span> sizes</span><br><span class=\"line\">Pass <span class=\"number\">2</span>: Checking directory structure</span><br><span class=\"line\">Pass <span class=\"number\">3</span>: Checking directory connectivity</span><br><span class=\"line\">Pass <span class=\"number\">4</span>: Checking <span class=\"built_in\">ref</span>erence counts</span><br><span class=\"line\">Pass <span class=\"number\">5</span>: Checking group summary information</span><br><span class=\"line\">/dev/vgxiemx/lv1: <span class=\"number\">11</span>/<span class=\"number\">655360</span> files (<span class=\"number\">0.0</span>% non-contiguous), <span class=\"number\">79696</span>/<span class=\"number\">2619392</span> blocks</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"调整文件系统大小\"><a href=\"#调整文件系统大小\" class=\"headerlink\" title=\"调整文件系统大小\"></a>调整文件系统大小</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resize2fs /dev/vgxiemx/lv1 <span class=\"number\">9000</span>M</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost /]# resize2fs /dev/vgxiemx/lv1 <span class=\"number\">9000</span>M</span><br><span class=\"line\">resize2fs <span class=\"number\">1.41</span><span class=\"number\">.12</span> (<span class=\"number\">17</span>-May<span class=\"number\">-2010</span>)</span><br><span class=\"line\">Resizing the filesystem on /dev/vgxiemx/lv1 to <span class=\"number\">2304000</span> (<span class=\"number\">4</span>k) blocks.</span><br><span class=\"line\">The filesystem on /dev/vgxiemx/lv1 <span class=\"keyword\">is</span> now <span class=\"number\">2304000</span> blocks long.</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"Linux进程管理","published":1,"author":"xiemx","comments":1,"date":"2015-11-14T20:11:14.000Z","_content":"当我们运行程序时，Linux会为程序创建一个特殊的环境，该环境包含程序运行需要的所有资源，以保证程序能够独立运行，不受其他程序的干扰。\n  \n在系统中我们调用一个指令，Linux 就会创建一个新的进程。例如使用 ls 命令遍历目录中的文件时，就创建了一个进程。进程就是程序的实例。\n  \n系统通过一个五位数字跟踪程序的运行状态，这个数字称为 pid 或进程ID。每个进程都拥有唯一的 pid。两个 pid 一样的进程不能同时存在，Linux用 pid 来跟踪程序的运行状态。\n\n### 进程查看\n  \n#### ps\n```\n[root@localhost ~]# ps aux\nUSER PID  %CPU   %MEM    VSZ    RSS    TTY    STAT    START   TIME   COMMAND\nroot      1       0.0        0.0        19356   1540     ?        Ss         02:09         0:01      /sbin/init\nroot      2      0.0         0.0        0           0           ?        S           02:09         0:00     [kthreadd]\nroot      3      0.0         0.0        0           0           ?        S           02:09         0:00     [migration/0]\n\n[root@localhost ~]# ps -ef\nUID     PID     PPID    C    STIME    TTY    TIME       CMD\nroot      1         0            0     02:09        ?      00:00:01     /sbin/init\nroot     2         0            0     02:09        ?      00:00:00     [kthreadd]\nroot     3         2            0     02:09        ?      00:00:00     [migration/0]\n\n[root@localhost ~]# ps -le\nF  S   UID PID PPID  C   PRI   NI   ADDR   SZ       WCHAN   TTY   TIME         CMD\n4  S     0      1       0       0   80      0       -          4839    poll_s       ?         00:00:01    init\n1  S     0      2       0       0   80      0       -           0          kthrea       ?         00:00:00   kthreadd\n1  S     0      3       2       0   -40      -       -           0          migrat      ?         00:00:00    migration/0\n\nUSER 用户名 \nUID 用户ID（User ID） \nPID 进程ID（Process ID） \nPPID 父进程的进程ID（Parent Process id） \nSID 会话ID（Session id） \n%CPU 进程的cpu占用率 \n%MEM 进程的内存占用率 \nVSZ 进程所使用的虚存的大小（Virtual Size） \nRSS 进程使用的实际内存的大小 \nTTY 与进程关联的终端（tty） \nSTAT 进程的状态：进程状态使用字符表示的（STAT的状态码） \nSTART 进程启动时间和日期 \nTIME 进程使用的总cpu时间 \nCOMMAND 正在执行的命令行命令 \nNI 优先级(Nice) \nPRI 进程优先级编号(Priority)\n进程状态（S字段）： D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程\n\n```\n\n#### top\n```\n[root@localhost ~]# top\ntop - 02:45:58 up 36 min, 4 users, load average: 0.00, 0.00, 0.00\nTasks: 175 total, 1 running, 174 sleeping, 0 stopped, 0 zombie\nCpu(s): 0.3%us, 0.3%sy, 0.0%ni, 99.3%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st\nMem: 1907580k total, 528968k used, 1378612k free, 26060k buffers\nSwap: 2097144k total, 0k used, 2097144k free, 173020k cached\nPID   USER   PR   NI    VIRT     RES    SHR     S    %CPU %MEM TIME+     COMMAND\n2603  root      20    0      15028   1372    1000    R   0.3       0.1         0:00.21     top\n1          root      20    0     19356    1540    1228    S    0.0      0.1          0:01.04     init\n2         root      20    0      0            0          0           S   0.0       0.0        0:00.00    kthreadd\n\n\n第一行显示系统运行时间，用户数，系统负载1分钟 ，5分钟，15分钟的情况\n第二行显示经常总数，不同stat下的进程数量 \n第三行显示cpu使用情况 第四行显示物理内存使用情况 第五行显示swap交换分区使用情况\n```\n\n#### 信号\n  ```\n[root@localhost ~]# kill -l\n1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP\n6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1\n11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM\n16) SIGSTKFLT 17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP\n21) SIGTTIN 22) SIGTTOU 23) SIGURG 24) SIGXCPU 25) SIGXFSZ\n26) SIGVTALRM 27) SIGPROF 28) SIGWINCH 29) SIGIO 30) SIGPWR\n31) SIGSYS 34) SIGRTMIN 35) SIGRTMIN+1 36) SIGRTMIN+2 37) SIGRTMIN+3\n38) SIGRTMIN+4 39) SIGRTMIN+5 40) SIGRTMIN+6 41) SIGRTMIN+7 42) SIGRTMIN+8\n43) SIGRTMIN+9 44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13\n48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12\n53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9 56) SIGRTMAX-8 57) SIGRTMAX-7\n58) SIGRTMAX-6 59) SIGRTMAX-5 60) SIGRTMAX-4 61) SIGRTMAX-3 62) SIGRTMAX-2\n63) SIGRTMAX-1 64) SIGRTMAX\n```\nLinux中信号有64种，通过kill命令我们可以对进程发送这些信号来告知这些进程，做什么操作。常用的以下四种\n  \n1) SIGHUP\n这个信号用于通知它重新读取配置文件但不关闭进程，相当于reload。\n2) SIGINT\n程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出，用于通知前台进程组终止进程。\n9) SIGKILL\n用来立即结束程序的运行. 本信号不能被阻塞、处理和忽略。如果管理员发现某个进程终止不了，可尝试发送这个信号\n15) SIGTERM\n程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理。通常用来要求程序自己正常退出，shell命令kill缺省产生这个信号。如果进程终止不了，我们才会尝试SIGKILL。\n  例：kill -1 2205 ——告知PID为2205的进程重载下配置文件 kill -9 2205 ——直接杀死2205进程 kill -15 2205 ——通知2205进程关闭，进程会在收到信号后结束工作后自行关闭，有些进程会屏蔽15信号如bash，此时我们只能通过9信号强制结束。\n\n#### 进程优先级\n  \n假设系统中有多个进程同时在排队是，cpu应该有限处理哪个进程哪？这就取决于进程的优先级，优先级高的优先处理。进程在创建是我们可以通过nice命令指定他的优先级，对于已经开始的进程我们可以通过renice来修改他的优先级。\n  \n优先级范围：-20~19 数字越小优先级越高，默认创建的进程优先级为0。\n\n例：\n```\nnice -n 10 vim —— 创建一个优先级为10的vim进程\n[root@localhost ~]# ps -el | grep vim\nF S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD\n0 T 0 6891 2563 0 90 10 - 35930 signal pts/2 00:00:00 vim\n\nrenice -n -10 6891 ——调整6891进程的有限级为-10\n[root@localhost ~]# renice -n -10 6891\n6891: old priority 10, new priority -10\n\nroot用户可以自由调整经常的优先级，普通用户只能调低不能调高。\n  \n[testuser@localhost root]$ renice -n 5 6925\n6925: old priority 0, new priority 5\n  \n[testuser@localhost root]$ renice -n 2 6925\nrenice: 6925: setpriority: Permission denied\n```\n#### 前台进程/后台进程\n  \n由于一个终端在处理工作时只能处理一个，当我们想在处理第二个进程时会由于终端被占用而无法处理。这时我们可以将前台的这个进程放到后台去运行，把前台的终端空出让我们运行新的进程。\n  \n命令：\n* command &让进程在后台运行\n* jobs –l 查看后台运行的进程\n* fg %n 让后台运行的进程n到前台来\n* bg %n 让后台的进程n运行\n  \n以上的%n是通过jobs -l 查看到的工作编号不是pid。\n\n例：\n```\nvim & ——在后台运行vim进程\njobs -l ——查看后台所有进程\nfg %1 ——将后台1号进程移动到前台来运行\nbg %2 —— 让后台的2号进程开始运行\nctrl+z ——暂停当前的进程放到后台，但不运行\n\n[root@localhost ~]# vim &\n[2] 6987\n  \n[root@localhost ~]# vi /etc/resolv.conf\n[3]+ Stopped vi /etc/resolv.conf\n\n[root@localhost ~]# jobs -l\n[1] 6891 Stopped nice -n 10 vim\n[2]- 6987 Stopped (tty output) vim\n[3]+ 6989 Stopped vi /etc/resolv.conf\n\n[root@localhost ~]# bg %2\n[2]- vim &\n\n[root@localhost ~]# fg %3\n```","source":"_posts/linux-process-manager.md","raw":"---\nlayout: post\ntitle: Linux进程管理\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2015-11-15 04:11:14\ntags: [ linux, tool]\ncategories:\n    - linux\n---\n当我们运行程序时，Linux会为程序创建一个特殊的环境，该环境包含程序运行需要的所有资源，以保证程序能够独立运行，不受其他程序的干扰。\n  \n在系统中我们调用一个指令，Linux 就会创建一个新的进程。例如使用 ls 命令遍历目录中的文件时，就创建了一个进程。进程就是程序的实例。\n  \n系统通过一个五位数字跟踪程序的运行状态，这个数字称为 pid 或进程ID。每个进程都拥有唯一的 pid。两个 pid 一样的进程不能同时存在，Linux用 pid 来跟踪程序的运行状态。\n\n### 进程查看\n  \n#### ps\n```\n[root@localhost ~]# ps aux\nUSER PID  %CPU   %MEM    VSZ    RSS    TTY    STAT    START   TIME   COMMAND\nroot      1       0.0        0.0        19356   1540     ?        Ss         02:09         0:01      /sbin/init\nroot      2      0.0         0.0        0           0           ?        S           02:09         0:00     [kthreadd]\nroot      3      0.0         0.0        0           0           ?        S           02:09         0:00     [migration/0]\n\n[root@localhost ~]# ps -ef\nUID     PID     PPID    C    STIME    TTY    TIME       CMD\nroot      1         0            0     02:09        ?      00:00:01     /sbin/init\nroot     2         0            0     02:09        ?      00:00:00     [kthreadd]\nroot     3         2            0     02:09        ?      00:00:00     [migration/0]\n\n[root@localhost ~]# ps -le\nF  S   UID PID PPID  C   PRI   NI   ADDR   SZ       WCHAN   TTY   TIME         CMD\n4  S     0      1       0       0   80      0       -          4839    poll_s       ?         00:00:01    init\n1  S     0      2       0       0   80      0       -           0          kthrea       ?         00:00:00   kthreadd\n1  S     0      3       2       0   -40      -       -           0          migrat      ?         00:00:00    migration/0\n\nUSER 用户名 \nUID 用户ID（User ID） \nPID 进程ID（Process ID） \nPPID 父进程的进程ID（Parent Process id） \nSID 会话ID（Session id） \n%CPU 进程的cpu占用率 \n%MEM 进程的内存占用率 \nVSZ 进程所使用的虚存的大小（Virtual Size） \nRSS 进程使用的实际内存的大小 \nTTY 与进程关联的终端（tty） \nSTAT 进程的状态：进程状态使用字符表示的（STAT的状态码） \nSTART 进程启动时间和日期 \nTIME 进程使用的总cpu时间 \nCOMMAND 正在执行的命令行命令 \nNI 优先级(Nice) \nPRI 进程优先级编号(Priority)\n进程状态（S字段）： D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程\n\n```\n\n#### top\n```\n[root@localhost ~]# top\ntop - 02:45:58 up 36 min, 4 users, load average: 0.00, 0.00, 0.00\nTasks: 175 total, 1 running, 174 sleeping, 0 stopped, 0 zombie\nCpu(s): 0.3%us, 0.3%sy, 0.0%ni, 99.3%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st\nMem: 1907580k total, 528968k used, 1378612k free, 26060k buffers\nSwap: 2097144k total, 0k used, 2097144k free, 173020k cached\nPID   USER   PR   NI    VIRT     RES    SHR     S    %CPU %MEM TIME+     COMMAND\n2603  root      20    0      15028   1372    1000    R   0.3       0.1         0:00.21     top\n1          root      20    0     19356    1540    1228    S    0.0      0.1          0:01.04     init\n2         root      20    0      0            0          0           S   0.0       0.0        0:00.00    kthreadd\n\n\n第一行显示系统运行时间，用户数，系统负载1分钟 ，5分钟，15分钟的情况\n第二行显示经常总数，不同stat下的进程数量 \n第三行显示cpu使用情况 第四行显示物理内存使用情况 第五行显示swap交换分区使用情况\n```\n\n#### 信号\n  ```\n[root@localhost ~]# kill -l\n1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP\n6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1\n11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM\n16) SIGSTKFLT 17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP\n21) SIGTTIN 22) SIGTTOU 23) SIGURG 24) SIGXCPU 25) SIGXFSZ\n26) SIGVTALRM 27) SIGPROF 28) SIGWINCH 29) SIGIO 30) SIGPWR\n31) SIGSYS 34) SIGRTMIN 35) SIGRTMIN+1 36) SIGRTMIN+2 37) SIGRTMIN+3\n38) SIGRTMIN+4 39) SIGRTMIN+5 40) SIGRTMIN+6 41) SIGRTMIN+7 42) SIGRTMIN+8\n43) SIGRTMIN+9 44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13\n48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12\n53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9 56) SIGRTMAX-8 57) SIGRTMAX-7\n58) SIGRTMAX-6 59) SIGRTMAX-5 60) SIGRTMAX-4 61) SIGRTMAX-3 62) SIGRTMAX-2\n63) SIGRTMAX-1 64) SIGRTMAX\n```\nLinux中信号有64种，通过kill命令我们可以对进程发送这些信号来告知这些进程，做什么操作。常用的以下四种\n  \n1) SIGHUP\n这个信号用于通知它重新读取配置文件但不关闭进程，相当于reload。\n2) SIGINT\n程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出，用于通知前台进程组终止进程。\n9) SIGKILL\n用来立即结束程序的运行. 本信号不能被阻塞、处理和忽略。如果管理员发现某个进程终止不了，可尝试发送这个信号\n15) SIGTERM\n程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理。通常用来要求程序自己正常退出，shell命令kill缺省产生这个信号。如果进程终止不了，我们才会尝试SIGKILL。\n  例：kill -1 2205 ——告知PID为2205的进程重载下配置文件 kill -9 2205 ——直接杀死2205进程 kill -15 2205 ——通知2205进程关闭，进程会在收到信号后结束工作后自行关闭，有些进程会屏蔽15信号如bash，此时我们只能通过9信号强制结束。\n\n#### 进程优先级\n  \n假设系统中有多个进程同时在排队是，cpu应该有限处理哪个进程哪？这就取决于进程的优先级，优先级高的优先处理。进程在创建是我们可以通过nice命令指定他的优先级，对于已经开始的进程我们可以通过renice来修改他的优先级。\n  \n优先级范围：-20~19 数字越小优先级越高，默认创建的进程优先级为0。\n\n例：\n```\nnice -n 10 vim —— 创建一个优先级为10的vim进程\n[root@localhost ~]# ps -el | grep vim\nF S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD\n0 T 0 6891 2563 0 90 10 - 35930 signal pts/2 00:00:00 vim\n\nrenice -n -10 6891 ——调整6891进程的有限级为-10\n[root@localhost ~]# renice -n -10 6891\n6891: old priority 10, new priority -10\n\nroot用户可以自由调整经常的优先级，普通用户只能调低不能调高。\n  \n[testuser@localhost root]$ renice -n 5 6925\n6925: old priority 0, new priority 5\n  \n[testuser@localhost root]$ renice -n 2 6925\nrenice: 6925: setpriority: Permission denied\n```\n#### 前台进程/后台进程\n  \n由于一个终端在处理工作时只能处理一个，当我们想在处理第二个进程时会由于终端被占用而无法处理。这时我们可以将前台的这个进程放到后台去运行，把前台的终端空出让我们运行新的进程。\n  \n命令：\n* command &让进程在后台运行\n* jobs –l 查看后台运行的进程\n* fg %n 让后台运行的进程n到前台来\n* bg %n 让后台的进程n运行\n  \n以上的%n是通过jobs -l 查看到的工作编号不是pid。\n\n例：\n```\nvim & ——在后台运行vim进程\njobs -l ——查看后台所有进程\nfg %1 ——将后台1号进程移动到前台来运行\nbg %2 —— 让后台的2号进程开始运行\nctrl+z ——暂停当前的进程放到后台，但不运行\n\n[root@localhost ~]# vim &\n[2] 6987\n  \n[root@localhost ~]# vi /etc/resolv.conf\n[3]+ Stopped vi /etc/resolv.conf\n\n[root@localhost ~]# jobs -l\n[1] 6891 Stopped nice -n 10 vim\n[2]- 6987 Stopped (tty output) vim\n[3]+ 6989 Stopped vi /etc/resolv.conf\n\n[root@localhost ~]# bg %2\n[2]- vim &\n\n[root@localhost ~]# fg %3\n```","slug":"linux-process-manager","updated":"2019-10-21T06:57:43.011Z","photos":[],"link":"","_id":"ck42dyijr00k2u9ur95q8zsgu","content":"<p>当我们运行程序时，Linux会为程序创建一个特殊的环境，该环境包含程序运行需要的所有资源，以保证程序能够独立运行，不受其他程序的干扰。</p>\n<p>在系统中我们调用一个指令，Linux 就会创建一个新的进程。例如使用 ls 命令遍历目录中的文件时，就创建了一个进程。进程就是程序的实例。</p>\n<p>系统通过一个五位数字跟踪程序的运行状态，这个数字称为 pid 或进程ID。每个进程都拥有唯一的 pid。两个 pid 一样的进程不能同时存在，Linux用 pid 来跟踪程序的运行状态。</p>\n<h3 id=\"进程查看\"><a href=\"#进程查看\" class=\"headerlink\" title=\"进程查看\"></a>进程查看</h3><h4 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps aux</span><br><span class=\"line\">USER PID  %CPU   %MEM    VSZ    RSS    TTY    STAT    START   TIME   COMMAND</span><br><span class=\"line\">root      <span class=\"number\">1</span>       <span class=\"number\">0.0</span>        <span class=\"number\">0.0</span>        <span class=\"number\">19356</span>   <span class=\"number\">1540</span>     ?        Ss         <span class=\"number\">02</span>:<span class=\"number\">09</span>         <span class=\"number\">0</span>:<span class=\"number\">01</span>      /sbin/init</span><br><span class=\"line\">root      <span class=\"number\">2</span>      <span class=\"number\">0.0</span>         <span class=\"number\">0.0</span>        <span class=\"number\">0</span>           <span class=\"number\">0</span>           ?        S           <span class=\"number\">02</span>:<span class=\"number\">09</span>         <span class=\"number\">0</span>:<span class=\"number\">00</span>     [kthreadd]</span><br><span class=\"line\">root      <span class=\"number\">3</span>      <span class=\"number\">0.0</span>         <span class=\"number\">0.0</span>        <span class=\"number\">0</span>           <span class=\"number\">0</span>           ?        S           <span class=\"number\">02</span>:<span class=\"number\">09</span>         <span class=\"number\">0</span>:<span class=\"number\">00</span>     [migration/<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps -ef</span><br><span class=\"line\">UID     PID     PPID    C    STIME    TTY    TIME       CMD</span><br><span class=\"line\">root      <span class=\"number\">1</span>         <span class=\"number\">0</span>            <span class=\"number\">0</span>     <span class=\"number\">02</span>:<span class=\"number\">09</span>        ?      <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">01</span>     /sbin/init</span><br><span class=\"line\">root     <span class=\"number\">2</span>         <span class=\"number\">0</span>            <span class=\"number\">0</span>     <span class=\"number\">02</span>:<span class=\"number\">09</span>        ?      <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>     [kthreadd]</span><br><span class=\"line\">root     <span class=\"number\">3</span>         <span class=\"number\">2</span>            <span class=\"number\">0</span>     <span class=\"number\">02</span>:<span class=\"number\">09</span>        ?      <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>     [migration/<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps -le</span><br><span class=\"line\">F  S   UID PID PPID  C   PRI   NI   ADDR   SZ       WCHAN   TTY   TIME         CMD</span><br><span class=\"line\"><span class=\"number\">4</span>  S     <span class=\"number\">0</span>      <span class=\"number\">1</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   <span class=\"number\">80</span>      <span class=\"number\">0</span>       -          <span class=\"number\">4839</span>    poll_s       ?         <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">01</span>    init</span><br><span class=\"line\"><span class=\"number\">1</span>  S     <span class=\"number\">0</span>      <span class=\"number\">2</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   <span class=\"number\">80</span>      <span class=\"number\">0</span>       -           <span class=\"number\">0</span>          kthrea       ?         <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>   kthreadd</span><br><span class=\"line\"><span class=\"number\">1</span>  S     <span class=\"number\">0</span>      <span class=\"number\">3</span>       <span class=\"number\">2</span>       <span class=\"number\">0</span>   <span class=\"number\">-40</span>      -       -           <span class=\"number\">0</span>          migrat      ?         <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>    migration/<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">USER 用户名 </span><br><span class=\"line\">UID 用户ID（User ID） </span><br><span class=\"line\">PID 进程ID（Process ID） </span><br><span class=\"line\">PPID 父进程的进程ID（Parent Process id） </span><br><span class=\"line\">SID 会话ID（Session id） </span><br><span class=\"line\">%CPU 进程的cpu占用率 </span><br><span class=\"line\">%MEM 进程的内存占用率 </span><br><span class=\"line\">VSZ 进程所使用的虚存的大小（Virtual Size） </span><br><span class=\"line\">RSS 进程使用的实际内存的大小 </span><br><span class=\"line\">TTY 与进程关联的终端（tty） </span><br><span class=\"line\">STAT 进程的状态：进程状态使用字符表示的（STAT的状态码） </span><br><span class=\"line\">START 进程启动时间和日期 </span><br><span class=\"line\">TIME 进程使用的总cpu时间 </span><br><span class=\"line\">COMMAND 正在执行的命令行命令 </span><br><span class=\"line\">NI 优先级(Nice) </span><br><span class=\"line\">PRI 进程优先级编号(Priority)</span><br><span class=\"line\">进程状态（S字段）： D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"top\"><a href=\"#top\" class=\"headerlink\" title=\"top\"></a>top</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# top</span><br><span class=\"line\">top - <span class=\"number\">02</span>:<span class=\"number\">45</span>:<span class=\"number\">58</span> up <span class=\"number\">36</span> min, <span class=\"number\">4</span> users, load average: <span class=\"number\">0.00</span>, <span class=\"number\">0.00</span>, <span class=\"number\">0.00</span></span><br><span class=\"line\">Tasks: <span class=\"number\">175</span> total, <span class=\"number\">1</span> running, <span class=\"number\">174</span> sleeping, <span class=\"number\">0</span> stopped, <span class=\"number\">0</span> zombie</span><br><span class=\"line\">Cpu(s): <span class=\"number\">0.3</span>%us, <span class=\"number\">0.3</span>%sy, <span class=\"number\">0.0</span>%ni, <span class=\"number\">99.3</span>%id, <span class=\"number\">0.0</span>%wa, <span class=\"number\">0.0</span>%hi, <span class=\"number\">0.0</span>%si, <span class=\"number\">0.0</span>%st</span><br><span class=\"line\">Mem: <span class=\"number\">1907580</span>k total, <span class=\"number\">528968</span>k used, <span class=\"number\">1378612</span>k free, <span class=\"number\">26060</span>k buffers</span><br><span class=\"line\">Swap: <span class=\"number\">2097144</span>k total, <span class=\"number\">0</span>k used, <span class=\"number\">2097144</span>k free, <span class=\"number\">173020</span>k cached</span><br><span class=\"line\">PID   USER   PR   NI    VIRT     RES    SHR     S    %CPU %MEM TIME+     COMMAND</span><br><span class=\"line\"><span class=\"number\">2603</span>  root      <span class=\"number\">20</span>    <span class=\"number\">0</span>      <span class=\"number\">15028</span>   <span class=\"number\">1372</span>    <span class=\"number\">1000</span>    R   <span class=\"number\">0.3</span>       <span class=\"number\">0.1</span>         <span class=\"number\">0</span>:<span class=\"number\">00.21</span>     top</span><br><span class=\"line\"><span class=\"number\">1</span>          root      <span class=\"number\">20</span>    <span class=\"number\">0</span>     <span class=\"number\">19356</span>    <span class=\"number\">1540</span>    <span class=\"number\">1228</span>    S    <span class=\"number\">0.0</span>      <span class=\"number\">0.1</span>          <span class=\"number\">0</span>:<span class=\"number\">01.04</span>     init</span><br><span class=\"line\"><span class=\"number\">2</span>         root      <span class=\"number\">20</span>    <span class=\"number\">0</span>      <span class=\"number\">0</span>            <span class=\"number\">0</span>          <span class=\"number\">0</span>           S   <span class=\"number\">0.0</span>       <span class=\"number\">0.0</span>        <span class=\"number\">0</span>:<span class=\"number\">00.00</span>    kthreadd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第一行显示系统运行时间，用户数，系统负载<span class=\"number\">1</span>分钟 ，<span class=\"number\">5</span>分钟，<span class=\"number\">15</span>分钟的情况</span><br><span class=\"line\">第二行显示经常总数，不同stat下的进程数量 </span><br><span class=\"line\">第三行显示cpu使用情况 第四行显示物理内存使用情况 第五行显示swap交换分区使用情况</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"信号\"><a href=\"#信号\" class=\"headerlink\" title=\"信号\"></a>信号</h4>  <figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# kill -l</span><br><span class=\"line\"><span class=\"number\">1</span>) SIGHUP <span class=\"number\">2</span>) SIGINT <span class=\"number\">3</span>) SIGQUIT <span class=\"number\">4</span>) SIGILL <span class=\"number\">5</span>) SIGTRAP</span><br><span class=\"line\"><span class=\"number\">6</span>) SIGABRT <span class=\"number\">7</span>) SIGBUS <span class=\"number\">8</span>) SIGFPE <span class=\"number\">9</span>) SIGKILL <span class=\"number\">10</span>) SIGUSR1</span><br><span class=\"line\"><span class=\"number\">11</span>) SIGSEGV <span class=\"number\">12</span>) SIGUSR2 <span class=\"number\">13</span>) SIGPIPE <span class=\"number\">14</span>) SIGALRM <span class=\"number\">15</span>) SIGTERM</span><br><span class=\"line\"><span class=\"number\">16</span>) SIGSTKFLT <span class=\"number\">17</span>) SIGCHLD <span class=\"number\">18</span>) SIGCONT <span class=\"number\">19</span>) SIGSTOP <span class=\"number\">20</span>) SIGTSTP</span><br><span class=\"line\"><span class=\"number\">21</span>) SIGTTIN <span class=\"number\">22</span>) SIGTTOU <span class=\"number\">23</span>) SIGURG <span class=\"number\">24</span>) SIGXCPU <span class=\"number\">25</span>) SIGXFSZ</span><br><span class=\"line\"><span class=\"number\">26</span>) SIGVTALRM <span class=\"number\">27</span>) SIGPROF <span class=\"number\">28</span>) SIGWINCH <span class=\"number\">29</span>) SIGIO <span class=\"number\">30</span>) SIGPWR</span><br><span class=\"line\"><span class=\"number\">31</span>) SIGSYS <span class=\"number\">34</span>) SIGRTMIN <span class=\"number\">35</span>) SIGRTMIN+<span class=\"number\">1</span> <span class=\"number\">36</span>) SIGRTMIN+<span class=\"number\">2</span> <span class=\"number\">37</span>) SIGRTMIN+<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">38</span>) SIGRTMIN+<span class=\"number\">4</span> <span class=\"number\">39</span>) SIGRTMIN+<span class=\"number\">5</span> <span class=\"number\">40</span>) SIGRTMIN+<span class=\"number\">6</span> <span class=\"number\">41</span>) SIGRTMIN+<span class=\"number\">7</span> <span class=\"number\">42</span>) SIGRTMIN+<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"number\">43</span>) SIGRTMIN+<span class=\"number\">9</span> <span class=\"number\">44</span>) SIGRTMIN+<span class=\"number\">10</span> <span class=\"number\">45</span>) SIGRTMIN+<span class=\"number\">11</span> <span class=\"number\">46</span>) SIGRTMIN+<span class=\"number\">12</span> <span class=\"number\">47</span>) SIGRTMIN+<span class=\"number\">13</span></span><br><span class=\"line\"><span class=\"number\">48</span>) SIGRTMIN+<span class=\"number\">14</span> <span class=\"number\">49</span>) SIGRTMIN+<span class=\"number\">15</span> <span class=\"number\">50</span>) SIGRTMAX<span class=\"number\">-14</span> <span class=\"number\">51</span>) SIGRTMAX<span class=\"number\">-13</span> <span class=\"number\">52</span>) SIGRTMAX<span class=\"number\">-12</span></span><br><span class=\"line\"><span class=\"number\">53</span>) SIGRTMAX<span class=\"number\">-11</span> <span class=\"number\">54</span>) SIGRTMAX<span class=\"number\">-10</span> <span class=\"number\">55</span>) SIGRTMAX<span class=\"number\">-9</span> <span class=\"number\">56</span>) SIGRTMAX<span class=\"number\">-8</span> <span class=\"number\">57</span>) SIGRTMAX<span class=\"number\">-7</span></span><br><span class=\"line\"><span class=\"number\">58</span>) SIGRTMAX<span class=\"number\">-6</span> <span class=\"number\">59</span>) SIGRTMAX<span class=\"number\">-5</span> <span class=\"number\">60</span>) SIGRTMAX<span class=\"number\">-4</span> <span class=\"number\">61</span>) SIGRTMAX<span class=\"number\">-3</span> <span class=\"number\">62</span>) SIGRTMAX<span class=\"number\">-2</span></span><br><span class=\"line\"><span class=\"number\">63</span>) SIGRTMAX<span class=\"number\">-1</span> <span class=\"number\">64</span>) SIGRTMAX</span><br></pre></td></tr></table></figure>\n\n<p>Linux中信号有64种，通过kill命令我们可以对进程发送这些信号来告知这些进程，做什么操作。常用的以下四种</p>\n<p>1) SIGHUP<br>这个信号用于通知它重新读取配置文件但不关闭进程，相当于reload。<br>2) SIGINT<br>程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出，用于通知前台进程组终止进程。<br>9) SIGKILL<br>用来立即结束程序的运行. 本信号不能被阻塞、处理和忽略。如果管理员发现某个进程终止不了，可尝试发送这个信号<br>15) SIGTERM<br>程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理。通常用来要求程序自己正常退出，shell命令kill缺省产生这个信号。如果进程终止不了，我们才会尝试SIGKILL。<br>  例：kill -1 2205 ——告知PID为2205的进程重载下配置文件 kill -9 2205 ——直接杀死2205进程 kill -15 2205 ——通知2205进程关闭，进程会在收到信号后结束工作后自行关闭，有些进程会屏蔽15信号如bash，此时我们只能通过9信号强制结束。</p>\n<h4 id=\"进程优先级\"><a href=\"#进程优先级\" class=\"headerlink\" title=\"进程优先级\"></a>进程优先级</h4><p>假设系统中有多个进程同时在排队是，cpu应该有限处理哪个进程哪？这就取决于进程的优先级，优先级高的优先处理。进程在创建是我们可以通过nice命令指定他的优先级，对于已经开始的进程我们可以通过renice来修改他的优先级。</p>\n<p>优先级范围：-20~19 数字越小优先级越高，默认创建的进程优先级为0。</p>\n<p>例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nice -n <span class=\"number\">10</span> vim —— 创建一个优先级为<span class=\"number\">10</span>的vim进程</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps -el | grep vim</span><br><span class=\"line\">F S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD</span><br><span class=\"line\"><span class=\"number\">0</span> T <span class=\"number\">0</span> <span class=\"number\">6891</span> <span class=\"number\">2563</span> <span class=\"number\">0</span> <span class=\"number\">90</span> <span class=\"number\">10</span> - <span class=\"number\">35930</span> signal pts/<span class=\"number\">2</span> <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> vim</span><br><span class=\"line\"></span><br><span class=\"line\">renice -n <span class=\"number\">-10</span> <span class=\"number\">6891</span> ——调整<span class=\"number\">6891</span>进程的有限级为<span class=\"number\">-10</span></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# renice -n <span class=\"number\">-10</span> <span class=\"number\">6891</span></span><br><span class=\"line\"><span class=\"number\">6891</span>: old priority <span class=\"number\">10</span>, new priority <span class=\"number\">-10</span></span><br><span class=\"line\"></span><br><span class=\"line\">root用户可以自由调整经常的优先级，普通用户只能调低不能调高。</span><br><span class=\"line\">  </span><br><span class=\"line\">[<span class=\"symbol\">testuser@</span>localhost root]$ renice -n <span class=\"number\">5</span> <span class=\"number\">6925</span></span><br><span class=\"line\"><span class=\"number\">6925</span>: old priority <span class=\"number\">0</span>, new priority <span class=\"number\">5</span></span><br><span class=\"line\">  </span><br><span class=\"line\">[<span class=\"symbol\">testuser@</span>localhost root]$ renice -n <span class=\"number\">2</span> <span class=\"number\">6925</span></span><br><span class=\"line\">renice: <span class=\"number\">6925</span>: setpriority: Permission denied</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"前台进程-后台进程\"><a href=\"#前台进程-后台进程\" class=\"headerlink\" title=\"前台进程/后台进程\"></a>前台进程/后台进程</h4><p>由于一个终端在处理工作时只能处理一个，当我们想在处理第二个进程时会由于终端被占用而无法处理。这时我们可以将前台的这个进程放到后台去运行，把前台的终端空出让我们运行新的进程。</p>\n<p>命令：</p>\n<ul>\n<li>command &amp;让进程在后台运行</li>\n<li>jobs –l 查看后台运行的进程</li>\n<li>fg %n 让后台运行的进程n到前台来</li>\n<li>bg %n 让后台的进程n运行</li>\n</ul>\n<p>以上的%n是通过jobs -l 查看到的工作编号不是pid。</p>\n<p>例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &amp; ——在后台运行vim进程</span><br><span class=\"line\">jobs -l ——查看后台所有进程</span><br><span class=\"line\">fg %<span class=\"number\">1</span> ——将后台<span class=\"number\">1</span>号进程移动到前台来运行</span><br><span class=\"line\">bg %<span class=\"number\">2</span> —— 让后台的<span class=\"number\">2</span>号进程开始运行</span><br><span class=\"line\">ctrl+z ——暂停当前的进程放到后台，但不运行</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vim &amp;</span><br><span class=\"line\">[<span class=\"number\">2</span>] <span class=\"number\">6987</span></span><br><span class=\"line\">  </span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vi /etc/resolv.conf</span><br><span class=\"line\">[<span class=\"number\">3</span>]+ Stopped vi /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# jobs -l</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">6891</span> Stopped nice -n <span class=\"number\">10</span> vim</span><br><span class=\"line\">[<span class=\"number\">2</span>]- <span class=\"number\">6987</span> Stopped (tty output) vim</span><br><span class=\"line\">[<span class=\"number\">3</span>]+ <span class=\"number\">6989</span> Stopped vi /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# bg %<span class=\"number\">2</span></span><br><span class=\"line\">[<span class=\"number\">2</span>]- vim &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# fg %<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>当我们运行程序时，Linux会为程序创建一个特殊的环境，该环境包含程序运行需要的所有资源，以保证程序能够独立运行，不受其他程序的干扰。</p>\n<p>在系统中我们调用一个指令，Linux 就会创建一个新的进程。例如使用 ls 命令遍历目录中的文件时，就创建了一个进程。进程就是程序的实例。</p>\n<p>系统通过一个五位数字跟踪程序的运行状态，这个数字称为 pid 或进程ID。每个进程都拥有唯一的 pid。两个 pid 一样的进程不能同时存在，Linux用 pid 来跟踪程序的运行状态。</p>\n<h3 id=\"进程查看\"><a href=\"#进程查看\" class=\"headerlink\" title=\"进程查看\"></a>进程查看</h3><h4 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps aux</span><br><span class=\"line\">USER PID  %CPU   %MEM    VSZ    RSS    TTY    STAT    START   TIME   COMMAND</span><br><span class=\"line\">root      <span class=\"number\">1</span>       <span class=\"number\">0.0</span>        <span class=\"number\">0.0</span>        <span class=\"number\">19356</span>   <span class=\"number\">1540</span>     ?        Ss         <span class=\"number\">02</span>:<span class=\"number\">09</span>         <span class=\"number\">0</span>:<span class=\"number\">01</span>      /sbin/init</span><br><span class=\"line\">root      <span class=\"number\">2</span>      <span class=\"number\">0.0</span>         <span class=\"number\">0.0</span>        <span class=\"number\">0</span>           <span class=\"number\">0</span>           ?        S           <span class=\"number\">02</span>:<span class=\"number\">09</span>         <span class=\"number\">0</span>:<span class=\"number\">00</span>     [kthreadd]</span><br><span class=\"line\">root      <span class=\"number\">3</span>      <span class=\"number\">0.0</span>         <span class=\"number\">0.0</span>        <span class=\"number\">0</span>           <span class=\"number\">0</span>           ?        S           <span class=\"number\">02</span>:<span class=\"number\">09</span>         <span class=\"number\">0</span>:<span class=\"number\">00</span>     [migration/<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps -ef</span><br><span class=\"line\">UID     PID     PPID    C    STIME    TTY    TIME       CMD</span><br><span class=\"line\">root      <span class=\"number\">1</span>         <span class=\"number\">0</span>            <span class=\"number\">0</span>     <span class=\"number\">02</span>:<span class=\"number\">09</span>        ?      <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">01</span>     /sbin/init</span><br><span class=\"line\">root     <span class=\"number\">2</span>         <span class=\"number\">0</span>            <span class=\"number\">0</span>     <span class=\"number\">02</span>:<span class=\"number\">09</span>        ?      <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>     [kthreadd]</span><br><span class=\"line\">root     <span class=\"number\">3</span>         <span class=\"number\">2</span>            <span class=\"number\">0</span>     <span class=\"number\">02</span>:<span class=\"number\">09</span>        ?      <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>     [migration/<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps -le</span><br><span class=\"line\">F  S   UID PID PPID  C   PRI   NI   ADDR   SZ       WCHAN   TTY   TIME         CMD</span><br><span class=\"line\"><span class=\"number\">4</span>  S     <span class=\"number\">0</span>      <span class=\"number\">1</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   <span class=\"number\">80</span>      <span class=\"number\">0</span>       -          <span class=\"number\">4839</span>    poll_s       ?         <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">01</span>    init</span><br><span class=\"line\"><span class=\"number\">1</span>  S     <span class=\"number\">0</span>      <span class=\"number\">2</span>       <span class=\"number\">0</span>       <span class=\"number\">0</span>   <span class=\"number\">80</span>      <span class=\"number\">0</span>       -           <span class=\"number\">0</span>          kthrea       ?         <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>   kthreadd</span><br><span class=\"line\"><span class=\"number\">1</span>  S     <span class=\"number\">0</span>      <span class=\"number\">3</span>       <span class=\"number\">2</span>       <span class=\"number\">0</span>   <span class=\"number\">-40</span>      -       -           <span class=\"number\">0</span>          migrat      ?         <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>    migration/<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">USER 用户名 </span><br><span class=\"line\">UID 用户ID（User ID） </span><br><span class=\"line\">PID 进程ID（Process ID） </span><br><span class=\"line\">PPID 父进程的进程ID（Parent Process id） </span><br><span class=\"line\">SID 会话ID（Session id） </span><br><span class=\"line\">%CPU 进程的cpu占用率 </span><br><span class=\"line\">%MEM 进程的内存占用率 </span><br><span class=\"line\">VSZ 进程所使用的虚存的大小（Virtual Size） </span><br><span class=\"line\">RSS 进程使用的实际内存的大小 </span><br><span class=\"line\">TTY 与进程关联的终端（tty） </span><br><span class=\"line\">STAT 进程的状态：进程状态使用字符表示的（STAT的状态码） </span><br><span class=\"line\">START 进程启动时间和日期 </span><br><span class=\"line\">TIME 进程使用的总cpu时间 </span><br><span class=\"line\">COMMAND 正在执行的命令行命令 </span><br><span class=\"line\">NI 优先级(Nice) </span><br><span class=\"line\">PRI 进程优先级编号(Priority)</span><br><span class=\"line\">进程状态（S字段）： D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"top\"><a href=\"#top\" class=\"headerlink\" title=\"top\"></a>top</h4><figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# top</span><br><span class=\"line\">top - <span class=\"number\">02</span>:<span class=\"number\">45</span>:<span class=\"number\">58</span> up <span class=\"number\">36</span> min, <span class=\"number\">4</span> users, load average: <span class=\"number\">0.00</span>, <span class=\"number\">0.00</span>, <span class=\"number\">0.00</span></span><br><span class=\"line\">Tasks: <span class=\"number\">175</span> total, <span class=\"number\">1</span> running, <span class=\"number\">174</span> sleeping, <span class=\"number\">0</span> stopped, <span class=\"number\">0</span> zombie</span><br><span class=\"line\">Cpu(s): <span class=\"number\">0.3</span>%us, <span class=\"number\">0.3</span>%sy, <span class=\"number\">0.0</span>%ni, <span class=\"number\">99.3</span>%id, <span class=\"number\">0.0</span>%wa, <span class=\"number\">0.0</span>%hi, <span class=\"number\">0.0</span>%si, <span class=\"number\">0.0</span>%st</span><br><span class=\"line\">Mem: <span class=\"number\">1907580</span>k total, <span class=\"number\">528968</span>k used, <span class=\"number\">1378612</span>k free, <span class=\"number\">26060</span>k buffers</span><br><span class=\"line\">Swap: <span class=\"number\">2097144</span>k total, <span class=\"number\">0</span>k used, <span class=\"number\">2097144</span>k free, <span class=\"number\">173020</span>k cached</span><br><span class=\"line\">PID   USER   PR   NI    VIRT     RES    SHR     S    %CPU %MEM TIME+     COMMAND</span><br><span class=\"line\"><span class=\"number\">2603</span>  root      <span class=\"number\">20</span>    <span class=\"number\">0</span>      <span class=\"number\">15028</span>   <span class=\"number\">1372</span>    <span class=\"number\">1000</span>    R   <span class=\"number\">0.3</span>       <span class=\"number\">0.1</span>         <span class=\"number\">0</span>:<span class=\"number\">00.21</span>     top</span><br><span class=\"line\"><span class=\"number\">1</span>          root      <span class=\"number\">20</span>    <span class=\"number\">0</span>     <span class=\"number\">19356</span>    <span class=\"number\">1540</span>    <span class=\"number\">1228</span>    S    <span class=\"number\">0.0</span>      <span class=\"number\">0.1</span>          <span class=\"number\">0</span>:<span class=\"number\">01.04</span>     init</span><br><span class=\"line\"><span class=\"number\">2</span>         root      <span class=\"number\">20</span>    <span class=\"number\">0</span>      <span class=\"number\">0</span>            <span class=\"number\">0</span>          <span class=\"number\">0</span>           S   <span class=\"number\">0.0</span>       <span class=\"number\">0.0</span>        <span class=\"number\">0</span>:<span class=\"number\">00.00</span>    kthreadd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">第一行显示系统运行时间，用户数，系统负载<span class=\"number\">1</span>分钟 ，<span class=\"number\">5</span>分钟，<span class=\"number\">15</span>分钟的情况</span><br><span class=\"line\">第二行显示经常总数，不同stat下的进程数量 </span><br><span class=\"line\">第三行显示cpu使用情况 第四行显示物理内存使用情况 第五行显示swap交换分区使用情况</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"信号\"><a href=\"#信号\" class=\"headerlink\" title=\"信号\"></a>信号</h4>  <figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# kill -l</span><br><span class=\"line\"><span class=\"number\">1</span>) SIGHUP <span class=\"number\">2</span>) SIGINT <span class=\"number\">3</span>) SIGQUIT <span class=\"number\">4</span>) SIGILL <span class=\"number\">5</span>) SIGTRAP</span><br><span class=\"line\"><span class=\"number\">6</span>) SIGABRT <span class=\"number\">7</span>) SIGBUS <span class=\"number\">8</span>) SIGFPE <span class=\"number\">9</span>) SIGKILL <span class=\"number\">10</span>) SIGUSR1</span><br><span class=\"line\"><span class=\"number\">11</span>) SIGSEGV <span class=\"number\">12</span>) SIGUSR2 <span class=\"number\">13</span>) SIGPIPE <span class=\"number\">14</span>) SIGALRM <span class=\"number\">15</span>) SIGTERM</span><br><span class=\"line\"><span class=\"number\">16</span>) SIGSTKFLT <span class=\"number\">17</span>) SIGCHLD <span class=\"number\">18</span>) SIGCONT <span class=\"number\">19</span>) SIGSTOP <span class=\"number\">20</span>) SIGTSTP</span><br><span class=\"line\"><span class=\"number\">21</span>) SIGTTIN <span class=\"number\">22</span>) SIGTTOU <span class=\"number\">23</span>) SIGURG <span class=\"number\">24</span>) SIGXCPU <span class=\"number\">25</span>) SIGXFSZ</span><br><span class=\"line\"><span class=\"number\">26</span>) SIGVTALRM <span class=\"number\">27</span>) SIGPROF <span class=\"number\">28</span>) SIGWINCH <span class=\"number\">29</span>) SIGIO <span class=\"number\">30</span>) SIGPWR</span><br><span class=\"line\"><span class=\"number\">31</span>) SIGSYS <span class=\"number\">34</span>) SIGRTMIN <span class=\"number\">35</span>) SIGRTMIN+<span class=\"number\">1</span> <span class=\"number\">36</span>) SIGRTMIN+<span class=\"number\">2</span> <span class=\"number\">37</span>) SIGRTMIN+<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">38</span>) SIGRTMIN+<span class=\"number\">4</span> <span class=\"number\">39</span>) SIGRTMIN+<span class=\"number\">5</span> <span class=\"number\">40</span>) SIGRTMIN+<span class=\"number\">6</span> <span class=\"number\">41</span>) SIGRTMIN+<span class=\"number\">7</span> <span class=\"number\">42</span>) SIGRTMIN+<span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"number\">43</span>) SIGRTMIN+<span class=\"number\">9</span> <span class=\"number\">44</span>) SIGRTMIN+<span class=\"number\">10</span> <span class=\"number\">45</span>) SIGRTMIN+<span class=\"number\">11</span> <span class=\"number\">46</span>) SIGRTMIN+<span class=\"number\">12</span> <span class=\"number\">47</span>) SIGRTMIN+<span class=\"number\">13</span></span><br><span class=\"line\"><span class=\"number\">48</span>) SIGRTMIN+<span class=\"number\">14</span> <span class=\"number\">49</span>) SIGRTMIN+<span class=\"number\">15</span> <span class=\"number\">50</span>) SIGRTMAX<span class=\"number\">-14</span> <span class=\"number\">51</span>) SIGRTMAX<span class=\"number\">-13</span> <span class=\"number\">52</span>) SIGRTMAX<span class=\"number\">-12</span></span><br><span class=\"line\"><span class=\"number\">53</span>) SIGRTMAX<span class=\"number\">-11</span> <span class=\"number\">54</span>) SIGRTMAX<span class=\"number\">-10</span> <span class=\"number\">55</span>) SIGRTMAX<span class=\"number\">-9</span> <span class=\"number\">56</span>) SIGRTMAX<span class=\"number\">-8</span> <span class=\"number\">57</span>) SIGRTMAX<span class=\"number\">-7</span></span><br><span class=\"line\"><span class=\"number\">58</span>) SIGRTMAX<span class=\"number\">-6</span> <span class=\"number\">59</span>) SIGRTMAX<span class=\"number\">-5</span> <span class=\"number\">60</span>) SIGRTMAX<span class=\"number\">-4</span> <span class=\"number\">61</span>) SIGRTMAX<span class=\"number\">-3</span> <span class=\"number\">62</span>) SIGRTMAX<span class=\"number\">-2</span></span><br><span class=\"line\"><span class=\"number\">63</span>) SIGRTMAX<span class=\"number\">-1</span> <span class=\"number\">64</span>) SIGRTMAX</span><br></pre></td></tr></table></figure>\n\n<p>Linux中信号有64种，通过kill命令我们可以对进程发送这些信号来告知这些进程，做什么操作。常用的以下四种</p>\n<p>1) SIGHUP<br>这个信号用于通知它重新读取配置文件但不关闭进程，相当于reload。<br>2) SIGINT<br>程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出，用于通知前台进程组终止进程。<br>9) SIGKILL<br>用来立即结束程序的运行. 本信号不能被阻塞、处理和忽略。如果管理员发现某个进程终止不了，可尝试发送这个信号<br>15) SIGTERM<br>程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理。通常用来要求程序自己正常退出，shell命令kill缺省产生这个信号。如果进程终止不了，我们才会尝试SIGKILL。<br>  例：kill -1 2205 ——告知PID为2205的进程重载下配置文件 kill -9 2205 ——直接杀死2205进程 kill -15 2205 ——通知2205进程关闭，进程会在收到信号后结束工作后自行关闭，有些进程会屏蔽15信号如bash，此时我们只能通过9信号强制结束。</p>\n<h4 id=\"进程优先级\"><a href=\"#进程优先级\" class=\"headerlink\" title=\"进程优先级\"></a>进程优先级</h4><p>假设系统中有多个进程同时在排队是，cpu应该有限处理哪个进程哪？这就取决于进程的优先级，优先级高的优先处理。进程在创建是我们可以通过nice命令指定他的优先级，对于已经开始的进程我们可以通过renice来修改他的优先级。</p>\n<p>优先级范围：-20~19 数字越小优先级越高，默认创建的进程优先级为0。</p>\n<p>例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nice -n <span class=\"number\">10</span> vim —— 创建一个优先级为<span class=\"number\">10</span>的vim进程</span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# ps -el | grep vim</span><br><span class=\"line\">F S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD</span><br><span class=\"line\"><span class=\"number\">0</span> T <span class=\"number\">0</span> <span class=\"number\">6891</span> <span class=\"number\">2563</span> <span class=\"number\">0</span> <span class=\"number\">90</span> <span class=\"number\">10</span> - <span class=\"number\">35930</span> signal pts/<span class=\"number\">2</span> <span class=\"number\">00</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span> vim</span><br><span class=\"line\"></span><br><span class=\"line\">renice -n <span class=\"number\">-10</span> <span class=\"number\">6891</span> ——调整<span class=\"number\">6891</span>进程的有限级为<span class=\"number\">-10</span></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# renice -n <span class=\"number\">-10</span> <span class=\"number\">6891</span></span><br><span class=\"line\"><span class=\"number\">6891</span>: old priority <span class=\"number\">10</span>, new priority <span class=\"number\">-10</span></span><br><span class=\"line\"></span><br><span class=\"line\">root用户可以自由调整经常的优先级，普通用户只能调低不能调高。</span><br><span class=\"line\">  </span><br><span class=\"line\">[<span class=\"symbol\">testuser@</span>localhost root]$ renice -n <span class=\"number\">5</span> <span class=\"number\">6925</span></span><br><span class=\"line\"><span class=\"number\">6925</span>: old priority <span class=\"number\">0</span>, new priority <span class=\"number\">5</span></span><br><span class=\"line\">  </span><br><span class=\"line\">[<span class=\"symbol\">testuser@</span>localhost root]$ renice -n <span class=\"number\">2</span> <span class=\"number\">6925</span></span><br><span class=\"line\">renice: <span class=\"number\">6925</span>: setpriority: Permission denied</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"前台进程-后台进程\"><a href=\"#前台进程-后台进程\" class=\"headerlink\" title=\"前台进程/后台进程\"></a>前台进程/后台进程</h4><p>由于一个终端在处理工作时只能处理一个，当我们想在处理第二个进程时会由于终端被占用而无法处理。这时我们可以将前台的这个进程放到后台去运行，把前台的终端空出让我们运行新的进程。</p>\n<p>命令：</p>\n<ul>\n<li>command &amp;让进程在后台运行</li>\n<li>jobs –l 查看后台运行的进程</li>\n<li>fg %n 让后台运行的进程n到前台来</li>\n<li>bg %n 让后台的进程n运行</li>\n</ul>\n<p>以上的%n是通过jobs -l 查看到的工作编号不是pid。</p>\n<p>例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim &amp; ——在后台运行vim进程</span><br><span class=\"line\">jobs -l ——查看后台所有进程</span><br><span class=\"line\">fg %<span class=\"number\">1</span> ——将后台<span class=\"number\">1</span>号进程移动到前台来运行</span><br><span class=\"line\">bg %<span class=\"number\">2</span> —— 让后台的<span class=\"number\">2</span>号进程开始运行</span><br><span class=\"line\">ctrl+z ——暂停当前的进程放到后台，但不运行</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vim &amp;</span><br><span class=\"line\">[<span class=\"number\">2</span>] <span class=\"number\">6987</span></span><br><span class=\"line\">  </span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# vi /etc/resolv.conf</span><br><span class=\"line\">[<span class=\"number\">3</span>]+ Stopped vi /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# jobs -l</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">6891</span> Stopped nice -n <span class=\"number\">10</span> vim</span><br><span class=\"line\">[<span class=\"number\">2</span>]- <span class=\"number\">6987</span> Stopped (tty output) vim</span><br><span class=\"line\">[<span class=\"number\">3</span>]+ <span class=\"number\">6989</span> Stopped vi /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# bg %<span class=\"number\">2</span></span><br><span class=\"line\">[<span class=\"number\">2</span>]- vim &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">root@</span>localhost ~]# fg %<span class=\"number\">3</span></span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"SLB 502报错Debug","published":1,"author":"xiemx","comments":1,"date":"2018-07-19T18:07:06.000Z","_content":"用户自定义站点502问题分析\n\n1. 现象：自定义域名用户反馈，打开网站返回502，如图\n\n![img](/images/img_5b5183b84d4dd.png)\n\n 根据response header判断，请求到达captain，怀疑captain返回的502页面。查看nginx proxy_pass得知后端的地址为bobcat.sxldns.com.\n\n```\nset $bobcat_backend \"bobcat.sxldns.com\";\nproxy_pass http://$bobcat_backend;\n```\n\n使用curl模拟请求，直接请求bobcat.sxldns.com,正常获得返回内容，具体针对每个服务器的IP的curl,不再单独列出。\n\n![img](/images/img_5b5184bfd49e3.png)\n\n通过上述返回基本判断，问题出在我们的代理层。具体查看代理层的nginx配置和系统资源利用率。\n\n查看当时系统的资源状态,查看到当时的系统磁盘空间使用完。查看nginx上有关于proxy的cache相关配置,nginx会cache的response的content的内容。怀疑nginx转发请求之后但是backend返回内容后，nginx cache到本地的时候无法写入disk导致会话结束，SLB的请求无返回包认为后端宕机抛出502。\n\n```\nproxy_cache_path /etc/nginx/china_cache levels=1:2 keys_zone=user_page_cache:100m max_size=20g inactive=60m use_temp_path=off;\n```\n\n具体DEBUG如下：\n\n 1. 获取container中的nginx worker进程的PID\n\n![img](/images/img_5b5184fb1c8d4.png)\n\n2. strace查看下系统调用具体信息\n\n![img](/images/img_5b518515e4fe7.png)\n\n通过上图strace追踪流程可以看到左侧是一个正常的请求的全部流程，右侧是故障状态的strace的系统调用全流程。\n\n通过对比左右两侧的系统调用流程可以看到，当nginx cache的时候写入`/etc/nginx/china_cache`目录时提示`no space`后续的writev()和sendfile()方法就没有调用，因此导致SLB无法获得返回包，抛出`badgateway`的错误.\n\nPS：\n\n1. 为什么单独请求返回头的时候正常返回？nginx返回请求头的时候并不会走proxy的cache流程。因此没有调用open()方法读写disk，正常返回，但是实际请求数据的时候cache写磁盘直接失败，后续直接退出。\n2. 上图的系统调用过程为了debug的方便使用了非折叠模式。因此一些no space的一些报错未显示出来可以。全部流程见附录。\n\n附录：\n\n```\n1.异常调用堆栈\n[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v\nstrace: Process 3904 attached\nepoll_wait(8, [{EPOLLIN, {u32=69025808, u64=140003117973520}}], 512, -1) = 1\naccept4(6, {sa_family=AF_INET, sin_port=htons(59464), sin_addr=inet_addr(\"10.130.0.4\")}, [16], SOCK_NONBLOCK) = 11\nepoll_ctl(8, EPOLL_CTL_ADD, 11, {EPOLLIN|EPOLLRDHUP|EPOLLET, {u32=69027249, u64=140003117974961}}) = 0\nepoll_wait(8, [{EPOLLIN, {u32=69027249, u64=140003117974961}}], 512, 60000) = 1\nrecvfrom(11, \"GET /?key=testxxxx HTTP/1.1\\r\\nUse\"..., 1024, 0, NULL, NULL) = 88\nepoll_ctl(8, EPOLL_CTL_MOD, 11, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027249, u64=140003117974961}}) = 0\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14\nfstat(14, {st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739}) = 0\npread64(14, \"\\5\\0\\0\\0\\0\\0\\0\\0(\\252M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 636, 0) = 636\ngetsockname(11, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")}, [16]) = 0\nsendto(13, \"nN\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nsendto(13, \"\\375\\215\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nepoll_wait(8, [{EPOLLOUT, {u32=69027249, u64=140003117974961}}, {EPOLLIN, {u32=69026288, u64=140003117974000}}], 512, 5000) = 2\nrecvfrom(13, \"nN\\201\\200\\0\\1\\0\\3\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 147\nrecvfrom(13, \"\\375\\215\\201\\200\\0\\1\\0\\1\\0\\1\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 168\nsocket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15\nioctl(15, FIONBIO, [1]) = 0\nepoll_ctl(8, EPOLL_CTL_ADD, 15, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027488, u64=140003117975200}}) = 0\nconnect(15, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"54.222.148.216\")}, 16) = -1 EINPROGRESS (Operation now in progress)\nrecvfrom(13, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)\nepoll_wait(8, [{EPOLLOUT, {u32=69027488, u64=140003117975200}}], 512, 20000) = 1\ngetsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0\nwritev(15, [{\"GET /?key=testxxxx HTTP/1.0\\r\\nHos\"..., 219}], 1) = 219\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027488, u64=140003117975200}}], 512, 60000) = 1\nrecvfrom(15, \"HTTP/1.1 200 OK\\r\\nContent-Type: t\"..., 3723, 0, NULL, NULL) = 3723\nclose(14) = 0\nreadv(15, [{\"a.qnssl.com/images/265818/Fntncr\"..., 4096}], 1) = 4096\nreadv(15, [{\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 1) = 4096\nreadv(15, [{\" {\\n font-family: \\\"Open Sans\"..., 4096}], 1) = 373\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14\npwritev(14, [{\"\\5\\0\\0\\0\\0\\0\\0\\0\\356\\254M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 4096}, {\"a.qnssl.com/images/265818/Fntncr\"..., 4096}, {\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 3, 0) = -1 ENOSPC (No space left on device)\ngettid() = 7\nwrite(4, \"2018/07/17 08:46:33 [crit] 7#7: \"..., 328) = 328\nclose(15) = 0\nunlink(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\") = 0\nwrite(5, \"{ \\\"time\\\": \\\"2018-07-17T08:46:33+0\"..., 382) = 382\nclose(14) = 0\nclose(11) = 0\n\n2.正常调用堆栈过程\n[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v\nstrace: Process 3904 attached\nepoll_wait(8, [{EPOLLIN, {u32=69025808, u64=140003117973520}}], 512, -1) = 1\naccept4(6, {sa_family=AF_INET, sin_port=htons(59360), sin_addr=inet_addr(\"10.130.0.4\")}, [16], SOCK_NONBLOCK) = 11\nepoll_ctl(8, EPOLL_CTL_ADD, 11, {EPOLLIN|EPOLLRDHUP|EPOLLET, {u32=69027248, u64=140003117974960}}) = 0\nepoll_wait(8, [{EPOLLIN, {u32=69027248, u64=140003117974960}}], 512, 60000) = 1\nrecvfrom(11, \"GET /?key=testxxxx HTTP/1.1\\r\\nUse\"..., 1024, 0, NULL, NULL) = 88\nepoll_ctl(8, EPOLL_CTL_MOD, 11, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027248, u64=140003117974960}}) = 0\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14\nfstat(14, {st_dev=makedev(253, 1), st_ino=655504, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:14:38.127407158, st_mtime=2018/07/17-16:14:38.127407158, st_ctime=2018/07/17-16:14:38.128407161}) = 0\npread64(14, \"\\5\\0\\0\\0\\0\\0\\0\\0s\\245M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 636, 0) = 636\ngetsockname(11, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")}, [16]) = 0\nsendto(12, \"\\210V\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nsendto(12, \"\\27\\1\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nepoll_wait(8, [{EPOLLOUT, {u32=69027248, u64=140003117974960}}, {EPOLLIN, {u32=69027728, u64=140003117975440}}], 512, 5000) = 2\nrecvfrom(12, \"\\210V\\201\\200\\0\\1\\0\\3\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 147\nrecvfrom(12, \"\\27\\1\\201\\200\\0\\1\\0\\1\\0\\1\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 168\nsocket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15\nioctl(15, FIONBIO, [1]) = 0\nepoll_ctl(8, EPOLL_CTL_ADD, 15, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027489, u64=140003117975201}}) = 0\nconnect(15, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"52.80.58.42\")}, 16) = -1 EINPROGRESS (Operation now in progress)\nrecvfrom(12, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)\nepoll_wait(8, [{EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 20000) = 1\ngetsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0\nwritev(15, [{\"GET /?key=testxxxx HTTP/1.0\\r\\nHos\"..., 219}], 1) = 219\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 60000) = 1\nrecvfrom(15, \"HTTP/1.1 200 OK\\r\\nContent-Type: t\"..., 3723, 0, NULL, NULL) = 3723\nclose(14) = 0\nreadv(15, [{\"a.qnssl.com/images/265818/Fntncr\"..., 4096}], 1) = 4096\nreadv(15, [{\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 1) = 4096\nreadv(15, [{\" {\\n font-family: \\\"Open Sans\"..., 4096}], 1) = 2565\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14\npwritev(14, [{\"\\5\\0\\0\\0\\0\\0\\0\\0(\\252M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 4096}, {\"a.qnssl.com/images/265818/Fntncr\"..., 4096}, {\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 3, 0) = 12288\nwritev(11, [{\"HTTP/1.1 200 OK\\r\\nServer: nginx/1\"..., 321}], 1) = 321\nsendfile(11, 14, [636] => [12288], 11652) = 11652\nepoll_wait(8, [{EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59955) = 1\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59953) = 1\nreadv(15, [{\"rc=\\\"//nzr2ybsda.qnssl.com/images\"..., 1531}, {\"lass=\\\"s-nav-item\\\" target=\\\"_self\\\"\"..., 4096}, {\"lign: left; font-size: 160%;\\\">\\302\\240\"..., 4096}, {\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096}], 4) = 10136\npwritev(14, [{\" {\\n font-family: \\\"Open Sans\"..., 4096}, {\"lass=\\\"s-nav-item\\\" target=\\\"_self\\\"\"..., 4096}, {\"lign: left; font-size: 160%;\\\">\\302\\240\"..., 4096}], 3, 12288) = 12288\nsendfile(11, 14, [12288] => [24576], 12288) = 12288\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59948) = 1\nreadv(15, [{\"olor-custom1\\\">\\347\\254\\254\\344\\270\\211\\346\\226\\271\\345\"..., 3683}, {\"container title-group-container\\\"\"..., 4096}, {\";cs=srgb&s=f71a6adc1e5953a52\"..., 4096}, {\")\\\" data-bg=\\\"//nzr2ybsda.qnssl.co\"..., 4096}], 4) = 15971\nreadv(15, [{\"\\230\\263\\345\\224\\257\\346\\231\\237\\\" title=\\\"\\346\\262\\210\\351\\230\\263\\345\\224\\257\\346\\231\\237\\345\\225\\206\"..., 4096}], 1) = 2853\npwritev(14, [{\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096}, {\"container title-group-container\\\"\"..., 4096}, {\";cs=srgb&s=f71a6adc1e5953a52\"..., 4096}, {\")\\\" data-bg=\\\"//nzr2ybsda.qnssl.co\"..., 4096}], 4, 24576) = 16384\nsendfile(11, 14, [24576] => [40960], 16384) = 16384\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59947) = 1\nreadv(15, [{\"\n\n<d\"..., 1243}, {\"\\232\\204\\344\\270\\232\\347\\273\\251\\344\\271\\237\\345\\234\\250\\344\\270\\215\\346\\226\\255\\346\\224\\200\\345\\215\\207\\343\\200\\202</d\"..., 4096}, {\"\", 4096}, {\"\", 4096}, {\"\", 4096}], 5) = 2937\npwritev(14, [{\"\\230\\263\\345\\224\\257\\346\\231\\237\\\" title=\\\"\\346\\262\\210\\351\\230\\263\\345\\224\\257\\346\\231\\237\\345\\225\\206\"..., 4096}, {\"\\232\\204\\344\\270\\232\\347\\273\\251\\344\\271\\237\\345\\234\\250\\344\\270\\215\\346\\226\\255\\346\\224\\200\\345\\215\\207\\343\\200\\202</d\"..., 1694}], 2, 40960) = 5790 sendfile(11, 14, [40960] => [46750], 5790) = 5790\nchmod(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", 0600) = 0\nrename(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", \"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\") = 0\nfstat(14, {st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739}) = 0\nclose(15) = 0\nwrite(5, \"{ \\\"time\\\": \\\"2018-07-17T08:34:43+0\"..., 386) = 386\nclose(14) = 0\nsetsockopt(11, SOL_TCP, TCP_NODELAY, [1], 4) = 0\nepoll_wait(8, [{EPOLLIN|EPOLLOUT|EPOLLRDHUP, {u32=69027248, u64=140003117974960}}], 512, 65000) = 1\nrecvfrom(11, \"\", 1024, 0, NULL, NULL) = 0\nclose(11) = 0\n```","source":"_posts/slb-502-debug.md","raw":"---\nlayout: post\ntitle: SLB 502报错Debug\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2018-07-20 02:07:06\ntags: [ linux, nginx, debug ]\ncategories:\n    - linux\n    - nginx\n    - debug\n# permalink: '/2018/07/20/slb-502-debug'\n---\n用户自定义站点502问题分析\n\n1. 现象：自定义域名用户反馈，打开网站返回502，如图\n\n![img](/images/img_5b5183b84d4dd.png)\n\n 根据response header判断，请求到达captain，怀疑captain返回的502页面。查看nginx proxy_pass得知后端的地址为bobcat.sxldns.com.\n\n```\nset $bobcat_backend \"bobcat.sxldns.com\";\nproxy_pass http://$bobcat_backend;\n```\n\n使用curl模拟请求，直接请求bobcat.sxldns.com,正常获得返回内容，具体针对每个服务器的IP的curl,不再单独列出。\n\n![img](/images/img_5b5184bfd49e3.png)\n\n通过上述返回基本判断，问题出在我们的代理层。具体查看代理层的nginx配置和系统资源利用率。\n\n查看当时系统的资源状态,查看到当时的系统磁盘空间使用完。查看nginx上有关于proxy的cache相关配置,nginx会cache的response的content的内容。怀疑nginx转发请求之后但是backend返回内容后，nginx cache到本地的时候无法写入disk导致会话结束，SLB的请求无返回包认为后端宕机抛出502。\n\n```\nproxy_cache_path /etc/nginx/china_cache levels=1:2 keys_zone=user_page_cache:100m max_size=20g inactive=60m use_temp_path=off;\n```\n\n具体DEBUG如下：\n\n 1. 获取container中的nginx worker进程的PID\n\n![img](/images/img_5b5184fb1c8d4.png)\n\n2. strace查看下系统调用具体信息\n\n![img](/images/img_5b518515e4fe7.png)\n\n通过上图strace追踪流程可以看到左侧是一个正常的请求的全部流程，右侧是故障状态的strace的系统调用全流程。\n\n通过对比左右两侧的系统调用流程可以看到，当nginx cache的时候写入`/etc/nginx/china_cache`目录时提示`no space`后续的writev()和sendfile()方法就没有调用，因此导致SLB无法获得返回包，抛出`badgateway`的错误.\n\nPS：\n\n1. 为什么单独请求返回头的时候正常返回？nginx返回请求头的时候并不会走proxy的cache流程。因此没有调用open()方法读写disk，正常返回，但是实际请求数据的时候cache写磁盘直接失败，后续直接退出。\n2. 上图的系统调用过程为了debug的方便使用了非折叠模式。因此一些no space的一些报错未显示出来可以。全部流程见附录。\n\n附录：\n\n```\n1.异常调用堆栈\n[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v\nstrace: Process 3904 attached\nepoll_wait(8, [{EPOLLIN, {u32=69025808, u64=140003117973520}}], 512, -1) = 1\naccept4(6, {sa_family=AF_INET, sin_port=htons(59464), sin_addr=inet_addr(\"10.130.0.4\")}, [16], SOCK_NONBLOCK) = 11\nepoll_ctl(8, EPOLL_CTL_ADD, 11, {EPOLLIN|EPOLLRDHUP|EPOLLET, {u32=69027249, u64=140003117974961}}) = 0\nepoll_wait(8, [{EPOLLIN, {u32=69027249, u64=140003117974961}}], 512, 60000) = 1\nrecvfrom(11, \"GET /?key=testxxxx HTTP/1.1\\r\\nUse\"..., 1024, 0, NULL, NULL) = 88\nepoll_ctl(8, EPOLL_CTL_MOD, 11, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027249, u64=140003117974961}}) = 0\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14\nfstat(14, {st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739}) = 0\npread64(14, \"\\5\\0\\0\\0\\0\\0\\0\\0(\\252M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 636, 0) = 636\ngetsockname(11, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")}, [16]) = 0\nsendto(13, \"nN\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nsendto(13, \"\\375\\215\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nepoll_wait(8, [{EPOLLOUT, {u32=69027249, u64=140003117974961}}, {EPOLLIN, {u32=69026288, u64=140003117974000}}], 512, 5000) = 2\nrecvfrom(13, \"nN\\201\\200\\0\\1\\0\\3\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 147\nrecvfrom(13, \"\\375\\215\\201\\200\\0\\1\\0\\1\\0\\1\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 168\nsocket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15\nioctl(15, FIONBIO, [1]) = 0\nepoll_ctl(8, EPOLL_CTL_ADD, 15, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027488, u64=140003117975200}}) = 0\nconnect(15, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"54.222.148.216\")}, 16) = -1 EINPROGRESS (Operation now in progress)\nrecvfrom(13, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)\nepoll_wait(8, [{EPOLLOUT, {u32=69027488, u64=140003117975200}}], 512, 20000) = 1\ngetsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0\nwritev(15, [{\"GET /?key=testxxxx HTTP/1.0\\r\\nHos\"..., 219}], 1) = 219\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027488, u64=140003117975200}}], 512, 60000) = 1\nrecvfrom(15, \"HTTP/1.1 200 OK\\r\\nContent-Type: t\"..., 3723, 0, NULL, NULL) = 3723\nclose(14) = 0\nreadv(15, [{\"a.qnssl.com/images/265818/Fntncr\"..., 4096}], 1) = 4096\nreadv(15, [{\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 1) = 4096\nreadv(15, [{\" {\\n font-family: \\\"Open Sans\"..., 4096}], 1) = 373\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14\npwritev(14, [{\"\\5\\0\\0\\0\\0\\0\\0\\0\\356\\254M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 4096}, {\"a.qnssl.com/images/265818/Fntncr\"..., 4096}, {\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 3, 0) = -1 ENOSPC (No space left on device)\ngettid() = 7\nwrite(4, \"2018/07/17 08:46:33 [crit] 7#7: \"..., 328) = 328\nclose(15) = 0\nunlink(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\") = 0\nwrite(5, \"{ \\\"time\\\": \\\"2018-07-17T08:46:33+0\"..., 382) = 382\nclose(14) = 0\nclose(11) = 0\n\n2.正常调用堆栈过程\n[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v\nstrace: Process 3904 attached\nepoll_wait(8, [{EPOLLIN, {u32=69025808, u64=140003117973520}}], 512, -1) = 1\naccept4(6, {sa_family=AF_INET, sin_port=htons(59360), sin_addr=inet_addr(\"10.130.0.4\")}, [16], SOCK_NONBLOCK) = 11\nepoll_ctl(8, EPOLL_CTL_ADD, 11, {EPOLLIN|EPOLLRDHUP|EPOLLET, {u32=69027248, u64=140003117974960}}) = 0\nepoll_wait(8, [{EPOLLIN, {u32=69027248, u64=140003117974960}}], 512, 60000) = 1\nrecvfrom(11, \"GET /?key=testxxxx HTTP/1.1\\r\\nUse\"..., 1024, 0, NULL, NULL) = 88\nepoll_ctl(8, EPOLL_CTL_MOD, 11, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027248, u64=140003117974960}}) = 0\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14\nfstat(14, {st_dev=makedev(253, 1), st_ino=655504, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:14:38.127407158, st_mtime=2018/07/17-16:14:38.127407158, st_ctime=2018/07/17-16:14:38.128407161}) = 0\npread64(14, \"\\5\\0\\0\\0\\0\\0\\0\\0s\\245M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 636, 0) = 636\ngetsockname(11, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")}, [16]) = 0\nsendto(12, \"\\210V\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nsendto(12, \"\\27\\1\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 35, 0, NULL, 0) = 35\nepoll_wait(8, [{EPOLLOUT, {u32=69027248, u64=140003117974960}}, {EPOLLIN, {u32=69027728, u64=140003117975440}}], 512, 5000) = 2\nrecvfrom(12, \"\\210V\\201\\200\\0\\1\\0\\3\\0\\0\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 147\nrecvfrom(12, \"\\27\\1\\201\\200\\0\\1\\0\\1\\0\\1\\0\\0\\6bobcat\\6sxldns\\3com\\0\\0\"..., 4096, 0, NULL, NULL) = 168\nsocket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15\nioctl(15, FIONBIO, [1]) = 0\nepoll_ctl(8, EPOLL_CTL_ADD, 15, {EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, {u32=69027489, u64=140003117975201}}) = 0\nconnect(15, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"52.80.58.42\")}, 16) = -1 EINPROGRESS (Operation now in progress)\nrecvfrom(12, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)\nepoll_wait(8, [{EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 20000) = 1\ngetsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0\nwritev(15, [{\"GET /?key=testxxxx HTTP/1.0\\r\\nHos\"..., 219}], 1) = 219\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 60000) = 1\nrecvfrom(15, \"HTTP/1.1 200 OK\\r\\nContent-Type: t\"..., 3723, 0, NULL, NULL) = 3723\nclose(14) = 0\nreadv(15, [{\"a.qnssl.com/images/265818/Fntncr\"..., 4096}], 1) = 4096\nreadv(15, [{\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 1) = 4096\nreadv(15, [{\" {\\n font-family: \\\"Open Sans\"..., 4096}], 1) = 2565\nopen(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14\npwritev(14, [{\"\\5\\0\\0\\0\\0\\0\\0\\0(\\252M[\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\"..., 4096}, {\"a.qnssl.com/images/265818/Fntncr\"..., 4096}, {\"w-card-price{color: #004aa0;}.s-\"..., 4096}], 3, 0) = 12288\nwritev(11, [{\"HTTP/1.1 200 OK\\r\\nServer: nginx/1\"..., 321}], 1) = 321\nsendfile(11, 14, [636] => [12288], 11652) = 11652\nepoll_wait(8, [{EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59955) = 1\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59953) = 1\nreadv(15, [{\"rc=\\\"//nzr2ybsda.qnssl.com/images\"..., 1531}, {\"lass=\\\"s-nav-item\\\" target=\\\"_self\\\"\"..., 4096}, {\"lign: left; font-size: 160%;\\\">\\302\\240\"..., 4096}, {\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096}], 4) = 10136\npwritev(14, [{\" {\\n font-family: \\\"Open Sans\"..., 4096}, {\"lass=\\\"s-nav-item\\\" target=\\\"_self\\\"\"..., 4096}, {\"lign: left; font-size: 160%;\\\">\\302\\240\"..., 4096}], 3, 12288) = 12288\nsendfile(11, 14, [12288] => [24576], 12288) = 12288\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59948) = 1\nreadv(15, [{\"olor-custom1\\\">\\347\\254\\254\\344\\270\\211\\346\\226\\271\\345\"..., 3683}, {\"container title-group-container\\\"\"..., 4096}, {\";cs=srgb&s=f71a6adc1e5953a52\"..., 4096}, {\")\\\" data-bg=\\\"//nzr2ybsda.qnssl.co\"..., 4096}], 4) = 15971\nreadv(15, [{\"\\230\\263\\345\\224\\257\\346\\231\\237\\\" title=\\\"\\346\\262\\210\\351\\230\\263\\345\\224\\257\\346\\231\\237\\345\\225\\206\"..., 4096}], 1) = 2853\npwritev(14, [{\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096}, {\"container title-group-container\\\"\"..., 4096}, {\";cs=srgb&s=f71a6adc1e5953a52\"..., 4096}, {\")\\\" data-bg=\\\"//nzr2ybsda.qnssl.co\"..., 4096}], 4, 24576) = 16384\nsendfile(11, 14, [24576] => [40960], 16384) = 16384\nepoll_wait(8, [{EPOLLIN|EPOLLOUT, {u32=69027489, u64=140003117975201}}], 512, 59947) = 1\nreadv(15, [{\"\n\n<d\"..., 1243}, {\"\\232\\204\\344\\270\\232\\347\\273\\251\\344\\271\\237\\345\\234\\250\\344\\270\\215\\346\\226\\255\\346\\224\\200\\345\\215\\207\\343\\200\\202</d\"..., 4096}, {\"\", 4096}, {\"\", 4096}, {\"\", 4096}], 5) = 2937\npwritev(14, [{\"\\230\\263\\345\\224\\257\\346\\231\\237\\\" title=\\\"\\346\\262\\210\\351\\230\\263\\345\\224\\257\\346\\231\\237\\345\\225\\206\"..., 4096}, {\"\\232\\204\\344\\270\\232\\347\\273\\251\\344\\271\\237\\345\\234\\250\\344\\270\\215\\346\\226\\255\\346\\224\\200\\345\\215\\207\\343\\200\\202</d\"..., 1694}], 2, 40960) = 5790 sendfile(11, 14, [40960] => [46750], 5790) = 5790\nchmod(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", 0600) = 0\nrename(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", \"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\") = 0\nfstat(14, {st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739}) = 0\nclose(15) = 0\nwrite(5, \"{ \\\"time\\\": \\\"2018-07-17T08:34:43+0\"..., 386) = 386\nclose(14) = 0\nsetsockopt(11, SOL_TCP, TCP_NODELAY, [1], 4) = 0\nepoll_wait(8, [{EPOLLIN|EPOLLOUT|EPOLLRDHUP, {u32=69027248, u64=140003117974960}}], 512, 65000) = 1\nrecvfrom(11, \"\", 1024, 0, NULL, NULL) = 0\nclose(11) = 0\n```","slug":"slb-502-debug","updated":"2019-10-19T08:11:47.770Z","photos":[],"link":"","_id":"ck42dyijt00k5u9ur6hi5ibfd","content":"<p>用户自定义站点502问题分析</p>\n<ol>\n<li>现象：自定义域名用户反馈，打开网站返回502，如图</li>\n</ol>\n<p><img src=\"/images/img_5b5183b84d4dd.png\" alt=\"img\"></p>\n<p> 根据response header判断，请求到达captain，怀疑captain返回的502页面。查看nginx proxy_pass得知后端的地址为bobcat.sxldns.com.</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">set</span> <span class=\"variable\">$bobcat_backend</span> <span class=\"string\">\"bobcat.sxldns.com\"</span>;</span><br><span class=\"line\"><span class=\"attribute\">proxy_pass</span> http://<span class=\"variable\">$bobcat_backend</span>;</span><br></pre></td></tr></table></figure>\n\n<p>使用curl模拟请求，直接请求bobcat.sxldns.com,正常获得返回内容，具体针对每个服务器的IP的curl,不再单独列出。</p>\n<p><img src=\"/images/img_5b5184bfd49e3.png\" alt=\"img\"></p>\n<p>通过上述返回基本判断，问题出在我们的代理层。具体查看代理层的nginx配置和系统资源利用率。</p>\n<p>查看当时系统的资源状态,查看到当时的系统磁盘空间使用完。查看nginx上有关于proxy的cache相关配置,nginx会cache的response的content的内容。怀疑nginx转发请求之后但是backend返回内容后，nginx cache到本地的时候无法写入disk导致会话结束，SLB的请求无返回包认为后端宕机抛出502。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_cache_path /etc/nginx/china_cache <span class=\"attribute\">levels</span>=1:2 <span class=\"attribute\">keys_zone</span>=user_page_cache:100m <span class=\"attribute\">max_size</span>=20g <span class=\"attribute\">inactive</span>=60m <span class=\"attribute\">use_temp_path</span>=off;</span><br></pre></td></tr></table></figure>\n\n<p>具体DEBUG如下：</p>\n<ol>\n<li>获取container中的nginx worker进程的PID</li>\n</ol>\n<p><img src=\"/images/img_5b5184fb1c8d4.png\" alt=\"img\"></p>\n<ol start=\"2\">\n<li>strace查看下系统调用具体信息</li>\n</ol>\n<p><img src=\"/images/img_5b518515e4fe7.png\" alt=\"img\"></p>\n<p>通过上图strace追踪流程可以看到左侧是一个正常的请求的全部流程，右侧是故障状态的strace的系统调用全流程。</p>\n<p>通过对比左右两侧的系统调用流程可以看到，当nginx cache的时候写入<code>/etc/nginx/china_cache</code>目录时提示<code>no space</code>后续的writev()和sendfile()方法就没有调用，因此导致SLB无法获得返回包，抛出<code>badgateway</code>的错误.</p>\n<p>PS：</p>\n<ol>\n<li>为什么单独请求返回头的时候正常返回？nginx返回请求头的时候并不会走proxy的cache流程。因此没有调用open()方法读写disk，正常返回，但是实际请求数据的时候cache写磁盘直接失败，后续直接退出。</li>\n<li>上图的系统调用过程为了debug的方便使用了非折叠模式。因此一些no space的一些报错未显示出来可以。全部流程见附录。</li>\n</ol>\n<p>附录：</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.异常调用堆栈</span><br><span class=\"line\">[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v</span><br><span class=\"line\">strace: Process 3904 attached</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69025808, u64=140003117973520&#125;&#125;], 512, -1) = 1</span><br><span class=\"line\">accept4(6, &#123;sa_family=AF_INET, sin_port=htons(59464), sin_addr=inet_addr(\"10.130.0.4\")&#125;, [16], SOCK_NONBLOCK) = 11</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 11, &#123;EPOLLIN|EPOLLRDHUP|EPOLLET, &#123;u32=69027249, u64=140003117974961&#125;&#125;) = 0</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69027249, u64=140003117974961&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(11, \"GET /?key=testxxxx HTTP/1.1<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Use\"..., 1024, 0, NULL, NULL) = 88</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_MOD, 11, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027249, u64=140003117974961&#125;&#125;) = 0</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14</span><br><span class=\"line\">fstat(14, &#123;st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739&#125;) = 0</span><br><span class=\"line\">pread64(14, \"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>(<span class=\"symbol\">\\2</span>52M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 636, 0) = 636</span><br><span class=\"line\">getsockname(11, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")&#125;, [16]) = 0</span><br><span class=\"line\">sendto(13, \"nN<span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">sendto(13, \"<span class=\"symbol\">\\3</span>75<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027249, u64=140003117974961&#125;&#125;, &#123;EPOLLIN, &#123;u32=69026288, u64=140003117974000&#125;&#125;], 512, 5000) = 2</span><br><span class=\"line\">recvfrom(13, \"nN<span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\3</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 147</span><br><span class=\"line\">recvfrom(13, \"<span class=\"symbol\">\\3</span>75<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 168</span><br><span class=\"line\">socket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15</span><br><span class=\"line\">ioctl(15, FIONBIO, [1]) = 0</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 15, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027488, u64=140003117975200&#125;&#125;) = 0</span><br><span class=\"line\">connect(15, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"54.222.148.216\")&#125;, 16) = -1 EINPROGRESS (Operation now in progress)</span><br><span class=\"line\">recvfrom(13, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027488, u64=140003117975200&#125;&#125;], 512, 20000) = 1</span><br><span class=\"line\">getsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0</span><br><span class=\"line\">writev(15, [&#123;\"GET /?key=testxxxx HTTP/1.0<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Hos\"..., 219&#125;], 1) = 219</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027488, u64=140003117975200&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(15, \"HTTP/1.1 200 OK<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Content-Type: t\"..., 3723, 0, NULL, NULL) = 3723</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">readv(15, [&#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\" &#123;<span class=\"symbol\">\\n</span> font-family: <span class=\"symbol\">\\\"</span>Open Sans\"..., 4096&#125;], 1) = 373</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14</span><br><span class=\"line\">pwritev(14, [&#123;\"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\3</span>56<span class=\"symbol\">\\2</span>54M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096&#125;, &#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;, &#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 3, 0) = -1 ENOSPC (No space left on device)</span><br><span class=\"line\">gettid() = 7</span><br><span class=\"line\">write(4, \"2018/07/17 08:46:33 [crit] 7#7: \"..., 328) = 328</span><br><span class=\"line\">close(15) = 0</span><br><span class=\"line\">unlink(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\") = 0</span><br><span class=\"line\">write(5, \"&#123; <span class=\"symbol\">\\\"</span>time<span class=\"symbol\">\\\"</span>: <span class=\"symbol\">\\\"</span>2018-07-17T08:46:33+0\"..., 382) = 382</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">close(11) = 0</span><br><span class=\"line\"></span><br><span class=\"line\">2.正常调用堆栈过程</span><br><span class=\"line\">[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v</span><br><span class=\"line\">strace: Process 3904 attached</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69025808, u64=140003117973520&#125;&#125;], 512, -1) = 1</span><br><span class=\"line\">accept4(6, &#123;sa_family=AF_INET, sin_port=htons(59360), sin_addr=inet_addr(\"10.130.0.4\")&#125;, [16], SOCK_NONBLOCK) = 11</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 11, &#123;EPOLLIN|EPOLLRDHUP|EPOLLET, &#123;u32=69027248, u64=140003117974960&#125;&#125;) = 0</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69027248, u64=140003117974960&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(11, \"GET /?key=testxxxx HTTP/1.1<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Use\"..., 1024, 0, NULL, NULL) = 88</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_MOD, 11, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027248, u64=140003117974960&#125;&#125;) = 0</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14</span><br><span class=\"line\">fstat(14, &#123;st_dev=makedev(253, 1), st_ino=655504, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:14:38.127407158, st_mtime=2018/07/17-16:14:38.127407158, st_ctime=2018/07/17-16:14:38.128407161&#125;) = 0</span><br><span class=\"line\">pread64(14, \"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>s<span class=\"symbol\">\\2</span>45M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 636, 0) = 636</span><br><span class=\"line\">getsockname(11, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")&#125;, [16]) = 0</span><br><span class=\"line\">sendto(12, \"<span class=\"symbol\">\\2</span>10V<span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">sendto(12, \"<span class=\"symbol\">\\2</span>7<span class=\"symbol\">\\1</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027248, u64=140003117974960&#125;&#125;, &#123;EPOLLIN, &#123;u32=69027728, u64=140003117975440&#125;&#125;], 512, 5000) = 2</span><br><span class=\"line\">recvfrom(12, \"<span class=\"symbol\">\\2</span>10V<span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\3</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 147</span><br><span class=\"line\">recvfrom(12, \"<span class=\"symbol\">\\2</span>7<span class=\"symbol\">\\1</span><span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 168</span><br><span class=\"line\">socket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15</span><br><span class=\"line\">ioctl(15, FIONBIO, [1]) = 0</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 15, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027489, u64=140003117975201&#125;&#125;) = 0</span><br><span class=\"line\">connect(15, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"52.80.58.42\")&#125;, 16) = -1 EINPROGRESS (Operation now in progress)</span><br><span class=\"line\">recvfrom(12, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 20000) = 1</span><br><span class=\"line\">getsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0</span><br><span class=\"line\">writev(15, [&#123;\"GET /?key=testxxxx HTTP/1.0<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Hos\"..., 219&#125;], 1) = 219</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(15, \"HTTP/1.1 200 OK<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Content-Type: t\"..., 3723, 0, NULL, NULL) = 3723</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">readv(15, [&#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\" &#123;<span class=\"symbol\">\\n</span> font-family: <span class=\"symbol\">\\\"</span>Open Sans\"..., 4096&#125;], 1) = 2565</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14</span><br><span class=\"line\">pwritev(14, [&#123;\"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>(<span class=\"symbol\">\\2</span>52M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096&#125;, &#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;, &#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 3, 0) = 12288</span><br><span class=\"line\">writev(11, [&#123;\"HTTP/1.1 200 OK<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Server: nginx/1\"..., 321&#125;], 1) = 321</span><br><span class=\"line\">sendfile(11, 14, [636] =&gt; [12288], 11652) = 11652</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59955) = 1</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59953) = 1</span><br><span class=\"line\">readv(15, [&#123;\"rc=<span class=\"symbol\">\\\"</span>//nzr2ybsda.qnssl.com/images\"..., 1531&#125;, &#123;\"lass=<span class=\"symbol\">\\\"</span>s-nav-item<span class=\"symbol\">\\\"</span> target=<span class=\"symbol\">\\\"</span>_self<span class=\"symbol\">\\\"</span>\"..., 4096&#125;, &#123;\"lign: left; font-size: 160<span class=\"variable\">%;\\\"&gt;\\302\\240\"..., 4096&#125;, &#123;\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096&#125;], 4) = 10136</span></span><br><span class=\"line\"><span class=\"variable\">pwritev(14, [&#123;\" &#123;\\n font-family: \\\"Open Sans\"..., 4096&#125;, &#123;\"lass=\\\"s-nav-item\\\" target=\\\"_self\\\"\"..., 4096&#125;, &#123;\"lign: left; font-size: 160%</span>;<span class=\"symbol\">\\\"</span>&gt;<span class=\"symbol\">\\3</span>02<span class=\"symbol\">\\2</span>40\"..., 4096&#125;], 3, 12288) = 12288</span><br><span class=\"line\">sendfile(11, 14, [12288] =&gt; [24576], 12288) = 12288</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59948) = 1</span><br><span class=\"line\">readv(15, [&#123;\"olor-custom1<span class=\"symbol\">\\\"</span>&gt;<span class=\"symbol\">\\3</span>47<span class=\"symbol\">\\2</span>54<span class=\"symbol\">\\2</span>54<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>11<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>26<span class=\"symbol\">\\2</span>71<span class=\"symbol\">\\3</span>45\"..., 3683&#125;, &#123;\"container title-group-container<span class=\"symbol\">\\\"</span>\"..., 4096&#125;, &#123;\";cs=srgb&amp;s=f71a6adc1e5953a52\"..., 4096&#125;, &#123;\")<span class=\"symbol\">\\\"</span> data-bg=<span class=\"symbol\">\\\"</span>//nzr2ybsda.qnssl.co\"..., 4096&#125;], 4) = 15971</span><br><span class=\"line\">readv(15, [&#123;\"<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\\"</span> title=<span class=\"symbol\">\\\"</span><span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>62<span class=\"symbol\">\\2</span>10<span class=\"symbol\">\\3</span>51<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>25<span class=\"symbol\">\\2</span>06\"..., 4096&#125;], 1) = 2853</span><br><span class=\"line\">pwritev(14, [&#123;\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096&#125;, &#123;\"container title-group-container<span class=\"symbol\">\\\"</span>\"..., 4096&#125;, &#123;\";cs=srgb&amp;s=f71a6adc1e5953a52\"..., 4096&#125;, &#123;\")<span class=\"symbol\">\\\"</span> data-bg=<span class=\"symbol\">\\\"</span>//nzr2ybsda.qnssl.co\"..., 4096&#125;], 4, 24576) = 16384</span><br><span class=\"line\">sendfile(11, 14, [24576] =&gt; [40960], 16384) = 16384</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59947) = 1</span><br><span class=\"line\">readv(15, [&#123;\"</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;d\"..., 1243&#125;, &#123;\"<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\2</span>04<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\3</span>47<span class=\"symbol\">\\2</span>73<span class=\"symbol\">\\2</span>51<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>71<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>34<span class=\"symbol\">\\2</span>50<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>26<span class=\"symbol\">\\2</span>55<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\2</span>07<span class=\"symbol\">\\3</span>43<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\2</span>02&lt;/d\"..., 4096&#125;, &#123;\"\", 4096&#125;, &#123;\"\", 4096&#125;, &#123;\"\", 4096&#125;], 5) = 2937</span><br><span class=\"line\">pwritev(14, [&#123;\"<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\\"</span> title=<span class=\"symbol\">\\\"</span><span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>62<span class=\"symbol\">\\2</span>10<span class=\"symbol\">\\3</span>51<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>25<span class=\"symbol\">\\2</span>06\"..., 4096&#125;, &#123;\"<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\2</span>04<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\3</span>47<span class=\"symbol\">\\2</span>73<span class=\"symbol\">\\2</span>51<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>71<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>34<span class=\"symbol\">\\2</span>50<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>26<span class=\"symbol\">\\2</span>55<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\2</span>07<span class=\"symbol\">\\3</span>43<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\2</span>02&lt;/d\"..., 1694&#125;], 2, 40960) = 5790 sendfile(11, 14, [40960] =&gt; [46750], 5790) = 5790</span><br><span class=\"line\">chmod(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", 0600) = 0</span><br><span class=\"line\">rename(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", \"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\") = 0</span><br><span class=\"line\">fstat(14, &#123;st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739&#125;) = 0</span><br><span class=\"line\">close(15) = 0</span><br><span class=\"line\">write(5, \"&#123; <span class=\"symbol\">\\\"</span>time<span class=\"symbol\">\\\"</span>: <span class=\"symbol\">\\\"</span>2018-07-17T08:34:43+0\"..., 386) = 386</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">setsockopt(11, SOL_TCP, TCP_NODELAY, [1], 4) = 0</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP, &#123;u32=69027248, u64=140003117974960&#125;&#125;], 512, 65000) = 1</span><br><span class=\"line\">recvfrom(11, \"\", 1024, 0, NULL, NULL) = 0</span><br><span class=\"line\">close(11) = 0</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>用户自定义站点502问题分析</p>\n<ol>\n<li>现象：自定义域名用户反馈，打开网站返回502，如图</li>\n</ol>\n<p><img src=\"/images/img_5b5183b84d4dd.png\" alt=\"img\"></p>\n<p> 根据response header判断，请求到达captain，怀疑captain返回的502页面。查看nginx proxy_pass得知后端的地址为bobcat.sxldns.com.</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">set</span> <span class=\"variable\">$bobcat_backend</span> <span class=\"string\">\"bobcat.sxldns.com\"</span>;</span><br><span class=\"line\"><span class=\"attribute\">proxy_pass</span> http://<span class=\"variable\">$bobcat_backend</span>;</span><br></pre></td></tr></table></figure>\n\n<p>使用curl模拟请求，直接请求bobcat.sxldns.com,正常获得返回内容，具体针对每个服务器的IP的curl,不再单独列出。</p>\n<p><img src=\"/images/img_5b5184bfd49e3.png\" alt=\"img\"></p>\n<p>通过上述返回基本判断，问题出在我们的代理层。具体查看代理层的nginx配置和系统资源利用率。</p>\n<p>查看当时系统的资源状态,查看到当时的系统磁盘空间使用完。查看nginx上有关于proxy的cache相关配置,nginx会cache的response的content的内容。怀疑nginx转发请求之后但是backend返回内容后，nginx cache到本地的时候无法写入disk导致会话结束，SLB的请求无返回包认为后端宕机抛出502。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_cache_path /etc/nginx/china_cache <span class=\"attribute\">levels</span>=1:2 <span class=\"attribute\">keys_zone</span>=user_page_cache:100m <span class=\"attribute\">max_size</span>=20g <span class=\"attribute\">inactive</span>=60m <span class=\"attribute\">use_temp_path</span>=off;</span><br></pre></td></tr></table></figure>\n\n<p>具体DEBUG如下：</p>\n<ol>\n<li>获取container中的nginx worker进程的PID</li>\n</ol>\n<p><img src=\"/images/img_5b5184fb1c8d4.png\" alt=\"img\"></p>\n<ol start=\"2\">\n<li>strace查看下系统调用具体信息</li>\n</ol>\n<p><img src=\"/images/img_5b518515e4fe7.png\" alt=\"img\"></p>\n<p>通过上图strace追踪流程可以看到左侧是一个正常的请求的全部流程，右侧是故障状态的strace的系统调用全流程。</p>\n<p>通过对比左右两侧的系统调用流程可以看到，当nginx cache的时候写入<code>/etc/nginx/china_cache</code>目录时提示<code>no space</code>后续的writev()和sendfile()方法就没有调用，因此导致SLB无法获得返回包，抛出<code>badgateway</code>的错误.</p>\n<p>PS：</p>\n<ol>\n<li>为什么单独请求返回头的时候正常返回？nginx返回请求头的时候并不会走proxy的cache流程。因此没有调用open()方法读写disk，正常返回，但是实际请求数据的时候cache写磁盘直接失败，后续直接退出。</li>\n<li>上图的系统调用过程为了debug的方便使用了非折叠模式。因此一些no space的一些报错未显示出来可以。全部流程见附录。</li>\n</ol>\n<p>附录：</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.异常调用堆栈</span><br><span class=\"line\">[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v</span><br><span class=\"line\">strace: Process 3904 attached</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69025808, u64=140003117973520&#125;&#125;], 512, -1) = 1</span><br><span class=\"line\">accept4(6, &#123;sa_family=AF_INET, sin_port=htons(59464), sin_addr=inet_addr(\"10.130.0.4\")&#125;, [16], SOCK_NONBLOCK) = 11</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 11, &#123;EPOLLIN|EPOLLRDHUP|EPOLLET, &#123;u32=69027249, u64=140003117974961&#125;&#125;) = 0</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69027249, u64=140003117974961&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(11, \"GET /?key=testxxxx HTTP/1.1<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Use\"..., 1024, 0, NULL, NULL) = 88</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_MOD, 11, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027249, u64=140003117974961&#125;&#125;) = 0</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14</span><br><span class=\"line\">fstat(14, &#123;st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739&#125;) = 0</span><br><span class=\"line\">pread64(14, \"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>(<span class=\"symbol\">\\2</span>52M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 636, 0) = 636</span><br><span class=\"line\">getsockname(11, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")&#125;, [16]) = 0</span><br><span class=\"line\">sendto(13, \"nN<span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">sendto(13, \"<span class=\"symbol\">\\3</span>75<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027249, u64=140003117974961&#125;&#125;, &#123;EPOLLIN, &#123;u32=69026288, u64=140003117974000&#125;&#125;], 512, 5000) = 2</span><br><span class=\"line\">recvfrom(13, \"nN<span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\3</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 147</span><br><span class=\"line\">recvfrom(13, \"<span class=\"symbol\">\\3</span>75<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 168</span><br><span class=\"line\">socket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15</span><br><span class=\"line\">ioctl(15, FIONBIO, [1]) = 0</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 15, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027488, u64=140003117975200&#125;&#125;) = 0</span><br><span class=\"line\">connect(15, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"54.222.148.216\")&#125;, 16) = -1 EINPROGRESS (Operation now in progress)</span><br><span class=\"line\">recvfrom(13, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027488, u64=140003117975200&#125;&#125;], 512, 20000) = 1</span><br><span class=\"line\">getsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0</span><br><span class=\"line\">writev(15, [&#123;\"GET /?key=testxxxx HTTP/1.0<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Hos\"..., 219&#125;], 1) = 219</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027488, u64=140003117975200&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(15, \"HTTP/1.1 200 OK<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Content-Type: t\"..., 3723, 0, NULL, NULL) = 3723</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">readv(15, [&#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\" &#123;<span class=\"symbol\">\\n</span> font-family: <span class=\"symbol\">\\\"</span>Open Sans\"..., 4096&#125;], 1) = 373</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14</span><br><span class=\"line\">pwritev(14, [&#123;\"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\3</span>56<span class=\"symbol\">\\2</span>54M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096&#125;, &#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;, &#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 3, 0) = -1 ENOSPC (No space left on device)</span><br><span class=\"line\">gettid() = 7</span><br><span class=\"line\">write(4, \"2018/07/17 08:46:33 [crit] 7#7: \"..., 328) = 328</span><br><span class=\"line\">close(15) = 0</span><br><span class=\"line\">unlink(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014052\") = 0</span><br><span class=\"line\">write(5, \"&#123; <span class=\"symbol\">\\\"</span>time<span class=\"symbol\">\\\"</span>: <span class=\"symbol\">\\\"</span>2018-07-17T08:46:33+0\"..., 382) = 382</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">close(11) = 0</span><br><span class=\"line\"></span><br><span class=\"line\">2.正常调用堆栈过程</span><br><span class=\"line\">[root@iZ2ze2mzhjk3ou1vsnkthzZ rpm]# strace -p 3904 -v</span><br><span class=\"line\">strace: Process 3904 attached</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69025808, u64=140003117973520&#125;&#125;], 512, -1) = 1</span><br><span class=\"line\">accept4(6, &#123;sa_family=AF_INET, sin_port=htons(59360), sin_addr=inet_addr(\"10.130.0.4\")&#125;, [16], SOCK_NONBLOCK) = 11</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 11, &#123;EPOLLIN|EPOLLRDHUP|EPOLLET, &#123;u32=69027248, u64=140003117974960&#125;&#125;) = 0</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN, &#123;u32=69027248, u64=140003117974960&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(11, \"GET /?key=testxxxx HTTP/1.1<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Use\"..., 1024, 0, NULL, NULL) = 88</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_MOD, 11, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027248, u64=140003117974960&#125;&#125;) = 0</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\", O_RDONLY|O_NONBLOCK) = 14</span><br><span class=\"line\">fstat(14, &#123;st_dev=makedev(253, 1), st_ino=655504, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:14:38.127407158, st_mtime=2018/07/17-16:14:38.127407158, st_ctime=2018/07/17-16:14:38.128407161&#125;) = 0</span><br><span class=\"line\">pread64(14, \"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>s<span class=\"symbol\">\\2</span>45M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 636, 0) = 636</span><br><span class=\"line\">getsockname(11, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"172.17.0.2\")&#125;, [16]) = 0</span><br><span class=\"line\">sendto(12, \"<span class=\"symbol\">\\2</span>10V<span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">sendto(12, \"<span class=\"symbol\">\\2</span>7<span class=\"symbol\">\\1</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 35, 0, NULL, 0) = 35</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027248, u64=140003117974960&#125;&#125;, &#123;EPOLLIN, &#123;u32=69027728, u64=140003117975440&#125;&#125;], 512, 5000) = 2</span><br><span class=\"line\">recvfrom(12, \"<span class=\"symbol\">\\2</span>10V<span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\3</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 147</span><br><span class=\"line\">recvfrom(12, \"<span class=\"symbol\">\\2</span>7<span class=\"symbol\">\\1</span><span class=\"symbol\">\\2</span>01<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\1</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\6</span>bobcat<span class=\"symbol\">\\6</span>sxldns<span class=\"symbol\">\\3</span>com<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096, 0, NULL, NULL) = 168</span><br><span class=\"line\">socket(AF_INET, SOCK_STREAM, IPPROTO_IP) = 15</span><br><span class=\"line\">ioctl(15, FIONBIO, [1]) = 0</span><br><span class=\"line\">epoll_ctl(8, EPOLL_CTL_ADD, 15, &#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP|EPOLLET, &#123;u32=69027489, u64=140003117975201&#125;&#125;) = 0</span><br><span class=\"line\">connect(15, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"52.80.58.42\")&#125;, 16) = -1 EINPROGRESS (Operation now in progress)</span><br><span class=\"line\">recvfrom(12, 0x7ffd1f603790, 4096, 0, NULL, NULL) = -1 EAGAIN (Resource temporarily unavailable)</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 20000) = 1</span><br><span class=\"line\">getsockopt(15, SOL_SOCKET, SO_ERROR, [0], [4]) = 0</span><br><span class=\"line\">writev(15, [&#123;\"GET /?key=testxxxx HTTP/1.0<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Hos\"..., 219&#125;], 1) = 219</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 60000) = 1</span><br><span class=\"line\">recvfrom(15, \"HTTP/1.1 200 OK<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Content-Type: t\"..., 3723, 0, NULL, NULL) = 3723</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">readv(15, [&#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 1) = 4096</span><br><span class=\"line\">readv(15, [&#123;\" &#123;<span class=\"symbol\">\\n</span> font-family: <span class=\"symbol\">\\\"</span>Open Sans\"..., 4096&#125;], 1) = 2565</span><br><span class=\"line\">open(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", O_RDWR|O_CREAT|O_EXCL, 0600) = 14</span><br><span class=\"line\">pwritev(14, [&#123;\"<span class=\"symbol\">\\5</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>(<span class=\"symbol\">\\2</span>52M[<span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span><span class=\"symbol\">\\0</span>\"..., 4096&#125;, &#123;\"a.qnssl.com/images/265818/Fntncr\"..., 4096&#125;, &#123;\"w-card-price&#123;color: #004aa0;&#125;.s-\"..., 4096&#125;], 3, 0) = 12288</span><br><span class=\"line\">writev(11, [&#123;\"HTTP/1.1 200 OK<span class=\"symbol\">\\r</span><span class=\"symbol\">\\n</span>Server: nginx/1\"..., 321&#125;], 1) = 321</span><br><span class=\"line\">sendfile(11, 14, [636] =&gt; [12288], 11652) = 11652</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59955) = 1</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59953) = 1</span><br><span class=\"line\">readv(15, [&#123;\"rc=<span class=\"symbol\">\\\"</span>//nzr2ybsda.qnssl.com/images\"..., 1531&#125;, &#123;\"lass=<span class=\"symbol\">\\\"</span>s-nav-item<span class=\"symbol\">\\\"</span> target=<span class=\"symbol\">\\\"</span>_self<span class=\"symbol\">\\\"</span>\"..., 4096&#125;, &#123;\"lign: left; font-size: 160<span class=\"variable\">%;\\\"&gt;\\302\\240\"..., 4096&#125;, &#123;\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096&#125;], 4) = 10136</span></span><br><span class=\"line\"><span class=\"variable\">pwritev(14, [&#123;\" &#123;\\n font-family: \\\"Open Sans\"..., 4096&#125;, &#123;\"lass=\\\"s-nav-item\\\" target=\\\"_self\\\"\"..., 4096&#125;, &#123;\"lign: left; font-size: 160%</span>;<span class=\"symbol\">\\\"</span>&gt;<span class=\"symbol\">\\3</span>02<span class=\"symbol\">\\2</span>40\"..., 4096&#125;], 3, 12288) = 12288</span><br><span class=\"line\">sendfile(11, 14, [12288] =&gt; [24576], 12288) = 12288</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59948) = 1</span><br><span class=\"line\">readv(15, [&#123;\"olor-custom1<span class=\"symbol\">\\\"</span>&gt;<span class=\"symbol\">\\3</span>47<span class=\"symbol\">\\2</span>54<span class=\"symbol\">\\2</span>54<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>11<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>26<span class=\"symbol\">\\2</span>71<span class=\"symbol\">\\3</span>45\"..., 3683&#125;, &#123;\"container title-group-container<span class=\"symbol\">\\\"</span>\"..., 4096&#125;, &#123;\";cs=srgb&amp;s=f71a6adc1e5953a52\"..., 4096&#125;, &#123;\")<span class=\"symbol\">\\\"</span> data-bg=<span class=\"symbol\">\\\"</span>//nzr2ybsda.qnssl.co\"..., 4096&#125;], 4) = 15971</span><br><span class=\"line\">readv(15, [&#123;\"<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\\"</span> title=<span class=\"symbol\">\\\"</span><span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>62<span class=\"symbol\">\\2</span>10<span class=\"symbol\">\\3</span>51<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>25<span class=\"symbol\">\\2</span>06\"..., 4096&#125;], 1) = 2853</span><br><span class=\"line\">pwritev(14, [&#123;\"OQswmpPvoA0.jpg?imageMogr2/strip\"..., 4096&#125;, &#123;\"container title-group-container<span class=\"symbol\">\\\"</span>\"..., 4096&#125;, &#123;\";cs=srgb&amp;s=f71a6adc1e5953a52\"..., 4096&#125;, &#123;\")<span class=\"symbol\">\\\"</span> data-bg=<span class=\"symbol\">\\\"</span>//nzr2ybsda.qnssl.co\"..., 4096&#125;], 4, 24576) = 16384</span><br><span class=\"line\">sendfile(11, 14, [24576] =&gt; [40960], 16384) = 16384</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT, &#123;u32=69027489, u64=140003117975201&#125;&#125;], 512, 59947) = 1</span><br><span class=\"line\">readv(15, [&#123;\"</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;d\"..., 1243&#125;, &#123;\"<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\2</span>04<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\3</span>47<span class=\"symbol\">\\2</span>73<span class=\"symbol\">\\2</span>51<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>71<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>34<span class=\"symbol\">\\2</span>50<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>26<span class=\"symbol\">\\2</span>55<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\2</span>07<span class=\"symbol\">\\3</span>43<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\2</span>02&lt;/d\"..., 4096&#125;, &#123;\"\", 4096&#125;, &#123;\"\", 4096&#125;, &#123;\"\", 4096&#125;], 5) = 2937</span><br><span class=\"line\">pwritev(14, [&#123;\"<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\\"</span> title=<span class=\"symbol\">\\\"</span><span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>62<span class=\"symbol\">\\2</span>10<span class=\"symbol\">\\3</span>51<span class=\"symbol\">\\2</span>30<span class=\"symbol\">\\2</span>63<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>57<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>31<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>25<span class=\"symbol\">\\2</span>06\"..., 4096&#125;, &#123;\"<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\2</span>04<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>32<span class=\"symbol\">\\3</span>47<span class=\"symbol\">\\2</span>73<span class=\"symbol\">\\2</span>51<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>71<span class=\"symbol\">\\2</span>37<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>34<span class=\"symbol\">\\2</span>50<span class=\"symbol\">\\3</span>44<span class=\"symbol\">\\2</span>70<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>26<span class=\"symbol\">\\2</span>55<span class=\"symbol\">\\3</span>46<span class=\"symbol\">\\2</span>24<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\3</span>45<span class=\"symbol\">\\2</span>15<span class=\"symbol\">\\2</span>07<span class=\"symbol\">\\3</span>43<span class=\"symbol\">\\2</span>00<span class=\"symbol\">\\2</span>02&lt;/d\"..., 1694&#125;], 2, 40960) = 5790 sendfile(11, 14, [40960] =&gt; [46750], 5790) = 5790</span><br><span class=\"line\">chmod(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", 0600) = 0</span><br><span class=\"line\">rename(\"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2.0000014051\", \"/etc/nginx/china_cache/2/7d/2ac65d1f9080e2baff45a4332f9017d2\") = 0</span><br><span class=\"line\">fstat(14, &#123;st_dev=makedev(253, 1), st_ino=655502, st_mode=S_IFREG|0600, st_nlink=1, st_uid=101, st_gid=101, st_blksize=4096, st_blocks=96, st_size=46750, st_atime=2018/07/17-16:34:43.967698739, st_mtime=2018/07/17-16:34:43.966698736, st_ctime=2018/07/17-16:34:43.967698739&#125;) = 0</span><br><span class=\"line\">close(15) = 0</span><br><span class=\"line\">write(5, \"&#123; <span class=\"symbol\">\\\"</span>time<span class=\"symbol\">\\\"</span>: <span class=\"symbol\">\\\"</span>2018-07-17T08:34:43+0\"..., 386) = 386</span><br><span class=\"line\">close(14) = 0</span><br><span class=\"line\">setsockopt(11, SOL_TCP, TCP_NODELAY, [1], 4) = 0</span><br><span class=\"line\">epoll_wait(8, [&#123;EPOLLIN|EPOLLOUT|EPOLLRDHUP, &#123;u32=69027248, u64=140003117974960&#125;&#125;], 512, 65000) = 1</span><br><span class=\"line\">recvfrom(11, \"\", 1024, 0, NULL, NULL) = 0</span><br><span class=\"line\">close(11) = 0</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"UDEV规则","published":1,"author":"xiemx","comments":1,"date":"2016-02-17T21:02:23.000Z","_content":"udev根据系统中的硬件设备的状态动态更新设备，通过对内核产生的设备名增加别名的方式来达到不管设备连接的顺序而维持一个统一的设备名的目的。udev可以根据设备的其他信息如总线（bus），生产商（vendor）等不同来区分不同的设备，并产生设备文件。udev是硬件平台无关的，属于user space的进程，它脱离驱动层的关联而建立在操作系统之上，遵循Linux Standard Base （LSB）设备命名方法，但也可以自定义命名\n\n### 工作流程图\n\n![image-20191018151450374](/images/image-20191018151450374.png)\n\n### 配置文件、rule参数\n\n```conf\n[mingxu.xie@cn-aux-cc udev]$ ll -R\n.:\ntotal 8\ndrwxr-xr-x 2 root root 4096 Jun  6 02:58 rules.d\n-rw-r--r-- 1 root root  218 Mar 19  2014 udev.conf\n\n./rules.d:\ntotal 32\n-rw-r--r-- 1 root root  640 Jul 31  2016 51-ec2-hvm-devices.rules\n-rw-r--r-- 1 root root  641 Jul 31  2016 52-ec2-vcpu.rules\n-rw-r--r-- 1 root root  740 Jul 31  2016 53-ec2-network-interfaces.rules\n-rw-r--r-- 1 root root  680 Jul 31  2016 60-cdrom_id.rules\n-rw-r--r-- 1 root root  326 Apr 26  2016 60-raw.rules\n-rw-r--r-- 1 root root 1343 Jul 31  2016 70-ec2-nvme-devices.rules\n-rw-r--r-- 1 root root 1424 Jul 31  2016 75-persistent-net-generator.rules\n-rwxr-xr-x 1 root root  343 Aug 21  2016 80-docker.rules\n\n# 主配置 /etc/udev/udev.conf \nudev_root=\"/dev/\"\nudev_rules=\"/etc/udev/rules.d/\"\n\n#rule规则的文件命名第一段为执行顺序，同rc脚本\n[mingxu.xie@cn-aux-cc udev]$ cat rules.d/53-ec2-network-interfaces.rules\n# Copyright (C) 2012 Amazon.com, Inc. or its affiliates.\n# All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n# You may not use this file except in compliance with the License.\n# A copy of the License is located at\n#\n#    http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\n# OF ANY KIND, either express or implied. See the License for the\n# specific language governing permissions and limitations under the\n# License.\n\nACTION==\"add\", SUBSYSTEM==\"net\", KERNEL==\"eth*\", IMPORT{program}=\"/bin/sleep 1\"\nSUBSYSTEM==\"net\", KERNEL==\"eth*\", RUN+=\"/etc/sysconfig/network-scripts/ec2net.hotplug\"\n```\n```conf\n#监听一个docker run -it --rm nginx bash容器启动的设备变化情况，如下\n[mingxu.xie@cn-aux-cc udev]$ udevadm monitor\nmonitor will print the received events for:\nUDEV - the event which udev sends out after rule processing\nKERNEL - the kernel uevent\n\nKERNEL[240932.229041] add      /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.229579] add      /devices/virtual/block/dm-8 (block)\nUDEV  [240932.229612] add      /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.229641] add      /devices/virtual/block/dm-8 (block)\nKERNEL[240932.248388] change   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.272904] change   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.425971] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.428073] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.456141] remove   /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.456261] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.456380] remove   /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.456419] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.469307] add      /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.469384] add      /devices/virtual/block/dm-8 (block)\nUDEV  [240932.469657] add      /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.469691] add      /devices/virtual/block/dm-8 (block)\nKERNEL[240932.488228] change   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.504203] change   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.636785] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.638755] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.676137] remove   /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.676245] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.676367] remove   /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.676420] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.683098] add      /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.683204] add      /devices/virtual/block/dm-8 (block)\nUDEV  [240932.683384] add      /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.683582] add      /devices/virtual/block/dm-8 (block)\nKERNEL[240932.696227] change   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.712517] change   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.793677] add      /devices/virtual/net/veth4d1712b (net)\nKERNEL[240932.793699] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)\nKERNEL[240932.793727] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)\nKERNEL[240932.793908] add      /devices/virtual/net/veth17f6e3e (net)\nKERNEL[240932.793930] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)\nKERNEL[240932.793942] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)\nUDEV  [240932.827598] add      /devices/virtual/net/veth4d1712b (net)\nUDEV  [240932.827843] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)\nUDEV  [240932.828121] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)\nKERNEL[240932.849171] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849196] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.849211] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849225] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849238] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849252] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.849269] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849436] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849455] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.849709] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.850033] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.850374] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.850527] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.852368] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.854849] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.854871] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855103] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855120] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855133] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855145] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855158] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855170] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855359] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855395] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855410] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855445] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855461] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855474] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855487] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855499] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855512] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856010] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856029] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856045] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.856077] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856092] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.856104] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856188] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857080] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857105] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857126] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857140] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.862157] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.862348] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.863008] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.863179] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.932564] add      /devices/virtual/net/veth17f6e3e (net)\nUDEV  [240932.932779] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)\nUDEV  [240932.932880] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)\nKERNEL[240932.960183] remove   /devices/virtual/net/veth4d1712b (net)\nUDEV  [240932.982851] remove   /devices/virtual/net/veth4d1712b (net)\nKERNEL[240933.089679] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240933.089933] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240933.150833] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240933.150863] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240933.151052] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240933.151130] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\n\n```","source":"_posts/udev.md","raw":"---\nlayout: post\ntitle: UDEV规则\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2016-02-18 05:02:23\ntags: [ udev, linux ]\ncategories:\n    - linux\n---\nudev根据系统中的硬件设备的状态动态更新设备，通过对内核产生的设备名增加别名的方式来达到不管设备连接的顺序而维持一个统一的设备名的目的。udev可以根据设备的其他信息如总线（bus），生产商（vendor）等不同来区分不同的设备，并产生设备文件。udev是硬件平台无关的，属于user space的进程，它脱离驱动层的关联而建立在操作系统之上，遵循Linux Standard Base （LSB）设备命名方法，但也可以自定义命名\n\n### 工作流程图\n\n![image-20191018151450374](/images/image-20191018151450374.png)\n\n### 配置文件、rule参数\n\n```conf\n[mingxu.xie@cn-aux-cc udev]$ ll -R\n.:\ntotal 8\ndrwxr-xr-x 2 root root 4096 Jun  6 02:58 rules.d\n-rw-r--r-- 1 root root  218 Mar 19  2014 udev.conf\n\n./rules.d:\ntotal 32\n-rw-r--r-- 1 root root  640 Jul 31  2016 51-ec2-hvm-devices.rules\n-rw-r--r-- 1 root root  641 Jul 31  2016 52-ec2-vcpu.rules\n-rw-r--r-- 1 root root  740 Jul 31  2016 53-ec2-network-interfaces.rules\n-rw-r--r-- 1 root root  680 Jul 31  2016 60-cdrom_id.rules\n-rw-r--r-- 1 root root  326 Apr 26  2016 60-raw.rules\n-rw-r--r-- 1 root root 1343 Jul 31  2016 70-ec2-nvme-devices.rules\n-rw-r--r-- 1 root root 1424 Jul 31  2016 75-persistent-net-generator.rules\n-rwxr-xr-x 1 root root  343 Aug 21  2016 80-docker.rules\n\n# 主配置 /etc/udev/udev.conf \nudev_root=\"/dev/\"\nudev_rules=\"/etc/udev/rules.d/\"\n\n#rule规则的文件命名第一段为执行顺序，同rc脚本\n[mingxu.xie@cn-aux-cc udev]$ cat rules.d/53-ec2-network-interfaces.rules\n# Copyright (C) 2012 Amazon.com, Inc. or its affiliates.\n# All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\").\n# You may not use this file except in compliance with the License.\n# A copy of the License is located at\n#\n#    http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\n# OF ANY KIND, either express or implied. See the License for the\n# specific language governing permissions and limitations under the\n# License.\n\nACTION==\"add\", SUBSYSTEM==\"net\", KERNEL==\"eth*\", IMPORT{program}=\"/bin/sleep 1\"\nSUBSYSTEM==\"net\", KERNEL==\"eth*\", RUN+=\"/etc/sysconfig/network-scripts/ec2net.hotplug\"\n```\n```conf\n#监听一个docker run -it --rm nginx bash容器启动的设备变化情况，如下\n[mingxu.xie@cn-aux-cc udev]$ udevadm monitor\nmonitor will print the received events for:\nUDEV - the event which udev sends out after rule processing\nKERNEL - the kernel uevent\n\nKERNEL[240932.229041] add      /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.229579] add      /devices/virtual/block/dm-8 (block)\nUDEV  [240932.229612] add      /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.229641] add      /devices/virtual/block/dm-8 (block)\nKERNEL[240932.248388] change   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.272904] change   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.425971] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.428073] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.456141] remove   /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.456261] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.456380] remove   /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.456419] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.469307] add      /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.469384] add      /devices/virtual/block/dm-8 (block)\nUDEV  [240932.469657] add      /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.469691] add      /devices/virtual/block/dm-8 (block)\nKERNEL[240932.488228] change   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.504203] change   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.636785] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.638755] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.676137] remove   /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.676245] remove   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.676367] remove   /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.676420] remove   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.683098] add      /devices/virtual/bdi/253:8 (bdi)\nKERNEL[240932.683204] add      /devices/virtual/block/dm-8 (block)\nUDEV  [240932.683384] add      /devices/virtual/bdi/253:8 (bdi)\nUDEV  [240932.683582] add      /devices/virtual/block/dm-8 (block)\nKERNEL[240932.696227] change   /devices/virtual/block/dm-8 (block)\nUDEV  [240932.712517] change   /devices/virtual/block/dm-8 (block)\nKERNEL[240932.793677] add      /devices/virtual/net/veth4d1712b (net)\nKERNEL[240932.793699] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)\nKERNEL[240932.793727] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)\nKERNEL[240932.793908] add      /devices/virtual/net/veth17f6e3e (net)\nKERNEL[240932.793930] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)\nKERNEL[240932.793942] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)\nUDEV  [240932.827598] add      /devices/virtual/net/veth4d1712b (net)\nUDEV  [240932.827843] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)\nUDEV  [240932.828121] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)\nKERNEL[240932.849171] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849196] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.849211] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849225] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849238] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849252] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.849269] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849436] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.849455] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.849709] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.850033] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.850374] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.850527] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.852368] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.854849] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.854871] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855103] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855120] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855133] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855145] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855158] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855170] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855359] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855395] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855410] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855445] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855461] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855474] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855487] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.855499] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.855512] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856010] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856029] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856045] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.856077] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856092] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.856104] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.856188] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857080] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857105] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857126] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.857140] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.862157] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.862348] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240932.863008] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.863179] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240932.932564] add      /devices/virtual/net/veth17f6e3e (net)\nUDEV  [240932.932779] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)\nUDEV  [240932.932880] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)\nKERNEL[240932.960183] remove   /devices/virtual/net/veth4d1712b (net)\nUDEV  [240932.982851] remove   /devices/virtual/net/veth4d1712b (net)\nKERNEL[240933.089679] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240933.089933] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240933.150833] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nKERNEL[240933.150863] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240933.151052] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\nUDEV  [240933.151130] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)\n\n```","slug":"udev","updated":"2019-10-21T06:57:42.910Z","photos":[],"link":"","_id":"ck42dyijv00k9u9urg9hjf2jh","content":"<p>udev根据系统中的硬件设备的状态动态更新设备，通过对内核产生的设备名增加别名的方式来达到不管设备连接的顺序而维持一个统一的设备名的目的。udev可以根据设备的其他信息如总线（bus），生产商（vendor）等不同来区分不同的设备，并产生设备文件。udev是硬件平台无关的，属于user space的进程，它脱离驱动层的关联而建立在操作系统之上，遵循Linux Standard Base （LSB）设备命名方法，但也可以自定义命名</p>\n<h3 id=\"工作流程图\"><a href=\"#工作流程图\" class=\"headerlink\" title=\"工作流程图\"></a>工作流程图</h3><p><img src=\"/images/image-20191018151450374.png\" alt=\"image-20191018151450374\"></p>\n<h3 id=\"配置文件、rule参数\"><a href=\"#配置文件、rule参数\" class=\"headerlink\" title=\"配置文件、rule参数\"></a>配置文件、rule参数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc udev]$ ll -R</span><br><span class=\"line\">.:</span><br><span class=\"line\">total 8</span><br><span class=\"line\">drwxr-xr-x 2 root root 4096 Jun  6 02:58 rules.d</span><br><span class=\"line\">-rw-r--r-- 1 root root  218 Mar 19  2014 udev.conf</span><br><span class=\"line\"></span><br><span class=\"line\">./rules.d:</span><br><span class=\"line\">total 32</span><br><span class=\"line\">-rw-r--r-- 1 root root  640 Jul 31  2016 51-ec2-hvm-devices.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  641 Jul 31  2016 52-ec2-vcpu.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  740 Jul 31  2016 53-ec2-network-interfaces.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  680 Jul 31  2016 60-cdrom_id.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  326 Apr 26  2016 60-raw.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root 1343 Jul 31  2016 70-ec2-nvme-devices.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root 1424 Jul 31  2016 75-persistent-net-generator.rules</span><br><span class=\"line\">-rwxr-xr-x 1 root root  343 Aug 21  2016 80-docker.rules</span><br><span class=\"line\"></span><br><span class=\"line\"># 主配置 /etc/udev/udev.conf </span><br><span class=\"line\">udev_root=&quot;/dev/&quot;</span><br><span class=\"line\">udev_rules=&quot;/etc/udev/rules.d/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">#rule规则的文件命名第一段为执行顺序，同rc脚本</span><br><span class=\"line\">[mingxu.xie@cn-aux-cc udev]$ cat rules.d/53-ec2-network-interfaces.rules</span><br><span class=\"line\"># Copyright (C) 2012 Amazon.com, Inc. or its affiliates.</span><br><span class=\"line\"># All Rights Reserved.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;).</span><br><span class=\"line\"># You may not use this file except in compliance with the License.</span><br><span class=\"line\"># A copy of the License is located at</span><br><span class=\"line\">#</span><br><span class=\"line\">#    http://aws.amazon.com/apache2.0/</span><br><span class=\"line\">#</span><br><span class=\"line\"># or in the &quot;license&quot; file accompanying this file. This file is</span><br><span class=\"line\"># distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS</span><br><span class=\"line\"># OF ANY KIND, either express or implied. See the License for the</span><br><span class=\"line\"># specific language governing permissions and limitations under the</span><br><span class=\"line\"># License.</span><br><span class=\"line\"></span><br><span class=\"line\">ACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth*&quot;, IMPORT&#123;program&#125;=&quot;/bin/sleep 1&quot;</span><br><span class=\"line\">SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth*&quot;, RUN+=&quot;/etc/sysconfig/network-scripts/ec2net.hotplug&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#监听一个docker run -it --rm nginx bash容器启动的设备变化情况，如下</span><br><span class=\"line\">[mingxu.xie@cn-aux-cc udev]$ udevadm monitor</span><br><span class=\"line\">monitor will print the received events for:</span><br><span class=\"line\">UDEV - the event which udev sends out after rule processing</span><br><span class=\"line\">KERNEL - the kernel uevent</span><br><span class=\"line\"></span><br><span class=\"line\">KERNEL[240932.229041] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.229579] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.229612] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.229641] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.248388] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.272904] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.425971] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.428073] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.456141] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.456261] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.456380] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.456419] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.469307] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.469384] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.469657] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.469691] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.488228] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.504203] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.636785] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.638755] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.676137] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.676245] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.676367] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.676420] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.683098] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.683204] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.683384] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.683582] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.696227] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.712517] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.793677] add      /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">KERNEL[240932.793699] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.793727] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.793908] add      /devices/virtual/net/veth17f6e3e (net)</span><br><span class=\"line\">KERNEL[240932.793930] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.793942] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)</span><br><span class=\"line\">UDEV  [240932.827598] add      /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">UDEV  [240932.827843] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)</span><br><span class=\"line\">UDEV  [240932.828121] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.849171] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849196] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.849211] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849225] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849238] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849252] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.849269] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849436] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849455] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.849709] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.850033] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.850374] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.850527] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.852368] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.854849] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.854871] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855103] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855120] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855133] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855145] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855158] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855170] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855359] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855395] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855410] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855445] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855461] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855474] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855487] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855499] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855512] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856010] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856029] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856045] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.856077] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856092] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.856104] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856188] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857080] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857105] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857126] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857140] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.862157] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.862348] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.863008] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.863179] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.932564] add      /devices/virtual/net/veth17f6e3e (net)</span><br><span class=\"line\">UDEV  [240932.932779] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)</span><br><span class=\"line\">UDEV  [240932.932880] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.960183] remove   /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">UDEV  [240932.982851] remove   /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">KERNEL[240933.089679] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240933.089933] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240933.150833] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240933.150863] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240933.151052] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240933.151130] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>udev根据系统中的硬件设备的状态动态更新设备，通过对内核产生的设备名增加别名的方式来达到不管设备连接的顺序而维持一个统一的设备名的目的。udev可以根据设备的其他信息如总线（bus），生产商（vendor）等不同来区分不同的设备，并产生设备文件。udev是硬件平台无关的，属于user space的进程，它脱离驱动层的关联而建立在操作系统之上，遵循Linux Standard Base （LSB）设备命名方法，但也可以自定义命名</p>\n<h3 id=\"工作流程图\"><a href=\"#工作流程图\" class=\"headerlink\" title=\"工作流程图\"></a>工作流程图</h3><p><img src=\"/images/image-20191018151450374.png\" alt=\"image-20191018151450374\"></p>\n<h3 id=\"配置文件、rule参数\"><a href=\"#配置文件、rule参数\" class=\"headerlink\" title=\"配置文件、rule参数\"></a>配置文件、rule参数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mingxu.xie@cn-aux-cc udev]$ ll -R</span><br><span class=\"line\">.:</span><br><span class=\"line\">total 8</span><br><span class=\"line\">drwxr-xr-x 2 root root 4096 Jun  6 02:58 rules.d</span><br><span class=\"line\">-rw-r--r-- 1 root root  218 Mar 19  2014 udev.conf</span><br><span class=\"line\"></span><br><span class=\"line\">./rules.d:</span><br><span class=\"line\">total 32</span><br><span class=\"line\">-rw-r--r-- 1 root root  640 Jul 31  2016 51-ec2-hvm-devices.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  641 Jul 31  2016 52-ec2-vcpu.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  740 Jul 31  2016 53-ec2-network-interfaces.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  680 Jul 31  2016 60-cdrom_id.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root  326 Apr 26  2016 60-raw.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root 1343 Jul 31  2016 70-ec2-nvme-devices.rules</span><br><span class=\"line\">-rw-r--r-- 1 root root 1424 Jul 31  2016 75-persistent-net-generator.rules</span><br><span class=\"line\">-rwxr-xr-x 1 root root  343 Aug 21  2016 80-docker.rules</span><br><span class=\"line\"></span><br><span class=\"line\"># 主配置 /etc/udev/udev.conf </span><br><span class=\"line\">udev_root=&quot;/dev/&quot;</span><br><span class=\"line\">udev_rules=&quot;/etc/udev/rules.d/&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">#rule规则的文件命名第一段为执行顺序，同rc脚本</span><br><span class=\"line\">[mingxu.xie@cn-aux-cc udev]$ cat rules.d/53-ec2-network-interfaces.rules</span><br><span class=\"line\"># Copyright (C) 2012 Amazon.com, Inc. or its affiliates.</span><br><span class=\"line\"># All Rights Reserved.</span><br><span class=\"line\">#</span><br><span class=\"line\"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;).</span><br><span class=\"line\"># You may not use this file except in compliance with the License.</span><br><span class=\"line\"># A copy of the License is located at</span><br><span class=\"line\">#</span><br><span class=\"line\">#    http://aws.amazon.com/apache2.0/</span><br><span class=\"line\">#</span><br><span class=\"line\"># or in the &quot;license&quot; file accompanying this file. This file is</span><br><span class=\"line\"># distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS</span><br><span class=\"line\"># OF ANY KIND, either express or implied. See the License for the</span><br><span class=\"line\"># specific language governing permissions and limitations under the</span><br><span class=\"line\"># License.</span><br><span class=\"line\"></span><br><span class=\"line\">ACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth*&quot;, IMPORT&#123;program&#125;=&quot;/bin/sleep 1&quot;</span><br><span class=\"line\">SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth*&quot;, RUN+=&quot;/etc/sysconfig/network-scripts/ec2net.hotplug&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#监听一个docker run -it --rm nginx bash容器启动的设备变化情况，如下</span><br><span class=\"line\">[mingxu.xie@cn-aux-cc udev]$ udevadm monitor</span><br><span class=\"line\">monitor will print the received events for:</span><br><span class=\"line\">UDEV - the event which udev sends out after rule processing</span><br><span class=\"line\">KERNEL - the kernel uevent</span><br><span class=\"line\"></span><br><span class=\"line\">KERNEL[240932.229041] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.229579] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.229612] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.229641] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.248388] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.272904] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.425971] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.428073] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.456141] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.456261] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.456380] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.456419] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.469307] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.469384] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.469657] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.469691] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.488228] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.504203] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.636785] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.638755] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.676137] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.676245] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.676367] remove   /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.676420] remove   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.683098] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">KERNEL[240932.683204] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.683384] add      /devices/virtual/bdi/253:8 (bdi)</span><br><span class=\"line\">UDEV  [240932.683582] add      /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.696227] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">UDEV  [240932.712517] change   /devices/virtual/block/dm-8 (block)</span><br><span class=\"line\">KERNEL[240932.793677] add      /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">KERNEL[240932.793699] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.793727] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.793908] add      /devices/virtual/net/veth17f6e3e (net)</span><br><span class=\"line\">KERNEL[240932.793930] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.793942] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)</span><br><span class=\"line\">UDEV  [240932.827598] add      /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">UDEV  [240932.827843] add      /devices/virtual/net/veth4d1712b/queues/rx-0 (queues)</span><br><span class=\"line\">UDEV  [240932.828121] add      /devices/virtual/net/veth4d1712b/queues/tx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.849171] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849196] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.849211] add      /kernel/slab/:A-0000200/cgroup/vm_area_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849225] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849238] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849252] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.849269] add      /kernel/slab/:A-0000064/cgroup/anon_vma_chain(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849436] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.849455] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.849709] add      /kernel/slab/proc_inode_cache/cgroup/proc_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.850033] add      /kernel/slab/anon_vma/cgroup/anon_vma(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.850374] add      /kernel/slab/shmem_inode_cache/cgroup/shmem_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.850527] add      /kernel/slab/:aA-0000192/cgroup/dentry(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.852368] add      /kernel/slab/:0000064/cgroup/kmalloc-64(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.854849] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.854871] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855103] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855120] add      /kernel/slab/:0000192/cgroup/kmalloc-192(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855133] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855145] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855158] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855170] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855359] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855395] add      /kernel/slab/:A-0002048/cgroup/mm_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855410] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855445] add      /kernel/slab/mqueue_inode_cache/cgroup/mqueue_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855461] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855474] add      /kernel/slab/:0001024/cgroup/kmalloc-1024(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855487] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.855499] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.855512] add      /kernel/slab/radix_tree_node/cgroup/radix_tree_node(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856010] add      /kernel/slab/sock_inode_cache/cgroup/sock_inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856029] add      /kernel/slab/:A-0009664/cgroup/task_struct(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856045] add      /kernel/slab/sighand_cache/cgroup/sighand_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.856077] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856092] add      /kernel/slab/:A-0000704/cgroup/files_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.856104] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.856188] add      /kernel/slab/:A-0000128/cgroup/pid(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857080] add      /kernel/slab/:A-0000192/cgroup/cred_jar(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857105] add      /kernel/slab/:A-0001024/cgroup/signal_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857126] add      /kernel/slab/:0000256/cgroup/kmalloc-256(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.857140] add      /kernel/slab/:0000512/cgroup/kmalloc-512(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.862157] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.862348] add      /kernel/slab/xfs_inode/cgroup/xfs_inode(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240932.863008] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.863179] add      /kernel/slab/inode_cache/cgroup/inode_cache(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240932.932564] add      /devices/virtual/net/veth17f6e3e (net)</span><br><span class=\"line\">UDEV  [240932.932779] add      /devices/virtual/net/veth17f6e3e/queues/rx-0 (queues)</span><br><span class=\"line\">UDEV  [240932.932880] add      /devices/virtual/net/veth17f6e3e/queues/tx-0 (queues)</span><br><span class=\"line\">KERNEL[240932.960183] remove   /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">UDEV  [240932.982851] remove   /devices/virtual/net/veth4d1712b (net)</span><br><span class=\"line\">KERNEL[240933.089679] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240933.089933] add      /kernel/slab/:0000008/cgroup/kmalloc-8(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240933.150833] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">KERNEL[240933.150863] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240933.151052] add      /kernel/slab/:0002048/cgroup/kmalloc-2048(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br><span class=\"line\">UDEV  [240933.151130] add      /kernel/slab/:0000096/cgroup/kmalloc-96(990:53b4e439f50242461e4c1246718e12d769d3bc4752c0f0ed5bc4f317bb4feb3d) (cgroup)</span><br></pre></td></tr></table></figure>"},{"layout":"post","title":"redis-trib.rb工具使用","published":1,"author":"xiemx","comments":1,"date":"2017-02-26T21:02:35.000Z","_content":"redis-trib.rb是redis官方推出的管理redis集群的工具，集成在redis的源码src目录下，是基于redis提供的集群命令封装成简单、便捷、实用的操作工具。redis-trib.rb是redis作者用ruby完成的。\n```\nroot@p-hsg-redis-1:~# redis-trib.rb\nUsage: redis-trib  \n\n  create          host1:port1 ... hostN:portN\n                  --replicas \n  check           host:port\n  info            host:port\n  fix             host:port\n                  --timeout \n  reshard         host:port\n                  --from \n                  --to \n                  --slots \n                  --yes\n                  --timeout \n                  --pipeline \n  rebalance       host:port\n                  --weight \n                  --auto-weights\n                  --use-empty-masters\n                  --timeout \n                  --simulate\n                  --pipeline \n                  --threshold \n  add-node        new_host:new_port existing_host:existing_port\n                  --slave\n                  --master-id \n  del-node        host:port node_id\n  set-timeout     host:port milliseconds\n  call            host:port command arg arg .. arg\n  import          host:port\n                  --from \n                  --copy\n                  --replace\n  help            (show this help)\n\nFor check, fix, reshard, del-node, set-timeout you can specify the host and port of any working node in the cluster.\n```\n可以看到redis-trib.rb具有以下功能：\n\n* create：创建集群\n* check：检查集群\n* info：查看集群信息\n* fix：修复集群\n* reshard：在线迁移slot\n* rebalance：平衡集群节点slot数量\n* add-node：将新节点加入集群\n* del-node：从集群中删除节点\n* set-timeout：设置集群节点间心跳连接的超时时间\n* call：在集群全部节点上执行命令\n* import：将外部redis数据导入集群\n\n### create创建集群\n\ncreate命令可选replicas参数，replicas表示需要有几个slave。最简单命令使用如下：\n```\n$ruby redis-trib.rb create 10.180.157.199:6379 10.180.157.200:6379 10.180.157.201:6379\n```\n有一个slave的创建命令如下：\n```\n$ruby redis-trib.rb create --replicas 1 10.180.157.199:6379 10.180.157.200:6379 10.180.157.201:6379 10.180.157.202:6379  10.180.157.205:6379  10.180.157.208:6379 \n```\n创建流程如下：\n```\n1、首先为每个节点创建ClusterNode对象，包括连接每个节点。检查每个节点是否为独立且db为空的节点。执行load_info方法导入节点信息。\n2、检查传入的master节点数量是否大于等于3个。只有大于3个节点才能组成集群。\n3、计算每个master需要分配的slot数量，以及给master分配slave。分配的算法大致如下：\n先把节点按照host分类，这样保证master节点能分配到更多的主机中。\n不停遍历遍历host列表，从每个host列表中弹出一个节点，放入interleaved数组。直到所有的节点都弹出为止。\nmaster节点列表就是interleaved前面的master数量的节点列表。保存在masters数组。\n计算每个master节点负责的slot数量，保存在slots_per_node对象，用slot总数除以master数量取整即可。\n遍历masters数组，每个master分配slots_per_node个slot，最后一个master，分配到16384个slot为止。\n接下来为master分配slave，分配算法会尽量保证master和slave节点不在同一台主机上。对于分配完指定slave数量的节点，还有多余的节点，也会为这些节点寻找master。分配算法会遍历两次masters数组。\n第一次遍历masters数组，在余下的节点列表找到replicas数量个slave。每个slave为第一个和master节点host不一样的节点，如果没有不一样的节点，则直接取出余下列表的第一个节点。\n第二次遍历是在对于节点数除以replicas不为整数，则会多余一部分节点。遍历的方式跟第一次一样，只是第一次会一次性给master分配replicas数量个slave，而第二次遍历只分配一个，直到余下的节点被全部分配出去。\n4、打印出分配信息，并提示用户输入“yes”确认是否按照打印出来的分配方式创建集群。\n5、输入“yes”后，会执行flush_nodes_config操作，该操作执行前面的分配结果，给master分配slot，让slave复制master，对于还没有握手（cluster meet）的节点，slave复制操作无法完成，不过没关系，flush_nodes_config操作出现异常会很快返回，后续握手后会再次执行flush_nodes_config。\n6、给每个节点分配epoch，遍历节点，每个节点分配的epoch比之前节点大1。\n7、节点间开始相互握手，握手的方式为节点列表的其他节点跟第一个节点握手。\n8、然后每隔1秒检查一次各个节点是否已经消息同步完成，使用ClusterNode的get_config_signature方法，检查的算法为获取每个节点cluster nodes信息，排序每个节点，组装成node_id1:slots|node_id2:slot2|...的字符串。如果每个节点获得字符串都相同，即认为握手成功。\n9、此后会再执行一次flush_nodes_config，这次主要是为了完成slave复制操作。\n10、最后再执行check_cluster，全面检查一次集群状态。包括和前面握手时检查一样的方式再检查一遍。确认没有迁移的节点。确认所有的slot都被分配出去了。\n11、至此完成了整个创建流程，返回[OK] All 16384 slots covered.。\n```\n\n### check检查集群\n\n检查集群状态的命令，没有其他参数，只需要选择一个集群中的一个节点即可。执行命令以及结果如下：\n```shell\n$ruby redis-trib.rb check 10.180.157.199:6379\n>>> Performing Cluster Check (using node 10.180.157.199:6379)\nM: b2506515b38e6bbd3034d540599f4cd2a5279ad1 10.180.157.199:6379\n   slots:0-5460 (5461 slots) master\n   1 additional replica(s)\nS: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 10.180.157.205:6379\n   slots: (0 slots) slave\n   replicates e36c46dbe90960f30861af00786d4c2064e63df2\nM: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   1 additional replica(s)\nS: 59fa6ee455f58a5076f6d6f83ddd74161fd7fb55 10.180.157.208:6379\n   slots: (0 slots) slave\n   replicates 15126fb33796c2c26ea89e553418946f7443d5a5\nS: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379\n   slots: (0 slots) slave\n   replicates b2506515b38e6bbd3034d540599f4cd2a5279ad1\nM: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   1 additional replica(s)\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered. \n\n```\n\n检查前会先执行load_cluster_info_from_node方法，把所有节点数据load进来。load的方式为通过自己的cluster nodes发现其他节点，然后连接每个节点，并加入nodes数组。接着生成节点间的复制关系。\n\nload完数据后，开始检查数据，检查的方式也是调用创建时候使用的check_cluster。\n\n### info查看集群信息\n\ninfo命令用来查看集群的信息。info命令也是先执行load_cluster_info_from_node获取完整的集群信息。然后显示ClusterNode的info_string结果，示例如下：\n```shell\n$ruby redis-trib.rb info 10.180.157.199:6379\n10.180.157.199:6379 (b2506515...) -> 0 keys | 5461 slots | 1 slaves.\n10.180.157.201:6379 (15126fb3...) -> 0 keys | 5461 slots | 1 slaves.\n10.180.157.200:6379 (e36c46db...) -> 0 keys | 5462 slots | 1 slaves.\n[OK] 0 keys in 3 masters.\n0.00 keys per slot on average.\n\n```\n### fix修复集群\n\nfix命令的流程跟check的流程很像，显示加载集群信息，然后在check_cluster方法内传入fix为\ntrue的变量，会在集群检查出现异常的时候执行修复流程。目前fix命令能修复两种异常，一种是集群有处于迁移中的slot的节点，一种是slot未完全分配的异常。\n\nfix_open_slot方法是修复集群有处于迁移中的slot的节点异常。\n```\n1、先检查该slot是谁负责的，迁移的源节点如果没完成迁移，owner还是该节点。没有owner的slot无法完成修复功能。\n2、遍历每个节点，获取哪些节点标记该slot为migrating状态，哪些节点标记该slot为importing状态。对于owner不是该节点，但是通过cluster countkeysinslot获取到该节点有数据的情况，也认为该节点为importing状态。\n3、如果migrating和importing状态的节点均只有1个，这可能是迁移过程中redis-trib.rb被中断所致，直接执行move_slot继续完成迁移任务即可。传递dots和fix为true。\n4、如果migrating为空，importing状态的节点大于0，那么这种情况执行回滚流程，将importing状态的节点数据通过move_slot方法导给slot的owner节点，传递dots、fix和cold为true。接着对importing的节点执行cluster stable命令恢复稳定。\n5、如果importing状态的节点为空，有一个migrating状态的节点，而且该节点在当前slot没有数据，那么可以直接把这个slot设为stable。\n6、如果migrating和importing状态不是上述情况，目前redis-trib.rb工具无法修复，上述的三种情况也已经覆盖了通过redis-trib.rb工具迁移出现异常的各个方面，人为的异常情形太多，很难考虑完全。\nfix_slots_coverage方法能修复slot未完全分配的异常。未分配的slot有三种状态。\n\n1、所有节点的该slot都没有数据。该状态redis-trib.rb工具直接采用随机分配的方式，并没有考虑节点的均衡。本人尝试对没有分配slot的集群通过fix修复集群，结果slot还是能比较平均的分配，但是没有了连续性，打印的slot信息非常离散。\n2、有一个节点的该slot有数据。该状态下，直接把slot分配给该slot有数据的节点。\n3、有多个节点的该slot有数据。此种情况目前还处于TODO状态，不过redis作者列出了修复的步骤，对这些节点，除第一个节点，执行cluster migrating命令，然后把这些节点的数据迁移到第一个节点上。清除migrating状态，然后把slot分配给第一个节点。\n```\n\n### reshard在线迁移slot\n\nreshard命令可以在线把集群的一些slot从集群原来slot负责节点迁移到新的节点，利用reshard可以完成集群的在线横向扩容和缩容。\n\nreshard的参数很多，下面来一一解释一番：\n```\nreshard         host:port\n                --from \n                --to \n                --slots \n                --yes\n                --timeout \n                --pipeline \nhost:port：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。\n--from ：需要从哪些源节点上迁移slot，可从多个源节点完成迁移，以逗号隔开，传递的是节点的node id，还可以直接传递--from all，这样源节点就是集群的所有节点，不传递该参数的话，则会在迁移过程中提示用户输入。\n--to ：slot需要迁移的目的节点的node id，目的节点只能填写一个，不传递该参数的话，则会在迁移过程中提示用户输入。\n--slots ：需要迁移的slot数量，不传递该参数的话，则会在迁移过程中提示用户输入。\n--yes：设置该参数，可以在打印执行reshard计划的时候，提示用户输入yes确认后再执行reshard。\n--timeout ：设置migrate命令的超时时间。\n--pipeline ：定义cluster getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。\n```\n迁移的流程如下：\n```\n1、通过load_cluster_info_from_node方法装载集群信息。\n2、执行check_cluster方法检查集群是否健康。只有健康的集群才能进行迁移。\n3、获取需要迁移的slot数量，用户没传递--slots参数，则提示用户手动输入。\n4、获取迁移的目的节点，用户没传递--to参数，则提示用户手动输入。此处会检查目的节点必须为master节点。\n5、获取迁移的源节点，用户没传递--from参数，则提示用户手动输入。此处会检查源节点必须为master节点。--from all的话，源节点就是除了目的节点外的全部master节点。这里为了保证集群slot分配的平均，建议传递--from all。\n6、执行compute_reshard_table方法，计算需要迁移的slot数量如何分配到源节点列表，采用的算法是按照节点负责slot数量由多到少排序，计算每个节点需要迁移的slot的方法为：迁移slot数量 * (该源节点负责的slot数量 / 源节点列表负责的slot总数)。这样算出的数量可能不为整数，这里代码用了下面的方式处理：\n\nn = (numslots/source_tot_slots*s.slots.length)\nif i == 0\n    n = n.ceil\nelse\n    n = n.floor\n这样的处理方式会带来最终分配的slot与请求迁移的slot数量不一致，这个BUG已经在github上提给作者，https://github.com/antirez/redis/issues/2990。\n\n7、打印出reshard计划，如果用户没传--yes，就提示用户确认计划。\n8、根据reshard计划，一个个slot的迁移到新节点上，迁移使用move_slot方法，该方法被很多命令使用，具体可以参见下面的迁移流程。move_slot方法传递dots为true和pipeline数量。\n9、至此，就完成了全部的迁移任务。\n```\n```\nruby redis-trib.rb reshard --from all --to 80b661ecca260c89e3d8ea9b98f77edaeef43dcd --slots 11 10.180.157.199:6379\n>>> Performing Cluster Check (using node 10.180.157.199:6379)\nS: b2506515b38e6bbd3034d540599f4cd2a5279ad1 10.180.157.199:6379\n   slots: (0 slots) slave\n   replicates 460b3a11e296aafb2615043291b7dd98274bb351\nS: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 10.180.157.205:6379\n   slots: (0 slots) slave\n   replicates e36c46dbe90960f30861af00786d4c2064e63df2\nM: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   1 additional replica(s)\nS: 59fa6ee455f58a5076f6d6f83ddd74161fd7fb55 10.180.157.208:6379\n   slots: (0 slots) slave\n   replicates 15126fb33796c2c26ea89e553418946f7443d5a5\nM: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379\n   slots:0-5460 (5461 slots) master\n   1 additional replica(s)\nM: 80b661ecca260c89e3d8ea9b98f77edaeef43dcd 10.180.157.200:6380\n   slots: (0 slots) master\n   0 additional replica(s)\nM: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   1 additional replica(s)\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n\nReady to move 11 slots.\n  Source nodes:\n    M: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   1 additional replica(s)\n    M: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379\n   slots:0-5460 (5461 slots) master\n   1 additional replica(s)\n    M: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   1 additional replica(s)\n  Destination node:\n    M: 80b661ecca260c89e3d8ea9b98f77edaeef43dcd 10.180.157.200:6380\n   slots: (0 slots) master\n   0 additional replica(s)\n  Resharding plan:\n    Moving slot 5461 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 5462 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 5463 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 5464 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 0 from 460b3a11e296aafb2615043291b7dd98274bb351\n    Moving slot 1 from 460b3a11e296aafb2615043291b7dd98274bb351\n    Moving slot 2 from 460b3a11e296aafb2615043291b7dd98274bb351\n    Moving slot 10923 from 15126fb33796c2c26ea89e553418946f7443d5a5\n    Moving slot 10924 from 15126fb33796c2c26ea89e553418946f7443d5a5\n    Moving slot 10925 from 15126fb33796c2c26ea89e553418946f7443d5a5\nDo you want to proceed with the proposed reshard plan (yes/no)? yes\nMoving slot 5461 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 5462 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 5463 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 5464 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 0 from 10.180.157.202:6379 to 10.180.157.200:6380:\nMoving slot 1 from 10.180.157.202:6379 to 10.180.157.200:6380:\nMoving slot 2 from 10.180.157.202:6379 to 10.180.157.200:6380:\nMoving slot 10923 from 10.180.157.201:6379 to 10.180.157.200:6380:\nMoving slot 10924 from 10.180.157.201:6379 to 10.180.157.200:6380:\nMoving slot 10925 from 10.180.157.201:6379 to 10.180.157.200:6380:\n```\n\nmove_slot方法可以在线将一个slot的全部数据从源节点迁移到目的节点，fix、reshard、rebalance都需要调用该方法迁移slot。\n\nmove_slot接受下面几个参数，\n```\n1、pipeline：设置一次从slot上获取多少个key。\n2、quiet：迁移会打印相关信息，设置quiet参数，可以不用打印这些信息。\n3、cold：设置cold，会忽略执行importing和migrating。\n4、dots：设置dots，则会在迁移过程打印迁移key数量的进度。\n5、update：设置update，则会更新内存信息，方便以后的操作。\n```\nmove_slot流程如下：\n```\n1、如果没有设置cold，则对源节点执行cluster importing命令，对目的节点执行migrating命令。fix的时候有可能importing和migrating已经执行过来，所以此种场景会设置cold。\n2、通过cluster getkeysinslot命令，一次性获取远节点迁移slot的pipeline个key的数量.\n3、对这些key执行migrate命令，将数据从源节点迁移到目的节点。\n4、如果migrate出现异常，在fix模式下，BUSYKEY的异常，会使用migrate的replace模式再执行一次，BUSYKEY表示目的节点已经有该key了，replace模式可以强制替换目的节点的key。不是fix模式就直接返回错误了。\n5、循环执行cluster getkeysinslot命令，直到返回的key数量为0，就退出循环。\n6、如果没有设置cold，对每个节点执行cluster setslot命令，把slot赋给目的节点。\n7、如果设置update，则修改源节点和目的节点的slot信息。\n8、至此完成了迁移slot的流程。\n```\n### rebalance平衡集群节点slot数量\n\nrebalance命令可以根据用户传入的参数平衡集群节点的slot数量，rebalance功能非常强大，可以传入的参数很多，以下是rebalance的参数列表和命令示例。\n```\nrebalance       host:port\n                --weight \n                --auto-weights\n                --threshold \n                --use-empty-masters\n                --timeout \n                --simulate\n                --pipeline \n\n$ruby redis-trib.rb rebalance --threshold 1 --weight b31e3a2e=5 --weight 60b8e3a1=5 --use-empty-masters  --simulate 10.180.157.199:6379\n下面也先一一解释下每个参数的用法：\n\nhost:port：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。\n--weight ：节点的权重，格式为node_id=weight，如果需要为多个节点分配权重的话，需要添加多个--weight 参数，即--weight b31e3a2e=5 --weight 60b8e3a1=5，node_id可为节点名称的前缀，只要保证前缀位数能唯一区分该节点即可。没有传递–weight的节点的权重默认为1。\n--auto-weights：这个参数在rebalance流程中并未用到。\n--threshold ：只有节点需要迁移的slot阈值超过threshold，才会执行rebalance操作。具体计算方法可以参考下面的rebalance命令流程的第四步。\n--use-empty-masters：rebalance是否考虑没有节点的master，默认没有分配slot节点的master是不参与rebalance的，设置--use-empty-masters可以让没有分配slot的节点参与rebalance。\n--timeout ：设置migrate命令的超时时间。\n--simulate：设置该参数，可以模拟rebalance操作，提示用户会迁移哪些slots，而不会真正执行迁移操作。\n--pipeline ：与reshar的pipeline参数一样，定义cluster getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。\n```\nrebalance命令流程如下：\n```\n1、load_cluster_info_from_node方法先加载集群信息。\n2、计算每个master的权重，根据参数--weight ，为每个设置的节点分配权重，没有设置的节点，则权重默认为1。\n3、根据每个master的权重，以及总的权重，计算自己期望被分配多少个slot。计算的方式为：总slot数量 * （自己的权重 / 总权重）。\n4、计算每个master期望分配的slot是否超过设置的阈值，即--threshold 设置的阈值或者默认的阈值。计算的方式为：先计算期望移动节点的阈值，算法为：(100-(100.0*expected/n.slots.length)).abs，如果计算出的阈值没有超出设置阈值，则不需要为该节点移动slot。只要有一个master的移动节点超过阈值，就会触发rebalance操作。\n5、如果触发了rebalance操作。那么就开始执行rebalance操作，先将每个节点当前分配的slots数量减去期望分配的slot数量获得balance值。将每个节点的balance从小到大进行排序获得sn数组。\n6、用dst_idx和src_idx游标分别从sn数组的头部和尾部开始遍历。目的是为了把尾部节点的slot分配给头部节点。\n\nsn数组保存的balance列表排序后，负数在前面，正数在后面。负数表示需要有slot迁入，所以使用dst_idx游标，正数表示需要有slot迁出，所以使用src_idx游标。理论上sn数组各节点的balance值加起来应该为0，不过由于在计算期望分配的slot的时候只是使用直接取整的方式，所以可能出现balance值之和不为0的情况，balance值之和不为0即为节点不平衡的slot数量，由于slot总数有16384个，不平衡数量相对于总数，基数很小，所以对rebalance流程影响不大。\n\n7、获取sn[dst_idx]和sn[src_idx]的balance值较小的那个值，该值即为需要从sn[src_idx]节点迁移到sn[dst_idx]节点的slot数量。\n8、接着通过compute_reshard_table方法计算源节点的slot如何分配到源节点列表。这个方法在reshard流程中也有调用，具体步骤可以参考reshard流程的第六步。\n9、如果是simulate模式，则只是打印出迁移列表。\n10、如果没有设置simulate，则执行move_slot操作，迁移slot，传入的参数为:quiet=>true,:dots=>false,:update=>true。\n11、迁移完成后更新sn[dst_idx]和sn[src_idx]的balance值。如果balance值为0后，游标向前进1。\n12、直到dst_idx到达src_idx游标，完成整个rebalance操作。\n```\n### add-node将新节点加入集群\n\nadd-node命令可以将新节点加入集群，节点可以为master，也可以为某个master节点的slave。\n```shell\nadd-node    new_host:new_port existing_host:existing_port\n          --slave\n          --master-id \nadd-node有两个可选参数：\n\n--slave：设置该参数，则新节点以slave的角色加入集群\n--master-id：这个参数需要设置了--slave才能生效，--master-id用来指定新节点的master节点。如果不设置该参数，则会随机为节点选择master节点。\n```\n可以看下add-node命令的执行示例：\n```\n$ruby redis-trib.rb add-node --slave --master-id dcb792b3e85726f012e83061bf237072dfc45f99 10.180.157.202:6379 10.180.157.199:6379\n>>> Adding node 10.180.157.202:6379 to cluster 10.180.157.199:6379\n>>> Performing Cluster Check (using node 10.180.157.199:6379)\nM: dcb792b3e85726f012e83061bf237072dfc45f99 10.180.157.199:6379\n   slots:0-5460 (5461 slots) master\n   0 additional replica(s)\nM: 464d740bf48953ebcf826f4113c86f9db3a9baf3 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   0 additional replica(s)\nM: befa7e17b4e5f239e519bc74bfef3264a40f96ae 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   0 additional replica(s)\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n>>> Send CLUSTER MEET to node 10.180.157.202:6379 to make it join the cluster.\nWaiting for the cluster to join.\n>>> Configure node as replica of 10.180.157.199:6379.\n[OK] New node added correctly.\n```\nadd-node流程如下：\n```\n1、通过load_cluster_info_from_node方法转载集群信息，check_cluster方法检查集群是否健康。\n2、如果设置了--slave，则需要为该节点寻找master节点。设置了--master-id，则以该节点作为新节点的master，如果没有设置--master-id，则调用get_master_with_least_replicas方法，寻找slave数量最少的master节点。如果slave数量一致，则选取load_cluster_info_from_node顺序发现的第一个节点。load_cluster_info_from_node顺序的第一个节点是add-node设置的existing_host:existing_port节点，后面的顺序根据在该节点执行cluster nodes返回的结果返回的节点顺序。\n3、连接新的节点并与集群第一个节点握手。\n4、如果没设置–slave就直接返回ok，设置了–slave，则需要等待确认新节点加入集群，然后执行cluster replicate命令复制master节点。\n5、至此，完成了全部的增加节点的流程。\n```\n### del-node从集群中删除节点\n\ndel-node可以把某个节点从集群中删除。del-node只能删除没有分配slot的节点。删除命令传递两个参数：\n```\nhost:port：从该节点获取集群信息。\nnode_id：需要删除的节点id。\n```\n\ndel-node执行结果示例如下：\n```\n$ruby redis-trib.rb del-node 10.180.157.199:6379 d5f6d1d17426bd564a6e309f32d0f5b96962fe53\n>>> Removing node d5f6d1d17426bd564a6e309f32d0f5b96962fe53 from cluster 10.180.157.199:6379\n>>> Sending CLUSTER FORGET messages to the cluster...\n>>> SHUTDOWN the node.\n```\n\ndel-node流程如下：\n```\n1、通过load_cluster_info_from_node方法转载集群信息。\n2、根据传入的node id获取节点，如果节点没找到，则直接提示错误并退出。\n3、如果节点分配的slot不为空，则直接提示错误并退出。\n4、遍历集群内的其他节点，执行cluster forget命令，从每个节点中去除该节点。如果删除的节点是master，而且它有slave的话，这些slave会去复制其他master，调用的方法是get_master_with_least_replicas，与add-node没设置--master-id寻找master的方法一样。\n5、然后关闭该节点。\n```\n### set-timeout设置集群节点间心跳连接的超时时间\n\nset-timeout用来设置集群节点间心跳连接的超时时间，单位是毫秒，不得小于100毫秒，因为100毫秒对于心跳时间来说太短了。该命令修改是节点配置参数cluster-node-timeout，默认是15000毫秒。通过该命令，可以给每个节点设置超时时间，设置的方式使用config set命令动态设置，然后执行config rewrite命令将配置持久化保存到硬盘。以下是示例：\n```\nruby redis-trib.rb set-timeout 10.180.157.199:6379 30000\n>>> Reconfiguring node timeout in every cluster node...\n*** New timeout set for 10.180.157.199:6379\n*** New timeout set for 10.180.157.205:6379\n*** New timeout set for 10.180.157.201:6379\n*** New timeout set for 10.180.157.200:6379\n*** New timeout set for 10.180.157.208:6379\n>>> New node timeout set. 5 OK, 0 ERR.\n```\n### call在集群全部节点上执行命令\n\ncall命令可以用来在集群的全部节点执行相同的命令。call命令也是需要通过集群的一个节点地址，连上整个集群，然后在集群的每个节点执行该命令。\n```\n$ruby redis-trib.rb call 10.180.157.199:6379 get key\n>>> Calling GET key\n10.180.157.199:6379: MOVED 12539 10.180.157.201:6379\n10.180.157.205:6379: MOVED 12539 10.180.157.201:6379\n10.180.157.201:6379:\n10.180.157.200:6379: MOVED 12539 10.180.157.201:6379\n10.180.157.208:6379: MOVED 12539 10.180.157.201:6379\n```\n### import将外部redis数据导入集群\n\nimport命令可以把外部的redis节点数据导入集群。导入的流程如下：\n```\n1、通过load_cluster_info_from_node方法转载集群信息，check_cluster方法检查集群是否健康。\n2、连接外部redis节点，如果外部节点开启了cluster_enabled，则提示错误。\n3、通过scan命令遍历外部节点，一次获取1000条数据。\n4、遍历这些key，计算出key对应的slot。\n5、执行migrate命令,源节点是外部节点,目的节点是集群slot对应的节点，如果设置了--copy参数，则传递copy参数，如果设置了--replace，则传递replace参数。\n6、不停执行scan命令，直到遍历完全部的key。\n7、至此完成整个迁移流程\n这中间如果出现异常，程序就会停止。没使用--copy模式，则可以重新执行import命令，使用--copy的话，最好清空新的集群再导入一次。\n```\nimport命令更适合离线的把外部redis数据导入，在线导入的话最好使用更专业的导入工具，以slave的方式连接redis节点去同步节点数据应该是更好的方式。","source":"_posts/redis-trib-rb.md","raw":"---\nlayout: post\ntitle: redis-trib.rb工具使用\npublished: true\nauthor: xiemx\ncomments: true\ndate: 2017-02-27 05:02:35\ntags: [ redis ]\ncategories:\n    - redis\n# permalink: '/2017/02/27/redis-trib-rb'\n---\nredis-trib.rb是redis官方推出的管理redis集群的工具，集成在redis的源码src目录下，是基于redis提供的集群命令封装成简单、便捷、实用的操作工具。redis-trib.rb是redis作者用ruby完成的。\n```\nroot@p-hsg-redis-1:~# redis-trib.rb\nUsage: redis-trib  \n\n  create          host1:port1 ... hostN:portN\n                  --replicas \n  check           host:port\n  info            host:port\n  fix             host:port\n                  --timeout \n  reshard         host:port\n                  --from \n                  --to \n                  --slots \n                  --yes\n                  --timeout \n                  --pipeline \n  rebalance       host:port\n                  --weight \n                  --auto-weights\n                  --use-empty-masters\n                  --timeout \n                  --simulate\n                  --pipeline \n                  --threshold \n  add-node        new_host:new_port existing_host:existing_port\n                  --slave\n                  --master-id \n  del-node        host:port node_id\n  set-timeout     host:port milliseconds\n  call            host:port command arg arg .. arg\n  import          host:port\n                  --from \n                  --copy\n                  --replace\n  help            (show this help)\n\nFor check, fix, reshard, del-node, set-timeout you can specify the host and port of any working node in the cluster.\n```\n可以看到redis-trib.rb具有以下功能：\n\n* create：创建集群\n* check：检查集群\n* info：查看集群信息\n* fix：修复集群\n* reshard：在线迁移slot\n* rebalance：平衡集群节点slot数量\n* add-node：将新节点加入集群\n* del-node：从集群中删除节点\n* set-timeout：设置集群节点间心跳连接的超时时间\n* call：在集群全部节点上执行命令\n* import：将外部redis数据导入集群\n\n### create创建集群\n\ncreate命令可选replicas参数，replicas表示需要有几个slave。最简单命令使用如下：\n```\n$ruby redis-trib.rb create 10.180.157.199:6379 10.180.157.200:6379 10.180.157.201:6379\n```\n有一个slave的创建命令如下：\n```\n$ruby redis-trib.rb create --replicas 1 10.180.157.199:6379 10.180.157.200:6379 10.180.157.201:6379 10.180.157.202:6379  10.180.157.205:6379  10.180.157.208:6379 \n```\n创建流程如下：\n```\n1、首先为每个节点创建ClusterNode对象，包括连接每个节点。检查每个节点是否为独立且db为空的节点。执行load_info方法导入节点信息。\n2、检查传入的master节点数量是否大于等于3个。只有大于3个节点才能组成集群。\n3、计算每个master需要分配的slot数量，以及给master分配slave。分配的算法大致如下：\n先把节点按照host分类，这样保证master节点能分配到更多的主机中。\n不停遍历遍历host列表，从每个host列表中弹出一个节点，放入interleaved数组。直到所有的节点都弹出为止。\nmaster节点列表就是interleaved前面的master数量的节点列表。保存在masters数组。\n计算每个master节点负责的slot数量，保存在slots_per_node对象，用slot总数除以master数量取整即可。\n遍历masters数组，每个master分配slots_per_node个slot，最后一个master，分配到16384个slot为止。\n接下来为master分配slave，分配算法会尽量保证master和slave节点不在同一台主机上。对于分配完指定slave数量的节点，还有多余的节点，也会为这些节点寻找master。分配算法会遍历两次masters数组。\n第一次遍历masters数组，在余下的节点列表找到replicas数量个slave。每个slave为第一个和master节点host不一样的节点，如果没有不一样的节点，则直接取出余下列表的第一个节点。\n第二次遍历是在对于节点数除以replicas不为整数，则会多余一部分节点。遍历的方式跟第一次一样，只是第一次会一次性给master分配replicas数量个slave，而第二次遍历只分配一个，直到余下的节点被全部分配出去。\n4、打印出分配信息，并提示用户输入“yes”确认是否按照打印出来的分配方式创建集群。\n5、输入“yes”后，会执行flush_nodes_config操作，该操作执行前面的分配结果，给master分配slot，让slave复制master，对于还没有握手（cluster meet）的节点，slave复制操作无法完成，不过没关系，flush_nodes_config操作出现异常会很快返回，后续握手后会再次执行flush_nodes_config。\n6、给每个节点分配epoch，遍历节点，每个节点分配的epoch比之前节点大1。\n7、节点间开始相互握手，握手的方式为节点列表的其他节点跟第一个节点握手。\n8、然后每隔1秒检查一次各个节点是否已经消息同步完成，使用ClusterNode的get_config_signature方法，检查的算法为获取每个节点cluster nodes信息，排序每个节点，组装成node_id1:slots|node_id2:slot2|...的字符串。如果每个节点获得字符串都相同，即认为握手成功。\n9、此后会再执行一次flush_nodes_config，这次主要是为了完成slave复制操作。\n10、最后再执行check_cluster，全面检查一次集群状态。包括和前面握手时检查一样的方式再检查一遍。确认没有迁移的节点。确认所有的slot都被分配出去了。\n11、至此完成了整个创建流程，返回[OK] All 16384 slots covered.。\n```\n\n### check检查集群\n\n检查集群状态的命令，没有其他参数，只需要选择一个集群中的一个节点即可。执行命令以及结果如下：\n```shell\n$ruby redis-trib.rb check 10.180.157.199:6379\n>>> Performing Cluster Check (using node 10.180.157.199:6379)\nM: b2506515b38e6bbd3034d540599f4cd2a5279ad1 10.180.157.199:6379\n   slots:0-5460 (5461 slots) master\n   1 additional replica(s)\nS: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 10.180.157.205:6379\n   slots: (0 slots) slave\n   replicates e36c46dbe90960f30861af00786d4c2064e63df2\nM: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   1 additional replica(s)\nS: 59fa6ee455f58a5076f6d6f83ddd74161fd7fb55 10.180.157.208:6379\n   slots: (0 slots) slave\n   replicates 15126fb33796c2c26ea89e553418946f7443d5a5\nS: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379\n   slots: (0 slots) slave\n   replicates b2506515b38e6bbd3034d540599f4cd2a5279ad1\nM: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   1 additional replica(s)\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered. \n\n```\n\n检查前会先执行load_cluster_info_from_node方法，把所有节点数据load进来。load的方式为通过自己的cluster nodes发现其他节点，然后连接每个节点，并加入nodes数组。接着生成节点间的复制关系。\n\nload完数据后，开始检查数据，检查的方式也是调用创建时候使用的check_cluster。\n\n### info查看集群信息\n\ninfo命令用来查看集群的信息。info命令也是先执行load_cluster_info_from_node获取完整的集群信息。然后显示ClusterNode的info_string结果，示例如下：\n```shell\n$ruby redis-trib.rb info 10.180.157.199:6379\n10.180.157.199:6379 (b2506515...) -> 0 keys | 5461 slots | 1 slaves.\n10.180.157.201:6379 (15126fb3...) -> 0 keys | 5461 slots | 1 slaves.\n10.180.157.200:6379 (e36c46db...) -> 0 keys | 5462 slots | 1 slaves.\n[OK] 0 keys in 3 masters.\n0.00 keys per slot on average.\n\n```\n### fix修复集群\n\nfix命令的流程跟check的流程很像，显示加载集群信息，然后在check_cluster方法内传入fix为\ntrue的变量，会在集群检查出现异常的时候执行修复流程。目前fix命令能修复两种异常，一种是集群有处于迁移中的slot的节点，一种是slot未完全分配的异常。\n\nfix_open_slot方法是修复集群有处于迁移中的slot的节点异常。\n```\n1、先检查该slot是谁负责的，迁移的源节点如果没完成迁移，owner还是该节点。没有owner的slot无法完成修复功能。\n2、遍历每个节点，获取哪些节点标记该slot为migrating状态，哪些节点标记该slot为importing状态。对于owner不是该节点，但是通过cluster countkeysinslot获取到该节点有数据的情况，也认为该节点为importing状态。\n3、如果migrating和importing状态的节点均只有1个，这可能是迁移过程中redis-trib.rb被中断所致，直接执行move_slot继续完成迁移任务即可。传递dots和fix为true。\n4、如果migrating为空，importing状态的节点大于0，那么这种情况执行回滚流程，将importing状态的节点数据通过move_slot方法导给slot的owner节点，传递dots、fix和cold为true。接着对importing的节点执行cluster stable命令恢复稳定。\n5、如果importing状态的节点为空，有一个migrating状态的节点，而且该节点在当前slot没有数据，那么可以直接把这个slot设为stable。\n6、如果migrating和importing状态不是上述情况，目前redis-trib.rb工具无法修复，上述的三种情况也已经覆盖了通过redis-trib.rb工具迁移出现异常的各个方面，人为的异常情形太多，很难考虑完全。\nfix_slots_coverage方法能修复slot未完全分配的异常。未分配的slot有三种状态。\n\n1、所有节点的该slot都没有数据。该状态redis-trib.rb工具直接采用随机分配的方式，并没有考虑节点的均衡。本人尝试对没有分配slot的集群通过fix修复集群，结果slot还是能比较平均的分配，但是没有了连续性，打印的slot信息非常离散。\n2、有一个节点的该slot有数据。该状态下，直接把slot分配给该slot有数据的节点。\n3、有多个节点的该slot有数据。此种情况目前还处于TODO状态，不过redis作者列出了修复的步骤，对这些节点，除第一个节点，执行cluster migrating命令，然后把这些节点的数据迁移到第一个节点上。清除migrating状态，然后把slot分配给第一个节点。\n```\n\n### reshard在线迁移slot\n\nreshard命令可以在线把集群的一些slot从集群原来slot负责节点迁移到新的节点，利用reshard可以完成集群的在线横向扩容和缩容。\n\nreshard的参数很多，下面来一一解释一番：\n```\nreshard         host:port\n                --from \n                --to \n                --slots \n                --yes\n                --timeout \n                --pipeline \nhost:port：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。\n--from ：需要从哪些源节点上迁移slot，可从多个源节点完成迁移，以逗号隔开，传递的是节点的node id，还可以直接传递--from all，这样源节点就是集群的所有节点，不传递该参数的话，则会在迁移过程中提示用户输入。\n--to ：slot需要迁移的目的节点的node id，目的节点只能填写一个，不传递该参数的话，则会在迁移过程中提示用户输入。\n--slots ：需要迁移的slot数量，不传递该参数的话，则会在迁移过程中提示用户输入。\n--yes：设置该参数，可以在打印执行reshard计划的时候，提示用户输入yes确认后再执行reshard。\n--timeout ：设置migrate命令的超时时间。\n--pipeline ：定义cluster getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。\n```\n迁移的流程如下：\n```\n1、通过load_cluster_info_from_node方法装载集群信息。\n2、执行check_cluster方法检查集群是否健康。只有健康的集群才能进行迁移。\n3、获取需要迁移的slot数量，用户没传递--slots参数，则提示用户手动输入。\n4、获取迁移的目的节点，用户没传递--to参数，则提示用户手动输入。此处会检查目的节点必须为master节点。\n5、获取迁移的源节点，用户没传递--from参数，则提示用户手动输入。此处会检查源节点必须为master节点。--from all的话，源节点就是除了目的节点外的全部master节点。这里为了保证集群slot分配的平均，建议传递--from all。\n6、执行compute_reshard_table方法，计算需要迁移的slot数量如何分配到源节点列表，采用的算法是按照节点负责slot数量由多到少排序，计算每个节点需要迁移的slot的方法为：迁移slot数量 * (该源节点负责的slot数量 / 源节点列表负责的slot总数)。这样算出的数量可能不为整数，这里代码用了下面的方式处理：\n\nn = (numslots/source_tot_slots*s.slots.length)\nif i == 0\n    n = n.ceil\nelse\n    n = n.floor\n这样的处理方式会带来最终分配的slot与请求迁移的slot数量不一致，这个BUG已经在github上提给作者，https://github.com/antirez/redis/issues/2990。\n\n7、打印出reshard计划，如果用户没传--yes，就提示用户确认计划。\n8、根据reshard计划，一个个slot的迁移到新节点上，迁移使用move_slot方法，该方法被很多命令使用，具体可以参见下面的迁移流程。move_slot方法传递dots为true和pipeline数量。\n9、至此，就完成了全部的迁移任务。\n```\n```\nruby redis-trib.rb reshard --from all --to 80b661ecca260c89e3d8ea9b98f77edaeef43dcd --slots 11 10.180.157.199:6379\n>>> Performing Cluster Check (using node 10.180.157.199:6379)\nS: b2506515b38e6bbd3034d540599f4cd2a5279ad1 10.180.157.199:6379\n   slots: (0 slots) slave\n   replicates 460b3a11e296aafb2615043291b7dd98274bb351\nS: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 10.180.157.205:6379\n   slots: (0 slots) slave\n   replicates e36c46dbe90960f30861af00786d4c2064e63df2\nM: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   1 additional replica(s)\nS: 59fa6ee455f58a5076f6d6f83ddd74161fd7fb55 10.180.157.208:6379\n   slots: (0 slots) slave\n   replicates 15126fb33796c2c26ea89e553418946f7443d5a5\nM: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379\n   slots:0-5460 (5461 slots) master\n   1 additional replica(s)\nM: 80b661ecca260c89e3d8ea9b98f77edaeef43dcd 10.180.157.200:6380\n   slots: (0 slots) master\n   0 additional replica(s)\nM: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   1 additional replica(s)\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n\nReady to move 11 slots.\n  Source nodes:\n    M: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   1 additional replica(s)\n    M: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379\n   slots:0-5460 (5461 slots) master\n   1 additional replica(s)\n    M: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   1 additional replica(s)\n  Destination node:\n    M: 80b661ecca260c89e3d8ea9b98f77edaeef43dcd 10.180.157.200:6380\n   slots: (0 slots) master\n   0 additional replica(s)\n  Resharding plan:\n    Moving slot 5461 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 5462 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 5463 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 5464 from e36c46dbe90960f30861af00786d4c2064e63df2\n    Moving slot 0 from 460b3a11e296aafb2615043291b7dd98274bb351\n    Moving slot 1 from 460b3a11e296aafb2615043291b7dd98274bb351\n    Moving slot 2 from 460b3a11e296aafb2615043291b7dd98274bb351\n    Moving slot 10923 from 15126fb33796c2c26ea89e553418946f7443d5a5\n    Moving slot 10924 from 15126fb33796c2c26ea89e553418946f7443d5a5\n    Moving slot 10925 from 15126fb33796c2c26ea89e553418946f7443d5a5\nDo you want to proceed with the proposed reshard plan (yes/no)? yes\nMoving slot 5461 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 5462 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 5463 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 5464 from 10.180.157.200:6379 to 10.180.157.200:6380:\nMoving slot 0 from 10.180.157.202:6379 to 10.180.157.200:6380:\nMoving slot 1 from 10.180.157.202:6379 to 10.180.157.200:6380:\nMoving slot 2 from 10.180.157.202:6379 to 10.180.157.200:6380:\nMoving slot 10923 from 10.180.157.201:6379 to 10.180.157.200:6380:\nMoving slot 10924 from 10.180.157.201:6379 to 10.180.157.200:6380:\nMoving slot 10925 from 10.180.157.201:6379 to 10.180.157.200:6380:\n```\n\nmove_slot方法可以在线将一个slot的全部数据从源节点迁移到目的节点，fix、reshard、rebalance都需要调用该方法迁移slot。\n\nmove_slot接受下面几个参数，\n```\n1、pipeline：设置一次从slot上获取多少个key。\n2、quiet：迁移会打印相关信息，设置quiet参数，可以不用打印这些信息。\n3、cold：设置cold，会忽略执行importing和migrating。\n4、dots：设置dots，则会在迁移过程打印迁移key数量的进度。\n5、update：设置update，则会更新内存信息，方便以后的操作。\n```\nmove_slot流程如下：\n```\n1、如果没有设置cold，则对源节点执行cluster importing命令，对目的节点执行migrating命令。fix的时候有可能importing和migrating已经执行过来，所以此种场景会设置cold。\n2、通过cluster getkeysinslot命令，一次性获取远节点迁移slot的pipeline个key的数量.\n3、对这些key执行migrate命令，将数据从源节点迁移到目的节点。\n4、如果migrate出现异常，在fix模式下，BUSYKEY的异常，会使用migrate的replace模式再执行一次，BUSYKEY表示目的节点已经有该key了，replace模式可以强制替换目的节点的key。不是fix模式就直接返回错误了。\n5、循环执行cluster getkeysinslot命令，直到返回的key数量为0，就退出循环。\n6、如果没有设置cold，对每个节点执行cluster setslot命令，把slot赋给目的节点。\n7、如果设置update，则修改源节点和目的节点的slot信息。\n8、至此完成了迁移slot的流程。\n```\n### rebalance平衡集群节点slot数量\n\nrebalance命令可以根据用户传入的参数平衡集群节点的slot数量，rebalance功能非常强大，可以传入的参数很多，以下是rebalance的参数列表和命令示例。\n```\nrebalance       host:port\n                --weight \n                --auto-weights\n                --threshold \n                --use-empty-masters\n                --timeout \n                --simulate\n                --pipeline \n\n$ruby redis-trib.rb rebalance --threshold 1 --weight b31e3a2e=5 --weight 60b8e3a1=5 --use-empty-masters  --simulate 10.180.157.199:6379\n下面也先一一解释下每个参数的用法：\n\nhost:port：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。\n--weight ：节点的权重，格式为node_id=weight，如果需要为多个节点分配权重的话，需要添加多个--weight 参数，即--weight b31e3a2e=5 --weight 60b8e3a1=5，node_id可为节点名称的前缀，只要保证前缀位数能唯一区分该节点即可。没有传递–weight的节点的权重默认为1。\n--auto-weights：这个参数在rebalance流程中并未用到。\n--threshold ：只有节点需要迁移的slot阈值超过threshold，才会执行rebalance操作。具体计算方法可以参考下面的rebalance命令流程的第四步。\n--use-empty-masters：rebalance是否考虑没有节点的master，默认没有分配slot节点的master是不参与rebalance的，设置--use-empty-masters可以让没有分配slot的节点参与rebalance。\n--timeout ：设置migrate命令的超时时间。\n--simulate：设置该参数，可以模拟rebalance操作，提示用户会迁移哪些slots，而不会真正执行迁移操作。\n--pipeline ：与reshar的pipeline参数一样，定义cluster getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。\n```\nrebalance命令流程如下：\n```\n1、load_cluster_info_from_node方法先加载集群信息。\n2、计算每个master的权重，根据参数--weight ，为每个设置的节点分配权重，没有设置的节点，则权重默认为1。\n3、根据每个master的权重，以及总的权重，计算自己期望被分配多少个slot。计算的方式为：总slot数量 * （自己的权重 / 总权重）。\n4、计算每个master期望分配的slot是否超过设置的阈值，即--threshold 设置的阈值或者默认的阈值。计算的方式为：先计算期望移动节点的阈值，算法为：(100-(100.0*expected/n.slots.length)).abs，如果计算出的阈值没有超出设置阈值，则不需要为该节点移动slot。只要有一个master的移动节点超过阈值，就会触发rebalance操作。\n5、如果触发了rebalance操作。那么就开始执行rebalance操作，先将每个节点当前分配的slots数量减去期望分配的slot数量获得balance值。将每个节点的balance从小到大进行排序获得sn数组。\n6、用dst_idx和src_idx游标分别从sn数组的头部和尾部开始遍历。目的是为了把尾部节点的slot分配给头部节点。\n\nsn数组保存的balance列表排序后，负数在前面，正数在后面。负数表示需要有slot迁入，所以使用dst_idx游标，正数表示需要有slot迁出，所以使用src_idx游标。理论上sn数组各节点的balance值加起来应该为0，不过由于在计算期望分配的slot的时候只是使用直接取整的方式，所以可能出现balance值之和不为0的情况，balance值之和不为0即为节点不平衡的slot数量，由于slot总数有16384个，不平衡数量相对于总数，基数很小，所以对rebalance流程影响不大。\n\n7、获取sn[dst_idx]和sn[src_idx]的balance值较小的那个值，该值即为需要从sn[src_idx]节点迁移到sn[dst_idx]节点的slot数量。\n8、接着通过compute_reshard_table方法计算源节点的slot如何分配到源节点列表。这个方法在reshard流程中也有调用，具体步骤可以参考reshard流程的第六步。\n9、如果是simulate模式，则只是打印出迁移列表。\n10、如果没有设置simulate，则执行move_slot操作，迁移slot，传入的参数为:quiet=>true,:dots=>false,:update=>true。\n11、迁移完成后更新sn[dst_idx]和sn[src_idx]的balance值。如果balance值为0后，游标向前进1。\n12、直到dst_idx到达src_idx游标，完成整个rebalance操作。\n```\n### add-node将新节点加入集群\n\nadd-node命令可以将新节点加入集群，节点可以为master，也可以为某个master节点的slave。\n```shell\nadd-node    new_host:new_port existing_host:existing_port\n          --slave\n          --master-id \nadd-node有两个可选参数：\n\n--slave：设置该参数，则新节点以slave的角色加入集群\n--master-id：这个参数需要设置了--slave才能生效，--master-id用来指定新节点的master节点。如果不设置该参数，则会随机为节点选择master节点。\n```\n可以看下add-node命令的执行示例：\n```\n$ruby redis-trib.rb add-node --slave --master-id dcb792b3e85726f012e83061bf237072dfc45f99 10.180.157.202:6379 10.180.157.199:6379\n>>> Adding node 10.180.157.202:6379 to cluster 10.180.157.199:6379\n>>> Performing Cluster Check (using node 10.180.157.199:6379)\nM: dcb792b3e85726f012e83061bf237072dfc45f99 10.180.157.199:6379\n   slots:0-5460 (5461 slots) master\n   0 additional replica(s)\nM: 464d740bf48953ebcf826f4113c86f9db3a9baf3 10.180.157.201:6379\n   slots:10923-16383 (5461 slots) master\n   0 additional replica(s)\nM: befa7e17b4e5f239e519bc74bfef3264a40f96ae 10.180.157.200:6379\n   slots:5461-10922 (5462 slots) master\n   0 additional replica(s)\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n>>> Send CLUSTER MEET to node 10.180.157.202:6379 to make it join the cluster.\nWaiting for the cluster to join.\n>>> Configure node as replica of 10.180.157.199:6379.\n[OK] New node added correctly.\n```\nadd-node流程如下：\n```\n1、通过load_cluster_info_from_node方法转载集群信息，check_cluster方法检查集群是否健康。\n2、如果设置了--slave，则需要为该节点寻找master节点。设置了--master-id，则以该节点作为新节点的master，如果没有设置--master-id，则调用get_master_with_least_replicas方法，寻找slave数量最少的master节点。如果slave数量一致，则选取load_cluster_info_from_node顺序发现的第一个节点。load_cluster_info_from_node顺序的第一个节点是add-node设置的existing_host:existing_port节点，后面的顺序根据在该节点执行cluster nodes返回的结果返回的节点顺序。\n3、连接新的节点并与集群第一个节点握手。\n4、如果没设置–slave就直接返回ok，设置了–slave，则需要等待确认新节点加入集群，然后执行cluster replicate命令复制master节点。\n5、至此，完成了全部的增加节点的流程。\n```\n### del-node从集群中删除节点\n\ndel-node可以把某个节点从集群中删除。del-node只能删除没有分配slot的节点。删除命令传递两个参数：\n```\nhost:port：从该节点获取集群信息。\nnode_id：需要删除的节点id。\n```\n\ndel-node执行结果示例如下：\n```\n$ruby redis-trib.rb del-node 10.180.157.199:6379 d5f6d1d17426bd564a6e309f32d0f5b96962fe53\n>>> Removing node d5f6d1d17426bd564a6e309f32d0f5b96962fe53 from cluster 10.180.157.199:6379\n>>> Sending CLUSTER FORGET messages to the cluster...\n>>> SHUTDOWN the node.\n```\n\ndel-node流程如下：\n```\n1、通过load_cluster_info_from_node方法转载集群信息。\n2、根据传入的node id获取节点，如果节点没找到，则直接提示错误并退出。\n3、如果节点分配的slot不为空，则直接提示错误并退出。\n4、遍历集群内的其他节点，执行cluster forget命令，从每个节点中去除该节点。如果删除的节点是master，而且它有slave的话，这些slave会去复制其他master，调用的方法是get_master_with_least_replicas，与add-node没设置--master-id寻找master的方法一样。\n5、然后关闭该节点。\n```\n### set-timeout设置集群节点间心跳连接的超时时间\n\nset-timeout用来设置集群节点间心跳连接的超时时间，单位是毫秒，不得小于100毫秒，因为100毫秒对于心跳时间来说太短了。该命令修改是节点配置参数cluster-node-timeout，默认是15000毫秒。通过该命令，可以给每个节点设置超时时间，设置的方式使用config set命令动态设置，然后执行config rewrite命令将配置持久化保存到硬盘。以下是示例：\n```\nruby redis-trib.rb set-timeout 10.180.157.199:6379 30000\n>>> Reconfiguring node timeout in every cluster node...\n*** New timeout set for 10.180.157.199:6379\n*** New timeout set for 10.180.157.205:6379\n*** New timeout set for 10.180.157.201:6379\n*** New timeout set for 10.180.157.200:6379\n*** New timeout set for 10.180.157.208:6379\n>>> New node timeout set. 5 OK, 0 ERR.\n```\n### call在集群全部节点上执行命令\n\ncall命令可以用来在集群的全部节点执行相同的命令。call命令也是需要通过集群的一个节点地址，连上整个集群，然后在集群的每个节点执行该命令。\n```\n$ruby redis-trib.rb call 10.180.157.199:6379 get key\n>>> Calling GET key\n10.180.157.199:6379: MOVED 12539 10.180.157.201:6379\n10.180.157.205:6379: MOVED 12539 10.180.157.201:6379\n10.180.157.201:6379:\n10.180.157.200:6379: MOVED 12539 10.180.157.201:6379\n10.180.157.208:6379: MOVED 12539 10.180.157.201:6379\n```\n### import将外部redis数据导入集群\n\nimport命令可以把外部的redis节点数据导入集群。导入的流程如下：\n```\n1、通过load_cluster_info_from_node方法转载集群信息，check_cluster方法检查集群是否健康。\n2、连接外部redis节点，如果外部节点开启了cluster_enabled，则提示错误。\n3、通过scan命令遍历外部节点，一次获取1000条数据。\n4、遍历这些key，计算出key对应的slot。\n5、执行migrate命令,源节点是外部节点,目的节点是集群slot对应的节点，如果设置了--copy参数，则传递copy参数，如果设置了--replace，则传递replace参数。\n6、不停执行scan命令，直到遍历完全部的key。\n7、至此完成整个迁移流程\n这中间如果出现异常，程序就会停止。没使用--copy模式，则可以重新执行import命令，使用--copy的话，最好清空新的集群再导入一次。\n```\nimport命令更适合离线的把外部redis数据导入，在线导入的话最好使用更专业的导入工具，以slave的方式连接redis节点去同步节点数据应该是更好的方式。","slug":"redis-trib-rb","updated":"2019-10-21T06:57:42.989Z","photos":[],"link":"","_id":"ck42dyikn00ktu9ur29eb64p9","content":"<p>redis-trib.rb是redis官方推出的管理redis集群的工具，集成在redis的源码src目录下，是基于redis提供的集群命令封装成简单、便捷、实用的操作工具。redis-trib.rb是redis作者用ruby完成的。</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">root@</span><span class=\"string\">p-hsg-</span><span class=\"string\">redis-1:</span>~<span class=\"comment\"># redis-trib.rb</span></span><br><span class=\"line\"><span class=\"string\">Usage:</span> <span class=\"string\">redis-trib </span> </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">create </span>         <span class=\"string\">host1:port1 </span>... <span class=\"string\">hostN:portN</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--replicas</span> </span><br><span class=\"line\">  <span class=\"string\">check </span>          <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">info </span>           <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">fix </span>            <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--timeout</span> </span><br><span class=\"line\">  <span class=\"string\">reshard </span>        <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--from</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--to</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--slots</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--yes</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--timeout</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--pipeline</span> </span><br><span class=\"line\">  <span class=\"string\">rebalance </span>      <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--weight</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--auto-weights</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--use-empty-masters</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--timeout</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--simulate</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--pipeline</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--threshold</span> </span><br><span class=\"line\">  <span class=\"string\">add-node </span>       <span class=\"string\">new_host:new_port </span><span class=\"string\">existing_host:existing_port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--slave</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--master-id</span> </span><br><span class=\"line\">  <span class=\"string\">del-node </span>       <span class=\"string\">host:port </span><span class=\"string\">node_id</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"built_in\">set-timeout</span>     <span class=\"string\">host:port </span><span class=\"string\">milliseconds</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">call </span>           <span class=\"string\">host:port </span><span class=\"string\">command </span><span class=\"string\">arg </span><span class=\"string\">arg </span>.. <span class=\"string\">arg</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">import </span>         <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--from</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--copy</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--replace</span></span><br><span class=\"line\"><span class=\"built_in\"></span>  <span class=\"string\">help </span>           (<span class=\"string\">show </span><span class=\"string\">this </span><span class=\"string\">help)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">For </span><span class=\"string\">check,</span> <span class=\"string\">fix,</span> <span class=\"string\">reshard,</span> <span class=\"string\">del-node,</span> <span class=\"built_in\">set-timeout</span> <span class=\"string\">you </span><span class=\"string\">can </span><span class=\"string\">specify </span><span class=\"string\">the </span><span class=\"string\">host </span><span class=\"string\">and </span><span class=\"string\">port </span><span class=\"string\">of </span><span class=\"string\">any </span><span class=\"string\">working </span><span class=\"string\">node </span><span class=\"string\">in </span><span class=\"string\">the </span><span class=\"string\">cluster.</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到redis-trib.rb具有以下功能：</p>\n<ul>\n<li>create：创建集群</li>\n<li>check：检查集群</li>\n<li>info：查看集群信息</li>\n<li>fix：修复集群</li>\n<li>reshard：在线迁移slot</li>\n<li>rebalance：平衡集群节点slot数量</li>\n<li>add-node：将新节点加入集群</li>\n<li>del-node：从集群中删除节点</li>\n<li>set-timeout：设置集群节点间心跳连接的超时时间</li>\n<li>call：在集群全部节点上执行命令</li>\n<li>import：将外部redis数据导入集群</li>\n</ul>\n<h3 id=\"create创建集群\"><a href=\"#create创建集群\" class=\"headerlink\" title=\"create创建集群\"></a>create创建集群</h3><p>create命令可选replicas参数，replicas表示需要有几个slave。最简单命令使用如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb create <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<p>有一个slave的创建命令如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb create --replicas <span class=\"number\">1</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span>  <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span>  <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<p>创建流程如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、首先为每个节点创建ClusterNode对象，包括连接每个节点。检查每个节点是否为独立且db为空的节点。执行load_<span class=\"literal\">inf</span>o方法导入节点信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、检查传入的<span class=\"literal\">master</span>节点数量是否大于等于<span class=\"number\">3</span>个。只有大于<span class=\"number\">3</span>个节点才能组成集群。</span><br><span class=\"line\"><span class=\"number\">3</span>、计算每个<span class=\"literal\">master</span>需要分配的slot数量，以及给<span class=\"literal\">master</span>分配<span class=\"literal\">slave</span>。分配的算法大致如下：</span><br><span class=\"line\">先把节点按照host分类，这样保证<span class=\"literal\">master</span>节点能分配到更多的主机中。</span><br><span class=\"line\">不停遍历遍历host列表，从每个host列表中弹出一个节点，放入interleaved数组。直到所有的节点都弹出为止。</span><br><span class=\"line\"><span class=\"literal\">master</span>节点列表就是interleaved前面的<span class=\"literal\">master</span>数量的节点列表。保存在masters数组。</span><br><span class=\"line\">计算每个<span class=\"literal\">master</span>节点负责的slot数量，保存在slots_per_node对象，用slot总数除以<span class=\"literal\">master</span>数量取整即可。</span><br><span class=\"line\">遍历masters数组，每个<span class=\"literal\">master</span>分配slots_per_node个slot，最后一个<span class=\"literal\">master</span>，分配到<span class=\"number\">16384</span>个slot为止。</span><br><span class=\"line\">接下来为<span class=\"literal\">master</span>分配<span class=\"literal\">slave</span>，分配算法会尽量保证<span class=\"literal\">master</span>和<span class=\"literal\">slave</span>节点不在同一台主机上。对于分配完指定<span class=\"literal\">slave</span>数量的节点，还有多余的节点，也会为这些节点寻找<span class=\"literal\">master</span>。分配算法会遍历两次masters数组。</span><br><span class=\"line\">第一次遍历masters数组，在余下的节点列表找到replicas数量个<span class=\"literal\">slave</span>。每个<span class=\"literal\">slave</span>为第一个和<span class=\"literal\">master</span>节点host不一样的节点，如果没有不一样的节点，则直接取出余下列表的第一个节点。</span><br><span class=\"line\">第二次遍历是在对于节点数除以replicas不为整数，则会多余一部分节点。遍历的方式跟第一次一样，只是第一次会一次性给<span class=\"literal\">master</span>分配replicas数量个<span class=\"literal\">slave</span>，而第二次遍历只分配一个，直到余下的节点被全部分配出去。</span><br><span class=\"line\"><span class=\"number\">4</span>、打印出分配信息，并提示用户输入“yes”确认是否按照打印出来的分配方式创建集群。</span><br><span class=\"line\"><span class=\"number\">5</span>、输入“yes”后，会执行flush_nodes_config操作，该操作执行前面的分配结果，给<span class=\"literal\">master</span>分配slot，让<span class=\"literal\">slave</span>复制<span class=\"literal\">master</span>，对于还没有握手（cluster meet）的节点，<span class=\"literal\">slave</span>复制操作无法完成，不过没关系，flush_nodes_config操作出现异常会很快返回，后续握手后会再次执行flush_nodes_config。</span><br><span class=\"line\"><span class=\"number\">6</span>、给每个节点分配epoch，遍历节点，每个节点分配的epoch比之前节点大<span class=\"number\">1</span>。</span><br><span class=\"line\"><span class=\"number\">7</span>、节点间开始相互握手，握手的方式为节点列表的其他节点跟第一个节点握手。</span><br><span class=\"line\"><span class=\"number\">8</span>、然后每隔<span class=\"number\">1</span>秒检查一次各个节点是否已经消息同步完成，使用ClusterNode的get_config_signature方法，检查的算法为获取每个节点cluster nodes信息，排序每个节点，组装成node_id1:slots|node_id2:slot2|...的字符串。如果每个节点获得字符串都相同，即认为握手成功。</span><br><span class=\"line\"><span class=\"number\">9</span>、此后会再执行一次flush_nodes_config，这次主要是为了完成<span class=\"literal\">slave</span>复制操作。</span><br><span class=\"line\"><span class=\"number\">10</span>、最后再执行check_cluster，全面检查一次集群状态。包括和前面握手时检查一样的方式再检查一遍。确认没有迁移的节点。确认所有的slot都被分配出去了。</span><br><span class=\"line\"><span class=\"number\">11</span>、至此完成了整个创建流程，返回[OK] All <span class=\"number\">16384</span> slots covered.。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"check检查集群\"><a href=\"#check检查集群\" class=\"headerlink\" title=\"check检查集群\"></a>check检查集群</h3><p>检查集群状态的命令，没有其他参数，只需要选择一个集群中的一个节点即可。执行命令以及结果如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">ruby redis-trib.rb check 10.180.157.199:6379</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Performing Cluster Check (using node 10.180.157.199:6379)</span></span><br><span class=\"line\">M: b2506515b38e6bbd3034d540599f4cd2a5279ad1 10.180.157.199:6379</span><br><span class=\"line\">   slots:0-5460 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 10.180.157.205:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">M: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379</span><br><span class=\"line\">   slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 59fa6ee455f58a5076f6d6f83ddd74161fd7fb55 10.180.157.208:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates 15126fb33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">S: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates b2506515b38e6bbd3034d540599f4cd2a5279ad1</span><br><span class=\"line\">M: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379</span><br><span class=\"line\">   slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check slots coverage...</span></span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>\n\n<p>检查前会先执行load_cluster_info_from_node方法，把所有节点数据load进来。load的方式为通过自己的cluster nodes发现其他节点，然后连接每个节点，并加入nodes数组。接着生成节点间的复制关系。</p>\n<p>load完数据后，开始检查数据，检查的方式也是调用创建时候使用的check_cluster。</p>\n<h3 id=\"info查看集群信息\"><a href=\"#info查看集群信息\" class=\"headerlink\" title=\"info查看集群信息\"></a>info查看集群信息</h3><p>info命令用来查看集群的信息。info命令也是先执行load_cluster_info_from_node获取完整的集群信息。然后显示ClusterNode的info_string结果，示例如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">ruby redis-trib.rb info 10.180.157.199:6379</span></span><br><span class=\"line\">10.180.157.199:6379 (b2506515...) -&gt; 0 keys | 5461 slots | 1 slaves.</span><br><span class=\"line\">10.180.157.201:6379 (15126fb3...) -&gt; 0 keys | 5461 slots | 1 slaves.</span><br><span class=\"line\">10.180.157.200:6379 (e36c46db...) -&gt; 0 keys | 5462 slots | 1 slaves.</span><br><span class=\"line\">[OK] 0 keys in 3 masters.</span><br><span class=\"line\">0.00 keys per slot on average.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"fix修复集群\"><a href=\"#fix修复集群\" class=\"headerlink\" title=\"fix修复集群\"></a>fix修复集群</h3><p>fix命令的流程跟check的流程很像，显示加载集群信息，然后在check_cluster方法内传入fix为<br>true的变量，会在集群检查出现异常的时候执行修复流程。目前fix命令能修复两种异常，一种是集群有处于迁移中的slot的节点，一种是slot未完全分配的异常。</p>\n<p>fix_open_slot方法是修复集群有处于迁移中的slot的节点异常。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、先检查该slot是谁负责的，迁移的源节点如果没完成迁移，owner还是该节点。没有owner的slot无法完成修复功能。</span><br><span class=\"line\"><span class=\"number\">2</span>、遍历每个节点，获取哪些节点标记该slot为migrating状态，哪些节点标记该slot为importing状态。对于owner不是该节点，但是通过cluster countkeysinslot获取到该节点有数据的情况，也认为该节点为importing状态。</span><br><span class=\"line\"><span class=\"number\">3</span>、如果migrating和importing状态的节点均只有<span class=\"number\">1</span>个，这可能是迁移过程中redis-trib.rb被中断所致，直接执行move_slot继续完成迁移任务即可。传递dots和fix为<span class=\"literal\">true</span>。</span><br><span class=\"line\"><span class=\"number\">4</span>、如果migrating为空，importing状态的节点大于<span class=\"number\">0</span>，那么这种情况执行回滚流程，将importing状态的节点数据通过move_slot方法导给slot的owner节点，传递dots、fix和cold为<span class=\"literal\">true</span>。接着对importing的节点执行cluster stable命令恢复稳定。</span><br><span class=\"line\"><span class=\"number\">5</span>、如果importing状态的节点为空，有一个migrating状态的节点，而且该节点在当前slot没有数据，那么可以直接把这个slot设为stable。</span><br><span class=\"line\"><span class=\"number\">6</span>、如果migrating和importing状态不是上述情况，目前redis-trib.rb工具无法修复，上述的三种情况也已经覆盖了通过redis-trib.rb工具迁移出现异常的各个方面，人为的异常情形太多，很难考虑完全。</span><br><span class=\"line\">fix_slots_coverage方法能修复slot未完全分配的异常。未分配的slot有三种状态。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>、所有节点的该slot都没有数据。该状态redis-trib.rb工具直接采用随机分配的方式，并没有考虑节点的均衡。本人尝试对没有分配slot的集群通过fix修复集群，结果slot还是能比较平均的分配，但是没有了连续性，打印的slot信息非常离散。</span><br><span class=\"line\"><span class=\"number\">2</span>、有一个节点的该slot有数据。该状态下，直接把slot分配给该slot有数据的节点。</span><br><span class=\"line\"><span class=\"number\">3</span>、有多个节点的该slot有数据。此种情况目前还处于TODO状态，不过redis作者列出了修复的步骤，对这些节点，除第一个节点，执行cluster migrating命令，然后把这些节点的数据迁移到第一个节点上。清除migrating状态，然后把slot分配给第一个节点。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"reshard在线迁移slot\"><a href=\"#reshard在线迁移slot\" class=\"headerlink\" title=\"reshard在线迁移slot\"></a>reshard在线迁移slot</h3><p>reshard命令可以在线把集群的一些slot从集群原来slot负责节点迁移到新的节点，利用reshard可以完成集群的在线横向扩容和缩容。</p>\n<p>reshard的参数很多，下面来一一解释一番：</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">reshard</span>         host:<span class=\"keyword\">port</span></span><br><span class=\"line\">                <span class=\"comment\">--from </span></span><br><span class=\"line\">                <span class=\"comment\">--to </span></span><br><span class=\"line\">                <span class=\"comment\">--slots </span></span><br><span class=\"line\">                <span class=\"comment\">--yes</span></span><br><span class=\"line\">                <span class=\"comment\">--timeout </span></span><br><span class=\"line\">                <span class=\"comment\">--pipeline </span></span><br><span class=\"line\">host:<span class=\"keyword\">port</span>：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。</span><br><span class=\"line\"><span class=\"comment\">--from ：需要从哪些源节点上迁移slot，可从多个源节点完成迁移，以逗号隔开，传递的是节点的node id，还可以直接传递--from all，这样源节点就是集群的所有节点，不传递该参数的话，则会在迁移过程中提示用户输入。</span></span><br><span class=\"line\"><span class=\"comment\">--to ：slot需要迁移的目的节点的node id，目的节点只能填写一个，不传递该参数的话，则会在迁移过程中提示用户输入。</span></span><br><span class=\"line\"><span class=\"comment\">--slots ：需要迁移的slot数量，不传递该参数的话，则会在迁移过程中提示用户输入。</span></span><br><span class=\"line\"><span class=\"comment\">--yes：设置该参数，可以在打印执行reshard计划的时候，提示用户输入yes确认后再执行reshard。</span></span><br><span class=\"line\"><span class=\"comment\">--timeout ：设置migrate命令的超时时间。</span></span><br><span class=\"line\"><span class=\"comment\">--pipeline ：定义cluster getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。</span></span><br></pre></td></tr></table></figure>\n\n<p>迁移的流程如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_info_from_node方法装载集群信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、执行check_cluster方法检查集群是否健康。只有健康的集群才能进行迁移。</span><br><span class=\"line\"><span class=\"number\">3</span>、获取需要迁移的slot数量，用户没传递--slots参数，则提示用户手动输入。</span><br><span class=\"line\"><span class=\"number\">4</span>、获取迁移的目的节点，用户没传递--to参数，则提示用户手动输入。此处会检查目的节点必须为master节点。</span><br><span class=\"line\"><span class=\"number\">5</span>、获取迁移的源节点，用户没传递--<span class=\"keyword\">from</span>参数，则提示用户手动输入。此处会检查源节点必须为master节点。--<span class=\"keyword\">from</span> all的话，源节点就是除了目的节点外的全部master节点。这里为了保证集群slot分配的平均，建议传递--<span class=\"keyword\">from</span> all。</span><br><span class=\"line\"><span class=\"number\">6</span>、执行compute_reshard_table方法，计算需要迁移的slot数量如何分配到源节点列表，采用的算法是按照节点负责slot数量由多到少排序，计算每个节点需要迁移的slot的方法为：迁移slot数量 * (该源节点负责的slot数量 / 源节点列表负责的slot总数)。这样算出的数量可能不为整数，这里代码用了下面的方式处理：</span><br><span class=\"line\"></span><br><span class=\"line\">n = (numslots/source_tot_slots*s.slots.length)</span><br><span class=\"line\"><span class=\"keyword\">if</span> i == <span class=\"number\">0</span></span><br><span class=\"line\">    n = n.ceil</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    n = n.floor</span><br><span class=\"line\">这样的处理方式会带来最终分配的slot与请求迁移的slot数量不一致，这个BUG已经在github上提给作者，https:<span class=\"comment\">//github.com/antirez/redis/issues/2990。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">7</span>、打印出reshard计划，如果用户没传--yes，就提示用户确认计划。</span><br><span class=\"line\"><span class=\"number\">8</span>、根据reshard计划，一个个slot的迁移到新节点上，迁移使用move_slot方法，该方法被很多命令使用，具体可以参见下面的迁移流程。move_slot方法传递dots为<span class=\"literal\">true</span>和pipeline数量。</span><br><span class=\"line\"><span class=\"number\">9</span>、至此，就完成了全部的迁移任务。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby redis-trib.rb reshard --<span class=\"keyword\">from</span> all --to <span class=\"number\">80</span>b661ecca260c89e3d8ea9b98f77edaeef43dcd --slots <span class=\"number\">11</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span>)</span><br><span class=\"line\">S: b2506515b38e6bbd3034d540599f4cd2a5279ad1 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) slave</span><br><span class=\"line\">   replicates <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">S: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) slave</span><br><span class=\"line\">   replicates e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">M: <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">10923</span><span class=\"number\">-16383</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">S: <span class=\"number\">59f</span>a6ee455f58a5076f6d6f83ddd74161fd7fb55 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) slave</span><br><span class=\"line\">   replicates <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">M: <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">0</span><span class=\"number\">-5460</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">M: <span class=\"number\">80</span>b661ecca260c89e3d8ea9b98f77edaeef43dcd <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">M: e36c46dbe90960f30861af00786d4c2064e63df2 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">5461</span><span class=\"number\">-10922</span> (<span class=\"number\">5462</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All <span class=\"number\">16384</span> slots covered.</span><br><span class=\"line\"></span><br><span class=\"line\">Ready to move <span class=\"number\">11</span> slots.</span><br><span class=\"line\">  Source nodes:</span><br><span class=\"line\">    M: <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">10923</span><span class=\"number\">-16383</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">    M: <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">0</span><span class=\"number\">-5460</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">    M: e36c46dbe90960f30861af00786d4c2064e63df2 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">5461</span><span class=\"number\">-10922</span> (<span class=\"number\">5462</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">  Destination node:</span><br><span class=\"line\">    M: <span class=\"number\">80</span>b661ecca260c89e3d8ea9b98f77edaeef43dcd <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">  Resharding plan:</span><br><span class=\"line\">    Moving slot <span class=\"number\">5461</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">5462</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">5463</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">5464</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">0</span> <span class=\"keyword\">from</span> <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">    Moving slot <span class=\"number\">1</span> <span class=\"keyword\">from</span> <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">    Moving slot <span class=\"number\">2</span> <span class=\"keyword\">from</span> <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">    Moving slot <span class=\"number\">10923</span> <span class=\"keyword\">from</span> <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">    Moving slot <span class=\"number\">10924</span> <span class=\"keyword\">from</span> <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">    Moving slot <span class=\"number\">10925</span> <span class=\"keyword\">from</span> <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">Do you want to proceed with the proposed reshard plan (yes/no)? yes</span><br><span class=\"line\">Moving slot <span class=\"number\">5461</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">5462</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">5463</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">5464</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">0</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">1</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">2</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">10923</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">10924</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">10925</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br></pre></td></tr></table></figure>\n\n<p>move_slot方法可以在线将一个slot的全部数据从源节点迁移到目的节点，fix、reshard、rebalance都需要调用该方法迁移slot。</p>\n<p>move_slot接受下面几个参数，</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、pipeline：设置一次从slot上获取多少个<span class=\"type\">key</span>。</span><br><span class=\"line\"><span class=\"number\">2</span>、quiet：迁移会打印相关信息，设置quiet参数，可以不用打印这些信息。</span><br><span class=\"line\"><span class=\"number\">3</span>、cold：设置cold，会忽略执行importing和migrating。</span><br><span class=\"line\"><span class=\"number\">4</span>、dots：设置dots，则会在迁移过程打印迁移<span class=\"type\">key</span>数量的进度。</span><br><span class=\"line\"><span class=\"number\">5</span>、update：设置update，则会更新内存信息，方便以后的操作。</span><br></pre></td></tr></table></figure>\n\n<p>move_slot流程如下：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、如果没有设置cold，则对源节点执行cluster importing命令，对目的节点执行migrating命令。fix的时候有可能importing和migrating已经执行过来，所以此种场景会设置cold。</span><br><span class=\"line\"><span class=\"number\">2</span>、通过cluster getkeysinslot命令，一次性获取远节点迁移slot的pipeline个<span class=\"type\">key</span>的数量.</span><br><span class=\"line\"><span class=\"number\">3</span>、对这些<span class=\"type\">key</span>执行migrate命令，将数据从源节点迁移到目的节点。</span><br><span class=\"line\"><span class=\"number\">4</span>、如果migrate出现异常，在fix模式下，BUSYKEY的异常，会使用migrate的replace模式再执行一次，BUSYKEY表示目的节点已经有该<span class=\"type\">key</span>了，replace模式可以强制替换目的节点的<span class=\"type\">key</span>。不是fix模式就直接返回错误了。</span><br><span class=\"line\"><span class=\"number\">5</span>、循环执行cluster getkeysinslot命令，直到返回的<span class=\"type\">key</span>数量为<span class=\"number\">0</span>，就退出循环。</span><br><span class=\"line\"><span class=\"number\">6</span>、如果没有设置cold，对每个节点执行cluster setslot命令，把slot赋给目的节点。</span><br><span class=\"line\"><span class=\"number\">7</span>、如果设置update，则修改源节点和目的节点的slot信息。</span><br><span class=\"line\"><span class=\"number\">8</span>、至此完成了迁移slot的流程。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"rebalance平衡集群节点slot数量\"><a href=\"#rebalance平衡集群节点slot数量\" class=\"headerlink\" title=\"rebalance平衡集群节点slot数量\"></a>rebalance平衡集群节点slot数量</h3><p>rebalance命令可以根据用户传入的参数平衡集群节点的slot数量，rebalance功能非常强大，可以传入的参数很多，以下是rebalance的参数列表和命令示例。</p>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">rebalance</span>       <span class=\"comment\">host:port</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> </span><br><span class=\"line\">                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">auto</span><span class=\"literal\">-</span><span class=\"comment\">weights</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">threshold</span> </span><br><span class=\"line\">                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">timeout</span> </span><br><span class=\"line\">                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">simulate</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">pipeline</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">$ruby</span> <span class=\"comment\">redis</span><span class=\"literal\">-</span><span class=\"comment\">trib</span><span class=\"string\">.</span><span class=\"comment\">rb</span> <span class=\"comment\">rebalance</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">threshold</span> <span class=\"comment\">1</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">b31e3a2e=5</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">60b8e3a1=5</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">simulate</span> <span class=\"comment\">10</span><span class=\"string\">.</span><span class=\"comment\">180</span><span class=\"string\">.</span><span class=\"comment\">157</span><span class=\"string\">.</span><span class=\"comment\">199:6379</span></span><br><span class=\"line\"><span class=\"comment\">下面也先一一解释下每个参数的用法：</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">host:port：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">：节点的权重，格式为node_id=weight，如果需要为多个节点分配权重的话，需要添加多个</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">参数，即</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">b31e3a2e=5</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">60b8e3a1=5，node_id可为节点名称的前缀，只要保证前缀位数能唯一区分该节点即可。没有传递–weight的节点的权重默认为1。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">auto</span><span class=\"literal\">-</span><span class=\"comment\">weights：这个参数在rebalance流程中并未用到。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">threshold</span> <span class=\"comment\">：只有节点需要迁移的slot阈值超过threshold，才会执行rebalance操作。具体计算方法可以参考下面的rebalance命令流程的第四步。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters：rebalance是否考虑没有节点的master，默认没有分配slot节点的master是不参与rebalance的，设置</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters可以让没有分配slot的节点参与rebalance。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">timeout</span> <span class=\"comment\">：设置migrate命令的超时时间。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">simulate：设置该参数，可以模拟rebalance操作，提示用户会迁移哪些slots，而不会真正执行迁移操作。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">pipeline</span> <span class=\"comment\">：与reshar的pipeline参数一样，定义cluster</span> <span class=\"comment\">getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。</span></span><br></pre></td></tr></table></figure>\n\n<p>rebalance命令流程如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、load_cluster_info_from_node方法先加载集群信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、计算每个master的权重，根据参数--weight ，为每个设置的节点分配权重，没有设置的节点，则权重默认为<span class=\"number\">1</span>。</span><br><span class=\"line\"><span class=\"number\">3</span>、根据每个master的权重，以及总的权重，计算自己期望被分配多少个slot。计算的方式为：总slot数量 * （自己的权重 / 总权重）。</span><br><span class=\"line\"><span class=\"number\">4</span>、计算每个master期望分配的slot是否超过设置的阈值，即--threshold 设置的阈值或者默认的阈值。计算的方式为：先计算期望移动节点的阈值，算法为：(<span class=\"number\">100</span>-(<span class=\"number\">100.0</span>*expected/n.slots.length)).abs，如果计算出的阈值没有超出设置阈值，则不需要为该节点移动slot。只要有一个master的移动节点超过阈值，就会触发rebalance操作。</span><br><span class=\"line\"><span class=\"number\">5</span>、如果触发了rebalance操作。那么就开始执行rebalance操作，先将每个节点当前分配的slots数量减去期望分配的slot数量获得balance值。将每个节点的balance从小到大进行排序获得sn数组。</span><br><span class=\"line\"><span class=\"number\">6</span>、用dst_idx和src_idx游标分别从sn数组的头部和尾部开始遍历。目的是为了把尾部节点的slot分配给头部节点。</span><br><span class=\"line\"></span><br><span class=\"line\">sn数组保存的balance列表排序后，负数在前面，正数在后面。负数表示需要有slot迁入，所以使用dst_idx游标，正数表示需要有slot迁出，所以使用src_idx游标。理论上sn数组各节点的balance值加起来应该为<span class=\"number\">0</span>，不过由于在计算期望分配的slot的时候只是使用直接取整的方式，所以可能出现balance值之和不为<span class=\"number\">0</span>的情况，balance值之和不为<span class=\"number\">0</span>即为节点不平衡的slot数量，由于slot总数有<span class=\"number\">16384</span>个，不平衡数量相对于总数，基数很小，所以对rebalance流程影响不大。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">7</span>、获取sn[dst_idx]和sn[src_idx]的balance值较小的那个值，该值即为需要从sn[src_idx]节点迁移到sn[dst_idx]节点的slot数量。</span><br><span class=\"line\"><span class=\"number\">8</span>、接着通过compute_reshard_table方法计算源节点的slot如何分配到源节点列表。这个方法在reshard流程中也有调用，具体步骤可以参考reshard流程的第六步。</span><br><span class=\"line\"><span class=\"number\">9</span>、如果是simulate模式，则只是打印出迁移列表。</span><br><span class=\"line\"><span class=\"number\">10</span>、如果没有设置simulate，则执行move_slot操作，迁移slot，传入的参数为:quiet=&gt;<span class=\"literal\">true</span>,:dots=&gt;<span class=\"literal\">false</span>,:update=&gt;<span class=\"literal\">true</span>。</span><br><span class=\"line\"><span class=\"number\">11</span>、迁移完成后更新sn[dst_idx]和sn[src_idx]的balance值。如果balance值为<span class=\"number\">0</span>后，游标向前进<span class=\"number\">1</span>。</span><br><span class=\"line\"><span class=\"number\">12</span>、直到dst_idx到达src_idx游标，完成整个rebalance操作。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"add-node将新节点加入集群\"><a href=\"#add-node将新节点加入集群\" class=\"headerlink\" title=\"add-node将新节点加入集群\"></a>add-node将新节点加入集群</h3><p>add-node命令可以将新节点加入集群，节点可以为master，也可以为某个master节点的slave。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add-node    new_host:new_port existing_host:existing_port</span><br><span class=\"line\">          --slave</span><br><span class=\"line\">          --master-id </span><br><span class=\"line\">add-node有两个可选参数：</span><br><span class=\"line\"></span><br><span class=\"line\">--slave：设置该参数，则新节点以slave的角色加入集群</span><br><span class=\"line\">--master-id：这个参数需要设置了--slave才能生效，--master-id用来指定新节点的master节点。如果不设置该参数，则会随机为节点选择master节点。</span><br></pre></td></tr></table></figure>\n\n<p>可以看下add-node命令的执行示例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb add-node --slave --master-id dcb792b3e85726f012e83061bf237072dfc45f99 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Adding node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to cluster <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span>)</span><br><span class=\"line\">M: dcb792b3e85726f012e83061bf237072dfc45f99 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">0</span><span class=\"number\">-5460</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">M: <span class=\"number\">464</span>d740bf48953ebcf826f4113c86f9db3a9baf3 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">10923</span><span class=\"number\">-16383</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">M: befa7e17b4e5f239e519bc74bfef3264a40f96ae <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">5461</span><span class=\"number\">-10922</span> (<span class=\"number\">5462</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All <span class=\"number\">16384</span> slots covered.</span><br><span class=\"line\">&gt;&gt;&gt; Send CLUSTER MEET to node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to make it join the cluster.</span><br><span class=\"line\">Waiting <span class=\"keyword\">for</span> the cluster to join.</span><br><span class=\"line\">&gt;&gt;&gt; Configure node as replica of <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379.</span></span><br><span class=\"line\">[OK] New node added correctly.</span><br></pre></td></tr></table></figure>\n\n<p>add-node流程如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_<span class=\"literal\">inf</span>o_from_node方法转载集群信息，check_cluster方法检查集群是否健康。</span><br><span class=\"line\"><span class=\"number\">2</span>、如果设置了--<span class=\"literal\">slave</span>，则需要为该节点寻找<span class=\"literal\">master</span>节点。设置了--<span class=\"literal\">master</span>-id，则以该节点作为新节点的<span class=\"literal\">master</span>，如果没有设置--<span class=\"literal\">master</span>-id，则调用get_master_with_least_replicas方法，寻找<span class=\"literal\">slave</span>数量最少的<span class=\"literal\">master</span>节点。如果<span class=\"literal\">slave</span>数量一致，则选取load_cluster_<span class=\"literal\">inf</span>o_from_node顺序发现的第一个节点。load_cluster_<span class=\"literal\">inf</span>o_from_node顺序的第一个节点是add-<span class=\"keyword\">node</span><span class=\"title\">设置的existing_host</span>:existing_port节点，后面的顺序根据在该节点执行cluster nodes返回的结果返回的节点顺序。</span><br><span class=\"line\"><span class=\"number\">3</span>、连接新的节点并与集群第一个节点握手。</span><br><span class=\"line\"><span class=\"number\">4</span>、如果没设置–<span class=\"literal\">slave</span>就直接返回ok，设置了–<span class=\"literal\">slave</span>，则需要等待确认新节点加入集群，然后执行cluster replicate命令复制<span class=\"literal\">master</span>节点。</span><br><span class=\"line\"><span class=\"number\">5</span>、至此，完成了全部的增加节点的流程。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"del-node从集群中删除节点\"><a href=\"#del-node从集群中删除节点\" class=\"headerlink\" title=\"del-node从集群中删除节点\"></a>del-node从集群中删除节点</h3><p>del-node可以把某个节点从集群中删除。del-node只能删除没有分配slot的节点。删除命令传递两个参数：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">host:port：从该节点获取集群信息。</span><br><span class=\"line\">node_id：需要删除的节点<span class=\"built_in\">id</span>。</span><br></pre></td></tr></table></figure>\n\n<p>del-node执行结果示例如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb del-<span class=\"keyword\">node</span> <span class=\"title\">10</span>.<span class=\"number\">180.157</span>.<span class=\"number\">199</span>:<span class=\"number\">6379</span> d5f6d1d17426bd564a6e309f32d0f5b96962fe53</span><br><span class=\"line\">&gt;&gt;&gt; Removing <span class=\"keyword\">node</span> <span class=\"title\">d5f6d1d17426bd564a6e309f32d0f5b96962fe53</span> from cluster <span class=\"number\">10.180</span>.<span class=\"number\">157.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...</span><br><span class=\"line\">&gt;&gt;&gt; SHUTDOWN the <span class=\"keyword\">node</span>.<span class=\"title\"></span></span><br></pre></td></tr></table></figure>\n\n<p>del-node流程如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_<span class=\"literal\">inf</span>o_from_node方法转载集群信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、根据传入的<span class=\"keyword\">node</span> <span class=\"title\">id</span>获取节点，如果节点没找到，则直接提示错误并退出。</span><br><span class=\"line\"><span class=\"number\">3</span>、如果节点分配的slot不为空，则直接提示错误并退出。</span><br><span class=\"line\"><span class=\"number\">4</span>、遍历集群内的其他节点，执行cluster forget命令，从每个节点中去除该节点。如果删除的节点是<span class=\"literal\">master</span>，而且它有<span class=\"literal\">slave</span>的话，这些<span class=\"literal\">slave</span>会去复制其他<span class=\"literal\">master</span>，调用的方法是get_master_with_least_replicas，与add-<span class=\"keyword\">node</span><span class=\"title\">没设置--master-id</span>寻找<span class=\"literal\">master</span>的方法一样。</span><br><span class=\"line\"><span class=\"number\">5</span>、然后关闭该节点。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"set-timeout设置集群节点间心跳连接的超时时间\"><a href=\"#set-timeout设置集群节点间心跳连接的超时时间\" class=\"headerlink\" title=\"set-timeout设置集群节点间心跳连接的超时时间\"></a>set-timeout设置集群节点间心跳连接的超时时间</h3><p>set-timeout用来设置集群节点间心跳连接的超时时间，单位是毫秒，不得小于100毫秒，因为100毫秒对于心跳时间来说太短了。该命令修改是节点配置参数cluster-node-timeout，默认是15000毫秒。通过该命令，可以给每个节点设置超时时间，设置的方式使用config set命令动态设置，然后执行config rewrite命令将配置持久化保存到硬盘。以下是示例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby redis-trib.rb <span class=\"keyword\">set</span>-timeout <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"number\">30000</span></span><br><span class=\"line\">&gt;&gt;&gt; Reconfiguring node timeout <span class=\"keyword\">in</span> every cluster node...</span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; New node timeout <span class=\"keyword\">set</span>. <span class=\"number\">5</span> OK, <span class=\"number\">0</span> ERR.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"call在集群全部节点上执行命令\"><a href=\"#call在集群全部节点上执行命令\" class=\"headerlink\" title=\"call在集群全部节点上执行命令\"></a>call在集群全部节点上执行命令</h3><p>call命令可以用来在集群的全部节点执行相同的命令。call命令也是需要通过集群的一个节点地址，连上整个集群，然后在集群的每个节点执行该命令。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb call <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"keyword\">get</span> key</span><br><span class=\"line\">&gt;&gt;&gt; Calling GET key</span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span>:</span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"import将外部redis数据导入集群\"><a href=\"#import将外部redis数据导入集群\" class=\"headerlink\" title=\"import将外部redis数据导入集群\"></a>import将外部redis数据导入集群</h3><p>import命令可以把外部的redis节点数据导入集群。导入的流程如下：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_info_from_node方法转载集群信息，check_cluster方法检查集群是否健康。</span><br><span class=\"line\"><span class=\"number\">2</span>、连接外部redis节点，如果外部节点开启了cluster_enabled，则提示错误。</span><br><span class=\"line\"><span class=\"number\">3</span>、通过scan命令遍历外部节点，一次获取<span class=\"number\">1000</span>条数据。</span><br><span class=\"line\"><span class=\"number\">4</span>、遍历这些<span class=\"type\">key</span>，计算出<span class=\"type\">key</span>对应的slot。</span><br><span class=\"line\"><span class=\"number\">5</span>、执行migrate命令,源节点是外部节点,目的节点是集群slot对应的节点，如果设置了--copy参数，则传递copy参数，如果设置了--replace，则传递replace参数。</span><br><span class=\"line\"><span class=\"number\">6</span>、不停执行scan命令，直到遍历完全部的<span class=\"type\">key</span>。</span><br><span class=\"line\"><span class=\"number\">7</span>、至此完成整个迁移流程</span><br><span class=\"line\">这中间如果出现异常，程序就会停止。没使用--copy模式，则可以重新执行import命令，使用--copy的话，最好清空新的集群再导入一次。</span><br></pre></td></tr></table></figure>\n\n<p>import命令更适合离线的把外部redis数据导入，在线导入的话最好使用更专业的导入工具，以slave的方式连接redis节点去同步节点数据应该是更好的方式。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>redis-trib.rb是redis官方推出的管理redis集群的工具，集成在redis的源码src目录下，是基于redis提供的集群命令封装成简单、便捷、实用的操作工具。redis-trib.rb是redis作者用ruby完成的。</p>\n<figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">root@</span><span class=\"string\">p-hsg-</span><span class=\"string\">redis-1:</span>~<span class=\"comment\"># redis-trib.rb</span></span><br><span class=\"line\"><span class=\"string\">Usage:</span> <span class=\"string\">redis-trib </span> </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">create </span>         <span class=\"string\">host1:port1 </span>... <span class=\"string\">hostN:portN</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--replicas</span> </span><br><span class=\"line\">  <span class=\"string\">check </span>          <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">info </span>           <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">fix </span>            <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--timeout</span> </span><br><span class=\"line\">  <span class=\"string\">reshard </span>        <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--from</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--to</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--slots</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--yes</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--timeout</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--pipeline</span> </span><br><span class=\"line\">  <span class=\"string\">rebalance </span>      <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--weight</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--auto-weights</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--use-empty-masters</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--timeout</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--simulate</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--pipeline</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--threshold</span> </span><br><span class=\"line\">  <span class=\"string\">add-node </span>       <span class=\"string\">new_host:new_port </span><span class=\"string\">existing_host:existing_port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--slave</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--master-id</span> </span><br><span class=\"line\">  <span class=\"string\">del-node </span>       <span class=\"string\">host:port </span><span class=\"string\">node_id</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"built_in\">set-timeout</span>     <span class=\"string\">host:port </span><span class=\"string\">milliseconds</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">call </span>           <span class=\"string\">host:port </span><span class=\"string\">command </span><span class=\"string\">arg </span><span class=\"string\">arg </span>.. <span class=\"string\">arg</span></span><br><span class=\"line\"><span class=\"string\"> </span> <span class=\"string\">import </span>         <span class=\"string\">host:port</span></span><br><span class=\"line\"><span class=\"string\"> </span>                 <span class=\"built_in\">--from</span> </span><br><span class=\"line\">                  <span class=\"built_in\">--copy</span></span><br><span class=\"line\"><span class=\"built_in\"></span>                  <span class=\"built_in\">--replace</span></span><br><span class=\"line\"><span class=\"built_in\"></span>  <span class=\"string\">help </span>           (<span class=\"string\">show </span><span class=\"string\">this </span><span class=\"string\">help)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">For </span><span class=\"string\">check,</span> <span class=\"string\">fix,</span> <span class=\"string\">reshard,</span> <span class=\"string\">del-node,</span> <span class=\"built_in\">set-timeout</span> <span class=\"string\">you </span><span class=\"string\">can </span><span class=\"string\">specify </span><span class=\"string\">the </span><span class=\"string\">host </span><span class=\"string\">and </span><span class=\"string\">port </span><span class=\"string\">of </span><span class=\"string\">any </span><span class=\"string\">working </span><span class=\"string\">node </span><span class=\"string\">in </span><span class=\"string\">the </span><span class=\"string\">cluster.</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到redis-trib.rb具有以下功能：</p>\n<ul>\n<li>create：创建集群</li>\n<li>check：检查集群</li>\n<li>info：查看集群信息</li>\n<li>fix：修复集群</li>\n<li>reshard：在线迁移slot</li>\n<li>rebalance：平衡集群节点slot数量</li>\n<li>add-node：将新节点加入集群</li>\n<li>del-node：从集群中删除节点</li>\n<li>set-timeout：设置集群节点间心跳连接的超时时间</li>\n<li>call：在集群全部节点上执行命令</li>\n<li>import：将外部redis数据导入集群</li>\n</ul>\n<h3 id=\"create创建集群\"><a href=\"#create创建集群\" class=\"headerlink\" title=\"create创建集群\"></a>create创建集群</h3><p>create命令可选replicas参数，replicas表示需要有几个slave。最简单命令使用如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb create <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<p>有一个slave的创建命令如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb create --replicas <span class=\"number\">1</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span>  <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span>  <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<p>创建流程如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、首先为每个节点创建ClusterNode对象，包括连接每个节点。检查每个节点是否为独立且db为空的节点。执行load_<span class=\"literal\">inf</span>o方法导入节点信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、检查传入的<span class=\"literal\">master</span>节点数量是否大于等于<span class=\"number\">3</span>个。只有大于<span class=\"number\">3</span>个节点才能组成集群。</span><br><span class=\"line\"><span class=\"number\">3</span>、计算每个<span class=\"literal\">master</span>需要分配的slot数量，以及给<span class=\"literal\">master</span>分配<span class=\"literal\">slave</span>。分配的算法大致如下：</span><br><span class=\"line\">先把节点按照host分类，这样保证<span class=\"literal\">master</span>节点能分配到更多的主机中。</span><br><span class=\"line\">不停遍历遍历host列表，从每个host列表中弹出一个节点，放入interleaved数组。直到所有的节点都弹出为止。</span><br><span class=\"line\"><span class=\"literal\">master</span>节点列表就是interleaved前面的<span class=\"literal\">master</span>数量的节点列表。保存在masters数组。</span><br><span class=\"line\">计算每个<span class=\"literal\">master</span>节点负责的slot数量，保存在slots_per_node对象，用slot总数除以<span class=\"literal\">master</span>数量取整即可。</span><br><span class=\"line\">遍历masters数组，每个<span class=\"literal\">master</span>分配slots_per_node个slot，最后一个<span class=\"literal\">master</span>，分配到<span class=\"number\">16384</span>个slot为止。</span><br><span class=\"line\">接下来为<span class=\"literal\">master</span>分配<span class=\"literal\">slave</span>，分配算法会尽量保证<span class=\"literal\">master</span>和<span class=\"literal\">slave</span>节点不在同一台主机上。对于分配完指定<span class=\"literal\">slave</span>数量的节点，还有多余的节点，也会为这些节点寻找<span class=\"literal\">master</span>。分配算法会遍历两次masters数组。</span><br><span class=\"line\">第一次遍历masters数组，在余下的节点列表找到replicas数量个<span class=\"literal\">slave</span>。每个<span class=\"literal\">slave</span>为第一个和<span class=\"literal\">master</span>节点host不一样的节点，如果没有不一样的节点，则直接取出余下列表的第一个节点。</span><br><span class=\"line\">第二次遍历是在对于节点数除以replicas不为整数，则会多余一部分节点。遍历的方式跟第一次一样，只是第一次会一次性给<span class=\"literal\">master</span>分配replicas数量个<span class=\"literal\">slave</span>，而第二次遍历只分配一个，直到余下的节点被全部分配出去。</span><br><span class=\"line\"><span class=\"number\">4</span>、打印出分配信息，并提示用户输入“yes”确认是否按照打印出来的分配方式创建集群。</span><br><span class=\"line\"><span class=\"number\">5</span>、输入“yes”后，会执行flush_nodes_config操作，该操作执行前面的分配结果，给<span class=\"literal\">master</span>分配slot，让<span class=\"literal\">slave</span>复制<span class=\"literal\">master</span>，对于还没有握手（cluster meet）的节点，<span class=\"literal\">slave</span>复制操作无法完成，不过没关系，flush_nodes_config操作出现异常会很快返回，后续握手后会再次执行flush_nodes_config。</span><br><span class=\"line\"><span class=\"number\">6</span>、给每个节点分配epoch，遍历节点，每个节点分配的epoch比之前节点大<span class=\"number\">1</span>。</span><br><span class=\"line\"><span class=\"number\">7</span>、节点间开始相互握手，握手的方式为节点列表的其他节点跟第一个节点握手。</span><br><span class=\"line\"><span class=\"number\">8</span>、然后每隔<span class=\"number\">1</span>秒检查一次各个节点是否已经消息同步完成，使用ClusterNode的get_config_signature方法，检查的算法为获取每个节点cluster nodes信息，排序每个节点，组装成node_id1:slots|node_id2:slot2|...的字符串。如果每个节点获得字符串都相同，即认为握手成功。</span><br><span class=\"line\"><span class=\"number\">9</span>、此后会再执行一次flush_nodes_config，这次主要是为了完成<span class=\"literal\">slave</span>复制操作。</span><br><span class=\"line\"><span class=\"number\">10</span>、最后再执行check_cluster，全面检查一次集群状态。包括和前面握手时检查一样的方式再检查一遍。确认没有迁移的节点。确认所有的slot都被分配出去了。</span><br><span class=\"line\"><span class=\"number\">11</span>、至此完成了整个创建流程，返回[OK] All <span class=\"number\">16384</span> slots covered.。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"check检查集群\"><a href=\"#check检查集群\" class=\"headerlink\" title=\"check检查集群\"></a>check检查集群</h3><p>检查集群状态的命令，没有其他参数，只需要选择一个集群中的一个节点即可。执行命令以及结果如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">ruby redis-trib.rb check 10.180.157.199:6379</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Performing Cluster Check (using node 10.180.157.199:6379)</span></span><br><span class=\"line\">M: b2506515b38e6bbd3034d540599f4cd2a5279ad1 10.180.157.199:6379</span><br><span class=\"line\">   slots:0-5460 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 10.180.157.205:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">M: 15126fb33796c2c26ea89e553418946f7443d5a5 10.180.157.201:6379</span><br><span class=\"line\">   slots:10923-16383 (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 59fa6ee455f58a5076f6d6f83ddd74161fd7fb55 10.180.157.208:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates 15126fb33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">S: 460b3a11e296aafb2615043291b7dd98274bb351 10.180.157.202:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates b2506515b38e6bbd3034d540599f4cd2a5279ad1</span><br><span class=\"line\">M: e36c46dbe90960f30861af00786d4c2064e63df2 10.180.157.200:6379</span><br><span class=\"line\">   slots:5461-10922 (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\">&gt;&gt; Check slots coverage...</span></span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>\n\n<p>检查前会先执行load_cluster_info_from_node方法，把所有节点数据load进来。load的方式为通过自己的cluster nodes发现其他节点，然后连接每个节点，并加入nodes数组。接着生成节点间的复制关系。</p>\n<p>load完数据后，开始检查数据，检查的方式也是调用创建时候使用的check_cluster。</p>\n<h3 id=\"info查看集群信息\"><a href=\"#info查看集群信息\" class=\"headerlink\" title=\"info查看集群信息\"></a>info查看集群信息</h3><p>info命令用来查看集群的信息。info命令也是先执行load_cluster_info_from_node获取完整的集群信息。然后显示ClusterNode的info_string结果，示例如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\">ruby redis-trib.rb info 10.180.157.199:6379</span></span><br><span class=\"line\">10.180.157.199:6379 (b2506515...) -&gt; 0 keys | 5461 slots | 1 slaves.</span><br><span class=\"line\">10.180.157.201:6379 (15126fb3...) -&gt; 0 keys | 5461 slots | 1 slaves.</span><br><span class=\"line\">10.180.157.200:6379 (e36c46db...) -&gt; 0 keys | 5462 slots | 1 slaves.</span><br><span class=\"line\">[OK] 0 keys in 3 masters.</span><br><span class=\"line\">0.00 keys per slot on average.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"fix修复集群\"><a href=\"#fix修复集群\" class=\"headerlink\" title=\"fix修复集群\"></a>fix修复集群</h3><p>fix命令的流程跟check的流程很像，显示加载集群信息，然后在check_cluster方法内传入fix为<br>true的变量，会在集群检查出现异常的时候执行修复流程。目前fix命令能修复两种异常，一种是集群有处于迁移中的slot的节点，一种是slot未完全分配的异常。</p>\n<p>fix_open_slot方法是修复集群有处于迁移中的slot的节点异常。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、先检查该slot是谁负责的，迁移的源节点如果没完成迁移，owner还是该节点。没有owner的slot无法完成修复功能。</span><br><span class=\"line\"><span class=\"number\">2</span>、遍历每个节点，获取哪些节点标记该slot为migrating状态，哪些节点标记该slot为importing状态。对于owner不是该节点，但是通过cluster countkeysinslot获取到该节点有数据的情况，也认为该节点为importing状态。</span><br><span class=\"line\"><span class=\"number\">3</span>、如果migrating和importing状态的节点均只有<span class=\"number\">1</span>个，这可能是迁移过程中redis-trib.rb被中断所致，直接执行move_slot继续完成迁移任务即可。传递dots和fix为<span class=\"literal\">true</span>。</span><br><span class=\"line\"><span class=\"number\">4</span>、如果migrating为空，importing状态的节点大于<span class=\"number\">0</span>，那么这种情况执行回滚流程，将importing状态的节点数据通过move_slot方法导给slot的owner节点，传递dots、fix和cold为<span class=\"literal\">true</span>。接着对importing的节点执行cluster stable命令恢复稳定。</span><br><span class=\"line\"><span class=\"number\">5</span>、如果importing状态的节点为空，有一个migrating状态的节点，而且该节点在当前slot没有数据，那么可以直接把这个slot设为stable。</span><br><span class=\"line\"><span class=\"number\">6</span>、如果migrating和importing状态不是上述情况，目前redis-trib.rb工具无法修复，上述的三种情况也已经覆盖了通过redis-trib.rb工具迁移出现异常的各个方面，人为的异常情形太多，很难考虑完全。</span><br><span class=\"line\">fix_slots_coverage方法能修复slot未完全分配的异常。未分配的slot有三种状态。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1</span>、所有节点的该slot都没有数据。该状态redis-trib.rb工具直接采用随机分配的方式，并没有考虑节点的均衡。本人尝试对没有分配slot的集群通过fix修复集群，结果slot还是能比较平均的分配，但是没有了连续性，打印的slot信息非常离散。</span><br><span class=\"line\"><span class=\"number\">2</span>、有一个节点的该slot有数据。该状态下，直接把slot分配给该slot有数据的节点。</span><br><span class=\"line\"><span class=\"number\">3</span>、有多个节点的该slot有数据。此种情况目前还处于TODO状态，不过redis作者列出了修复的步骤，对这些节点，除第一个节点，执行cluster migrating命令，然后把这些节点的数据迁移到第一个节点上。清除migrating状态，然后把slot分配给第一个节点。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"reshard在线迁移slot\"><a href=\"#reshard在线迁移slot\" class=\"headerlink\" title=\"reshard在线迁移slot\"></a>reshard在线迁移slot</h3><p>reshard命令可以在线把集群的一些slot从集群原来slot负责节点迁移到新的节点，利用reshard可以完成集群的在线横向扩容和缩容。</p>\n<p>reshard的参数很多，下面来一一解释一番：</p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">reshard</span>         host:<span class=\"keyword\">port</span></span><br><span class=\"line\">                <span class=\"comment\">--from </span></span><br><span class=\"line\">                <span class=\"comment\">--to </span></span><br><span class=\"line\">                <span class=\"comment\">--slots </span></span><br><span class=\"line\">                <span class=\"comment\">--yes</span></span><br><span class=\"line\">                <span class=\"comment\">--timeout </span></span><br><span class=\"line\">                <span class=\"comment\">--pipeline </span></span><br><span class=\"line\">host:<span class=\"keyword\">port</span>：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。</span><br><span class=\"line\"><span class=\"comment\">--from ：需要从哪些源节点上迁移slot，可从多个源节点完成迁移，以逗号隔开，传递的是节点的node id，还可以直接传递--from all，这样源节点就是集群的所有节点，不传递该参数的话，则会在迁移过程中提示用户输入。</span></span><br><span class=\"line\"><span class=\"comment\">--to ：slot需要迁移的目的节点的node id，目的节点只能填写一个，不传递该参数的话，则会在迁移过程中提示用户输入。</span></span><br><span class=\"line\"><span class=\"comment\">--slots ：需要迁移的slot数量，不传递该参数的话，则会在迁移过程中提示用户输入。</span></span><br><span class=\"line\"><span class=\"comment\">--yes：设置该参数，可以在打印执行reshard计划的时候，提示用户输入yes确认后再执行reshard。</span></span><br><span class=\"line\"><span class=\"comment\">--timeout ：设置migrate命令的超时时间。</span></span><br><span class=\"line\"><span class=\"comment\">--pipeline ：定义cluster getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。</span></span><br></pre></td></tr></table></figure>\n\n<p>迁移的流程如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_info_from_node方法装载集群信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、执行check_cluster方法检查集群是否健康。只有健康的集群才能进行迁移。</span><br><span class=\"line\"><span class=\"number\">3</span>、获取需要迁移的slot数量，用户没传递--slots参数，则提示用户手动输入。</span><br><span class=\"line\"><span class=\"number\">4</span>、获取迁移的目的节点，用户没传递--to参数，则提示用户手动输入。此处会检查目的节点必须为master节点。</span><br><span class=\"line\"><span class=\"number\">5</span>、获取迁移的源节点，用户没传递--<span class=\"keyword\">from</span>参数，则提示用户手动输入。此处会检查源节点必须为master节点。--<span class=\"keyword\">from</span> all的话，源节点就是除了目的节点外的全部master节点。这里为了保证集群slot分配的平均，建议传递--<span class=\"keyword\">from</span> all。</span><br><span class=\"line\"><span class=\"number\">6</span>、执行compute_reshard_table方法，计算需要迁移的slot数量如何分配到源节点列表，采用的算法是按照节点负责slot数量由多到少排序，计算每个节点需要迁移的slot的方法为：迁移slot数量 * (该源节点负责的slot数量 / 源节点列表负责的slot总数)。这样算出的数量可能不为整数，这里代码用了下面的方式处理：</span><br><span class=\"line\"></span><br><span class=\"line\">n = (numslots/source_tot_slots*s.slots.length)</span><br><span class=\"line\"><span class=\"keyword\">if</span> i == <span class=\"number\">0</span></span><br><span class=\"line\">    n = n.ceil</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    n = n.floor</span><br><span class=\"line\">这样的处理方式会带来最终分配的slot与请求迁移的slot数量不一致，这个BUG已经在github上提给作者，https:<span class=\"comment\">//github.com/antirez/redis/issues/2990。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">7</span>、打印出reshard计划，如果用户没传--yes，就提示用户确认计划。</span><br><span class=\"line\"><span class=\"number\">8</span>、根据reshard计划，一个个slot的迁移到新节点上，迁移使用move_slot方法，该方法被很多命令使用，具体可以参见下面的迁移流程。move_slot方法传递dots为<span class=\"literal\">true</span>和pipeline数量。</span><br><span class=\"line\"><span class=\"number\">9</span>、至此，就完成了全部的迁移任务。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby redis-trib.rb reshard --<span class=\"keyword\">from</span> all --to <span class=\"number\">80</span>b661ecca260c89e3d8ea9b98f77edaeef43dcd --slots <span class=\"number\">11</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span>)</span><br><span class=\"line\">S: b2506515b38e6bbd3034d540599f4cd2a5279ad1 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) slave</span><br><span class=\"line\">   replicates <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">S: d376aaf80de0e01dde1f8cd4647d5ac3317a8641 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) slave</span><br><span class=\"line\">   replicates e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">M: <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">10923</span><span class=\"number\">-16383</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">S: <span class=\"number\">59f</span>a6ee455f58a5076f6d6f83ddd74161fd7fb55 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) slave</span><br><span class=\"line\">   replicates <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">M: <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">0</span><span class=\"number\">-5460</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">M: <span class=\"number\">80</span>b661ecca260c89e3d8ea9b98f77edaeef43dcd <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">M: e36c46dbe90960f30861af00786d4c2064e63df2 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">5461</span><span class=\"number\">-10922</span> (<span class=\"number\">5462</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All <span class=\"number\">16384</span> slots covered.</span><br><span class=\"line\"></span><br><span class=\"line\">Ready to move <span class=\"number\">11</span> slots.</span><br><span class=\"line\">  Source nodes:</span><br><span class=\"line\">    M: <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">10923</span><span class=\"number\">-16383</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">    M: <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">0</span><span class=\"number\">-5460</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">    M: e36c46dbe90960f30861af00786d4c2064e63df2 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">5461</span><span class=\"number\">-10922</span> (<span class=\"number\">5462</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">1</span> additional replica(s)</span><br><span class=\"line\">  Destination node:</span><br><span class=\"line\">    M: <span class=\"number\">80</span>b661ecca260c89e3d8ea9b98f77edaeef43dcd <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span></span><br><span class=\"line\">   slots: (<span class=\"number\">0</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">  Resharding plan:</span><br><span class=\"line\">    Moving slot <span class=\"number\">5461</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">5462</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">5463</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">5464</span> <span class=\"keyword\">from</span> e36c46dbe90960f30861af00786d4c2064e63df2</span><br><span class=\"line\">    Moving slot <span class=\"number\">0</span> <span class=\"keyword\">from</span> <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">    Moving slot <span class=\"number\">1</span> <span class=\"keyword\">from</span> <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">    Moving slot <span class=\"number\">2</span> <span class=\"keyword\">from</span> <span class=\"number\">460</span>b3a11e296aafb2615043291b7dd98274bb351</span><br><span class=\"line\">    Moving slot <span class=\"number\">10923</span> <span class=\"keyword\">from</span> <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">    Moving slot <span class=\"number\">10924</span> <span class=\"keyword\">from</span> <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">    Moving slot <span class=\"number\">10925</span> <span class=\"keyword\">from</span> <span class=\"number\">15126f</span>b33796c2c26ea89e553418946f7443d5a5</span><br><span class=\"line\">Do you want to proceed with the proposed reshard plan (yes/no)? yes</span><br><span class=\"line\">Moving slot <span class=\"number\">5461</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">5462</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">5463</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">5464</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">0</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">1</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">2</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">10923</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">10924</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br><span class=\"line\">Moving slot <span class=\"number\">10925</span> <span class=\"keyword\">from</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span> to <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6380</span>:</span><br></pre></td></tr></table></figure>\n\n<p>move_slot方法可以在线将一个slot的全部数据从源节点迁移到目的节点，fix、reshard、rebalance都需要调用该方法迁移slot。</p>\n<p>move_slot接受下面几个参数，</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、pipeline：设置一次从slot上获取多少个<span class=\"type\">key</span>。</span><br><span class=\"line\"><span class=\"number\">2</span>、quiet：迁移会打印相关信息，设置quiet参数，可以不用打印这些信息。</span><br><span class=\"line\"><span class=\"number\">3</span>、cold：设置cold，会忽略执行importing和migrating。</span><br><span class=\"line\"><span class=\"number\">4</span>、dots：设置dots，则会在迁移过程打印迁移<span class=\"type\">key</span>数量的进度。</span><br><span class=\"line\"><span class=\"number\">5</span>、update：设置update，则会更新内存信息，方便以后的操作。</span><br></pre></td></tr></table></figure>\n\n<p>move_slot流程如下：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、如果没有设置cold，则对源节点执行cluster importing命令，对目的节点执行migrating命令。fix的时候有可能importing和migrating已经执行过来，所以此种场景会设置cold。</span><br><span class=\"line\"><span class=\"number\">2</span>、通过cluster getkeysinslot命令，一次性获取远节点迁移slot的pipeline个<span class=\"type\">key</span>的数量.</span><br><span class=\"line\"><span class=\"number\">3</span>、对这些<span class=\"type\">key</span>执行migrate命令，将数据从源节点迁移到目的节点。</span><br><span class=\"line\"><span class=\"number\">4</span>、如果migrate出现异常，在fix模式下，BUSYKEY的异常，会使用migrate的replace模式再执行一次，BUSYKEY表示目的节点已经有该<span class=\"type\">key</span>了，replace模式可以强制替换目的节点的<span class=\"type\">key</span>。不是fix模式就直接返回错误了。</span><br><span class=\"line\"><span class=\"number\">5</span>、循环执行cluster getkeysinslot命令，直到返回的<span class=\"type\">key</span>数量为<span class=\"number\">0</span>，就退出循环。</span><br><span class=\"line\"><span class=\"number\">6</span>、如果没有设置cold，对每个节点执行cluster setslot命令，把slot赋给目的节点。</span><br><span class=\"line\"><span class=\"number\">7</span>、如果设置update，则修改源节点和目的节点的slot信息。</span><br><span class=\"line\"><span class=\"number\">8</span>、至此完成了迁移slot的流程。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"rebalance平衡集群节点slot数量\"><a href=\"#rebalance平衡集群节点slot数量\" class=\"headerlink\" title=\"rebalance平衡集群节点slot数量\"></a>rebalance平衡集群节点slot数量</h3><p>rebalance命令可以根据用户传入的参数平衡集群节点的slot数量，rebalance功能非常强大，可以传入的参数很多，以下是rebalance的参数列表和命令示例。</p>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">rebalance</span>       <span class=\"comment\">host:port</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> </span><br><span class=\"line\">                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">auto</span><span class=\"literal\">-</span><span class=\"comment\">weights</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">threshold</span> </span><br><span class=\"line\">                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">timeout</span> </span><br><span class=\"line\">                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">simulate</span></span><br><span class=\"line\"><span class=\"comment\"></span>                <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">pipeline</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">$ruby</span> <span class=\"comment\">redis</span><span class=\"literal\">-</span><span class=\"comment\">trib</span><span class=\"string\">.</span><span class=\"comment\">rb</span> <span class=\"comment\">rebalance</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">threshold</span> <span class=\"comment\">1</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">b31e3a2e=5</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">60b8e3a1=5</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters</span>  <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">simulate</span> <span class=\"comment\">10</span><span class=\"string\">.</span><span class=\"comment\">180</span><span class=\"string\">.</span><span class=\"comment\">157</span><span class=\"string\">.</span><span class=\"comment\">199:6379</span></span><br><span class=\"line\"><span class=\"comment\">下面也先一一解释下每个参数的用法：</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">host:port：这个是必传参数，用来从一个节点获取整个集群信息，相当于获取集群信息的入口。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">：节点的权重，格式为node_id=weight，如果需要为多个节点分配权重的话，需要添加多个</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">参数，即</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">b31e3a2e=5</span> <span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">weight</span> <span class=\"comment\">60b8e3a1=5，node_id可为节点名称的前缀，只要保证前缀位数能唯一区分该节点即可。没有传递–weight的节点的权重默认为1。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">auto</span><span class=\"literal\">-</span><span class=\"comment\">weights：这个参数在rebalance流程中并未用到。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">threshold</span> <span class=\"comment\">：只有节点需要迁移的slot阈值超过threshold，才会执行rebalance操作。具体计算方法可以参考下面的rebalance命令流程的第四步。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters：rebalance是否考虑没有节点的master，默认没有分配slot节点的master是不参与rebalance的，设置</span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">use</span><span class=\"literal\">-</span><span class=\"comment\">empty</span><span class=\"literal\">-</span><span class=\"comment\">masters可以让没有分配slot的节点参与rebalance。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">timeout</span> <span class=\"comment\">：设置migrate命令的超时时间。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">simulate：设置该参数，可以模拟rebalance操作，提示用户会迁移哪些slots，而不会真正执行迁移操作。</span></span><br><span class=\"line\"><span class=\"comment\"></span><span class=\"literal\">-</span><span class=\"literal\">-</span><span class=\"comment\">pipeline</span> <span class=\"comment\">：与reshar的pipeline参数一样，定义cluster</span> <span class=\"comment\">getkeysinslot命令一次取出的key数量，不传的话使用默认值为10。</span></span><br></pre></td></tr></table></figure>\n\n<p>rebalance命令流程如下：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、load_cluster_info_from_node方法先加载集群信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、计算每个master的权重，根据参数--weight ，为每个设置的节点分配权重，没有设置的节点，则权重默认为<span class=\"number\">1</span>。</span><br><span class=\"line\"><span class=\"number\">3</span>、根据每个master的权重，以及总的权重，计算自己期望被分配多少个slot。计算的方式为：总slot数量 * （自己的权重 / 总权重）。</span><br><span class=\"line\"><span class=\"number\">4</span>、计算每个master期望分配的slot是否超过设置的阈值，即--threshold 设置的阈值或者默认的阈值。计算的方式为：先计算期望移动节点的阈值，算法为：(<span class=\"number\">100</span>-(<span class=\"number\">100.0</span>*expected/n.slots.length)).abs，如果计算出的阈值没有超出设置阈值，则不需要为该节点移动slot。只要有一个master的移动节点超过阈值，就会触发rebalance操作。</span><br><span class=\"line\"><span class=\"number\">5</span>、如果触发了rebalance操作。那么就开始执行rebalance操作，先将每个节点当前分配的slots数量减去期望分配的slot数量获得balance值。将每个节点的balance从小到大进行排序获得sn数组。</span><br><span class=\"line\"><span class=\"number\">6</span>、用dst_idx和src_idx游标分别从sn数组的头部和尾部开始遍历。目的是为了把尾部节点的slot分配给头部节点。</span><br><span class=\"line\"></span><br><span class=\"line\">sn数组保存的balance列表排序后，负数在前面，正数在后面。负数表示需要有slot迁入，所以使用dst_idx游标，正数表示需要有slot迁出，所以使用src_idx游标。理论上sn数组各节点的balance值加起来应该为<span class=\"number\">0</span>，不过由于在计算期望分配的slot的时候只是使用直接取整的方式，所以可能出现balance值之和不为<span class=\"number\">0</span>的情况，balance值之和不为<span class=\"number\">0</span>即为节点不平衡的slot数量，由于slot总数有<span class=\"number\">16384</span>个，不平衡数量相对于总数，基数很小，所以对rebalance流程影响不大。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">7</span>、获取sn[dst_idx]和sn[src_idx]的balance值较小的那个值，该值即为需要从sn[src_idx]节点迁移到sn[dst_idx]节点的slot数量。</span><br><span class=\"line\"><span class=\"number\">8</span>、接着通过compute_reshard_table方法计算源节点的slot如何分配到源节点列表。这个方法在reshard流程中也有调用，具体步骤可以参考reshard流程的第六步。</span><br><span class=\"line\"><span class=\"number\">9</span>、如果是simulate模式，则只是打印出迁移列表。</span><br><span class=\"line\"><span class=\"number\">10</span>、如果没有设置simulate，则执行move_slot操作，迁移slot，传入的参数为:quiet=&gt;<span class=\"literal\">true</span>,:dots=&gt;<span class=\"literal\">false</span>,:update=&gt;<span class=\"literal\">true</span>。</span><br><span class=\"line\"><span class=\"number\">11</span>、迁移完成后更新sn[dst_idx]和sn[src_idx]的balance值。如果balance值为<span class=\"number\">0</span>后，游标向前进<span class=\"number\">1</span>。</span><br><span class=\"line\"><span class=\"number\">12</span>、直到dst_idx到达src_idx游标，完成整个rebalance操作。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"add-node将新节点加入集群\"><a href=\"#add-node将新节点加入集群\" class=\"headerlink\" title=\"add-node将新节点加入集群\"></a>add-node将新节点加入集群</h3><p>add-node命令可以将新节点加入集群，节点可以为master，也可以为某个master节点的slave。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add-node    new_host:new_port existing_host:existing_port</span><br><span class=\"line\">          --slave</span><br><span class=\"line\">          --master-id </span><br><span class=\"line\">add-node有两个可选参数：</span><br><span class=\"line\"></span><br><span class=\"line\">--slave：设置该参数，则新节点以slave的角色加入集群</span><br><span class=\"line\">--master-id：这个参数需要设置了--slave才能生效，--master-id用来指定新节点的master节点。如果不设置该参数，则会随机为节点选择master节点。</span><br></pre></td></tr></table></figure>\n\n<p>可以看下add-node命令的执行示例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb add-node --slave --master-id dcb792b3e85726f012e83061bf237072dfc45f99 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Adding node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to cluster <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span>)</span><br><span class=\"line\">M: dcb792b3e85726f012e83061bf237072dfc45f99 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">0</span><span class=\"number\">-5460</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">M: <span class=\"number\">464</span>d740bf48953ebcf826f4113c86f9db3a9baf3 <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">10923</span><span class=\"number\">-16383</span> (<span class=\"number\">5461</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">M: befa7e17b4e5f239e519bc74bfef3264a40f96ae <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">   slots:<span class=\"number\">5461</span><span class=\"number\">-10922</span> (<span class=\"number\">5462</span> slots) master</span><br><span class=\"line\">   <span class=\"number\">0</span> additional replica(s)</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check <span class=\"keyword\">for</span> open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All <span class=\"number\">16384</span> slots covered.</span><br><span class=\"line\">&gt;&gt;&gt; Send CLUSTER MEET to node <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.202</span>:<span class=\"number\">6379</span> to make it join the cluster.</span><br><span class=\"line\">Waiting <span class=\"keyword\">for</span> the cluster to join.</span><br><span class=\"line\">&gt;&gt;&gt; Configure node as replica of <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379.</span></span><br><span class=\"line\">[OK] New node added correctly.</span><br></pre></td></tr></table></figure>\n\n<p>add-node流程如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_<span class=\"literal\">inf</span>o_from_node方法转载集群信息，check_cluster方法检查集群是否健康。</span><br><span class=\"line\"><span class=\"number\">2</span>、如果设置了--<span class=\"literal\">slave</span>，则需要为该节点寻找<span class=\"literal\">master</span>节点。设置了--<span class=\"literal\">master</span>-id，则以该节点作为新节点的<span class=\"literal\">master</span>，如果没有设置--<span class=\"literal\">master</span>-id，则调用get_master_with_least_replicas方法，寻找<span class=\"literal\">slave</span>数量最少的<span class=\"literal\">master</span>节点。如果<span class=\"literal\">slave</span>数量一致，则选取load_cluster_<span class=\"literal\">inf</span>o_from_node顺序发现的第一个节点。load_cluster_<span class=\"literal\">inf</span>o_from_node顺序的第一个节点是add-<span class=\"keyword\">node</span><span class=\"title\">设置的existing_host</span>:existing_port节点，后面的顺序根据在该节点执行cluster nodes返回的结果返回的节点顺序。</span><br><span class=\"line\"><span class=\"number\">3</span>、连接新的节点并与集群第一个节点握手。</span><br><span class=\"line\"><span class=\"number\">4</span>、如果没设置–<span class=\"literal\">slave</span>就直接返回ok，设置了–<span class=\"literal\">slave</span>，则需要等待确认新节点加入集群，然后执行cluster replicate命令复制<span class=\"literal\">master</span>节点。</span><br><span class=\"line\"><span class=\"number\">5</span>、至此，完成了全部的增加节点的流程。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"del-node从集群中删除节点\"><a href=\"#del-node从集群中删除节点\" class=\"headerlink\" title=\"del-node从集群中删除节点\"></a>del-node从集群中删除节点</h3><p>del-node可以把某个节点从集群中删除。del-node只能删除没有分配slot的节点。删除命令传递两个参数：</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">host:port：从该节点获取集群信息。</span><br><span class=\"line\">node_id：需要删除的节点<span class=\"built_in\">id</span>。</span><br></pre></td></tr></table></figure>\n\n<p>del-node执行结果示例如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb del-<span class=\"keyword\">node</span> <span class=\"title\">10</span>.<span class=\"number\">180.157</span>.<span class=\"number\">199</span>:<span class=\"number\">6379</span> d5f6d1d17426bd564a6e309f32d0f5b96962fe53</span><br><span class=\"line\">&gt;&gt;&gt; Removing <span class=\"keyword\">node</span> <span class=\"title\">d5f6d1d17426bd564a6e309f32d0f5b96962fe53</span> from cluster <span class=\"number\">10.180</span>.<span class=\"number\">157.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...</span><br><span class=\"line\">&gt;&gt;&gt; SHUTDOWN the <span class=\"keyword\">node</span>.<span class=\"title\"></span></span><br></pre></td></tr></table></figure>\n\n<p>del-node流程如下：</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_<span class=\"literal\">inf</span>o_from_node方法转载集群信息。</span><br><span class=\"line\"><span class=\"number\">2</span>、根据传入的<span class=\"keyword\">node</span> <span class=\"title\">id</span>获取节点，如果节点没找到，则直接提示错误并退出。</span><br><span class=\"line\"><span class=\"number\">3</span>、如果节点分配的slot不为空，则直接提示错误并退出。</span><br><span class=\"line\"><span class=\"number\">4</span>、遍历集群内的其他节点，执行cluster forget命令，从每个节点中去除该节点。如果删除的节点是<span class=\"literal\">master</span>，而且它有<span class=\"literal\">slave</span>的话，这些<span class=\"literal\">slave</span>会去复制其他<span class=\"literal\">master</span>，调用的方法是get_master_with_least_replicas，与add-<span class=\"keyword\">node</span><span class=\"title\">没设置--master-id</span>寻找<span class=\"literal\">master</span>的方法一样。</span><br><span class=\"line\"><span class=\"number\">5</span>、然后关闭该节点。</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"set-timeout设置集群节点间心跳连接的超时时间\"><a href=\"#set-timeout设置集群节点间心跳连接的超时时间\" class=\"headerlink\" title=\"set-timeout设置集群节点间心跳连接的超时时间\"></a>set-timeout设置集群节点间心跳连接的超时时间</h3><p>set-timeout用来设置集群节点间心跳连接的超时时间，单位是毫秒，不得小于100毫秒，因为100毫秒对于心跳时间来说太短了。该命令修改是节点配置参数cluster-node-timeout，默认是15000毫秒。通过该命令，可以给每个节点设置超时时间，设置的方式使用config set命令动态设置，然后执行config rewrite命令将配置持久化保存到硬盘。以下是示例：</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruby redis-trib.rb <span class=\"keyword\">set</span>-timeout <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"number\">30000</span></span><br><span class=\"line\">&gt;&gt;&gt; Reconfiguring node timeout <span class=\"keyword\">in</span> every cluster node...</span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">*** New timeout <span class=\"keyword\">set</span> <span class=\"keyword\">for</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span></span><br><span class=\"line\">&gt;&gt;&gt; New node timeout <span class=\"keyword\">set</span>. <span class=\"number\">5</span> OK, <span class=\"number\">0</span> ERR.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"call在集群全部节点上执行命令\"><a href=\"#call在集群全部节点上执行命令\" class=\"headerlink\" title=\"call在集群全部节点上执行命令\"></a>call在集群全部节点上执行命令</h3><p>call命令可以用来在集群的全部节点执行相同的命令。call命令也是需要通过集群的一个节点地址，连上整个集群，然后在集群的每个节点执行该命令。</p>\n<figure class=\"highlight angelscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ruby redis-trib.rb call <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span> <span class=\"keyword\">get</span> key</span><br><span class=\"line\">&gt;&gt;&gt; Calling GET key</span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.199</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.205</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span>:</span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.200</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.208</span>:<span class=\"number\">6379</span>: MOVED <span class=\"number\">12539</span> <span class=\"number\">10.180</span><span class=\"number\">.157</span><span class=\"number\">.201</span>:<span class=\"number\">6379</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"import将外部redis数据导入集群\"><a href=\"#import将外部redis数据导入集群\" class=\"headerlink\" title=\"import将外部redis数据导入集群\"></a>import将外部redis数据导入集群</h3><p>import命令可以把外部的redis节点数据导入集群。导入的流程如下：</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、通过load_cluster_info_from_node方法转载集群信息，check_cluster方法检查集群是否健康。</span><br><span class=\"line\"><span class=\"number\">2</span>、连接外部redis节点，如果外部节点开启了cluster_enabled，则提示错误。</span><br><span class=\"line\"><span class=\"number\">3</span>、通过scan命令遍历外部节点，一次获取<span class=\"number\">1000</span>条数据。</span><br><span class=\"line\"><span class=\"number\">4</span>、遍历这些<span class=\"type\">key</span>，计算出<span class=\"type\">key</span>对应的slot。</span><br><span class=\"line\"><span class=\"number\">5</span>、执行migrate命令,源节点是外部节点,目的节点是集群slot对应的节点，如果设置了--copy参数，则传递copy参数，如果设置了--replace，则传递replace参数。</span><br><span class=\"line\"><span class=\"number\">6</span>、不停执行scan命令，直到遍历完全部的<span class=\"type\">key</span>。</span><br><span class=\"line\"><span class=\"number\">7</span>、至此完成整个迁移流程</span><br><span class=\"line\">这中间如果出现异常，程序就会停止。没使用--copy模式，则可以重新执行import命令，使用--copy的话，最好清空新的集群再导入一次。</span><br></pre></td></tr></table></figure>\n\n<p>import命令更适合离线的把外部redis数据导入，在线导入的话最好使用更专业的导入工具，以slave的方式连接redis节点去同步节点数据应该是更好的方式。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck42dyibv0001u9ury6xzlk2i","category_id":"ck42dyic20004u9urn060qw0z","_id":"ck42dyicf000hu9urkd7qbln3"},{"post_id":"ck42dyic00003u9urbjdbc0c7","category_id":"ck42dyica000cu9ur2jlf7mul","_id":"ck42dyicj000ou9urtxz9x0xc"},{"post_id":"ck42dyic40006u9urfrforoeg","category_id":"ck42dyica000cu9ur2jlf7mul","_id":"ck42dyicm000uu9urnva3aylg"},{"post_id":"ck42dyic80009u9ur9e992f7x","category_id":"ck42dyica000cu9ur2jlf7mul","_id":"ck42dyico0010u9ura04scc8s"},{"post_id":"ck42dyic9000bu9urpw04vjel","category_id":"ck42dyica000cu9ur2jlf7mul","_id":"ck42dyicq0016u9ur6kd3lxiq"},{"post_id":"ck42dyice000gu9urjxfc7eto","category_id":"ck42dyicq0017u9urzxp10y94","_id":"ck42dyicu001gu9urgzby82wt"},{"post_id":"ck42dyich000ju9urruujtm2p","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyicy001nu9ur5ytx6ou1"},{"post_id":"ck42dyici000lu9urqupfwrpm","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyid0001vu9uraq0g4nv6"},{"post_id":"ck42dyick000pu9uri0nvpo0n","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyid20021u9ur0dboqa88"},{"post_id":"ck42dyicz001tu9ur7bv6ouxw","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyid60025u9ur9jwjoiun"},{"post_id":"ck42dyid0001xu9ura4dhdhr0","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyid70029u9urqtz3s0mi"},{"post_id":"ck42dyicl000su9urkvrd0s52","category_id":"ck42dyid0001uu9urvlag5v12","_id":"ck42dyid8002du9ur7cwefnf7"},{"post_id":"ck42dyicm000vu9ur536spgsb","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyida002iu9urzch15tgh"},{"post_id":"ck42dyid7002cu9urkz2saysu","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidd002nu9urso0dbhau"},{"post_id":"ck42dyid9002fu9urfuauibzy","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidf002ru9uro47ukmcu"},{"post_id":"ck42dyico000xu9ury32lrnad","category_id":"ck42dyid7002bu9urpi1q1uss","_id":"ck42dyidg002vu9uruahbsnd8"},{"post_id":"ck42dyidb002ju9uri74fw4sh","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidh002zu9ur6os7o4v0"},{"post_id":"ck42dyidc002mu9ur0c8xnl9e","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidi0033u9urgvtbkgxs"},{"post_id":"ck42dyicp0011u9ur16of6nsm","category_id":"ck42dyidc002ku9ur5y2ypmi8","_id":"ck42dyidj0037u9urzdx52m55"},{"post_id":"ck42dyide002qu9ur2bszti68","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidl003bu9ur7v07x1c0"},{"post_id":"ck42dyidf002uu9ur6jevtphs","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidm003fu9urtvvarmam"},{"post_id":"ck42dyicc000eu9urg4wl2tc5","category_id":"ck42dyico000zu9ur9oq9njcj","_id":"ck42dyidn003iu9urrnokmrds"},{"post_id":"ck42dyicc000eu9urg4wl2tc5","category_id":"ck42dyidf002su9ur4xlllc96","_id":"ck42dyidp003nu9urfc40704e"},{"post_id":"ck42dyidg002yu9urxu56xz59","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidq003qu9ur4jmywj1s"},{"post_id":"ck42dyidi0032u9urmkcnrojw","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyids003uu9ur19jzqt70"},{"post_id":"ck42dyicp0014u9urx2uw9z9d","category_id":"ck42dyidi0030u9urnrqcnnmc","_id":"ck42dyidv003yu9urolbtewf9"},{"post_id":"ck42dyidj0036u9ur6fqwfpt3","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidw0042u9ur5izkyjlu"},{"post_id":"ck42dyidk003au9urkecby50t","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidx0046u9ur13dswedj"},{"post_id":"ck42dyidm003eu9urqv3w1lov","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidx004au9urgw9fh13i"},{"post_id":"ck42dyicq0018u9urk6r2fp4k","category_id":"ck42dyidk0039u9ur4zat4odc","_id":"ck42dyidz004eu9ur4wn7wrru"},{"post_id":"ck42dyidn003hu9ur36j4sbko","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyidz004iu9uroxqlohz1"},{"post_id":"ck42dyido003mu9ur15upc9gp","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyie1004mu9urwbhz4ifs"},{"post_id":"ck42dyidp003pu9urmqwa37dg","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyie2004qu9urq67rpt65"},{"post_id":"ck42dyidr003tu9ur1ps5pf9f","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyie4004uu9urvr9irg58"},{"post_id":"ck42dyidu003xu9urmzmktedr","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyie5004yu9ur9mu4n43z"},{"post_id":"ck42dyict001eu9urhj3axxnw","category_id":"ck42dyidv003zu9urpunktu88","_id":"ck42dyie60052u9urrv2dt27b"},{"post_id":"ck42dyie3004tu9ure1sybbb2","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyie70056u9urtk7jvovm"},{"post_id":"ck42dyie5004xu9ur4n2tr699","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyiea0059u9urvyigen2f"},{"post_id":"ck42dyicy001qu9urk625v11n","category_id":"ck42dyico000zu9ur9oq9njcj","_id":"ck42dyieb005du9ur2gjojm92"},{"post_id":"ck42dyicy001qu9urk625v11n","category_id":"ck42dyidf002su9ur4xlllc96","_id":"ck42dyied005hu9urcrq8xb3w"},{"post_id":"ck42dyie60051u9uray962bxi","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyiee005lu9urls0ukf50"},{"post_id":"ck42dyie70055u9urf3937v88","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyief005pu9ur34ir3jad"},{"post_id":"ck42dyie80058u9urk08qpear","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyiej005tu9uroozyvz38"},{"post_id":"ck42dyid20020u9urrxn2hq0e","category_id":"ck42dyie70054u9ur023qs6p4","_id":"ck42dyiek005xu9urhqjwvces"},{"post_id":"ck42dyiea005cu9urx0krepoc","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyiel0061u9urgcxcc9er"},{"post_id":"ck42dyiec005gu9urih6b5qe3","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyiem0065u9urkhl4k473"},{"post_id":"ck42dyid30024u9urt26wtcft","category_id":"ck42dyieb005eu9urm9h1r9sw","_id":"ck42dyien0068u9urx59pu9a7"},{"post_id":"ck42dyid60027u9urhtb9rqg1","category_id":"ck42dyieb005eu9urm9h1r9sw","_id":"ck42dyieo006du9ur368q1fwz"},{"post_id":"ck42dyicr001bu9urtidh4qd1","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyieq006gu9urv76w8848"},{"post_id":"ck42dyicr001bu9urtidh4qd1","category_id":"ck42dyiej005uu9urifl1vh09","_id":"ck42dyies006ku9urb3dlkkcl"},{"post_id":"ck42dyiem0064u9urokuo0ek4","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyiet006ou9urdx9x0nyp"},{"post_id":"ck42dyics001du9urdlxrvzk2","category_id":"ck42dyidq003ru9urdqh8wg31","_id":"ck42dyiev006su9ur5fd8ej0v"},{"post_id":"ck42dyics001du9urdlxrvzk2","category_id":"ck42dyiem0062u9ura1veaetp","_id":"ck42dyiey006wu9urqaqf6fep"},{"post_id":"ck42dyien0067u9urtifjjla4","category_id":"ck42dyid0001uu9urvlag5v12","_id":"ck42dyiez0070u9ur6ss9wz9u"},{"post_id":"ck42dyieo006cu9urw3tn9x97","category_id":"ck42dyid0001uu9urvlag5v12","_id":"ck42dyif00074u9urhayru302"},{"post_id":"ck42dyiep006fu9uricgx4r1l","category_id":"ck42dyid0001uu9urvlag5v12","_id":"ck42dyif10078u9urwbbt7d6b"},{"post_id":"ck42dyidv0041u9urxy1z098x","category_id":"ck42dyieo006bu9ur5ieuh1nw","_id":"ck42dyif4007cu9urrzkukkx3"},{"post_id":"ck42dyier006ju9urjnalmtlb","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyif6007gu9urlc8cq3q2"},{"post_id":"ck42dyidw0045u9urcfwyebxy","category_id":"ck42dyieo006bu9ur5ieuh1nw","_id":"ck42dyifb007ku9urrw8z2647"},{"post_id":"ck42dyieu006ru9urx7kxlwk3","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyifc007mu9urjy5xns99"},{"post_id":"ck42dyiew006vu9urqfy1a7g9","category_id":"ck42dyid7002bu9urpi1q1uss","_id":"ck42dyifd007ru9ura5hu3hn2"},{"post_id":"ck42dyidx0049u9urmn2e8brx","category_id":"ck42dyieo006bu9ur5ieuh1nw","_id":"ck42dyifk007uu9uruxlxiivk"},{"post_id":"ck42dyiez006zu9urh99v9jth","category_id":"ck42dyid7002bu9urpi1q1uss","_id":"ck42dyifo007xu9urjhagtzka"},{"post_id":"ck42dyif00073u9ur6m2dl089","category_id":"ck42dyid7002bu9urpi1q1uss","_id":"ck42dyifs0080u9urny0h6215"},{"post_id":"ck42dyidy004du9uri286utzh","category_id":"ck42dyiez0071u9urtp6vor4p","_id":"ck42dyift0083u9uriyjrdq8h"},{"post_id":"ck42dyif10077u9urq73wewt1","category_id":"ck42dyid7002bu9urpi1q1uss","_id":"ck42dyifu0086u9urcf9y6n6f"},{"post_id":"ck42dyif3007bu9ur7fuzduyu","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyify008au9urxozgfx0g"},{"post_id":"ck42dyicu001hu9uri210uk9c","category_id":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyifz008eu9urd79362vx"},{"post_id":"ck42dyicu001hu9uri210uk9c","category_id":"ck42dyif20079u9ur78i2ztmp","_id":"ck42dyig0008iu9urqqc26zu7"},{"post_id":"ck42dyidz004hu9ur32sytjrf","category_id":"ck42dyidv003zu9urpunktu88","_id":"ck42dyig2008mu9urxnc7rpnt"},{"post_id":"ck42dyidz004hu9ur32sytjrf","category_id":"ck42dyif7007hu9ur3qe50ju3","_id":"ck42dyig3008pu9urze8afqu9"},{"post_id":"ck42dyie1004lu9ura4wmfdg4","category_id":"ck42dyifc007pu9ur7wg10ds8","_id":"ck42dyig5008tu9urjw3qce3p"},{"post_id":"ck42dyifl007wu9ur3hpvgif1","category_id":"ck42dyiez0071u9urtp6vor4p","_id":"ck42dyig6008vu9urwpc0w2ml"},{"post_id":"ck42dyicw001ju9urrx4klupl","category_id":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyig7008zu9urfbmpbf9x"},{"post_id":"ck42dyicw001ju9urrx4klupl","category_id":"ck42dyif20079u9ur78i2ztmp","_id":"ck42dyig80091u9urm040f5kl"},{"post_id":"ck42dyie2004pu9ur600ottdx","category_id":"ck42dyift0084u9urzsnovddf","_id":"ck42dyigb0095u9ur2mp0yvdh"},{"post_id":"ck42dyicx001mu9urdb2amxe5","category_id":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyigc0098u9urvuo67e98"},{"post_id":"ck42dyicx001mu9urdb2amxe5","category_id":"ck42dyif20079u9ur78i2ztmp","_id":"ck42dyigd009du9urv1tbmvuc"},{"post_id":"ck42dyig0008hu9urh3700er2","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyige009gu9urjx23ct61"},{"post_id":"ck42dyig1008lu9urywtlrht9","category_id":"ck42dyidq003ru9urdqh8wg31","_id":"ck42dyigf009lu9ur20kmt7cd"},{"post_id":"ck42dyig1008lu9urywtlrht9","category_id":"ck42dyiem0062u9ura1veaetp","_id":"ck42dyigh009ou9urq0bww34w"},{"post_id":"ck42dyied005ku9ur3216sak8","category_id":"ck42dyig0008ju9uray42j70i","_id":"ck42dyigi009su9ur1n4eln0f"},{"post_id":"ck42dyig2008ou9ur9yg3kdkm","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyigk009wu9ur9ngygwo3"},{"post_id":"ck42dyig5008su9ur1xno1qs7","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyigl009zu9urlludcbbf"},{"post_id":"ck42dyief005ou9uravou0m3p","category_id":"ck42dyig0008ju9uray42j70i","_id":"ck42dyigm00a3u9ur9ts99nkr"},{"post_id":"ck42dyig5008uu9urw2488pjk","category_id":"ck42dyift0084u9urzsnovddf","_id":"ck42dyigo00a7u9uree3gf390"},{"post_id":"ck42dyig7008yu9urtahqsg2f","category_id":"ck42dyift0084u9urzsnovddf","_id":"ck42dyigp00abu9urrq4it4wm"},{"post_id":"ck42dyieg005su9urt708jedd","category_id":"ck42dyig0008ju9uray42j70i","_id":"ck42dyigr00aeu9urrt1mhpbj"},{"post_id":"ck42dyig70090u9urh9tuec8y","category_id":"ck42dyift0084u9urzsnovddf","_id":"ck42dyigs00aiu9urz03abb93"},{"post_id":"ck42dyiga0094u9ur94n3k7ek","category_id":"ck42dyift0084u9urzsnovddf","_id":"ck42dyigu00amu9uraw25c22y"},{"post_id":"ck42dyiej005wu9uruzte9t7p","category_id":"ck42dyid7002bu9urpi1q1uss","_id":"ck42dyigv00aqu9uremnt1owu"},{"post_id":"ck42dyiej005wu9uruzte9t7p","category_id":"ck42dyiga0093u9urwv251ism","_id":"ck42dyigw00atu9urw2t0metu"},{"post_id":"ck42dyigb0097u9ur3m8l5chp","category_id":"ck42dyift0084u9urzsnovddf","_id":"ck42dyigx00ayu9urebyhka21"},{"post_id":"ck42dyigd009cu9uraae46azw","category_id":"ck42dyics001cu9urpi9o1eby","_id":"ck42dyigy00b1u9urxhxu4vtp"},{"post_id":"ck42dyiel0060u9ur1fmq7dra","category_id":"ck42dyig0008ju9uray42j70i","_id":"ck42dyigz00b6u9urdc462xst"},{"post_id":"ck42dyiet006nu9urx1wzlpxr","category_id":"ck42dyigf009ju9urkgmg7f4q","_id":"ck42dyih000b9u9urif21k7ey"},{"post_id":"ck42dyif5007fu9urwx15saig","category_id":"ck42dyigj009uu9ur9wgtgpof","_id":"ck42dyih200beu9ur7w849xtk"},{"post_id":"ck42dyif8007ju9ure5wm1iqx","category_id":"ck42dyigj009uu9ur9wgtgpof","_id":"ck42dyih300bhu9urggrea4gh"},{"post_id":"ck42dyifb007lu9urtzm9q0qa","category_id":"ck42dyigj009uu9ur9wgtgpof","_id":"ck42dyih500blu9ur1dxzu4lb"},{"post_id":"ck42dyigq00adu9urbzrs2eiz","category_id":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyih600bpu9urb6uaj8iv"},{"post_id":"ck42dyigr00ahu9urh53qz04s","category_id":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyih600btu9urvwen2ati"},{"post_id":"ck42dyifc007qu9urjilpk6xk","category_id":"ck42dyigj009uu9ur9wgtgpof","_id":"ck42dyih700bxu9urvxj4vgui"},{"post_id":"ck42dyigt00alu9urjpn5t3ml","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyih800bzu9urjxjux7jr"},{"post_id":"ck42dyigv00apu9urxqhrg3cs","category_id":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyiha00c3u9urtq4hyisw"},{"post_id":"ck42dyiff007tu9urbngaw0u1","category_id":"ck42dyigj009uu9ur9wgtgpof","_id":"ck42dyiha00c5u9urx1ciaccz"},{"post_id":"ck42dyigw00asu9ur59k1lnri","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihb00c9u9uro0191vdc"},{"post_id":"ck42dyigx00axu9ur34j2wuy5","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihb00cbu9urfwgrnbav"},{"post_id":"ck42dyifs007zu9urfd6v88ma","category_id":"ck42dyigw00avu9ur2bqhr7x9","_id":"ck42dyihb00cfu9urpito0i49"},{"post_id":"ck42dyigx00b0u9urcrqs040f","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihb00chu9urlyjhs0ms"},{"post_id":"ck42dyigz00b5u9ur8g0q60y9","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihc00clu9ur1o9v3tyi"},{"post_id":"ck42dyift0082u9urpu4ca5fo","category_id":"ck42dyid0001uu9urvlag5v12","_id":"ck42dyihc00cnu9urh5jmya5d"},{"post_id":"ck42dyift0082u9urpu4ca5fo","category_id":"ck42dyigy00b4u9ure176buoh","_id":"ck42dyihd00cqu9ur6d6itfze"},{"post_id":"ck42dyigz00b8u9ur3peouryf","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihd00ctu9ure2dcp42g"},{"post_id":"ck42dyih100bdu9urzuerv6vk","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihd00cwu9urnz1idw1r"},{"post_id":"ck42dyih300bgu9url7dxic2n","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihe00czu9urr1ohq7n4"},{"post_id":"ck42dyih400bku9urjjtg9xsl","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihe00d1u9urs8eyopyp"},{"post_id":"ck42dyih500bou9ur0a68v93p","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihf00d4u9urnjfegyau"},{"post_id":"ck42dyifx0089u9ur9xyj2d7r","category_id":"ck42dyih500bmu9ur6pqwm4ex","_id":"ck42dyihf00d7u9urx646eapr"},{"post_id":"ck42dyih600bsu9ur5bnjcns7","category_id":"ck42dyid20022u9uraijfbn3j","_id":"ck42dyihf00d9u9urklby313p"},{"post_id":"ck42dyige009fu9urmf7vta0g","category_id":"ck42dyiez0071u9urtp6vor4p","_id":"ck42dyihg00dbu9urdh7q0h72"},{"post_id":"ck42dyige009fu9urmf7vta0g","category_id":"ck42dyih900c1u9urpqdei5ce","_id":"ck42dyihg00ddu9urg1rj1xrb"},{"post_id":"ck42dyigf009ku9ur4g7nst10","category_id":"ck42dyiez0071u9urtp6vor4p","_id":"ck42dyihg00dfu9uraqmnuztd"},{"post_id":"ck42dyigf009ku9ur4g7nst10","category_id":"ck42dyih900c1u9urpqdei5ce","_id":"ck42dyihh00diu9ur50gwcgah"},{"post_id":"ck42dyigh009ru9ur96x379pm","category_id":"ck42dyihc00cku9urbo0awjda","_id":"ck42dyihh00dlu9urff70mtrj"},{"post_id":"ck42dyigj009vu9uroluojkw0","category_id":"ck42dyihc00cku9urbo0awjda","_id":"ck42dyihh00dnu9ur5ajg2y5n"},{"post_id":"ck42dyigk009yu9urx3kbc4fp","category_id":"ck42dyihc00cku9urbo0awjda","_id":"ck42dyihh00dpu9urv3gg1kl0"},{"post_id":"ck42dyigm00a2u9ur4vivbd1d","category_id":"ck42dyihf00d3u9urvpy0g54n","_id":"ck42dyihh00dsu9ur6s9c18bm"},{"post_id":"ck42dyign00a6u9urk67e5qr1","category_id":"ck42dyidx0047u9urivti2y1b","_id":"ck42dyihi00dvu9uru37c6map"},{"post_id":"ck42dyign00a6u9urk67e5qr1","category_id":"ck42dyihf00d8u9ur0sagxhsq","_id":"ck42dyihj00dxu9urbmicgywc"},{"post_id":"ck42dyigo00aau9urtv6ed9wt","category_id":"ck42dyico000zu9ur9oq9njcj","_id":"ck42dyihj00dzu9urob6egxbb"},{"post_id":"ck42dyigo00aau9urtv6ed9wt","category_id":"ck42dyihg00dcu9urynz8jxy3","_id":"ck42dyihj00e1u9urywot5mvn"},{"post_id":"ck42dyifu0085u9uri8y0a9sg","category_id":"ck42dyih000bcu9urasxfsqo7","_id":"ck42dyihj00e4u9ur6d3lyao6"},{"post_id":"ck42dyifu0085u9uri8y0a9sg","category_id":"ck42dyihh00dhu9urf4h8kvcs","_id":"ck42dyihk00e7u9ur9o31322l"},{"post_id":"ck42dyifz008du9urfbilrfkz","category_id":"ck42dyih000bcu9urasxfsqo7","_id":"ck42dyihk00e9u9ur4ihmky4k"},{"post_id":"ck42dyifz008du9urfbilrfkz","category_id":"ck42dyihh00dhu9urf4h8kvcs","_id":"ck42dyihk00ebu9ur3tqay25k"},{"post_id":"ck42dyigg009nu9urz1nleh1q","category_id":"ck42dyihb00ceu9urc46zok81","_id":"ck42dyihk00edu9urornfup71"},{"post_id":"ck42dyigg009nu9urz1nleh1q","category_id":"ck42dyihj00dyu9urz7m104fc","_id":"ck42dyihl00egu9urz7d4bodk"},{"post_id":"ck42dyih700bwu9urgfcgiqk6","category_id":"ck42dyihh00dou9ur31w11awk","_id":"ck42dyihl00eiu9urkjzd1bcx"},{"post_id":"ck42dyih700bwu9urgfcgiqk6","category_id":"ck42dyihj00e3u9urm7dk3xb7","_id":"ck42dyihl00elu9urhmelqu3u"},{"post_id":"ck42dyijh00jqu9urj60iu6i2","category_id":"ck42dyica000cu9ur2jlf7mul","_id":"ck42dyijp00jwu9urqsf2rruz"},{"post_id":"ck42dyijm00jru9urw3mpqfku","category_id":"ck42dyidc002ku9ur5y2ypmi8","_id":"ck42dyijr00k0u9urx1h7wsw2"},{"post_id":"ck42dyijn00jtu9ur9ciwf7nc","category_id":"ck42dyie70054u9ur023qs6p4","_id":"ck42dyijs00k3u9ur0p0mk5q9"},{"post_id":"ck42dyijo00jvu9urn6oa27sg","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyiju00k7u9uriypg9fki"},{"post_id":"ck42dyijp00jzu9uruvjqylwh","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyijv00kau9urmtxf8few"},{"post_id":"ck42dyijr00k2u9ur95q8zsgu","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyijx00kdu9uropal0rho"},{"post_id":"ck42dyijv00k9u9urg9hjf2jh","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyijx00khu9ur35nhxz3p"},{"post_id":"ck42dyijt00k5u9ur6hi5ibfd","category_id":"ck42dyicv001iu9ur046nlayu","_id":"ck42dyik300kou9ur6pulfczq"},{"post_id":"ck42dyijt00k5u9ur6hi5ibfd","category_id":"ck42dyijx00kcu9urlkd37pye","_id":"ck42dyik300kqu9urcegyzm8w"},{"post_id":"ck42dyijt00k5u9ur6hi5ibfd","category_id":"ck42dyijy00kju9ur0juzld8b","_id":"ck42dyik300ksu9ura0o91mgg"},{"post_id":"ck42dyikn00ktu9ur29eb64p9","category_id":"ck42dyigj009uu9ur9wgtgpof","_id":"ck42dyikp00kvu9uritp2inzx"}],"PostTag":[{"post_id":"ck42dyic00003u9urbjdbc0c7","tag_id":"ck42dyic50007u9urfauqb8wh","_id":"ck42dyicj000mu9urbsvp9njj"},{"post_id":"ck42dyic00003u9urbjdbc0c7","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyick000qu9urgphtc7et"},{"post_id":"ck42dyic80009u9ur9e992f7x","tag_id":"ck42dyic50007u9urfauqb8wh","_id":"ck42dyico000yu9uruoyh2v2q"},{"post_id":"ck42dyic80009u9ur9e992f7x","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyicp0012u9uro26h0os3"},{"post_id":"ck42dyic9000bu9urpw04vjel","tag_id":"ck42dyic50007u9urfauqb8wh","_id":"ck42dyicq0015u9urbsfvpc2a"},{"post_id":"ck42dyic9000bu9urpw04vjel","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyicr0019u9ur8km0h9z5"},{"post_id":"ck42dyicu001hu9uri210uk9c","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyicx001lu9urg2o7hqex"},{"post_id":"ck42dyicu001hu9uri210uk9c","tag_id":"ck42dyicp0013u9urds9e1l6x","_id":"ck42dyicy001pu9urol14f0n7"},{"post_id":"ck42dyicc000eu9urg4wl2tc5","tag_id":"ck42dyicp0013u9urds9e1l6x","_id":"ck42dyicz001su9uriiqwcqex"},{"post_id":"ck42dyicc000eu9urg4wl2tc5","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyid0001wu9uruqd19nij"},{"post_id":"ck42dyicc000eu9urg4wl2tc5","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyid1001yu9ur8gg2htmf"},{"post_id":"ck42dyicw001ju9urrx4klupl","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyid20023u9urn6i7r52r"},{"post_id":"ck42dyicw001ju9urrx4klupl","tag_id":"ck42dyicp0013u9urds9e1l6x","_id":"ck42dyid60026u9urwywhsahf"},{"post_id":"ck42dyicw001ju9urrx4klupl","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyid7002au9ury41efvtq"},{"post_id":"ck42dyicx001mu9urdb2amxe5","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyid8002eu9ur1z2vpdjx"},{"post_id":"ck42dyicx001mu9urdb2amxe5","tag_id":"ck42dyicp0013u9urds9e1l6x","_id":"ck42dyida002hu9urnktd4ouz"},{"post_id":"ck42dyicx001mu9urdb2amxe5","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyidc002lu9ur6fgko0rw"},{"post_id":"ck42dyicy001qu9urk625v11n","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyide002pu9ursggkar98"},{"post_id":"ck42dyicy001qu9urk625v11n","tag_id":"ck42dyicp0013u9urds9e1l6x","_id":"ck42dyidf002tu9ururbf02wo"},{"post_id":"ck42dyice000gu9urjxfc7eto","tag_id":"ck42dyicx001ku9urf9ymp07j","_id":"ck42dyidg002wu9ure9edu1sh"},{"post_id":"ck42dyice000gu9urjxfc7eto","tag_id":"ck42dyicz001ru9urfrsxzj24","_id":"ck42dyidi0031u9urlr6vpref"},{"post_id":"ck42dyice000gu9urjxfc7eto","tag_id":"ck42dyid1001zu9urr6baeotp","_id":"ck42dyidj0034u9urxbgwxi5a"},{"post_id":"ck42dyich000ju9urruujtm2p","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyidk0038u9urqp7j2q7u"},{"post_id":"ck42dyich000ju9urruujtm2p","tag_id":"ck42dyida002gu9urmv29ia3y","_id":"ck42dyidl003cu9urnr983ihz"},{"post_id":"ck42dyidf002uu9ur6jevtphs","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyidm003gu9urus9pgjdc"},{"post_id":"ck42dyidf002uu9ur6jevtphs","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyido003ku9ur8wuo7fz6"},{"post_id":"ck42dyidg002yu9urxu56xz59","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyidp003ou9urv7wan7mi"},{"post_id":"ck42dyidg002yu9urxu56xz59","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyidr003su9uryvvxjdx9"},{"post_id":"ck42dyici000lu9urqupfwrpm","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyidt003wu9ur2h2pfu5l"},{"post_id":"ck42dyici000lu9urqupfwrpm","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyidv0040u9ur6j7lujvh"},{"post_id":"ck42dyidi0032u9urmkcnrojw","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyidw0044u9urosr47ahy"},{"post_id":"ck42dyidj0036u9ur6fqwfpt3","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyidx0048u9ur33tl3t5s"},{"post_id":"ck42dyidj0036u9ur6fqwfpt3","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyidy004cu9urqfnzfpjq"},{"post_id":"ck42dyidm003eu9urqv3w1lov","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyidz004fu9urxlac4hp9"},{"post_id":"ck42dyidn003hu9ur36j4sbko","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyie0004ku9ur48oe1v5x"},{"post_id":"ck42dyido003mu9ur15upc9gp","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyie2004nu9urmraar5or"},{"post_id":"ck42dyidp003pu9urmqwa37dg","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyie3004ru9urd7bc8m5h"},{"post_id":"ck42dyick000pu9uri0nvpo0n","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyie4004vu9ur24v2l0n7"},{"post_id":"ck42dyick000pu9uri0nvpo0n","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyie6004zu9uri8nwj5os"},{"post_id":"ck42dyick000pu9uri0nvpo0n","tag_id":"ck42dyido003lu9urkk5gptt0","_id":"ck42dyie70053u9urtjeskhla"},{"post_id":"ck42dyicl000su9urkvrd0s52","tag_id":"ck42dyids003vu9urloa9wgdb","_id":"ck42dyie80057u9urjkgekb3i"},{"post_id":"ck42dyicl000su9urkvrd0s52","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyiea005bu9urnurrpppf"},{"post_id":"ck42dyicl000su9urkvrd0s52","tag_id":"ck42dyidy004bu9ur8jfwlcuc","_id":"ck42dyiec005fu9urmtj8b10k"},{"post_id":"ck42dyicm000vu9ur536spgsb","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyied005ju9urdbodtqsh"},{"post_id":"ck42dyicm000vu9ur536spgsb","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyief005nu9urf6nxqaue"},{"post_id":"ck42dyie60051u9uray962bxi","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyieg005ru9urxh5hk5v2"},{"post_id":"ck42dyie70055u9urf3937v88","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyiej005vu9ursyt8490p"},{"post_id":"ck42dyico000xu9ury32lrnad","tag_id":"ck42dyie60050u9urynxy8f9o","_id":"ck42dyiek005yu9ursclxh12r"},{"post_id":"ck42dyico000xu9ury32lrnad","tag_id":"ck42dyiea005au9urlxgbu7n6","_id":"ck42dyiem0063u9ur6zk9jnkq"},{"post_id":"ck42dyico000xu9ury32lrnad","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyien0066u9uridpxskmb"},{"post_id":"ck42dyicp0011u9ur16of6nsm","tag_id":"ck42dyied005iu9ur1fa493x6","_id":"ck42dyieo006au9urqz1185do"},{"post_id":"ck42dyicp0011u9ur16of6nsm","tag_id":"ck42dyieg005qu9ur1ylt217i","_id":"ck42dyieo006eu9urz5a8vuxq"},{"post_id":"ck42dyien0067u9urtifjjla4","tag_id":"ck42dyids003vu9urloa9wgdb","_id":"ck42dyier006iu9urdykg6eru"},{"post_id":"ck42dyien0067u9urtifjjla4","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyiet006mu9urgx486apx"},{"post_id":"ck42dyieo006cu9urw3tn9x97","tag_id":"ck42dyids003vu9urloa9wgdb","_id":"ck42dyieu006qu9urya19khyx"},{"post_id":"ck42dyicq0018u9urk6r2fp4k","tag_id":"ck42dyiel005zu9ur9gwf36l1","_id":"ck42dyiew006uu9urpt70qmv7"},{"post_id":"ck42dyicq0018u9urk6r2fp4k","tag_id":"ck42dyien0069u9urwif2fx5v","_id":"ck42dyiey006yu9ur8iur87uo"},{"post_id":"ck42dyicr001bu9urtidh4qd1","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyiez0072u9urcw0gc9ej"},{"post_id":"ck42dyiez006zu9urh99v9jth","tag_id":"ck42dyie60050u9urynxy8f9o","_id":"ck42dyif00075u9uray95j0tt"},{"post_id":"ck42dyict001eu9urhj3axxnw","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyif3007au9uriipnuwc0"},{"post_id":"ck42dyict001eu9urhj3axxnw","tag_id":"ck42dyiey006xu9ur4qy6ptn3","_id":"ck42dyif5007du9urvj27sr99"},{"post_id":"ck42dyif10077u9urq73wewt1","tag_id":"ck42dyie60050u9urynxy8f9o","_id":"ck42dyif8007iu9urkyrv1czt"},{"post_id":"ck42dyicz001tu9ur7bv6ouxw","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyifc007ou9urkjgs0tt0"},{"post_id":"ck42dyicz001tu9ur7bv6ouxw","tag_id":"ck42dyif5007eu9urdxhk7sbk","_id":"ck42dyife007su9urudxacuja"},{"post_id":"ck42dyift0082u9urpu4ca5fo","tag_id":"ck42dyids003vu9urloa9wgdb","_id":"ck42dyifx0088u9ur890skqfc"},{"post_id":"ck42dyift0082u9urpu4ca5fo","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyify008cu9urkljz1wyh"},{"post_id":"ck42dyid0001xu9ura4dhdhr0","tag_id":"ck42dyifc007nu9urvmjubted","_id":"ck42dyig0008fu9urfcqnze5n"},{"post_id":"ck42dyid0001xu9ura4dhdhr0","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyig1008ku9ur6sfop6tl"},{"post_id":"ck42dyid0001xu9ura4dhdhr0","tag_id":"ck42dyift0081u9urf1lnlzuy","_id":"ck42dyig2008nu9urlimtzqo6"},{"post_id":"ck42dyid20020u9urrxn2hq0e","tag_id":"ck42dyifx0087u9urraismvti","_id":"ck42dyigb0096u9urh2bfy85f"},{"post_id":"ck42dyid20020u9urrxn2hq0e","tag_id":"ck42dyig0008gu9ur0ph1q6i1","_id":"ck42dyigc0099u9ur3dp73ldt"},{"post_id":"ck42dyid20020u9urrxn2hq0e","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyigd009eu9urwk7wuw2b"},{"post_id":"ck42dyid20020u9urrxn2hq0e","tag_id":"ck42dyig6008wu9ur8d3gvotr","_id":"ck42dyige009hu9ur2e1gt0qi"},{"post_id":"ck42dyigd009cu9uraae46azw","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyigg009mu9urha25egsl"},{"post_id":"ck42dyid30024u9urt26wtcft","tag_id":"ck42dyig90092u9ur0sfoh5s2","_id":"ck42dyigh009pu9urhrrjpitc"},{"post_id":"ck42dyid30024u9urt26wtcft","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyigi009tu9urgu1df7ty"},{"post_id":"ck42dyid60027u9urhtb9rqg1","tag_id":"ck42dyig90092u9ur0sfoh5s2","_id":"ck42dyigm00a1u9urjy8wyvwl"},{"post_id":"ck42dyid60027u9urhtb9rqg1","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyign00a4u9ur0646fbi5"},{"post_id":"ck42dyid7002cu9urkz2saysu","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyigo00a9u9urdfnp2bnr"},{"post_id":"ck42dyid9002fu9urfuauibzy","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyigr00agu9urk8xj9o7u"},{"post_id":"ck42dyid9002fu9urfuauibzy","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyigs00aju9uri7uk5uuf"},{"post_id":"ck42dyigq00adu9urbzrs2eiz","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyigv00aou9urjhg6za88"},{"post_id":"ck42dyigq00adu9urbzrs2eiz","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyigw00aru9urtk1v2f47"},{"post_id":"ck42dyigr00ahu9urh53qz04s","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyigx00awu9urc5x3jbqd"},{"post_id":"ck42dyigr00ahu9urh53qz04s","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyigx00azu9urihrpx1uf"},{"post_id":"ck42dyigv00apu9urxqhrg3cs","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyigy00b3u9ur6j634bx3"},{"post_id":"ck42dyigv00apu9urxqhrg3cs","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyigz00b7u9urvp4w7uh8"},{"post_id":"ck42dyidb002ju9uri74fw4sh","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyih000bbu9ur77cw7mzh"},{"post_id":"ck42dyidb002ju9uri74fw4sh","tag_id":"ck42dyigs00aku9ur7q4urovg","_id":"ck42dyih200bfu9uruh80ogdt"},{"post_id":"ck42dyigw00asu9ur59k1lnri","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyih400bju9urf62hq3h9"},{"post_id":"ck42dyidc002mu9ur0c8xnl9e","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyih500bnu9urprkt2qdb"},{"post_id":"ck42dyidc002mu9ur0c8xnl9e","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyih600bqu9ureeajt4sc"},{"post_id":"ck42dyide002qu9ur2bszti68","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyih700bvu9urflyl5ilk"},{"post_id":"ck42dyide002qu9ur2bszti68","tag_id":"ck42dyigy00b2u9ur7zgmz1jt","_id":"ck42dyih800byu9url1c6wvuy"},{"post_id":"ck42dyih100bdu9urzuerv6vk","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyiha00c2u9urg0js6rzv"},{"post_id":"ck42dyidk003au9urkecby50t","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyiha00c4u9urwlr6ardq"},{"post_id":"ck42dyidk003au9urkecby50t","tag_id":"ck42dyih000bau9urigjs2y58","_id":"ck42dyiha00c7u9uri9mlf1r7"},{"post_id":"ck42dyidr003tu9ur1ps5pf9f","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyihb00cau9urjgkd028t"},{"post_id":"ck42dyidr003tu9ur1ps5pf9f","tag_id":"ck42dyih400biu9urnb86wp1x","_id":"ck42dyihb00cdu9urlpyml5l4"},{"post_id":"ck42dyih600bsu9ur5bnjcns7","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyihb00cgu9ur9n050wxy"},{"post_id":"ck42dyidu003xu9urmzmktedr","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyihc00cju9uroquhn24q"},{"post_id":"ck42dyidu003xu9urmzmktedr","tag_id":"ck42dyih600bru9urx6qzmjlo","_id":"ck42dyihc00cmu9urf4rc142b"},{"post_id":"ck42dyidv0041u9urxy1z098x","tag_id":"ck42dyih800c0u9urh0mksjyc","_id":"ck42dyihc00cpu9ur1ixpxmj0"},{"post_id":"ck42dyidv0041u9urxy1z098x","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyihd00csu9urhnq00f6z"},{"post_id":"ck42dyidw0045u9urcfwyebxy","tag_id":"ck42dyih800c0u9urh0mksjyc","_id":"ck42dyihd00cvu9urfsexq3u4"},{"post_id":"ck42dyidw0045u9urcfwyebxy","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyihe00cyu9ur49e26sts"},{"post_id":"ck42dyidx0049u9urmn2e8brx","tag_id":"ck42dyih800c0u9urh0mksjyc","_id":"ck42dyihf00d2u9ur56zjnejx"},{"post_id":"ck42dyidx0049u9urmn2e8brx","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyihf00d5u9urxc13mc7f"},{"post_id":"ck42dyidy004du9uri286utzh","tag_id":"ck42dyihe00d0u9ur8v091aav","_id":"ck42dyihg00dgu9urwa3ym47b"},{"post_id":"ck42dyidy004du9uri286utzh","tag_id":"ck42dyihf00d6u9ur5p6xje4u","_id":"ck42dyihh00dju9urud3bzbm1"},{"post_id":"ck42dyidy004du9uri286utzh","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyihh00dmu9ur9lc8kn66"},{"post_id":"ck42dyidz004hu9ur32sytjrf","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyihh00dru9ur829mi0yn"},{"post_id":"ck42dyidz004hu9ur32sytjrf","tag_id":"ck42dyihh00dku9urz7dtvfy7","_id":"ck42dyihi00duu9urelyfq2rq"},{"post_id":"ck42dyie1004lu9ura4wmfdg4","tag_id":"ck42dyihh00dqu9ur7kuad7qx","_id":"ck42dyihj00e2u9ur3odegb7s"},{"post_id":"ck42dyie1004lu9ura4wmfdg4","tag_id":"ck42dyihf00d6u9ur5p6xje4u","_id":"ck42dyihk00e5u9urvcg4ctxi"},{"post_id":"ck42dyie1004lu9ura4wmfdg4","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyihk00e8u9urzt6ol9jr"},{"post_id":"ck42dyie2004pu9ur600ottdx","tag_id":"ck42dyihj00e0u9urgl6skth4","_id":"ck42dyihk00ecu9ur7cbmyhy7"},{"post_id":"ck42dyie2004pu9ur600ottdx","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyihk00eeu9ur8o13nlh0"},{"post_id":"ck42dyie2004pu9ur600ottdx","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyihl00ehu9urdwlrz1sv"},{"post_id":"ck42dyie3004tu9ure1sybbb2","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyihl00eju9ur2wkapnl8"},{"post_id":"ck42dyie3004tu9ure1sybbb2","tag_id":"ck42dyihk00eau9ur39oduqtb","_id":"ck42dyihl00emu9urx3ssaxiv"},{"post_id":"ck42dyie5004xu9ur4n2tr699","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyihm00enu9urku7445tx"},{"post_id":"ck42dyie5004xu9ur4n2tr699","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyihm00epu9urr9o4c3aa"},{"post_id":"ck42dyie5004xu9ur4n2tr699","tag_id":"ck42dyihf00d6u9ur5p6xje4u","_id":"ck42dyihm00equ9urifao4xr4"},{"post_id":"ck42dyie80058u9urk08qpear","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyihm00esu9urfi8y5a3m"},{"post_id":"ck42dyie80058u9urk08qpear","tag_id":"ck42dyihl00eku9ur7k8nvoux","_id":"ck42dyihm00etu9urj3rzjt3l"},{"post_id":"ck42dyie80058u9urk08qpear","tag_id":"ck42dyida002gu9urmv29ia3y","_id":"ck42dyihm00euu9urn179kvdf"},{"post_id":"ck42dyiea005cu9urx0krepoc","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyihn00ewu9urd7cfdf8p"},{"post_id":"ck42dyiea005cu9urx0krepoc","tag_id":"ck42dyihm00eou9urt2bgo0je","_id":"ck42dyihn00exu9ur6vodd7vz"},{"post_id":"ck42dyiea005cu9urx0krepoc","tag_id":"ck42dyihm00eru9urgjz163h1","_id":"ck42dyihn00ezu9urq507stxz"},{"post_id":"ck42dyiec005gu9urih6b5qe3","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyihn00f0u9urwkgkg3gu"},{"post_id":"ck42dyiec005gu9urih6b5qe3","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyihn00f2u9urh1ctlbj9"},{"post_id":"ck42dyiec005gu9urih6b5qe3","tag_id":"ck42dyihf00d6u9ur5p6xje4u","_id":"ck42dyihn00f3u9ura4yuubim"},{"post_id":"ck42dyied005ku9ur3216sak8","tag_id":"ck42dyihn00eyu9ur9dgzyic5","_id":"ck42dyiho00f5u9urgdpz259r"},{"post_id":"ck42dyief005ou9uravou0m3p","tag_id":"ck42dyihn00eyu9ur9dgzyic5","_id":"ck42dyiho00f6u9urgrr823n4"},{"post_id":"ck42dyief005ou9uravou0m3p","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyiho00f8u9urdxxazn3f"},{"post_id":"ck42dyieg005su9urt708jedd","tag_id":"ck42dyihn00eyu9ur9dgzyic5","_id":"ck42dyiho00f9u9urz94emfwh"},{"post_id":"ck42dyiej005wu9uruzte9t7p","tag_id":"ck42dyiho00f7u9urip5269fo","_id":"ck42dyihp00fcu9ura1vw22nn"},{"post_id":"ck42dyiej005wu9uruzte9t7p","tag_id":"ck42dyiea005au9urlxgbu7n6","_id":"ck42dyihp00fdu9urv7h0jox2"},{"post_id":"ck42dyiej005wu9uruzte9t7p","tag_id":"ck42dyie60050u9urynxy8f9o","_id":"ck42dyihp00ffu9urten3n6fy"},{"post_id":"ck42dyiej005wu9uruzte9t7p","tag_id":"ck42dyihn00eyu9ur9dgzyic5","_id":"ck42dyihp00fgu9ur9qeenpq8"},{"post_id":"ck42dyiel0060u9ur1fmq7dra","tag_id":"ck42dyihn00eyu9ur9dgzyic5","_id":"ck42dyihp00fiu9ur6ifpl79d"},{"post_id":"ck42dyiel0060u9ur1fmq7dra","tag_id":"ck42dyihp00feu9urhxscum4w","_id":"ck42dyihp00fju9uriu8ixbkg"},{"post_id":"ck42dyiem0064u9urokuo0ek4","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyihq00flu9ur4oqielpn"},{"post_id":"ck42dyiem0064u9urokuo0ek4","tag_id":"ck42dyihp00fhu9uro65lsr2z","_id":"ck42dyihq00fmu9urru4o6wej"},{"post_id":"ck42dyiep006fu9uricgx4r1l","tag_id":"ck42dyids003vu9urloa9wgdb","_id":"ck42dyihq00fou9urtd60rjdl"},{"post_id":"ck42dyiep006fu9uricgx4r1l","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyihq00fpu9ur4e908krx"},{"post_id":"ck42dyiep006fu9uricgx4r1l","tag_id":"ck42dyihp00fku9urda6xei40","_id":"ck42dyihr00fru9ur0q6zz126"},{"post_id":"ck42dyier006ju9urjnalmtlb","tag_id":"ck42dyid60028u9urn6t6277i","_id":"ck42dyihr00ftu9urzrthqzts"},{"post_id":"ck42dyier006ju9urjnalmtlb","tag_id":"ck42dyihq00fnu9ur42lwtdzi","_id":"ck42dyihr00fuu9urrs6eqtwy"},{"post_id":"ck42dyier006ju9urjnalmtlb","tag_id":"ck42dyids003vu9urloa9wgdb","_id":"ck42dyihs00fwu9urou8k1ji7"},{"post_id":"ck42dyier006ju9urjnalmtlb","tag_id":"ck42dyihf00d6u9ur5p6xje4u","_id":"ck42dyihs00fxu9uricoz9x84"},{"post_id":"ck42dyiet006nu9urx1wzlpxr","tag_id":"ck42dyihr00fsu9urru5br8tf","_id":"ck42dyihs00fzu9ur4fqav6sx"},{"post_id":"ck42dyiet006nu9urx1wzlpxr","tag_id":"ck42dyihf00d6u9ur5p6xje4u","_id":"ck42dyihs00g0u9urrc7wmuxy"},{"post_id":"ck42dyieu006ru9urx7kxlwk3","tag_id":"ck42dyihs00fyu9ur2gi22qa4","_id":"ck42dyihs00g3u9urov3axzez"},{"post_id":"ck42dyieu006ru9urx7kxlwk3","tag_id":"ck42dyihs00g1u9ur9axqsee0","_id":"ck42dyihs00g4u9urricz05kv"},{"post_id":"ck42dyieu006ru9urx7kxlwk3","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyiht00g6u9uru9hmtzp6"},{"post_id":"ck42dyiew006vu9urqfy1a7g9","tag_id":"ck42dyie60050u9urynxy8f9o","_id":"ck42dyiht00g7u9ur3yqu2ji6"},{"post_id":"ck42dyiew006vu9urqfy1a7g9","tag_id":"ck42dyihs00g2u9urrjn6k1tn","_id":"ck42dyiht00g9u9urid4rszbg"},{"post_id":"ck42dyif00073u9ur6m2dl089","tag_id":"ck42dyie60050u9urynxy8f9o","_id":"ck42dyiht00gau9ury8ggflho"},{"post_id":"ck42dyif00073u9ur6m2dl089","tag_id":"ck42dyiht00g5u9urowiuqr23","_id":"ck42dyiht00gcu9ur0iiuu5am"},{"post_id":"ck42dyif3007bu9ur7fuzduyu","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyiht00geu9ureas9bwl7"},{"post_id":"ck42dyif3007bu9ur7fuzduyu","tag_id":"ck42dyiht00g8u9urdtz45wp4","_id":"ck42dyihu00gfu9urs54ffimn"},{"post_id":"ck42dyif3007bu9ur7fuzduyu","tag_id":"ck42dyiht00gbu9ur14cfoknx","_id":"ck42dyihu00ghu9urb0esxi8w"},{"post_id":"ck42dyif3007bu9ur7fuzduyu","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyihu00giu9urng5j3i06"},{"post_id":"ck42dyif5007fu9urwx15saig","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyihu00gku9ur752xy26o"},{"post_id":"ck42dyif8007ju9ure5wm1iqx","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyihu00glu9urhp98h9wo"},{"post_id":"ck42dyifb007lu9urtzm9q0qa","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyihv00gnu9ur71fg4l2a"},{"post_id":"ck42dyifc007qu9urjilpk6xk","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyihv00gpu9urn96awhj5"},{"post_id":"ck42dyiff007tu9urbngaw0u1","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyihw00gsu9urn7dbhl4x"},{"post_id":"ck42dyiff007tu9urbngaw0u1","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyihw00gtu9ur39fogio9"},{"post_id":"ck42dyifl007wu9ur3hpvgif1","tag_id":"ck42dyihe00d0u9ur8v091aav","_id":"ck42dyihx00gxu9urv4v3006v"},{"post_id":"ck42dyifl007wu9ur3hpvgif1","tag_id":"ck42dyihw00guu9urlaicbxdm","_id":"ck42dyihx00gyu9ur9spv1wtz"},{"post_id":"ck42dyifl007wu9ur3hpvgif1","tag_id":"ck42dyihw00gvu9ur30ud9v4z","_id":"ck42dyihx00h0u9urlbpbmnmy"},{"post_id":"ck42dyifs007zu9urfd6v88ma","tag_id":"ck42dyihx00gwu9urw0rf50zd","_id":"ck42dyihy00h2u9urymi8gc1g"},{"post_id":"ck42dyifs007zu9urfd6v88ma","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyihy00h3u9uro1o02i92"},{"post_id":"ck42dyifu0085u9uri8y0a9sg","tag_id":"ck42dyihx00h1u9urgf9hgvwo","_id":"ck42dyihy00h5u9ur1io8vp1n"},{"post_id":"ck42dyifu0085u9uri8y0a9sg","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyihy00h6u9urft6ph631"},{"post_id":"ck42dyifx0089u9ur9xyj2d7r","tag_id":"ck42dyihx00h1u9urgf9hgvwo","_id":"ck42dyihz00h8u9urwke4850k"},{"post_id":"ck42dyifx0089u9ur9xyj2d7r","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyihz00h9u9urs9jqkjsh"},{"post_id":"ck42dyifz008du9urfbilrfkz","tag_id":"ck42dyihx00h1u9urgf9hgvwo","_id":"ck42dyihz00hbu9ur2f09t9d8"},{"post_id":"ck42dyifz008du9urfbilrfkz","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyihz00hcu9urp9xerzz4"},{"post_id":"ck42dyig0008hu9urh3700er2","tag_id":"ck42dyihz00hau9urfoa42nfp","_id":"ck42dyii000heu9urdkl17et2"},{"post_id":"ck42dyig0008hu9urh3700er2","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyii000hfu9urk4kh5fsu"},{"post_id":"ck42dyig1008lu9urywtlrht9","tag_id":"ck42dyii000hdu9urfv876hk0","_id":"ck42dyii100hku9ur43zpn33b"},{"post_id":"ck42dyig1008lu9urywtlrht9","tag_id":"ck42dyii000hgu9urkj2kgmfj","_id":"ck42dyii100hlu9urcjvfvdx1"},{"post_id":"ck42dyig1008lu9urywtlrht9","tag_id":"ck42dyii000hhu9urc5sao756","_id":"ck42dyii100hnu9urtf4fw89u"},{"post_id":"ck42dyig1008lu9urywtlrht9","tag_id":"ck42dyihf00d6u9ur5p6xje4u","_id":"ck42dyii100hou9urj2sab8lb"},{"post_id":"ck42dyig2008ou9ur9yg3kdkm","tag_id":"ck42dyii000hju9urskkl3gg6","_id":"ck42dyii200hqu9urapn04lh1"},{"post_id":"ck42dyig2008ou9ur9yg3kdkm","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyii200hru9urfi0gxe05"},{"post_id":"ck42dyig5008su9ur1xno1qs7","tag_id":"ck42dyii000hju9urskkl3gg6","_id":"ck42dyii200htu9urdoqyk6db"},{"post_id":"ck42dyig5008su9ur1xno1qs7","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyii200huu9urt4qd0xsr"},{"post_id":"ck42dyig5008uu9urw2488pjk","tag_id":"ck42dyihj00e0u9urgl6skth4","_id":"ck42dyii300hwu9urq219fcb7"},{"post_id":"ck42dyig5008uu9urw2488pjk","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyii300hxu9urk1oq3rz8"},{"post_id":"ck42dyig5008uu9urw2488pjk","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyii400hzu9urs1qjsdoy"},{"post_id":"ck42dyig7008yu9urtahqsg2f","tag_id":"ck42dyihj00e0u9urgl6skth4","_id":"ck42dyii400i0u9urh0mk8de9"},{"post_id":"ck42dyig7008yu9urtahqsg2f","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyii400i2u9urv15uw6a3"},{"post_id":"ck42dyig7008yu9urtahqsg2f","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyii400i3u9ur5u2l7a5b"},{"post_id":"ck42dyig70090u9urh9tuec8y","tag_id":"ck42dyihj00e0u9urgl6skth4","_id":"ck42dyii500i5u9urau9wv444"},{"post_id":"ck42dyig70090u9urh9tuec8y","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyii500i6u9urp23027pc"},{"post_id":"ck42dyig70090u9urh9tuec8y","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyii500i8u9urjizkx542"},{"post_id":"ck42dyiga0094u9ur94n3k7ek","tag_id":"ck42dyihj00e0u9urgl6skth4","_id":"ck42dyii500i9u9urltxrdway"},{"post_id":"ck42dyiga0094u9ur94n3k7ek","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyii500ibu9urkvjuzhha"},{"post_id":"ck42dyiga0094u9ur94n3k7ek","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyii500icu9ur88hbaylz"},{"post_id":"ck42dyigb0097u9ur3m8l5chp","tag_id":"ck42dyihj00e0u9urgl6skth4","_id":"ck42dyii600ieu9urgnv76c3o"},{"post_id":"ck42dyigb0097u9ur3m8l5chp","tag_id":"ck42dyieu006pu9urz6azwdif","_id":"ck42dyii600ifu9ur6x4pvuvd"},{"post_id":"ck42dyigb0097u9ur3m8l5chp","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyii600ihu9urdn0b1rgv"},{"post_id":"ck42dyige009fu9urmf7vta0g","tag_id":"ck42dyihe00d0u9ur8v091aav","_id":"ck42dyii600iiu9urfw7c93jn"},{"post_id":"ck42dyige009fu9urmf7vta0g","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyii700iku9urhh3v6q9v"},{"post_id":"ck42dyige009fu9urmf7vta0g","tag_id":"ck42dyii500iau9urga7q9wcf","_id":"ck42dyii700ilu9ura7enki2b"},{"post_id":"ck42dyige009fu9urmf7vta0g","tag_id":"ck42dyigc009au9ur8y08en6t","_id":"ck42dyii800inu9uresadxk0z"},{"post_id":"ck42dyigf009ku9ur4g7nst10","tag_id":"ck42dyii500iau9urga7q9wcf","_id":"ck42dyii800iou9urv1zcvq7l"},{"post_id":"ck42dyigf009ku9ur4g7nst10","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyii900ipu9ur2eh7cnkh"},{"post_id":"ck42dyigf009ku9ur4g7nst10","tag_id":"ck42dyii600iju9urr7ktt5qw","_id":"ck42dyii900iru9urxk7tdq20"},{"post_id":"ck42dyigg009nu9urz1nleh1q","tag_id":"ck42dyie60050u9urynxy8f9o","_id":"ck42dyii900itu9uremqpv0zg"},{"post_id":"ck42dyigg009nu9urz1nleh1q","tag_id":"ck42dyii700imu9urbert1af4","_id":"ck42dyii900iuu9ur29494qai"},{"post_id":"ck42dyigg009nu9urz1nleh1q","tag_id":"ck42dyiho00f7u9urip5269fo","_id":"ck42dyiia00iwu9ur5ccswsqp"},{"post_id":"ck42dyigj009vu9uroluojkw0","tag_id":"ck42dyii900isu9urowo2jazt","_id":"ck42dyiia00ixu9ur3owhvyqr"},{"post_id":"ck42dyigk009yu9urx3kbc4fp","tag_id":"ck42dyii900isu9urowo2jazt","_id":"ck42dyiia00izu9urobwr0cgs"},{"post_id":"ck42dyigm00a2u9ur4vivbd1d","tag_id":"ck42dyiia00iyu9urrnjipz74","_id":"ck42dyiia00j1u9urce1libhd"},{"post_id":"ck42dyign00a6u9urk67e5qr1","tag_id":"ck42dyiia00iyu9urrnjipz74","_id":"ck42dyiib00j3u9uruuf2v4hj"},{"post_id":"ck42dyign00a6u9urk67e5qr1","tag_id":"ck42dyicr001au9urxarsymev","_id":"ck42dyiib00j4u9ur02lpewfn"},{"post_id":"ck42dyigo00aau9urtv6ed9wt","tag_id":"ck42dyicp0013u9urds9e1l6x","_id":"ck42dyiie00j6u9urzj7xqqj4"},{"post_id":"ck42dyigo00aau9urtv6ed9wt","tag_id":"ck42dyihn00eyu9ur9dgzyic5","_id":"ck42dyiie00j7u9uryop4ynva"},{"post_id":"ck42dyigo00aau9urtv6ed9wt","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyiif00j9u9ur1xdgst5x"},{"post_id":"ck42dyigx00axu9ur34j2wuy5","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyiif00jau9uragivqdzn"},{"post_id":"ck42dyigx00axu9ur34j2wuy5","tag_id":"ck42dyii700imu9urbert1af4","_id":"ck42dyiig00jcu9urcip88oio"},{"post_id":"ck42dyigx00b0u9urcrqs040f","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyiig00jeu9ureu2wksbv"},{"post_id":"ck42dyigx00b0u9urcrqs040f","tag_id":"ck42dyii000hhu9urc5sao756","_id":"ck42dyiih00jfu9ur9u60f4hn"},{"post_id":"ck42dyigx00b0u9urcrqs040f","tag_id":"ck42dyii600iju9urr7ktt5qw","_id":"ck42dyiih00jhu9urqhb779c0"},{"post_id":"ck42dyigz00b5u9ur8g0q60y9","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyiih00jiu9ursan1i05c"},{"post_id":"ck42dyigz00b5u9ur8g0q60y9","tag_id":"ck42dyiig00jdu9urlw24oezi","_id":"ck42dyiih00jku9urenry8dok"},{"post_id":"ck42dyih300bgu9url7dxic2n","tag_id":"ck42dyie0004ju9urogqeiukc","_id":"ck42dyiih00jlu9uru0yp6mf5"},{"post_id":"ck42dyih300bgu9url7dxic2n","tag_id":"ck42dyiih00jgu9ur5nrdsysp","_id":"ck42dyiih00jnu9uruyiciv6g"},{"post_id":"ck42dyih700bwu9urgfcgiqk6","tag_id":"ck42dyiih00jju9urmx4rdpsj","_id":"ck42dyiii00jou9urm52gq8ar"},{"post_id":"ck42dyih700bwu9urgfcgiqk6","tag_id":"ck42dyiih00jmu9urasncektx","_id":"ck42dyiii00jpu9ursnv2jl0u"},{"post_id":"ck42dyijh00jqu9urj60iu6i2","tag_id":"ck42dyic50007u9urfauqb8wh","_id":"ck42dyijn00jsu9ur31h64zh2"},{"post_id":"ck42dyijh00jqu9urj60iu6i2","tag_id":"ck42dyicd000fu9urevocmi8l","_id":"ck42dyijo00juu9urohptiq9r"},{"post_id":"ck42dyijm00jru9urw3mpqfku","tag_id":"ck42dyied005iu9ur1fa493x6","_id":"ck42dyijp00jyu9ur1ldf0ie1"},{"post_id":"ck42dyijo00jvu9urn6oa27sg","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyijr00k1u9ur9u2705pa"},{"post_id":"ck42dyijo00jvu9urn6oa27sg","tag_id":"ck42dyicn000wu9uryzvhtwe6","_id":"ck42dyijt00k4u9ural2ek47d"},{"post_id":"ck42dyijr00k2u9ur95q8zsgu","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyiju00k8u9urb1436t4z"},{"post_id":"ck42dyijr00k2u9ur95q8zsgu","tag_id":"ck42dyihm00eru9urgjz163h1","_id":"ck42dyijw00kbu9urkkz04zct"},{"post_id":"ck42dyijn00jtu9ur9ciwf7nc","tag_id":"ck42dyifx0087u9urraismvti","_id":"ck42dyijx00kfu9ursjmv9ojs"},{"post_id":"ck42dyijn00jtu9ur9ciwf7nc","tag_id":"ck42dyijp00jxu9ur8vcz71gx","_id":"ck42dyijx00kgu9urls8wni95"},{"post_id":"ck42dyijt00k5u9ur6hi5ibfd","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyijy00kiu9urfwxvnox4"},{"post_id":"ck42dyijt00k5u9ur6hi5ibfd","tag_id":"ck42dyihn00eyu9ur9dgzyic5","_id":"ck42dyijz00kku9urw7poeuxq"},{"post_id":"ck42dyijt00k5u9ur6hi5ibfd","tag_id":"ck42dyicu001fu9urzjgc99lu","_id":"ck42dyijz00klu9ur8nczl6m1"},{"post_id":"ck42dyijp00jzu9uruvjqylwh","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyijz00kmu9urbok48ulw"},{"post_id":"ck42dyijp00jzu9uruvjqylwh","tag_id":"ck42dyiju00k6u9urthco91fm","_id":"ck42dyik200knu9ur8npbusfj"},{"post_id":"ck42dyijv00k9u9urg9hjf2jh","tag_id":"ck42dyijx00keu9urz1mm4nvm","_id":"ck42dyik300kpu9ureulx7te0"},{"post_id":"ck42dyijv00k9u9urg9hjf2jh","tag_id":"ck42dyidd002ou9ury4lltdgw","_id":"ck42dyik300kru9ur0j7rseg0"},{"post_id":"ck42dyikn00ktu9ur29eb64p9","tag_id":"ck42dyiht00gdu9ur5ve4jfhr","_id":"ck42dyiko00kuu9uru0oebf70"}],"Tag":[{"name":"apache","_id":"ck42dyic50007u9urfauqb8wh"},{"name":"webserver","_id":"ck42dyicd000fu9urevocmi8l"},{"name":"command","_id":"ck42dyicn000wu9uryzvhtwe6"},{"name":"iis","_id":"ck42dyicp0013u9urds9e1l6x"},{"name":"windows","_id":"ck42dyicr001au9urxarsymev"},{"name":"debug","_id":"ck42dyicu001fu9urzjgc99lu"},{"name":"aws","_id":"ck42dyicx001ku9urf9ymp07j"},{"name":"lambda","_id":"ck42dyicz001ru9urfrsxzj24"},{"name":"cloudfront","_id":"ck42dyid1001zu9urr6baeotp"},{"name":"mysql","_id":"ck42dyid60028u9urn6t6277i"},{"name":"mysql-proxy","_id":"ck42dyida002gu9urmv29ia3y"},{"name":"linux","_id":"ck42dyidd002ou9ury4lltdgw"},{"name":"cpulimit","_id":"ck42dyido003lu9urkk5gptt0"},{"name":"php","_id":"ck42dyids003vu9urloa9wgdb"},{"name":"dedecms","_id":"ck42dyidy004bu9ur8jfwlcuc"},{"name":"zabbix","_id":"ck42dyie0004ju9urogqeiukc"},{"name":"python","_id":"ck42dyie60050u9urynxy8f9o"},{"name":"django","_id":"ck42dyiea005au9urlxgbu7n6"},{"name":"dns","_id":"ck42dyied005iu9ur1fa493x6"},{"name":"view","_id":"ck42dyieg005qu9ur1ylt217i"},{"name":"domain","_id":"ck42dyiel005zu9ur9gwf36l1"},{"name":"statusCode","_id":"ck42dyien0069u9urwif2fx5v"},{"name":"http","_id":"ck42dyieu006pu9urz6azwdif"},{"name":"cache","_id":"ck42dyiey006xu9ur4qy6ptn3"},{"name":"iptables","_id":"ck42dyif5007eu9urdxhk7sbk"},{"name":"iscsi","_id":"ck42dyifc007nu9urvmjubted"},{"name":"store","_id":"ck42dyift0081u9urf1lnlzuy"},{"name":"k8s","_id":"ck42dyifx0087u9urraismvti"},{"name":"tcpdump","_id":"ck42dyig0008gu9ur0ph1q6i1"},{"name":"network","_id":"ck42dyig6008wu9ur8d3gvotr"},{"name":"keepalived","_id":"ck42dyig90092u9ur0sfoh5s2"},{"name":"cluster","_id":"ck42dyigc009au9ur8y08en6t"},{"name":"arp","_id":"ck42dyigs00aku9ur7q4urovg"},{"name":"kernal","_id":"ck42dyigy00b2u9ur7zgmz1jt"},{"name":"acl","_id":"ck42dyih000bau9urigjs2y58"},{"name":"commands","_id":"ck42dyih400biu9urnb86wp1x"},{"name":"yum","_id":"ck42dyih600bru9urx6qzmjlo"},{"name":"lvs","_id":"ck42dyih800c0u9urh0mksjyc"},{"name":"memcached","_id":"ck42dyihe00d0u9ur8v091aav"},{"name":"database","_id":"ck42dyihf00d6u9ur5p6xje4u"},{"name":"mime-type","_id":"ck42dyihh00dku9urz7dtvfy7"},{"name":"mssql","_id":"ck42dyihh00dqu9ur7kuad7qx"},{"name":"tomcat","_id":"ck42dyihj00e0u9urgl6skth4"},{"name":"binlog","_id":"ck42dyihk00eau9ur39oduqtb"},{"name":"amoeba","_id":"ck42dyihl00eku9ur7k8nvoux"},{"name":"mysqlcheck","_id":"ck42dyihm00eou9urt2bgo0je"},{"name":"tool","_id":"ck42dyihm00eru9urgjz163h1"},{"name":"nginx","_id":"ck42dyihn00eyu9ur9dgzyic5"},{"name":"uwsgi","_id":"ck42dyiho00f7u9urip5269fo"},{"name":"websocket","_id":"ck42dyihp00feu9urhxscum4w"},{"name":"ntp","_id":"ck42dyihp00fhu9uro65lsr2z"},{"name":"CMS","_id":"ck42dyihp00fku9urda6xei40"},{"name":"phpmyadmin","_id":"ck42dyihq00fnu9ur42lwtdzi"},{"name":"postgresql","_id":"ck42dyihr00fsu9urru5br8tf"},{"name":"pxe","_id":"ck42dyihs00fyu9ur2gi22qa4"},{"name":"kickstart","_id":"ck42dyihs00g1u9ur9axqsee0"},{"name":"socket","_id":"ck42dyihs00g2u9urrjn6k1tn"},{"name":"mail","_id":"ck42dyiht00g5u9urowiuqr23"},{"name":"rbash","_id":"ck42dyiht00g8u9urdtz45wp4"},{"name":"bash","_id":"ck42dyiht00gbu9ur14cfoknx"},{"name":"redis","_id":"ck42dyiht00gdu9ur5ve4jfhr"},{"name":"repcache","_id":"ck42dyihw00guu9urlaicbxdm"},{"name":"magent","_id":"ck42dyihw00gvu9ur30ud9v4z"},{"name":"rhcs","_id":"ck42dyihx00gwu9urw0rf50zd"},{"name":"shell","_id":"ck42dyihx00h1u9urgf9hgvwo"},{"name":"ssh","_id":"ck42dyihz00hau9urfoa42nfp"},{"name":"statsd","_id":"ck42dyii000hdu9urfv876hk0"},{"name":"graphite","_id":"ck42dyii000hgu9urkj2kgmfj"},{"name":"monitor","_id":"ck42dyii000hhu9urc5sao756"},{"name":"tcp","_id":"ck42dyii000hju9urskkl3gg6"},{"name":"twemproxy","_id":"ck42dyii500iau9urga7q9wcf"},{"name":"memcache","_id":"ck42dyii600iju9urr7ktt5qw"},{"name":"issue","_id":"ck42dyii700imu9urbert1af4"},{"name":"vagrant","_id":"ck42dyii900isu9urowo2jazt"},{"name":"vcenter","_id":"ck42dyiia00iyu9urrnjipz74"},{"name":"mongo","_id":"ck42dyiig00jdu9urlw24oezi"},{"name":"scripts","_id":"ck42dyiih00jgu9ur5nrdsysp"},{"name":"zentaopms","_id":"ck42dyiih00jju9urmx4rdpsj"},{"name":"deployment","_id":"ck42dyiih00jmu9urasncektx"},{"name":"ingress","_id":"ck42dyijp00jxu9ur8vcz71gx"},{"name":"lvm","_id":"ck42dyiju00k6u9urthco91fm"},{"name":"udev","_id":"ck42dyijx00keu9urz1mm4nvm"}]}}