{"meta":{"title":"求索","subtitle":"尔不必求记，却宜求个明白！","description":"","author":"Mingxu.xie","url":"https://www.xiemx.com","root":"/"},"pages":[{"title":"commands","date":"2019-09-26T09:58:47.000Z","updated":"2019-09-27T02:30:53.818Z","comments":true,"path":"commands.html","permalink":"https://www.xiemx.com/commands.html","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108#获取所有region的机器数量for i in $(aws ec2 describe-regions | grep RegionName| awk -F\"[\\\"]+\" '&#123;print $4&#125;');do echo -n \"$i: \"; AWS_PROFILE=jp aws--region=$i ec2 describe-instances|grep InstanceId|wc -l;done;#获取节点的机器tag.name和privateIPaws ec2 describe-instances --filters \"Name=tag:Service,Values=eos\" --query\"Reservations[*].Instances[*].[PrivateIpAddress,Tags[?Key=='Name'].Value]\" --output text#simple http serverpython -m SimperHTTPServer 12345#ssh端口转发ssh -v -N -L 0.0.0.0:60123:192.168.10.195:60123 203.175.165.66#查看rsa私钥的公钥ssh-keygen -y -f id_rsa &gt; id_rsa.pub#wget 断点续传wget -c -t 0 -O backup_2018_01_01_050000_9591273.bak http://47.88.192.116:12312/backup_2018_01_01_050000_9591273.bak#rsync+ssh proxyrsync -av -P -e \"ssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p'\" 2018-03-06_03-05.sql.gz 10.86.48.8:/data/backup#consul-template/srv/consul/consul-template -consul 192.168.10.123:8500 -template/srv/consul/my.ctmpl:/srv/consul/conf.d/my.conf:/etc/init.d/nginx reload -once#iptables forwardiptables -t nat -A PREROUTING -d 192.168.10.226 -p tcp -dport 6386 -j DNAT --to-destination 192.168.10.81:6386iptables -t nat -I POSTROUTING -j MASQUERADE#远程抓包在本地调用wireshark工具打开ssh -o 'ProxyCommand ssh 123.206.197.235 nc %h %p' 192.168.199.63 \"sudo tcpdump -vv -i eth0 port 80 -w -\" | wireshark -k-i -#git diff对比commit差异，只列出文件名git diff --name-status 128e72a28ea38d1c8691a22a28937356e7adf736^ 128e72a28ea38d1c8691a22a28937356e7adf736#docker log-opt--log-driver syslog --log-opt tag=\"eos-producer\"--log-driver json-file --log-opt max-size=500msudo docker run --log-driver=awslogs --log-opt awslogs-region=ap-southeast-1 --log-opt awslogs-group=eos-log --log-optawslogs-datetime-format='\\[%b %d, %Y %H:%M:%S\\]' -d -p 8898:80 nginxdocker run -d -p 9876:9876 -p 80:8888 --name eos --log-driver gelf --log-opt gelf-address=udp://10.188.10.145:15155 -v/data/eos/:/eos eoslaomao/eos:1.3.0 /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/confdocker run -d -p 9876:9876 -p 8888:8888 --name eos --log-driver json-file --log-opt max-size=1g -v /data/eos/:/eosgcr.io/eosasia-testnet/eos:v1.5.3-patch /opt/eosio/bin/nodeos --data-dir=/eos/data --config-dir=/eos/conf#pigz多线程打包apt install pigztar --use-compress-program=pigz -cvpf package.tgz ./packagetar --use-compress-program=pigz -xvpf package.tgz -C ./package#aws elb reg/unreg instanceaws elbv2 register-targets--target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targetsId=i-00b7f498a742cdaws elbv2 deregister-targets--target-group-arn=arn:aws:elasticloadbalancing:ap-northeast-1:908572518:targetgroup/e-api-1/65c430c260d1556e --targetsId=i-00b7f498a742cd#pmmdocker run -d \\-p 80:81 \\--volumes-from pmm-data \\--name pmm-server \\--restart always \\percona/pmm-server:latest#git 使用指定的private key cloneGIT_SSH_COMMAND=\"ssh -i ~/.ssh/id_rsa\" git clone git@cd.i.ly.com:ly/cat.git#K8S 端口转发kubectl -n test port-forward $(kubectl -n test get endpoints prometheus -ojsonpath='&#123;.subsets[0].addresses[0].targetRef.name&#125;') 9090:9090#jp 处理数据jq '.members[]|&#123;\"id\": .id, \"Name\": .fullName&#125;' trello.jsonjq '.cards[]|if .idList == \"5c64e37e57ba1c20f62751ce\" then .idMembers else .xxx end' trello.json#获取websocket返回信息s = new WebSocket('wss://www.staging.strikingly.com/livechat-ws')s.onclose = (e) =&gt; &#123; console.log(e)&#125;# 获取postgresql schemeselect * from information_schema.schemata;#查看表字段 - postgresqlSELECT a.attname as name, a.attnotnull as notnullFROM pg_class as c,pg_attribute as awhere c.relname = 'mini_program_accounts' and a.attrelid = c.oid and a.attnum&gt;0#postgresql dump databasepg_dump -U vi -d vi -h rm-j.pg.rds.aliyuncs.com -p 3433 --no-owner --no-privileges -f vi.sql#mysqldumpmysqldump --host rm-j.mysql.rds.aliyuncs.com -u vi -p --databases via --column-statistics=0 &gt; vi.sql# 获取当前会话总数select count(*) from pg_stat_activity;# 杀死所有idle的进程select pg_terminate_backend(pid) from pg_stat_activity where state='idle';"},{"title":"分类","date":"2019-09-27T06:54:52.021Z","updated":"2019-09-27T06:54:52.017Z","comments":false,"path":"categories/index.html","permalink":"https://www.xiemx.com/categories/index.html","excerpt":"","text":""},{"title":"About","date":"2019-09-26T09:34:08.338Z","updated":"2019-09-26T09:34:08.338Z","comments":true,"path":"about/index.html","permalink":"https://www.xiemx.com/about/index.html","excerpt":"","text":"asdfsadf"},{"title":"友情链接","date":"2019-09-27T06:55:16.106Z","updated":"2019-09-27T06:55:16.105Z","comments":true,"path":"links/index.html","permalink":"https://www.xiemx.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-09-27T06:55:01.568Z","updated":"2019-09-27T06:55:01.567Z","comments":false,"path":"repository/index.html","permalink":"https://www.xiemx.com/repository/index.html","excerpt":"","text":""},{"title":"Tags","date":"2019-09-26T09:33:06.254Z","updated":"2019-09-26T09:33:06.254Z","comments":true,"path":"tags/index.html","permalink":"https://www.xiemx.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"zabbix distrubuted monitor","slug":"2017-09-21-zabbix-distrubuted-monitor","date":"2017-09-20T18:09:37.000Z","updated":"2019-09-27T06:52:36.183Z","comments":false,"path":"/2017/09/21/2017-09-21-zabbix-distrubuted-monitor/","link":"","permalink":"https://www.xiemx.com/2017/09/21/2017-09-21-zabbix-distrubuted-monitor/","excerpt":"","text":"zabbix 分布式监控2种模式 node模式 proxy模式 PS: node模式官方在2.4版本之后已经弃用，重点讨论proxy模式 proxy 模式Zabbix proxy可以代替Zabbix服务器收集性能和可用性数据，一个代理可以承担一些收集数据的负载。使用代理是实现集中式和分布式监控的最简单方法。proxy需要使用单独的数据库来缓存agent数据，在发给server防止出现因网络问题造成的数据丢失。zabbix proxy只是一个数据收集组件，不会触发任何trigger／alert. 使用场景 Monitor remote locations Monitor locations having unreliable communications Offload the Zabbix server when monitoring thousands of devices Simplify the maintenance of distributed monitoring 安装配置1234567891011121314#同安装zabbix server 类似，不赘述,需要其他功能也可以在编译时自行开启。./configure --prefix=/opt/zabbix_proxy/ --enable-proxy --with-mysql --with-libcurlmake installcreate databases zabbixgrant all to zabbix.* to zabbix@'%' identified by \"zabbix\";#导入schema.sql#配置文件中hostname需要和zabbix上添加的保持一致#其它参考server设置参数#ps：设置适当的配置同步时间，默认一小时。建议设置短一点，这样如果有新机器加入配置修改都可以快速同步并监控。ConfigFrequency=600 zabbix server 配置 添加主机时选择指定的proxy","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"}],"author":"xiemx"},{"title":"vagrant创建多个虚拟机","slug":"2017-02-09-vagrant-mulit-vm","date":"2017-02-08T22:02:30.000Z","updated":"2019-09-27T06:52:36.184Z","comments":false,"path":"/2017/02/09/2017-02-09-vagrant-mulit-vm/","link":"","permalink":"https://www.xiemx.com/2017/02/09/2017-02-09-vagrant-mulit-vm/","excerpt":"","text":"建立多台VM，並且让他们之间能够相通信，一台是应用服务器、一台是DB服务器,参考如下 12345678910111213141516171819Vagrant.configure(\"2\") do |config| config.vm.define :web do |web| web.vm.provider \"virtualbox\" do |v| v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"] end web.vm.box = \"base\" web.vm.hostname = \"xiemx-website\" web.vm.network :private_network, ip: \"10.11.1.1\" end config.vm.define :db do |db| db.vm.provider \"virtualbox\" do |v| v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"] end db.vm.box = \"base\" db.vm.hostname = \"xiemx-db\" db.vm.network :private_network, ip: \"10.11.1.2\" endend","categories":[{"name":"vagrant","slug":"vagrant","permalink":"https://www.xiemx.com/categories/vagrant/"}],"tags":[],"author":"xiemx"},{"title":"vagrant使用","slug":"2017-02-09-vagrant","date":"2017-02-08T21:02:54.000Z","updated":"2019-09-27T06:52:36.184Z","comments":false,"path":"/2017/02/09/2017-02-09-vagrant/","link":"","permalink":"https://www.xiemx.com/2017/02/09/2017-02-09-vagrant/","excerpt":"","text":"删除文档，参考官方：https://www.vagrantup.com/docs/cli/","categories":[{"name":"vagrant","slug":"vagrant","permalink":"https://www.xiemx.com/categories/vagrant/"}],"tags":[{"name":"vagrant","slug":"vagrant","permalink":"https://www.xiemx.com/tags/vagrant/"}],"author":"xiemx"},{"title":"Vagrantfile配置","slug":"2017-02-09-vagrantfile","date":"2017-02-08T21:02:02.000Z","updated":"2019-09-27T06:52:36.185Z","comments":false,"path":"/2017/02/09/2017-02-09-vagrantfile/","link":"","permalink":"https://www.xiemx.com/2017/02/09/2017-02-09-vagrantfile/","excerpt":"","text":"删除原始文档，参考官方文档：https://www.vagrantup.com/docs/vagrantfile/","categories":[{"name":"vagrant","slug":"vagrant","permalink":"https://www.xiemx.com/categories/vagrant/"}],"tags":[{"name":"vagrant","slug":"vagrant","permalink":"https://www.xiemx.com/tags/vagrant/"}],"author":"xiemx"},{"title":"vcenter扩容Linux虚拟机磁盘","slug":"2017-01-19-vcenter-expand-disk-to-linux","date":"2017-01-19T03:01:34.000Z","updated":"2019-09-27T06:52:36.184Z","comments":false,"path":"/2017/01/19/2017-01-19-vcenter-expand-disk-to-linux/","link":"","permalink":"https://www.xiemx.com/2017/01/19/2017-01-19-vcenter-expand-disk-to-linux/","excerpt":"","text":"磁盘扩容100G1.vcenter扩容磁盘vcenter增加步骤参考：vcenter扩容window磁盘 2.Linux需要rescan磁盘，重新读到大小 1234方法1:reboot方法2:[root@localhost ~]# echo 1 &gt; /sys/block/sdc/device/rescan 3.fdisk创建新分区 注意创建新的磁盘后内核可能无法识别到分区表，需要运行partprobe刷新下分区表信息 4.lvm动态扩容lvm参考：lvm动态磁盘管理 完成后：","categories":[{"name":"vcenter","slug":"vcenter","permalink":"https://www.xiemx.com/categories/vcenter/"}],"tags":[{"name":"vcenter","slug":"vcenter","permalink":"https://www.xiemx.com/tags/vcenter/"}],"author":"xiemx"},{"title":"vcenter扩容window磁盘","slug":"2017-01-12-vcenter-expand-disk-to-windows","date":"2017-01-11T19:01:41.000Z","updated":"2019-09-27T06:52:36.184Z","comments":false,"path":"/2017/01/12/2017-01-12-vcenter-expand-disk-to-windows/","link":"","permalink":"https://www.xiemx.com/2017/01/12/2017-01-12-vcenter-expand-disk-to-windows/","excerpt":"","text":"1.vcenter中增加磁盘大小，原本是80G现在扩容100G 2.Linux系统中重新扫描磁盘","categories":[{"name":"windows","slug":"windows","permalink":"https://www.xiemx.com/categories/windows/"},{"name":"vcenter","slug":"windows/vcenter","permalink":"https://www.xiemx.com/categories/windows/vcenter/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.xiemx.com/tags/windows/"},{"name":"vcenter","slug":"vcenter","permalink":"https://www.xiemx.com/tags/vcenter/"}],"author":"xiemx"},{"title":"zabbix监控redis","slug":"2016-12-19-zabbix-monitor-redis","date":"2016-12-18T21:12:43.000Z","updated":"2019-09-27T06:52:36.184Z","comments":false,"path":"/2016/12/19/2016-12-19-zabbix-monitor-redis/","link":"","permalink":"https://www.xiemx.com/2016/12/19/2016-12-19-zabbix-monitor-redis/","excerpt":"","text":"可配合zabbix自动发现，来完成自动监控 scripts1234567891011121314151617181920212223242526cat redis.sh#!/bin/bashredis_conn=\"/usr/local/bin/redis-cli\"port=$1case $2 in \"used_memory\") used_memory=`$redis_conn -p $port info | grep used_memory:|awk -F':' '&#123;print $2&#125;'` echo $used_memory ;; \"ops_sec\") ops=`$redis_conn -p $port info|grep instantaneous_ops_per_sec:|awk -F':' '&#123;print $2&#125;'` echo $ops ;; \"connected_clients\") connected_clients=`$redis_conn -p $port info|grep connected_clients: | awk -F ':' '&#123;print $2&#125;'` echo $connected_clients ;; \"blocked_clients\") blocked_clients=`$redis_conn -p $port info|grep blocked_clients:|awk -F':' '&#123;print $2&#125;'` echo $blocked_clients ;; *) echo \"please input used_memory|ops_sec|connected_clients|blocked_clients\" ;; esac conf文件123cat zabbix_redis.confUserParameter=redis[*],/opt/script/zabbix/redis.sh $1 $2","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"},{"name":"scripts","slug":"scripts","permalink":"https://www.xiemx.com/tags/scripts/"}],"author":"xiemx"},{"title":"zabbix监控mongo","slug":"2016-12-19-zabbix-monitor-mongo","date":"2016-12-18T21:12:27.000Z","updated":"2019-09-27T06:52:36.187Z","comments":false,"path":"/2016/12/19/2016-12-19-zabbix-monitor-mongo/","link":"","permalink":"https://www.xiemx.com/2016/12/19/2016-12-19-zabbix-monitor-mongo/","excerpt":"","text":"可配合zabbix自动发现，自动监控服务 script12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485cat mongo.sh#!/bin/bashcase $1 in # use_memory)# used_memory=`echo \"db.serverStatus().mem\"|mongo admin|grep resident|awk -F':' '&#123;print $2&#125;'|tr -d \" ,\"`# echo $used_memory# ;;# # use_vmemory)# used_vmemory=`echo \"db.serverStatus().mem\"|mongo admin|grep virtual|awk -F':' '&#123;print $2&#125;'|tr -d \" ,\"`# echo $used_vmemory# ;;# # used_conn)# used_conn=`echo \"db.serverStatus().connections\"|mongo admin|grep current|awk -F':' '&#123;print $2&#125;'|tr -d ' ,'`# echo $used_conn# ;;# # available_conn)# available=`echo \"db.serverStatus().connections\"|mongo admin|grep available|awk -F':' '&#123;print $2&#125;'|tr -d ' ,'`# echo $availabe# ;; insert) insert=`mongostat -n1 | tail -n 1|awk '&#123;print $1&#125;'|tr -d ' *,'` echo $insert ;; query) query=`mongostat -n1 | tail -n 1|awk '&#123;print $2&#125;'|tr -d ' *,'` echo $query ;; update) update=`mongostat -n1 | tail -n 1|awk '&#123;print $3&#125;'|tr -d ' *,'` echo $update ;; delete) delete=`mongostat -n1 | tail -n 1|awk '&#123;print $4&#125;'|tr -d ' *,'` echo $delete ;; getmore) getmore=`mongostat -n1 | tail -n 1|awk '&#123;print $5&#125;'|tr -d ' *,'` echo $getmore ;; command) command=`mongostat -n1 | tail -n 1|awk '&#123;print $6&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'` echo $command ;; vsize) vsize=`mongostat -n1 | tail -n 1|awk '&#123;print $10&#125;'|tr -d ' *,G'` echo $vsize ;; res) res=`mongostat -n1 | tail -n 1|awk '&#123;print $11&#125;'|tr -d ' *,G'` echo $res ;; qr) qr=`mongostat -n1 | tail -n 1|awk '&#123;print $12&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'` echo $qr ;; qw) qw=`mongostat -n1 | tail -n 1|awk '&#123;print $12&#125;'|awk -F'|' '&#123;print $2&#125;'|tr -d ' *,'` echo $qw ;; ar) ar=`mongostat -n1 | tail -n 1|awk '&#123;print $13&#125;'|awk -F'|' '&#123;print $1&#125;'|tr -d ' *,'` echo $ar ;; aw) aw=`mongostat -n1 | tail -n 1|awk '&#123;print $13&#125;'|awk -F'|' '&#123;print $2&#125;'|tr -d ' *,'` echo $aw ;; conn) conn=`mongostat -n1 | tail -n 1|awk '&#123;print $16&#125;'|tr -d ' *,'` echo $conn ;; *) echo \"please input insert|query|update|delete\" ;;esac conf配置文件12cat zabbix_mongo.confUserParameter=mongo[*],/opt/script/zabbix/mongo.sh $1","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"},{"name":"mongo","slug":"mongo","permalink":"https://www.xiemx.com/tags/mongo/"}],"author":"xiemx"},{"title":"zabbix监控memcache","slug":"2016-12-19-zabbix-monitor-memcache","date":"2016-12-18T21:12:02.000Z","updated":"2019-09-27T06:52:36.184Z","comments":false,"path":"/2016/12/19/2016-12-19-zabbix-monitor-memcache/","link":"","permalink":"https://www.xiemx.com/2016/12/19/2016-12-19-zabbix-monitor-memcache/","excerpt":"","text":"script12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152cat memcached.sh#!/bin/bashport=$1mem_conn=\"/bin/nc 127.0.0.1 $port\"case $2 in conn) conn=`echo -e \"stats\\nquit\"|$mem_conn|grep curr_connections | awk '&#123;print $3&#125;' ` echo $conn ;; bytes) bytes=`echo -e \"stats\\nquit\"|$mem_conn|grep bytes|awk '&#123;print $3&#125;'` echo `echo $bytes |tr -d \" \"` ;; cmd_get) cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;' ` echo $cmd_get ;; cmd_set) cmd_set=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' ` echo $cmd_set ;; get_hits) get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '&#123;print $3&#125;' ` echo $get_hits ;; read_qps_sec) count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;'|tr -d '\\r' ` sleep 1 count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;'|tr -d '\\r' ` count=` expr $count2 - $count1` echo $count ;; write_qps_sec) count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' ` sleep 1 count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '&#123;print $3&#125;' ` count=`echo $count2 $count1|awk '&#123;printf($1-$2)&#125;'` echo $count ;; hit_target) cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '&#123;print $3&#125;' ` get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '&#123;print $3&#125;' ` hit_target=`echo $get_hits $cmd_get|awk '&#123;printf($1*100/$2)&#125;'` echo $hit_target ;; *) echo \"please input conn|bytes|cmd_get|cmd_set|get_hits|read_qps_sec|write_qps_sec|hit_target\" ;;esac 配置文件放到zabbix的conf.d/目录下，12cat zabbix_memcache.confUserParameter=memcache[*],/opt/script/zabbix/memcached.sh $1 $2","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"},{"name":"monitor","slug":"monitor","permalink":"https://www.xiemx.com/tags/monitor/"},{"name":"memcache","slug":"memcache","permalink":"https://www.xiemx.com/tags/memcache/"}],"author":"xiemx"},{"title":"zabbix 监控ssl证书过期时间","slug":"2016-12-05-zabbix-monitor-ssl-cert","date":"2016-12-05T02:12:45.000Z","updated":"2019-09-27T06:52:36.187Z","comments":false,"path":"/2016/12/05/2016-12-05-zabbix-monitor-ssl-cert/","link":"","permalink":"https://www.xiemx.com/2016/12/05/2016-12-05-zabbix-monitor-ssl-cert/","excerpt":"","text":"脚本是参考网上修改过的版本，注意要指定servername参数，以免抓取到其它站点的证书。 123456789mingxu.xie@t-slq-ops-1:/opt/script/zabbix# cat check_ssl_cert.sh #/bin/bashhost=1port=2end_date=openssl s_client -host $host -port $port -servername $host -showcerts &amp;lt;/dev/null 2&gt;/dev/null|sed -n '/BEGIN CERTIFICATE/,/END CERT/p' |openssl x509 -text 2&gt;/dev/null |sed -n 's/ *Not After : *//p'if [ -n \"end_date\" ];then end_date_seconds=`date '+%s' --date \"end_date\"now_seconds=date '+%s'` echo \"(end_date_seconds-now_seconds)/24/3600\" | bcfi","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[],"author":"xiemx"},{"title":"zabbix触发器函数","slug":"2016-12-05-zabbix-trigger-function","date":"2016-12-05T01:12:36.000Z","updated":"2019-09-27T06:52:36.183Z","comments":false,"path":"/2016/12/05/2016-12-05-zabbix-trigger-function/","link":"","permalink":"https://www.xiemx.com/2016/12/05/2016-12-05-zabbix-trigger-function/","excerpt":"","text":"不再一一列出，参考官方文档 https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"}],"author":"xiemx"},{"title":"Zabbix自定义Item Not Supported,页面出现不支持解决\n","slug":"2016-11-23-fix-zabbix-item-not-supported","date":"2016-11-22T20:11:59.000Z","updated":"2019-09-27T06:52:36.185Z","comments":false,"path":"/2016/11/23/2016-11-23-fix-zabbix-item-not-supported/","link":"","permalink":"https://www.xiemx.com/2016/11/23/2016-11-23-fix-zabbix-item-not-supported/","excerpt":"","text":"使用Zabbix的时候往往会自定义Item。但是经常会遇到自定义的Item Not Supported了。Zabbix Agent默认的超时时间是3秒。往往我们自定义的Item由于各种原因返回时间会比较长。建议修改一个适合自己实际的值。 123456vim /etc/zabbix/zabbix_agent.conf#Range: 1-30Timeout=8###修改完毕后重启zabbix-agent/etc/init.d/zabbix-agent restart","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"},{"name":"issue","slug":"zabbix/issue","permalink":"https://www.xiemx.com/categories/zabbix/issue/"}],"tags":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"}],"author":"xiemx"},{"title":"zabbix-server.conf文件详解","slug":"2016-09-01-zabbix-server-configure","date":"2016-08-31T21:09:48.000Z","updated":"2019-09-27T06:52:36.187Z","comments":false,"path":"/2016/09/01/2016-09-01-zabbix-server-configure/","link":"","permalink":"https://www.xiemx.com/2016/09/01/2016-09-01-zabbix-server-configure/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101AlertScriptsPath 默认值：/usr/local/share/zabbix/alertscripts 说明：告警脚本目录AllowRoot 默认值：0 说明：是否允许使用root启动，0:不允许，1:允许，默认情况下她会使用zabbix用户来启动zabbix进程，不推荐使用rootCacheSize 取值范围： 128K-8G 默认值：8M 说明：配置缓存，用于存储host，item，trigger数据，2.2.3版本之前最大支持2G，目前最大支持8G，一般用不了多少的。CacheUpdateFrequency 取值范围：1-3600 默认值：60 说明：多少秒更新一次配置缓存DBHost 默认值：localhost 说明：数据库主机地址DBName 默认值：无 必填：是DBPassword： 默认值：空 说明：数据库密码DBPort 取值范围：1024-65535 默认值:3306 说明：SQLite作为DB，这个选项请忽略，如果使用socket链接，也请忽略。DBSchema 说明：Schema名称. 用于 IBM DB2 、 PostgreSQL.DBSocket 默认值：/tmp/mysql.sock 说明：mysql sock文件路径DebugLevel 取值范围：0-5 默认值：3 说明: 指定debug级别 0 - 基本信息 1 - critical信息 2 - error信息 3 - warnings信息 4 - 调试日志，日志内容很多，慎重使用 5 - 用于调试web和vmware监控ExternalScripts 默认值： /usr/local/share/zabbix/externalscripts 说明： 外部脚本目录Fping6Location 默认值：/usr/sbin/fping6 说明：fping6路径，不懂fping的人可以百度一下，如果zabbix非root启动，请给fping6 SUIDFpingLocation 默认值：/usr/sbin/fping 说明:和上面的一样HistoryCacheSize 取值范围：128K-2G 默认值：8M 说明： 历史记录缓存大小，用于存储历史记录HistoryTextCacheSize 取值范围：128K-2G 默认值：16M 说明：文本类型历史记录的缓存大小，存储character, text 、log历史记录.HousekeepingFrequency 取值范围：0-24 默认值：1 说明：housekeep执行频率，默认每小时回去删除一些过期数据。如果server重启，那么30分钟之后才执行一次，接下来，每隔一小时在执行一次。Include 说明：include配置文件，可以使用正则表达式，例如：/usr/local/zabbix-2.4.4/conf/ttlsa.com/*.confJavaGateway 说明：Zabbix Java gateway的主机名，需要启动Java pollersJavaGatewayPort 取值范围：1024-32767 默认值：10052 Zabbix Java gateway监听端口ListenIP 默认值：0.0.0.0 说明：监听地址，留空则会在所有的地址上监听，可以监听多个IP地址，ip之间使用逗号分隔，例如：127.0.0.1,10.10.0.2ListenPort 取值范围：1024-32767 默认值：10051 说明：监听端口LoadModule 说明：加载模块，格式: LoadModule=，文件必须在指定的LoadModulePath目录下，如果需要加载多个模块，那么写多个即可。LoadModulePath 模块目录，参考上面LogFile 日志文件，例如：/data/logs/zabbix/zabbix-server.logLogFileSize 取值范围：0-1024 默认值：1 0表示禁用日志自动rotation，如果日志达到了限制，并且rotation失败，老日志文件将会被清空掉，重新生成一个新日志。LogSlowQueries 取值范围：0-3600000 默认值：0 多慢的数据库查询将会被记录，单位：毫秒，0表示不记录慢查询。只有在DebugLevel=3时，这个配置才有效。MaxHousekeeperDelete 取值范围： 0-1000000 默认值：5000 housekeeping一次删除的数据不能大于MaxHousekeeperDeletePidFile 默认值：/tmp/zabbix_server.pid PID文件ProxyConfigFrequency 取值范围：1-604800 默认值：3600 proxy被动模式下，server多少秒同步配置文件至proxy。ProxyDataFrequency 取值范围：1-3600 默认值:1 被动模式下，zabbix server间隔多少秒向proxy请求历史数据SenderFrequency 取值范围：5-3600 默认值：30 间隔多少秒，再尝试发送为发送的报警SNMPTrapperFile 默认值：/tmp/zabbix_traps.tmp SNMP trap发送到server的数据临时存放文件。SourceIP 出口IP地址SSHKeyLocation SSH公钥私钥路径SSLCertLocation SSL证书目录，用于web监控SSLKeyLocation SSL认证私钥路径、用于web监控SSLCALocation SSL认证,CA路径，如果为空，将会使用系统默认的CAStartDBSyncers 取值范围：1-100 默认值：4 预先foke DB Syncers的数量，1.8.5以前最大值为64StartDiscoverers 取值范围：0-250 默认值：1 pre-forked discoverers的数量，1.8.5版本以前最大可为255StartHTTPPollers 取值范围：0-1000 默认值：1 pre-forked HTTP pollers的数量，1.8.5以前最大255StartIPMIPollers 取值范围：0-1000 默认值：0 pre-forked IPMI pollers的数量，1.8.5之前，最大为255Timeout 取值范围：1-30 默认值：3 agent，snmp，external check的超时时间，单位为秒TmpDir 默认值：/tmpTrapperTimeout 取值范围：1-300 默认值：300 处理trapper数据的超时时间TrendCacheSize 取值范围：128K-2G 默认值：4M 历史数据缓存大小UnavailableDelay 取值范围：1-3600 默认值：60 间隔多少秒再次检测主机是否可用UnreachableDelay 取值范围：1-3600 默认值：15 间隔多少秒再次检测主机是否可达。UnreachablePeriod 取值范围：1-3600 默认值：45 检测到主机不可用，多久将它置为不可达User 默认值：zabbix 启动zabbix server的用户，在配置禁止root启动，并且当前shell用户是root得情况下有效。如果当前用户是xiemx，那么zabbix server的运行用户是xiemxValueCacheSize 取值范围：0,128K-64G 默认值：8M 0表示禁用，history value缓存大小，当缓存超标了，将会每隔5分钟往server日志里面记录。养成看日志的好习惯。","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[],"author":"xiemx"},{"title":"watch重复执行某个命令","slug":"2016-08-11-shell-command-watch","date":"2016-08-10T20:08:29.000Z","updated":"2019-09-27T06:52:36.185Z","comments":false,"path":"/2016/08/11/2016-08-11-shell-command-watch/","link":"","permalink":"https://www.xiemx.com/2016/08/11/2016-08-11-shell-command-watch/","excerpt":"","text":"当需要重复执行一个命令时，可使用watch 123456789101112131415161718192021222324➜ ~ watchUsage: watch [options] commandOptions: -b, --beep beep if command has a non-zero exit -c, --color interpret ANSI color and style sequences -d, --differences[=&lt;permanent&gt;] highlight changes between updates -e, --errexit exit if command has a non-zero exit -g, --chgexit exit when output from command changes -n, --interval &lt;secs&gt; seconds to wait between updates -p, --precise attempt run command in precise intervals -t, --no-title turn off header -x, --exec pass command to exec instead of \"sh -c\" -h, --help display this help and exit -v, --version output version information and exitFor more details see watch(1).###每秒执行一次ls命令watch -n 1 ls","categories":[{"name":"command","slug":"command","permalink":"https://www.xiemx.com/categories/command/"}],"tags":[{"name":"shell","slug":"shell","permalink":"https://www.xiemx.com/tags/shell/"},{"name":"command","slug":"command","permalink":"https://www.xiemx.com/tags/command/"}],"author":"xiemx"},{"title":"zabbix Less than 25% free in the configuration cache解决","slug":"2016-08-09-zabbix-less-than-25-free-in-the-configuration-cache","date":"2016-08-08T19:08:20.000Z","updated":"2019-09-27T06:52:36.185Z","comments":false,"path":"/2016/08/09/2016-08-09-zabbix-less-than-25-free-in-the-configuration-cache/","link":"","permalink":"https://www.xiemx.com/2016/08/09/2016-08-09-zabbix-less-than-25-free-in-the-configuration-cache/","excerpt":"","text":"在zabbix server默认配置下，出现告警 1Less than 25% free in the configuration cache 可增加zabbix配置缓存解决 123456vim zabbix_server.conf##将缓存从8M提升到16M，可以调到最高8GCacheSize=16M##重启zabbix serverservice zabbix_server restart","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"},{"name":"issue","slug":"issue","permalink":"https://www.xiemx.com/tags/issue/"}],"author":"xiemx"},{"title":"域名状态含义","slug":"2016-07-27-domain-status-code","date":"2016-07-27T03:07:26.000Z","updated":"2019-09-27T06:52:36.186Z","comments":false,"path":"/2016/07/27/2016-07-27-domain-status-code/","link":"","permalink":"https://www.xiemx.com/2016/07/27/2016-07-27-domain-status-code/","excerpt":"","text":"新注册的域名，可能出现以下状态： 域名状态 含义 addPeriod 注册局设置域名新注册期（域名新注册 5 天内会出现的状态，不影响域名使用，5 天后自动解除）。 ·ok 普通状态（可正常使用。没有需要立即进行的操作，也没有设置任何保护措施。有其他状态时，OK 状态不显示，但并不代表不正常。 出于对域名注册信息的保护，域名在进行某些安全锁定后，会出现以下状态： 域名状态 含义 ·clientDeleteProhibited 注册商设置禁止删除（保护域名的一种状态，域名不能被删除）。 serverDeleteProhibited 注册局设置禁止删除（保护域名的一种状态，域名不能被删除）。 ·clientUpdateProhibited 注册商设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。 ·serverUpdateProhibited 注册局设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。 ·clientTransferProhibited 注册商设置禁止转移（保护域名的一种状态，域名不能转移注册商）。 ·serverTransferProhibited 注册局设置禁止转移（保护域名的一种状态，域名不能转移注册商。有的域名新注册及转移注册商 60 天内会被注册局设置成该状态，60 天后自动解除；有的则为域名涉及仲裁或诉讼案被注册局设置，仲裁或诉讼案结束会被解除）。 其他禁止解析、禁止续费的状态： 域名状态 含义 ·pendingVerification 注册信息审核期（该域名注册后未进行实名审核，需尽早在域名付费后 5 天内提交资料审核，5 天后仍未实名审核的，将进入 ServerHold 状态）。 ·clientHold 注册商设置暂停解析（处于该状态域名解析暂停，需联系注册商解除该状态）。 ·serverHold 注册局设置暂停解析（处于该状态域名解析暂停，.cn 国内中英文域名注册成功后未通过实名审核时多出现该种状态，需在域名有效期内完成实名审核后解除）。 ·inactive 非激活状态（注册时未填写域名 DNS，不能进行解析，需在注册商处设置域名 DNS）。 ·clientRenewProhibited/serverRenewProhibited 注册商或注册局设置禁止续费（域名不能续费，处于该状态通常表示该域名处于仲裁或法院争议期，需联系注册商确认原因）。 ·pendingTransfer 注册局设置转移过程中（域名正在转移注册商过程中）。 ·redemptionPeriod 注册局设置赎回期（域名处于赎回期，可联系注册商高价赎回）。 ·pendingDelete 注册局设置待删除/赎回期（对于国际域名，该状态表示域名已过赎回期等待被删除，删除后开放重新注册；对于国内域名，该状态表示域名处于赎回期，可联系注册商高价赎回）。","categories":[{"name":"domain","slug":"domain","permalink":"https://www.xiemx.com/categories/domain/"}],"tags":[{"name":"domain","slug":"domain","permalink":"https://www.xiemx.com/tags/domain/"},{"name":"statusCode","slug":"statusCode","permalink":"https://www.xiemx.com/tags/statusCode/"}],"author":"xiemx"},{"title":"uwsgi 报错 invalid option --“x” getopt_long() error","slug":"2016-07-26-uwsgi-invalid-option-x-getopt_long-error","date":"2016-07-26T03:07:34.000Z","updated":"2019-09-27T06:52:36.184Z","comments":false,"path":"/2016/07/26/2016-07-26-uwsgi-invalid-option-x-getopt_long-error/","link":"","permalink":"https://www.xiemx.com/2016/07/26/2016-07-26-uwsgi-invalid-option-x-getopt_long-error/","excerpt":"","text":"报错：12uwsgi: invalid option — ‘x’getopt_long() error 解决这个问题是因为编译uwsgi的时候少了libxml2库导致的，应该先安装库再编译，否则会少了xml的支持。 uninstall uwsgi install libxml* install uwsgi","categories":[{"name":"uwsgi","slug":"uwsgi","permalink":"https://www.xiemx.com/categories/uwsgi/"},{"name":"python","slug":"uwsgi/python","permalink":"https://www.xiemx.com/categories/uwsgi/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.xiemx.com/tags/python/"},{"name":"issue","slug":"issue","permalink":"https://www.xiemx.com/tags/issue/"},{"name":"uwsgi","slug":"uwsgi","permalink":"https://www.xiemx.com/tags/uwsgi/"}],"author":"xiemx"},{"title":"zabbix微信报警脚本","slug":"2016-06-29-zabbix-alert-to-wechat-script","date":"2016-06-29T02:06:55.000Z","updated":"2019-09-27T06:52:36.185Z","comments":false,"path":"/2016/06/29/2016-06-29-zabbix-alert-to-wechat-script/","link":"","permalink":"https://www.xiemx.com/2016/06/29/2016-06-29-zabbix-alert-to-wechat-script/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142#!/usr/bin/python__author__ = 'xiemx'import sysimport json,requestsimport osimport loggingclass Weixin(object): def get_token(self): CorpID = '-------4fa4' Secret = 'Aew6oxx-----------FaTClkjXlmw_zH' token_url = 'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&#123;&#125;&amp;corpsecret=&#123;&#125;'.format(CorpID, Secret) response = requests.get(token_url, verify=False).content p = json.loads(response) token = p['access_token'] return token def send_msg(self, user_id, msg): token = self.get_token() url = 'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#123;&#125;'.format(token) send_content=&#123; \"touser\": user_id, \"msgtype\": \"text\", \"agentid\": \"2\", \"text\": &#123; \"content\": msg &#125;, \"safe\":\"0\" &#125; p = requests.post(url, verify=False, data=json.dumps(send_content)) print p.content logging.debug(\"weixin send success\")if __name__ == \"__main__\": user_id = sys.argv[1] msg = sys.argv[2] + '\\n' + sys.argv[3] weixin = Weixin() weixin.send_msg(user_id, msg)","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[],"author":"xiemx"},{"title":"zabbix监控指定端口","slug":"2016-06-29-zabbix-monitor-port","date":"2016-06-29T02:06:32.000Z","updated":"2019-09-27T06:52:36.185Z","comments":false,"path":"/2016/06/29/2016-06-29-zabbix-monitor-port/","link":"","permalink":"https://www.xiemx.com/2016/06/29/2016-06-29-zabbix-monitor-port/","excerpt":"","text":"1.登陆zabbix主界面 选择：配置-模板 选择模板组，这里我选择的是Template App Agentless，原因该自带模板组内包含各种常用服务的模板 单击该模板组 项目 点击右上角的 创建项目 这里添加的是mysql服务，按照如图配置 单击下方 存档 保存。 如图点击 触发器 如图，点击右上方 创建触发器 按照如图配置 点击 存档 保存，完毕。 以上是将自定义模板服务添加到Template App Agentless模板组 最后将Template App Agentless模板组添加到你需要监控的客户端主机内","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[],"author":"xiemx"},{"title":"window系统上部署Zabbix_agent","slug":"2016-04-13-deploy-zabbix_agent-to-windows","date":"2016-04-13T01:04:53.000Z","updated":"2019-09-27T06:52:36.187Z","comments":false,"path":"/2016/04/13/2016-04-13-deploy-zabbix_agent-to-windows/","link":"","permalink":"https://www.xiemx.com/2016/04/13/2016-04-13-deploy-zabbix_agent-to-windows/","excerpt":"","text":"1.获取windows的agent客户端，解压文件至指定位置 ![img](/images/img_570da13048078.png)2.修改conf文件中的 12345Server=server端的IP地址ServerActive=server端的IP地址HostName=服务器在监控端上的监控名，可见名称可以不写默认为主机名称 3.命令行模式下安装Zabbix_agent监控程序 1234567891011# 进入解压后的文件夹下cd C:\\zabbix_agents\\bin\\win64#安装程序zabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -i#启动程序zabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -s 123456参数含义：-c 指定配置文件所在位置-i 安装客户端-s 启动客户端-x 停止客户端-d 卸载客户端 4.监控端添加agent服务器注意主机名为conf文件中定义的名称，否则会导致某些监控项目异常","categories":[{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/categories/zabbix/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.xiemx.com/tags/windows/"},{"name":"zabbix","slug":"zabbix","permalink":"https://www.xiemx.com/tags/zabbix/"}],"author":"xiemx"},{"title":"Zentaopms部署","slug":"2016-03-25-zentaopms-deployment","date":"2016-03-25T03:03:57.000Z","updated":"2019-09-27T06:52:36.187Z","comments":false,"path":"/2016/03/25/2016-03-25-zentaopms-deployment/","link":"","permalink":"https://www.xiemx.com/2016/03/25/2016-03-25-zentaopms-deployment/","excerpt":"","text":"获取软件 1wget http://sourceforge.net/projects/zentao/files/8.1.3/ZenTaoPMS.8.1.3.zip/download 将软件解压放到web服务器的目录下 创建数据库，授权用户 1create database zentao;grant all zentao.* to zentao@localhost identified by 'zentap'; Web访问页面开启安装进程 访问http://localhost/zentaopms/www/install.php，同dz等程序安装相同注意配置时使用授权的账户密码和数据库 安装完成后需要破解zentaopms方可正常登录 通过下面的地址下载loader-wizard：http://www.ioncube.com/loader-wizard/loader-wizard.zip 下载之后，将其解压缩，到web服务器的DocumentRoot下。 使用浏览器访问loader-wizard.php文件。该文件会检测当前环境，给出提示解决方法依照步骤处理 重新web服务启动之后，再次访问loader.php，如果安装成功，系统会提示。 看到这个界面，就表示解密软件已经安装成功了。 再次访问zentaopms的首页测试是否可以正常登录","categories":[{"name":"zentaopms","slug":"zentaopms","permalink":"https://www.xiemx.com/categories/zentaopms/"},{"name":"deployment","slug":"zentaopms/deployment","permalink":"https://www.xiemx.com/categories/zentaopms/deployment/"}],"tags":[{"name":"zentaopms","slug":"zentaopms","permalink":"https://www.xiemx.com/tags/zentaopms/"},{"name":"deployment","slug":"deployment","permalink":"https://www.xiemx.com/tags/deployment/"}],"author":"xiemx"},{"title":"UDEV规则","slug":"2016-02-18-udev","date":"2016-02-17T21:02:23.000Z","updated":"2019-10-17T07:49:29.351Z","comments":false,"path":"/2016/02/18/2016-02-18-udev/","link":"","permalink":"https://www.xiemx.com/2016/02/18/2016-02-18-udev/","excerpt":"","text":"udev根据系统中的硬件设备的状态动态更新设备，通过对内核产生的设备名增加别名的方式来达到不管设备连接的顺序而维持一个统一的设备名的目的。udev可以根据设备的其他信息如总线（bus），生产商（vendor）等不同来区分不同的设备，并产生设备文件。udev是硬件平台无关的，属于user space的进程，它脱离驱动层的关联而建立在操作系统之上，遵循Linux Standard Base （LSB）设备命名方法，但也可以自定义命名 1234###/etc/udev/udev.conf udev_root=/dev/ # 设置的绝对路径，相当于创建 chroot 的根。 udev_rules=/etc/udev/rules.d/ #规则的存放地址 udev_log=err # 日志的输入级别 匹配键和赋值键操作符解释见下表： 操作符 匹配或赋值t 解释 －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－ == 匹配 相等比较 != 匹配 不等比较 = 赋值 分配一个特定的值给该键，他可以覆盖之前的赋值。 += 赋值 追加特定的值给已经存在的键 := 赋值 分配一个特定的值给该键，后面的规则不可能覆盖它。 udev 规则的匹配键 : 键 含义 －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－ ACTION 事件 (uevent) 的行为，例如：add( 添加设备 )、remove( 删除设备 )。 KERNEL 在内核里看到的设备名字，比如sd*表示任意SCSI磁盘设备 DEVPATH 内核设备录进，比如/devices/* SUBSYSTEM 子系统名字，例如：sda 的子系统为 block。 BUS 总线的名字，比如IDE,USB DRIVER 设备驱动的名字，比如ide-cdrom ID 独立于内核名字的设备名字 SYSFS{ value} sysfs属性值，他可以表示任意 ENV{ key} 环境变量，可以表示任意 PROGRAM 可执行的外部程序，如果程序返回0值，该键则认为为真(true) RESULT 上一个PROGRAM调用返回的标准输出。 NAME 根据这个规则创建的设备文件的文件名。注意：仅仅第一行的NAME描述是有效的，后面的均忽略,如果你想使用使用两个以上的名字来访问一个设备的话，可以考虑SYMLINK键。 SYMLINK 为 /dev/下的设备文件产生符号链接。由于 udev 只能为某个设备产生一个设备文件，所以为了不覆盖系统默认的 udev 规则所产生的文件，推荐使用符号链接。 OWNER 设备文件的属组 GROUP 设备文件所在的组。 MODE 设备文件的权限，采用8进制 RUN 为设备而执行的程序列表 LABEL 在配置文件里为内部控制而采用的名字标签(下下面的GOTO服务) GOTO 跳到匹配的规则（通过LABEL来标识），有点类似程序语言中的GOTO IMPORT{ type} 导入一个文件或者一个程序执行后而生成的规则集到当前文件 WAIT_FOR_SYSFS 等待一个特定的设备文件的创建。主要是用作时序和依赖问题 OPTIONS 特定的选项 last_rule 对这类设备终端规则执行 ignore_device 忽略当前规则 ignore_remove 忽略接下来的并移走请求 all_partitions 为所有的磁盘分区创建设备文件 例： KERNEL==””, OWNER=”root” GROUP=”root”, MODE=”0600″ KERNEL==”tty”, NAME=”%k”, GROUP=”tty”, MODE=”0666″, OPTIONS=”last_rule” KERNEL==”scd[0-9]”, SYMLINK+=”cdrom cdrom-%k” KERNEL==”hd[a-z]”, BUS==”ide”, SYSFS{removable}==”1″, SYSFS{device/media}==”cdrom”, SYMLINK+=”cdrom cdrom-%k” ACTION==”add”, SUBSYSTEM==”scsi_device”, RUN+=”/sbin/modprobe sg” 上面的例子给出了5个规则，每一个都是KERNEL或者ACTION键开头： *第一个规则是缺省的，他匹配任意被内核识别到的设备，然后设定这些设备的属组是root，组是root，访问权限模式是0600(-rw——-)。这也是一个安全的缺省设置保证所有的设备在默认情况下只有root可以读写。 *第二个规则也是比较典型的规则了。它匹配终端设备(tty)，然后设置新的权限为0600，所在的组是tty。它也设置了一个特别的设备文件名:%K。在这里例子里，%k代表设备的内核名字。那也就意味着内核识别出这些设备是什么名字，就创建什么样的设备文件名。 *第三行开始的KERNEL==”scd[0-9]*”,表示 SCSI CD-ROM 驱动. 它创建一对设备符号连接：cdrom和cdrom-%k。 *第四行，开始的 KERNEL==”hd[a-z]“, 表示ATA CDROM驱动器。这个规则创建和上面的规则相同的符号连接。ATA CDROM驱动器需要sysfs值以来区别别的ATA设备，因为SCSI CDROM可以被内核唯一识别。. *第五行以 ACTION==”add”开始，它告诉udev增加 /sbin/modprobe sg 到命令列表，当任意SCSI设备增加到系统后，这些命令将执行。其效果就是计算机应该会增加sg内核模块来侦测新的SCSI设备。 udev 规则所需要信息的查询 常用的查上面匹配键信息的命令 udevinfo -a -p $(udevinfo -q path -n /dev/sda1 ) 上面的命令两次使用udevinfo： 第一次是返回sysfs设备路径(他通常和我们看到的Linux设备文件名所在路径－－/dev/hda－－不同)； 第二次才是查询这个设备路径，结果将是非常常的syfs信息汇总 udevinfo -a -p /sys/class/net/eth0 scsi_id -g -s /block/sda scsi_id -g -x -s /block/sda/sda3 ata_id /dev/hda udev 信息的测试和生效 根据上面文件中的内容写规则后，怎么测试 udevtest /block/sda start_dev #命令重启 udev守护进程 本操作会对所有的设备重新查询规则目录下所有的规则文件，然后执行所匹配的规则里的行为。 通常使用该命令让新的规则文件立即生效。","categories":[{"name":"linux","slug":"linux","permalink":"https://www.xiemx.com/categories/linux/"}],"tags":[{"name":"udev","slug":"udev","permalink":"https://www.xiemx.com/tags/udev/"},{"name":"linux","slug":"linux","permalink":"https://www.xiemx.com/tags/linux/"}],"author":"xiemx"},{"title":"三种共享存储比较","slug":"2016-02-18-Three-shared-storage-comparisons","date":"2016-02-17T20:02:44.000Z","updated":"2019-09-27T06:52:36.186Z","comments":false,"path":"/2016/02/18/2016-02-18-Three-shared-storage-comparisons/","link":"","permalink":"https://www.xiemx.com/2016/02/18/2016-02-18-Three-shared-storage-comparisons/","excerpt":"","text":"共享存储（Share Storage）类型 NAS(Network Attached Storage)网络附加存储 SAN (Storage Area Network)储存区域网络 iSAN (internet Storage Area Network )以太网存储区域网络,基于以太网的san NAS(Network Attached Storage) 基于tcp/ip网络 以文件为单位进行操作（文件锁） SAN (Storage Area Network) 基于硬盘驱动协议（sisc）传输的是磁道/扇区信息 基于扇区/block锁 iSAN (internet Storage Area Network ) 基于tcp/ip网络 , 通过以太网数据包传递scsi协议数据 基于扇区/block锁","categories":[{"name":"storage","slug":"storage","permalink":"https://www.xiemx.com/categories/storage/"}],"tags":[],"author":"xiemx"},{"title":"VS-NAT集群构建","slug":"2016-02-18-vs-nat-cluster","date":"2016-02-17T19:02:13.000Z","updated":"2019-09-27T06:52:36.187Z","comments":false,"path":"/2016/02/18/2016-02-18-vs-nat-cluster/","link":"","permalink":"https://www.xiemx.com/2016/02/18/2016-02-18-vs-nat-cluster/","excerpt":"","text":"由于lvs基于内核实现的负载均衡技术，因此主要是在内核层面配置，软件层面需要配置的东西很少。我们是通过软件生成配置文件，再讲配置文件刷到内核中。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#安装组包yum groupinstall \"Load Balancer\"#启动图形化服务/etc/init.d/piranha-gui start#创建piranha用户密码piranha-passwd#通过图形化创建的配置文件存放在/etc/sysconfig/ha/lvs.cf#将配置刷到内核模块中ip_vs和ip_vs*/etc/init.d/pulse start#测试脚本/bin/testlink[root@lvs-f30 ~]# cat /bin/testlink#!/bin/bash/usr/bin/links -dump 1 $1 &gt;/dev/null 2&gt;&amp;1if [ 0 -eq $? ] ; thenecho okelseecho failfi[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cfserial_no = 30primary = 172.25.30.14primary_private = 192.168.122.246service = lvsbackup_active = 1backup = 172.25.30.15backup_private = 192.168.122.247heartbeat = 1heartbeat_port = 539keepalive = 6deadtime = 18network = natnat_router = 192.168.122.254 eth2nat_nmask = 255.255.255.255debug_level = NONEmonitor_links = 0syncdaemon = 0syncd_iface = eth2virtual http &#123;active = 1address = 172.25.30.100 eth0:1vip_nmask = 255.255.255.0port = 80send = \"GET / HTTP/1.0\\r\\n\\r\\n\"expect = \"ok\"use_regex = 0send_program = \"/bin/testlink %h\"load_monitor = nonescheduler = wlcprotocol = tcptimeout = 6reentry = 15quiesce_server = 0server node1 &#123;address = 192.168.122.224active = 1port = 80weight = 1&#125;server node2 &#123;address = 192.168.122.245active = 1port = 80weight = 1​ &#125;&#125;","categories":[{"name":"cluster","slug":"cluster","permalink":"https://www.xiemx.com/categories/cluster/"}],"tags":[{"name":"cluster","slug":"cluster","permalink":"https://www.xiemx.com/tags/cluster/"}],"author":"xiemx"},{"title":"四种事务隔离级别","slug":"2016-01-31-transaction-isolation-level","date":"2016-01-30T21:01:30.000Z","updated":"2019-09-27T06:52:36.183Z","comments":false,"path":"/2016/01/31/2016-01-31-transaction-isolation-level/","link":"","permalink":"https://www.xiemx.com/2016/01/31/2016-01-31-transaction-isolation-level/","excerpt":"","text":"数据库系统提供了四种事务隔离级别： A.Serializable（串行化）：一个事务在执行过程中完全看不到其他事务对数据库所做的更新（事务执行的时候不允许别的事务并发执行。事务串行化执行，事务只能一个接着一个地执行，而不能并发执行。 B.Repeatable Read（可重复读）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，但是不能看到其他其他事务对已有记录的更新。 C.Read Commited（读已提交数据）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，而且能看到其他事务已经提交的对已有记录的更新。 D.Read Uncommitted（读未提交数据）：一个事务在执行过程中可以看到其他事务没有提交的新插入的记录，而且能看到其他事务没有提交的对已有记录的更新。","categories":[{"name":"mysql","slug":"mysql","permalink":"https://www.xiemx.com/categories/mysql/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"https://www.xiemx.com/tags/mysql/"}],"author":"xiemx"},{"title":"window系统文件或目录无法删除解决方法","slug":"2015-10-08-window-force-delete-file","date":"2015-10-07T20:10:01.000Z","updated":"2019-09-27T06:52:36.185Z","comments":false,"path":"/2015/10/08/2015-10-08-window-force-delete-file/","link":"","permalink":"https://www.xiemx.com/2015/10/08/2015-10-08-window-force-delete-file/","excerpt":"","text":"新建.BAT批处理文件输入如下命令，然后将要删除的文件拖放到批处理文件图标上即可删除。 12DEL /F /A /QRD /S /Q 可利用软件来解锁占用文件的进程推荐unlock","categories":[{"name":"window","slug":"window","permalink":"https://www.xiemx.com/categories/window/"}],"tags":[{"name":"window","slug":"window","permalink":"https://www.xiemx.com/tags/window/"}],"author":"xiemx"},{"title":"URLRewriter设置Config和IIS配置做伪静态","slug":"2015-08-21-iis-set-urlrewrite","date":"2015-08-21T02:08:51.000Z","updated":"2019-10-17T07:34:07.555Z","comments":true,"path":"/2015/08/21/2015-08-21-iis-set-urlrewrite/","link":"","permalink":"https://www.xiemx.com/2015/08/21/2015-08-21-iis-set-urlrewrite/","excerpt":"","text":"一、首先检查config文件里面是否包含这两个节点 1234567891011121314&lt;configSections&gt; &lt;section name=\"RewriterConfig\" requirePermission=\"false\" type=\"URLRewriter.Config.RewriterConfigSerializerSectionHandler, URLRewriter\"/&gt;&lt;/configSections&gt;&lt;system.web&gt; &lt;httpModules&gt; &lt;add type=\"URLRewriter.ModuleRewriter, URLRewriter\" name=\"ModuleRewriter\"/&gt; &lt;/httpModules&gt;&lt;/system.web&gt; 二、配置IIS。 1.打开IIS，选择网站。右键，点击属性 2.选择主目录，点击配置按钮 3.在弹出的应用程序配置中，点击添加 4.在弹出的添加/编辑应用程序扩展名映射中，填写可执行文件 ​ 点击浏览，选择aspnet_isapi.dll这个DLL，它一般在：C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727文件夹中(也就是你的系统盘中） 5.在扩展名中填写.html 6.在动作里选择限制为，他的框就可以填写了！请填写：GET,POST 7.不要勾选把确认文件是否存在，然后点击确定","categories":[{"name":"iis","slug":"iis","permalink":"https://www.xiemx.com/categories/iis/"},{"name":"windows","slug":"iis/windows","permalink":"https://www.xiemx.com/categories/iis/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.xiemx.com/tags/windows/"},{"name":"iis","slug":"iis","permalink":"https://www.xiemx.com/tags/iis/"}],"author":"xiemx"},{"title":"常见MIME类型设置方法","slug":"2015-08-21-mime-type","date":"2015-08-20T17:08:58.000Z","updated":"2019-09-27T06:50:46.124Z","comments":false,"path":"/2015/08/21/2015-08-21-mime-type/","link":"","permalink":"https://www.xiemx.com/2015/08/21/2015-08-21-mime-type/","excerpt":"","text":"常见MIME类型和设置方法当前列举了常用的MIME类型，查询详细：MIME Type MIME类型 扩展名 文档类型 MIME 类型 .aac AAC audio audio/aac .abw AbiWord document application/x-abiword .arc Archive document (multiple files embedded) application/x-freearc .avi AVI: Audio Video Interleave video/x-msvideo .azw Amazon Kindle eBook format application/vnd.amazon.ebook .bin Any kind of binary data application/octet-stream .bmp Windows OS/2 Bitmap Graphics image/bmp .bz BZip archive application/x-bzip .bz2 BZip2 archive application/x-bzip2 .csh C-Shell script application/x-csh .css Cascading Style Sheets (CSS) text/css .csv Comma-separated values (CSV) text/csv .doc Microsoft Word application/msword .epub Electronic publication (EPUB) application/epub+zip .gif Graphics Interchange Format (GIF) image/gif .html HyperText Markup Language (HTML) text/html .ico Icon format image/vnd.microsoft.icon .ics iCalendar format text/calendar .jar Java Archive (JAR) application/java-archive .jpeg JPEG images image/jpeg .js JavaScript text/javascript .json JSON format application/json .mjs JavaScript module text/javascript .mp3 MP3 audio audio/mpeg .mpeg MPEG Video video/mpeg .oga OGG audio audio/ogg .ogv OGG video video/ogg .ogx OGG application/ogg .otf OpenType font font/otf .png Portable Network Graphics image/png .pdf Adobe Portable Document Format (PDF) application/pdf .rar RAR archive application/x-rar-compressed .rtf Rich Text Format (RTF) application/rtf .sh Bourne shell script application/x-sh .svg Scalable Vector Graphics (SVG) image/svg+xml .tar Tape Archive (TAR) application/x-tar .tiff Tagged Image File Format (TIFF) image/tiff .ttf TrueType Font font/ttf .txt Text, (generally ASCII or ISO 8859-n) text/plain .vsd Microsoft Visio application/vnd.visio .wav Waveform Audio Format audio/wav .woff Web Open Font Format (WOFF) font/woff .woff2 Web Open Font Format (WOFF) font/woff2 .xhtml XHTML application/xhtml+xml .xls Microsoft Excel application/vnd.ms-excel .xml XML application/xml .zip ZIP archive application/zip .3gp 3GPP audio/video container video/3gpp .3g2 3GPP2 audio/video container video/3gpp2 .7z 7-zip archive application/x-7z-compressed 设置方法12345# IIS默认网站属性--&gt;http 头--&gt;MIME映射--&gt;文件类型--&gt;新类型# nginxconf/mime.types","categories":[{"name":"http","slug":"http","permalink":"https://www.xiemx.com/categories/http/"},{"name":"mime-type","slug":"http/mime-type","permalink":"https://www.xiemx.com/categories/http/mime-type/"}],"tags":[{"name":"http","slug":"http","permalink":"https://www.xiemx.com/tags/http/"},{"name":"mime-type","slug":"mime-type","permalink":"https://www.xiemx.com/tags/mime-type/"}],"author":"xiemx"}]}