[{"title":"zabbix distrubuted monitor","url":"//2017/09/21/2017-09-21-zabbix-distrubuted-monitor/","content":"\nzabbix 分布式监控2种模式\n* node模式\n* proxy模式\n\nPS: node模式官方在2.4版本之后已经弃用，重点讨论proxy模式\n\n### proxy 模式\n\nZabbix proxy可以代替Zabbix服务器收集性能和可用性数据，一个代理可以承担一些收集数据的负载。使用代理是实现集中式和分布式监控的最简单方法。proxy需要使用单独的数据库来缓存agent数据，在发给server防止出现因网络问题造成的数据丢失。zabbix proxy只是一个数据收集组件，不会触发任何trigger／alert.\n\n![img](/images/img_59c35cd9ab71b.png)\n\n### 使用场景\n\n- Monitor remote locations\n- Monitor locations having unreliable communications\n- Offload the Zabbix server when monitoring thousands of devices\n- Simplify the maintenance of distributed monitoring\n\n### 安装配置\n\n```shell\n#同安装zabbix server 类似，不赘述,需要其他功能也可以在编译时自行开启。\n\n./configure --prefix=/opt/zabbix_proxy/ --enable-proxy --with-mysql --with-libcurl\nmake install\n\ncreate databases zabbix\ngrant all to zabbix.* to zabbix@'%' identified by \"zabbix\";\n#导入schema.sql\n\n#配置文件中hostname需要和zabbix上添加的保持一致\n#其它参考server设置参数\n\n#ps：设置适当的配置同步时间，默认一小时。建议设置短一点，这样如果有新机器加入配置修改都可以快速同步并监控。\nConfigFrequency=600\n```\n\nzabbix server 配置\n\n![img](/images/img_59c35d1d930c1.png)\n\n添加主机时选择指定的proxy\n\n![img](/images/img_59c35d389b1c5.png)","tags":["zabbix"],"categories":["zabbix"]},{"title":"vagrant创建多个虚拟机","url":"//2017/02/09/2017-02-09-vagrant-mulit-vm/","content":"建立多台VM，並且让他们之间能够相通信，一台是应用服务器、一台是DB服务器,参考如下\n\n```markdown\nVagrant.configure(\"2\") do |config|\n  config.vm.define :web do |web|\n    web.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]\n    end\n    web.vm.box = \"base\"\n    web.vm.hostname = \"xiemx-website\"\n    web.vm.network :private_network, ip: \"10.11.1.1\"\n  end\n\n  config.vm.define :db do |db|\n    db.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]\n    end\n    db.vm.box = \"base\"\n    db.vm.hostname = \"xiemx-db\"\n    db.vm.network :private_network, ip: \"10.11.1.2\"\n  end\nend\n```","categories":["vagrant"]},{"title":"vagrant使用","url":"//2017/02/09/2017-02-09-vagrant/","content":"删除文档，参考官方：[https://www.vagrantup.com/docs/cli/](https://www.vagrantup.com/docs/cli/)\n\n","tags":["vagrant"],"categories":["vagrant"]},{"title":"Vagrantfile配置","url":"//2017/02/09/2017-02-09-vagrantfile/","content":"\n删除原始文档，参考官方文档：[https://www.vagrantup.com/docs/vagrantfile/](https://www.vagrantup.com/docs/vagrantfile/)\n\n","tags":["vagrant"],"categories":["vagrant"]},{"title":"vcenter扩容Linux虚拟机磁盘","url":"//2017/01/19/2017-01-19-vcenter-expand-disk-to-linux/","content":"\n![img](/images/img_58802ffca93b9.png)\n\n![img](/images/img_5880322f10890.png)\n\n磁盘扩容100G\n1.vcenter扩容磁盘\nvcenter增加步骤参考：[vcenter扩容window磁盘](/2017/01/12/vcenter-expand-disk-to-windows)\n\n2.Linux需要rescan磁盘，重新读到大小\n```shell\n方法1:\nreboot\n方法2:\n[root@localhost ~]# echo 1 > /sys/block/sdc/device/rescan\n```\n3.fdisk创建新分区\n\t注意创建新的磁盘后内核可能无法识别到分区表，需要运行partprobe刷新下分区表信息\n\n4.lvm动态扩容\nlvm参考：[lvm动态磁盘管理](http://www.xiemx.com/2015/11/29/linux动态磁盘管理（lvm）/)\n\n完成后：\n\n![img](/images/img_588031f4a62e1.png)\n\n![img](/images/img_58803215d9370.png)\n\n","tags":["vcenter"],"categories":["vcenter"]},{"title":"vcenter扩容window磁盘","url":"//2017/01/12/2017-01-12-vcenter-expand-disk-to-windows/","content":"1.vcenter中增加磁盘大小，原本是80G现在扩容100G\n\n![img](/images/img_587733a5ae0ba.png)\n\n2.Linux系统中重新扫描磁盘\n\n![img](/images/img_5877340a43dea.png)\n\n![img](/images/img_5877344e51cd6.png)\n\n ","tags":["windows","vcenter"],"categories":["windows","vcenter"]},{"title":"zabbix监控redis","url":"//2016/12/19/2016-12-19-zabbix-monitor-redis/","content":"可配合zabbix自动发现，来完成自动监控\n\n### scripts\n\n```shell\ncat redis.sh\n#!/bin/bash\nredis_conn=\"/usr/local/bin/redis-cli\"\nport=$1\n\ncase $2 in \n  \"used_memory\")\n    used_memory=`$redis_conn -p $port info | grep used_memory:|awk -F':' '{print $2}'`\n    echo $used_memory\n    ;;\n  \"ops_sec\")\n    ops=`$redis_conn -p $port info|grep instantaneous_ops_per_sec:|awk -F':' '{print $2}'`\n    echo $ops\n    ;;\n  \"connected_clients\")\n    connected_clients=`$redis_conn -p $port info|grep connected_clients: | awk -F ':' '{print $2}'`\n    echo $connected_clients\n    ;;\n  \"blocked_clients\")\n    blocked_clients=`$redis_conn -p $port info|grep blocked_clients:|awk -F':' '{print $2}'`\n    echo $blocked_clients\n    ;; \n  *)\n    echo \"please input used_memory|ops_sec|connected_clients|blocked_clients\"\n    ;; \nesac\n```\n\n### conf文件\n\n```yaml\ncat zabbix_redis.conf\n\nUserParameter=redis[*],/opt/script/zabbix/redis.sh $1 $2\n```\n","tags":["zabbix","scripts"],"categories":["zabbix"]},{"title":"zabbix监控mongo","url":"//2016/12/19/2016-12-19-zabbix-monitor-mongo/","content":"可配合zabbix自动发现，自动监控服务\n### script\n\n```shell\ncat mongo.sh\n\n#!/bin/bash\n\ncase $1 in \n#  use_memory)\n#    used_memory=`echo \"db.serverStatus().mem\"|mongo admin|grep resident|awk -F':' '{print $2}'|tr -d \" ,\"`\n#    echo $used_memory\n#    ;;\n#  \n#  use_vmemory)\n#    used_vmemory=`echo \"db.serverStatus().mem\"|mongo admin|grep virtual|awk -F':' '{print $2}'|tr -d \" ,\"`\n#    echo $used_vmemory\n#    ;;\n#  \n#  used_conn)\n#    used_conn=`echo \"db.serverStatus().connections\"|mongo admin|grep current|awk -F':' '{print $2}'|tr -d ' ,'`\n#    echo $used_conn\n#    ;;\n#  \n#  available_conn)\n#    available=`echo \"db.serverStatus().connections\"|mongo admin|grep available|awk -F':' '{print $2}'|tr -d ' ,'`\n#    echo $availabe\n#  ;;\n  \n  insert)\n    insert=`mongostat -n1 | tail -n 1|awk '{print $1}'|tr -d ' *,'`\n    echo $insert\n    ;;\n  \n  query)\n    query=`mongostat -n1 | tail -n 1|awk '{print $2}'|tr -d ' *,'`\n    echo $query\n    ;;\n  \n  update)\n    update=`mongostat -n1 | tail -n 1|awk '{print $3}'|tr -d ' *,'`\n    echo $update\n    ;;\n  \n  delete)\n    delete=`mongostat -n1 | tail -n 1|awk '{print $4}'|tr -d ' *,'`\n    echo $delete\n    ;;\n  getmore)\n    getmore=`mongostat -n1 | tail -n 1|awk '{print $5}'|tr -d ' *,'`  \n    echo $getmore\n    ;;\n  command)\n    command=`mongostat -n1 | tail -n 1|awk '{print $6}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $command\n    ;;\n  vsize)\n    vsize=`mongostat -n1 | tail -n 1|awk '{print $10}'|tr -d ' *,G'`\n    echo $vsize\n    ;;\n  res)\n    res=`mongostat -n1 | tail -n 1|awk '{print $11}'|tr -d ' *,G'`\n    echo $res\n    ;;\n  qr)\n    qr=`mongostat -n1 | tail -n 1|awk '{print $12}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $qr\n    ;;\n  qw)\n    qw=`mongostat -n1 | tail -n 1|awk '{print $12}'|awk -F'|' '{print $2}'|tr -d ' *,'`\n    echo $qw\n    ;;\n  ar)\n    ar=`mongostat -n1 | tail -n 1|awk '{print $13}'|awk -F'|' '{print $1}'|tr -d ' *,'`\n    echo $ar\n    ;;\n  aw)\n    aw=`mongostat -n1 | tail -n 1|awk '{print $13}'|awk -F'|' '{print $2}'|tr -d ' *,'`\n    echo $aw\n    ;;\n  conn)\n    conn=`mongostat -n1 | tail -n 1|awk '{print $16}'|tr -d ' *,'`\n    echo $conn\n    ;;\n\n  *)\n    echo \"please input  insert|query|update|delete\"\n    ;;\nesac\n```\n\n\n### conf配置文件\n\n```shell\ncat zabbix_mongo.conf\nUserParameter=mongo[*],/opt/script/zabbix/mongo.sh $1\n```","tags":["zabbix","mongo"],"categories":["zabbix"]},{"title":"zabbix监控memcache","url":"//2016/12/19/2016-12-19-zabbix-monitor-memcache/","content":"### script\n\n```shell\ncat memcached.sh\n\n#!/bin/bash\nport=$1\nmem_conn=\"/bin/nc 127.0.0.1 $port\"\n\ncase $2 in \n  conn)\n    conn=`echo -e \"stats\\nquit\"|$mem_conn|grep curr_connections | awk '{print $3}' `\n    echo $conn\n    ;;\n  bytes)\n    bytes=`echo -e \"stats\\nquit\"|$mem_conn|grep bytes|awk '{print $3}'`\n    echo `echo $bytes |tr -d \" \"`\n    ;;\n  cmd_get)\n    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}' `\n    echo $cmd_get\n    ;;\n  cmd_set)\n    cmd_set=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    echo $cmd_set\n    ;;\n  get_hits)\n    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '{print $3}' `\n    echo $get_hits\n    ;;\n  read_qps_sec)\n    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}'|tr -d '\\r' `\n    sleep 1\n    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}'|tr -d '\\r' `\n    count=` expr $count2 - $count1`\n    echo $count\n    ;;\n  write_qps_sec)\n    count1=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    sleep 1\n    count2=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_set| awk '{print $3}' `\n    count=`echo $count2 $count1|awk '{printf($1-$2)}'`\n    echo $count\n    ;;\n  \n  hit_target)\n    cmd_get=`echo -e \"stats\\nquit\"|$mem_conn|grep cmd_get| awk '{print $3}' `\n    get_hits=`echo -e \"stats\\nquit\"|$mem_conn|grep get_hits| awk '{print $3}' `\n    hit_target=`echo $get_hits $cmd_get|awk '{printf($1*100/$2)}'`\n    echo $hit_target\n    ;;\n  *)\n    echo \"please input conn|bytes|cmd_get|cmd_set|get_hits|read_qps_sec|write_qps_sec|hit_target\"\n    ;;\nesac\n```\n\n### 配置文件放到zabbix的conf.d/目录下，\n\n```shell\ncat zabbix_memcache.conf\nUserParameter=memcache[*],/opt/script/zabbix/memcached.sh $1 $2\n```","tags":["zabbix","monitor","memcache"],"categories":["zabbix"]},{"title":"zabbix 监控ssl证书过期时间","url":"//2016/12/05/2016-12-05-zabbix-monitor-ssl-cert/","content":"脚本是参考网上修改过的版本，注意要指定servername参数，以免抓取到其它站点的证书。\n\n```shell\nmingxu.xie@t-slq-ops-1:/opt/script/zabbix# cat check_ssl_cert.sh \n#/bin/bash\nhost=1\nport=2\nend_date=openssl s_client -host $host -port $port -servername $host -showcerts &lt;/dev/null 2>/dev/null|sed -n '/BEGIN CERTIFICATE/,/END CERT/p' |openssl x509 -text 2>/dev/null |sed -n 's/ *Not After : *//p'\nif [ -n \"end_date\" ];then\n    end_date_seconds=`date '+%s' --date \"end_date\"now_seconds=date '+%s'`\n    echo \"(end_date_seconds-now_seconds)/24/3600\" | bc\nfi\n```","categories":["zabbix"]},{"title":"zabbix触发器函数","url":"//2016/12/05/2016-12-05-zabbix-trigger-function/","content":"\n\n\n不再一一列出，参考官方文档\n\n[https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions](https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions)\n\n","tags":["zabbix"],"categories":["zabbix"]},{"title":"Zabbix自定义Item Not Supported,页面出现不支持解决\n","url":"//2016/11/23/2016-11-23-fix-zabbix-item-not-supported/","content":"\n使用Zabbix的时候往往会自定义Item。\n但是经常会遇到自定义的`Item Not Supported`了。\nZabbix Agent默认的超时时间是`3`秒。往往我们自定义的Item由于各种原因返回时间会比较长。建议修改一个适合自己实际的值。\n\n\n```shell\nvim /etc/zabbix/zabbix_agent.conf\n#Range: 1-30\nTimeout=8\n\n###修改完毕后重启zabbix-agent\n/etc/init.d/zabbix-agent restart\n```","tags":["zabbix"],"categories":["zabbix","issue"]},{"title":"zabbix-server.conf文件详解","url":"//2016/09/01/2016-09-01-zabbix-server-configure/","content":"\n```markdown\nAlertScriptsPath 默认值：/usr/local/share/zabbix/alertscripts 说明：告警脚本目录\n\nAllowRoot 默认值：0 说明：是否允许使用root启动，0:不允许，1:允许，默认情况下她会使用zabbix用户来启动zabbix进程，不推荐使用root\n\nCacheSize 取值范围： 128K-8G 默认值：8M 说明：配置缓存，用于存储host，item，trigger数据，2.2.3版本之前最大支持2G，目前最大支持8G，一般用不了多少的。\n\nCacheUpdateFrequency 取值范围：1-3600 默认值：60 说明：多少秒更新一次配置缓存\n\nDBHost 默认值：localhost 说明：数据库主机地址\n\nDBName 默认值：无 必填：是\n\nDBPassword： 默认值：空 说明：数据库密码\n\nDBPort 取值范围：1024-65535 默认值:3306 说明：SQLite作为DB，这个选项请忽略，如果使用socket链接，也请忽略。\n\nDBSchema 说明：Schema名称. 用于 IBM DB2 、 PostgreSQL.\n\nDBSocket 默认值：/tmp/mysql.sock 说明：mysql sock文件路径\n\nDebugLevel 取值范围：0-5 默认值：3 说明: 指定debug级别 0 - 基本信息 1 - critical信息 2 - error信息 3 - warnings信息 4 - 调试日志，日志内容很多，慎重使用 5 - 用于调试web和vmware监控\n\nExternalScripts 默认值： /usr/local/share/zabbix/externalscripts 说明： 外部脚本目录\n\nFping6Location 默认值：/usr/sbin/fping6 说明：fping6路径，不懂fping的人可以百度一下，如果zabbix非root启动，请给fping6 SUID\n\nFpingLocation 默认值：/usr/sbin/fping 说明:和上面的一样\n\nHistoryCacheSize 取值范围：128K-2G 默认值：8M 说明： 历史记录缓存大小，用于存储历史记录\n\nHistoryTextCacheSize 取值范围：128K-2G 默认值：16M 说明：文本类型历史记录的缓存大小，存储character, text 、log历史记录.\n\nHousekeepingFrequency 取值范围：0-24 默认值：1 说明：housekeep执行频率，默认每小时回去删除一些过期数据。如果server重启，那么30分钟之后才执行一次，接下来，每隔一小时在执行一次。\n\nInclude 说明：include配置文件，可以使用正则表达式，例如：/usr/local/zabbix-2.4.4/conf/ttlsa.com/*.conf\n\nJavaGateway 说明：Zabbix Java gateway的主机名，需要启动Java pollers\n\nJavaGatewayPort 取值范围：1024-32767 默认值：10052 Zabbix Java gateway监听端口\n\nListenIP 默认值：0.0.0.0 说明：监听地址，留空则会在所有的地址上监听，可以监听多个IP地址，ip之间使用逗号分隔，例如：127.0.0.1,10.10.0.2\n\nListenPort 取值范围：1024-32767 默认值：10051 说明：监听端口\n\nLoadModule 说明：加载模块，格式: LoadModule=，文件必须在指定的LoadModulePath目录下，如果需要加载多个模块，那么写多个即可。\n\nLoadModulePath 模块目录，参考上面\n\nLogFile 日志文件，例如：/data/logs/zabbix/zabbix-server.log\n\nLogFileSize 取值范围：0-1024 默认值：1 0表示禁用日志自动rotation，如果日志达到了限制，并且rotation失败，老日志文件将会被清空掉，重新生成一个新日志。\n\nLogSlowQueries 取值范围：0-3600000 默认值：0 多慢的数据库查询将会被记录，单位：毫秒，0表示不记录慢查询。只有在DebugLevel=3时，这个配置才有效。\n\nMaxHousekeeperDelete 取值范围： 0-1000000 默认值：5000 housekeeping一次删除的数据不能大于MaxHousekeeperDelete\n\nPidFile 默认值：/tmp/zabbix_server.pid PID文件\n\nProxyConfigFrequency 取值范围：1-604800 默认值：3600 proxy被动模式下，server多少秒同步配置文件至proxy。\n\nProxyDataFrequency 取值范围：1-3600 默认值:1 被动模式下，zabbix server间隔多少秒向proxy请求历史数据\n\nSenderFrequency 取值范围：5-3600 默认值：30 间隔多少秒，再尝试发送为发送的报警\n\nSNMPTrapperFile 默认值：/tmp/zabbix_traps.tmp SNMP trap发送到server的数据临时存放文件。\n\nSourceIP 出口IP地址\n\nSSHKeyLocation SSH公钥私钥路径\n\nSSLCertLocation SSL证书目录，用于web监控\n\nSSLKeyLocation SSL认证私钥路径、用于web监控\n\nSSLCALocation SSL认证,CA路径，如果为空，将会使用系统默认的CA\n\nStartDBSyncers 取值范围：1-100 默认值：4 预先foke DB Syncers的数量，1.8.5以前最大值为64\n\nStartDiscoverers 取值范围：0-250 默认值：1 pre-forked discoverers的数量，1.8.5版本以前最大可为255\n\nStartHTTPPollers 取值范围：0-1000 默认值：1 pre-forked HTTP pollers的数量，1.8.5以前最大255\n\nStartIPMIPollers 取值范围：0-1000 默认值：0 pre-forked IPMI pollers的数量，1.8.5之前，最大为255\n\nTimeout 取值范围：1-30 默认值：3 agent，snmp，external check的超时时间，单位为秒\n\nTmpDir 默认值：/tmp\n\nTrapperTimeout 取值范围：1-300 默认值：300 处理trapper数据的超时时间\n\nTrendCacheSize 取值范围：128K-2G 默认值：4M 历史数据缓存大小\n\nUnavailableDelay 取值范围：1-3600 默认值：60 间隔多少秒再次检测主机是否可用\n\nUnreachableDelay 取值范围：1-3600 默认值：15 间隔多少秒再次检测主机是否可达。\n\nUnreachablePeriod 取值范围：1-3600 默认值：45 检测到主机不可用，多久将它置为不可达\n\nUser 默认值：zabbix 启动zabbix server的用户，在配置禁止root启动，并且当前shell用户是root得情况下有效。如果当前用户是xiemx，那么zabbix server的运行用户是xiemx\n\nValueCacheSize 取值范围：0,128K-64G 默认值：8M 0表示禁用，history value缓存大小，当缓存超标了，将会每隔5分钟往server日志里面记录。养成看日志的好习惯。\n```","categories":["zabbix"]},{"title":"watch重复执行某个命令","url":"//2016/08/11/2016-08-11-shell-command-watch/","content":"当需要重复执行一个命令时，可使用`watch`\n\n```shell\n➜  ~ watch\n\nUsage:\n watch [options] command\n\nOptions:\n  -b, --beep             beep if command has a non-zero exit\n  -c, --color            interpret ANSI color and style sequences\n  -d, --differences[=<permanent>]\n                         highlight changes between updates\n  -e, --errexit          exit if command has a non-zero exit\n  -g, --chgexit          exit when output from command changes\n  -n, --interval <secs>  seconds to wait between updates\n  -p, --precise          attempt run command in precise intervals\n  -t, --no-title         turn off header\n  -x, --exec             pass command to exec instead of \"sh -c\"\n\n -h, --help     display this help and exit\n -v, --version  output version information and exit\n\nFor more details see watch(1).\n\n###每秒执行一次ls命令\nwatch -n 1 ls\n```\n\n","tags":["shell","command"],"categories":["command"]},{"title":"zabbix Less than 25% free in the configuration cache解决","url":"//2016/08/09/2016-08-09-zabbix-less-than-25-free-in-the-configuration-cache/","content":"\n在zabbix server默认配置下，出现告警\n\n```markdown\nLess than 25% free in the configuration cache\n```\n可增加zabbix配置缓存解决\n\n```shell\nvim zabbix_server.conf\n##将缓存从8M提升到16M，可以调到最高8G\nCacheSize=16M\n\n##重启zabbix server\nservice zabbix_server restart\n```","tags":["issue","zabbix"],"categories":["zabbix"]},{"title":"域名状态含义","url":"//2016/07/27/2016-07-27-domain-status-code/","content":"新注册的域名，可能出现以下状态：\n\n|域名状态|含义|\n|:---|:-|\n|addPeriod|注册局设置域名新注册期（域名新注册 5 天内会出现的状态，不影响域名使用，5 天后自动解除）。|\n|·ok|普通状态（可正常使用。没有需要立即进行的操作，也没有设置任何保护措施。有其他状态时，OK 状态不显示，但并不代表不正常。|\n\n出于对域名注册信息的保护，域名在进行某些安全锁定后，会出现以下状态：\n\n|域名状态|含义|\n|:---|:-|\n|·clientDeleteProhibited|注册商设置禁止删除（保护域名的一种状态，域名不能被删除）。|\n|serverDeleteProhibited|注册局设置禁止删除（保护域名的一种状态，域名不能被删除）。|\n|·clientUpdateProhibited|注册商设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。|\n|·serverUpdateProhibited|注册局设置禁止更新（域名信息，包括注册人/管理联系人/技术联系人/付费联系人/DNS 等不能被修改，但可设置或修改解析记录）。|\n|·clientTransferProhibited|注册商设置禁止转移（保护域名的一种状态，域名不能转移注册商）。|\n|·serverTransferProhibited|注册局设置禁止转移（保护域名的一种状态，域名不能转移注册商。有的域名新注册及转移注册商 60 天内会被注册局设置成该状态，60 天后自动解除；有的则为域名涉及仲裁或诉讼案被注册局设置，仲裁或诉讼案结束会被解除）。|\n\n其他禁止解析、禁止续费的状态：\n\n|域名状态|含义|\n|:---|:-|\n|·pendingVerification|注册信息审核期（该域名注册后未进行实名审核，需尽早在域名付费后 5 天内提交资料审核，5 天后仍未实名审核的，将进入 ServerHold 状态）。|\n|·clientHold|注册商设置暂停解析（处于该状态域名解析暂停，需联系注册商解除该状态）。|\n|·serverHold|注册局设置暂停解析（处于该状态域名解析暂停，.cn 国内中英文域名注册成功后未通过实名审核时多出现该种状态，需在域名有效期内完成实名审核后解除）。|\n|·inactive|非激活状态（注册时未填写域名 DNS，不能进行解析，需在注册商处设置域名 DNS）。|\n|·clientRenewProhibited/serverRenewProhibited|注册商或注册局设置禁止续费（域名不能续费，处于该状态通常表示该域名处于仲裁或法院争议期，需联系注册商确认原因）。|\n|·pendingTransfer|注册局设置转移过程中（域名正在转移注册商过程中）。|\n|·redemptionPeriod|注册局设置赎回期（域名处于赎回期，可联系注册商高价赎回）。|\n|·pendingDelete|注册局设置待删除/赎回期（对于国际域名，该状态表示域名已过赎回期等待被删除，删除后开放重新注册；对于国内域名，该状态表示域名处于赎回期，可联系注册商高价赎回）。|\n","tags":["domain","statusCode"],"categories":["domain"]},{"title":"uwsgi 报错 invalid option --“x” getopt_long() error","url":"//2016/07/26/2016-07-26-uwsgi-invalid-option-x-getopt_long-error/","content":"### 报错：\n\n```markdown\nuwsgi: invalid option — ‘x’\ngetopt_long() error \n```\n\n### 解决\n\n这个问题是因为编译uwsgi的时候少了libxml2库导致的，应该先安装库再编译，否则会少了xml的支持。\n\n1. uninstall uwsgi\n\n2. install  libxml*  \n\n3. install uwsgi\n\n","tags":["python","issue","uwsgi"],"categories":["uwsgi","python"]},{"title":"zabbix微信报警脚本","url":"//2016/06/29/2016-06-29-zabbix-alert-to-wechat-script/","content":"\n```python\n#!/usr/bin/python\n\n__author__ = 'xiemx'\n\nimport sys\nimport json,requests\nimport os\nimport logging\n\nclass Weixin(object):\n\n    def get_token(self):\n        CorpID = '-------4fa4'\n        Secret = 'Aew6oxx-----------FaTClkjXlmw_zH'\n        token_url = 'https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid={}&corpsecret={}'.format(CorpID, Secret)\n        response = requests.get(token_url, verify=False).content\n        p = json.loads(response)\n        token = p['access_token']\n        return token\n\n    def send_msg(self, user_id, msg):\n        token = self.get_token()\n        url = 'https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token={}'.format(token)\n        send_content={\n            \"touser\": user_id,\n            \"msgtype\": \"text\",\n            \"agentid\": \"2\",\n            \"text\": {\n               \"content\": msg\n            },\n            \"safe\":\"0\"\n            }\n        \n        p = requests.post(url, verify=False, data=json.dumps(send_content))\n        print p.content\n        logging.debug(\"weixin send success\")\n\nif __name__ == \"__main__\":\n    user_id = sys.argv[1]\n    msg = sys.argv[2] + '\\n' + sys.argv[3]\n    weixin = Weixin()\n    weixin.send_msg(user_id, msg)\n```","categories":["zabbix"]},{"title":"zabbix监控指定端口","url":"//2016/06/29/2016-06-29-zabbix-monitor-port/","content":"\n1.登陆zabbix主界面\n\n选择：配置-模板\n\n选择模板组，这里我选择的是Template App Agentless，原因该自带模板组内包含各种常用服务的模板\n\n单击该模板组 项目\n\n![img](/images/img_577330bdc322e.png)点击右上角的 创建项目\n\n![img](/images/img_577330e1e5d06.png)这里添加的是mysql服务，按照如图配置\n\n![img](/images/img_577330f8871b5.png)单击下方 存档 保存。\n\n如图点击 触发器\n\n![img](/images/img_5773310c679a1.png)如图，点击右上方 创建触发器\n\n![img](/images/img_5773313591d94.png)按照如图配置\n\n![img](/images/img_57733153a13cb.png)点击 存档 保存，完毕。\n\n以上是将自定义模板服务添加到Template App Agentless模板组\n\n最后将Template App Agentless模板组添加到你需要监控的客户端主机内","categories":["zabbix"]},{"title":"window系统上部署Zabbix_agent","url":"//2016/04/13/2016-04-13-deploy-zabbix_agent-to-windows/","content":"\n1.获取windows的agent客户端，解压文件至指定位置\n\n\t![img](/images/img_570da13048078.png)\n\n2.修改conf文件中的\n\n```shell\nServer=server端的IP地址\n\nServerActive=server端的IP地址\n\nHostName=服务器在监控端上的监控名，可见名称可以不写默认为主机名称\n```\n\n![img](/images/img_570da1465a8dc.png)\n\n3.命令行模式下安装Zabbix_agent监控程序\n\n```shell\n# 进入解压后的文件夹下\n\ncd  C:\\zabbix_agents\\bin\\win64\n\n#安装程序\n\nzabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -i\n\n#启动程序\n\nzabbix_agentd.exe –c c:\\zabbix\\zabbix_agentd.conf -s\n\n```\n\n![img](/images/img_570da15f9ead1.png)\n\n\n```markdown\n参数含义：\n-c    指定配置文件所在位置\n-i     安装客户端\n-s    启动客户端\n-x    停止客户端\n-d    卸载客户端\n```\n\n\n4.监控端添加agent服务器注意主机名为conf文件中定义的名称，否则会导致某些监控项目异常\n\n![img](/images/img_570da173ef401.png)\n\n ","tags":["windows","zabbix"],"categories":["zabbix"]},{"title":"Zentaopms部署","url":"//2016/03/25/2016-03-25-zentaopms-deployment/","content":"\n\n\n \n\n1. 获取软件\n\n   ```shell\n   wget http://sourceforge.net/projects/zentao/files/8.1.3/ZenTaoPMS.8.1.3.zip/download\n   ```\n\n2. 将软件解压放到web服务器的目录下\n\n    ![img](/images/img_56f4aa5d219ba-20190917143633356.png)\n\n3. 创建数据库，授权用户\n\n   ```sql\n   create database zentao;grant all zentao.* to zentao@localhost identified by 'zentap';\n   ```\n\n   \n\n   ![img](/images/img_56f4aa6c69a26-20190917143633077.png)\n\n4. Web访问页面开启安装进程\n\n   访问`http://localhost/zentaopms/www/install.php`，同dz等程序安装相同注意配置时使用授权的账户密码和数据库\n\n   \n\n5. 安装完成后需要破解zentaopms方可正常登录\n\n   通过下面的地址下载loader-wizard：http://www.ioncube.com/loader-wizard/loader-wizard.zip 下载之后，将其解压缩，到web服务器的DocumentRoot下。\n\n   \n\n6. 使用浏览器访问loader-wizard.php文件。该文件会检测当前环境，给出提示解决方法依照步骤处理\n  ![img](/images/img_56f4aa815cb3c-20190917143633401.png)\n\n\n7. 重新web服务启动之后，再次访问loader.php，如果安装成功，系统会提示。\n\n   ![img](/images/img_56f4aa8c14ae0-20190917145027287.png)\n\n   看到这个界面，就表示解密软件已经安装成功了。\n\n8. 再次访问zentaopms的首页测试是否可以正常登录\n  ![img](/images/img_56f4aa989af5e-20190917143633212.png)\n\n \n\n","tags":["zentaopms","deployment"],"categories":["zentaopms","deployment"]},{"title":"UDEV规则","url":"//2016/02/18/2016-02-18-udev/","content":"udev根据系统中的硬件设备的状态动态更新设备，通过对内核产生的设备名增加别名的方式来达到不管设备连接的顺序而维持一个统一的设备名的目的。udev可以根据设备的其他信息如总线（bus），生产商（vendor）等不同来区分不同的设备，并产生设备文件。udev是硬件平台无关的，属于user space的进程，它脱离驱动层的关联而建立在操作系统之上，遵循Linux Standard Base （LSB）设备命名方法，但也可以自定义命名\n\n```conf\n###/etc/udev/udev.conf\n  udev_root=/dev/ # 设置的绝对路径，相当于创建 chroot 的根。\n  udev_rules=/etc/udev/rules.d/   #规则的存放地址\n  udev_log=err     # 日志的输入级别\n```\n\n匹配键和赋值键操作符解释见下表：\n\n操作符     匹配或赋值t                         解释\n\n－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－\n\n==            匹配                   相等比较\n\n!=            匹配                    不等比较\n\n=             赋值                   分配一个特定的值给该键，他可以覆盖之前的赋值。\n\n+=            赋值                  追加特定的值给已经存在的键\n\n:=            赋值                   分配一个特定的值给该键，后面的规则不可能覆盖它。\n\nudev 规则的匹配键 :\n\n键                     含义\n\n－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－\n\nACTION          事件 (uevent) 的行为，例如：add( 添加设备 )、remove( 删除设备 )。\n\nKERNEL          在内核里看到的设备名字，比如sd*表示任意SCSI磁盘设备\n\nDEVPATH         内核设备录进，比如/devices/*\n\nSUBSYSTEM       子系统名字，例如：sda 的子系统为 block。\n\nBUS             总线的名字，比如IDE,USB\n\nDRIVER         设备驱动的名字，比如ide-cdrom\n\nID           独立于内核名字的设备名字\n\nSYSFS{ value}       sysfs属性值，他可以表示任意\n\nENV{ key}       环境变量，可以表示任意\n\nPROGRAM       可执行的外部程序，如果程序返回0值，该键则认为为真(true)\n\nRESULT         上一个PROGRAM调用返回的标准输出。\n\nNAME         根据这个规则创建的设备文件的文件名。注意：仅仅第一行的NAME描述是有效的，后面的均忽略,如果你想使用使用两个以上的名字来访问一个设备的话，可以考虑SYMLINK键。\n\nSYMLINK       为 /dev/下的设备文件产生符号链接。由于 udev 只能为某个设备产生一个设备文件，所以为了不覆盖系统默认的 udev 规则所产生的文件，推荐使用符号链接。\n\nOWNER         设备文件的属组\n\nGROUP         设备文件所在的组。\n\nMODE         设备文件的权限，采用8进制\n\nRUN         为设备而执行的程序列表\n\nLABEL         在配置文件里为内部控制而采用的名字标签(下下面的GOTO服务)\n\nGOTO         跳到匹配的规则（通过LABEL来标识），有点类似程序语言中的GOTO\n\nIMPORT{ type}     导入一个文件或者一个程序执行后而生成的规则集到当前文件\n\nWAIT\\_FOR\\_SYSFS   等待一个特定的设备文件的创建。主要是用作时序和依赖问题\n\nOPTIONS         特定的选项\n\nlast_rule 对这类设备终端规则执行\n\nignore_device 忽略当前规则\n\nignore_remove 忽略接下来的并移走请求\n\nall_partitions 为所有的磁盘分区创建设备文件\n\n例：\n\n\n  KERNEL==”*”, OWNER=”root” GROUP=”root”, MODE=”0600″ KERNEL==”tty”, NAME=”%k”, GROUP=”tty”, MODE=”0666″, OPTIONS=”last_rule” KERNEL==”scd[0-9]*”, SYMLINK+=”cdrom cdrom-%k” KERNEL==”hd[a-z]”, BUS==”ide”, SYSFS{removable}==”1″, SYSFS{device/media}==”cdrom”, SYMLINK+=”cdrom cdrom-%k” ACTION==”add”, SUBSYSTEM==”scsi_device”, RUN+=”/sbin/modprobe sg”\n\n\n上面的例子给出了5个规则，每一个都是KERNEL或者ACTION键开头：\n\n*第一个规则是缺省的，他匹配任意被内核识别到的设备，然后设定这些设备的属组是root，组是root，访问权限模式是0600(-rw——-)。这也是一个安全的缺省设置保证所有的设备在默认情况下只有root可以读写。\n\n*第二个规则也是比较典型的规则了。它匹配终端设备(tty)，然后设置新的权限为0600，所在的组是tty。它也设置了一个特别的设备文件名:%K。在这里例子里，%k代表设备的内核名字。那也就意味着内核识别出这些设备是什么名字，就创建什么样的设备文件名。\n\n\\*第三行开始的KERNEL==”scd[0-9]\\*”,表示 SCSI CD-ROM 驱动. 它创建一对设备符号连接：cdrom和cdrom-%k。\n\n*第四行，开始的 KERNEL==”hd[a-z]“, 表示ATA CDROM驱动器。这个规则创建和上面的规则相同的符号连接。ATA CDROM驱动器需要sysfs值以来区别别的ATA设备，因为SCSI CDROM可以被内核唯一识别。.\n\n*第五行以 ACTION==”add”开始，它告诉udev增加 /sbin/modprobe sg 到命令列表，当任意SCSI设备增加到系统后，这些命令将执行。其效果就是计算机应该会增加sg内核模块来侦测新的SCSI设备。\n\nudev 规则所需要信息的查询\n\n常用的查上面匹配键信息的命令\n\nudevinfo -a -p $(udevinfo  -q path -n /dev/sda1 )\n\n上面的命令两次使用udevinfo：\n\n第一次是返回sysfs设备路径(他通常和我们看到的Linux设备文件名所在路径－－/dev/hda－－不同)；\n\n第二次才是查询这个设备路径，结果将是非常常的syfs信息汇总\n\nudevinfo -a -p /sys/class/net/eth0\n\nscsi_id -g -s /block/sda\n\nscsi_id -g -x -s /block/sda/sda3\n\nata_id /dev/hda\n\nudev 信息的测试和生效\n\n根据上面文件中的内容写规则后，怎么测试\n\nudevtest /block/sda\n\nstart_dev #命令重启 udev守护进程\n\n本操作会对所有的设备重新查询规则目录下所有的规则文件，然后执行所匹配的规则里的行为。\n\n通常使用该命令让新的规则文件立即生效。","tags":["udev","linux"],"categories":["linux"]},{"title":"三种共享存储比较","url":"//2016/02/18/2016-02-18-Three-shared-storage-comparisons/","content":"\n### 共享存储（Share Storage）类型\n\n  1. NAS(Network Attached Storage)网络附加存储\n  2. SAN (Storage Area Network)储存区域网络\n  3. iSAN (internet Storage Area Network )以太网存储区域网络,基于以太网的san\n\n#### NAS(Network Attached Storage)\n  1. 基于tcp/ip网络\n  2. 以文件为单位进行操作（文件锁）\n\n#### SAN (Storage Area Network)\n  1. 基于硬盘驱动协议（sisc）传输的是磁道/扇区信息\n  2. 基于扇区/block锁\n\n#### iSAN (internet Storage Area Network )\n  1. 基于tcp/ip网络 , 通过以太网数据包传递scsi协议数据\n  2. 基于扇区/block锁","categories":["storage"]},{"title":"VS-NAT集群构建","url":"//2016/02/18/2016-02-18-vs-nat-cluster/","content":"\n由于lvs基于内核实现的负载均衡技术，因此主要是在内核层面配置，软件层面需要配置的东西很少。我们是通过软件生成配置文件，再讲配置文件刷到内核中。\n```shell\n#安装组包\nyum groupinstall \"Load Balancer\"\n\n#启动图形化服务\n/etc/init.d/piranha-gui start\n\n#创建piranha用户密码\npiranha-passwd\n\n#通过图形化创建的配置文件存放在\n/etc/sysconfig/ha/lvs.cf\n\n#将配置刷到内核模块中ip_vs和ip_vs*\n/etc/init.d/pulse start\n\n#测试脚本/bin/testlink\n[root@lvs-f30 ~]# cat /bin/testlink\n#!/bin/bash\n/usr/bin/links -dump 1 $1 >/dev/null 2>&1\nif [ 0 -eq $? ] ; then\necho ok\nelse\necho fail\nfi\n\n[root@lvs-f30 ~]# cat /etc/sysconfig/ha/lvs.cf\nserial_no = 30\nprimary = 172.25.30.14\nprimary_private = 192.168.122.246\nservice = lvs\nbackup_active = 1\nbackup = 172.25.30.15\nbackup_private = 192.168.122.247\nheartbeat = 1\nheartbeat_port = 539\nkeepalive = 6\ndeadtime = 18\nnetwork = nat\nnat_router = 192.168.122.254 eth2\nnat_nmask = 255.255.255.255\ndebug_level = NONE\nmonitor_links = 0\nsyncdaemon = 0\nsyncd_iface = eth2\n\nvirtual http {\n\nactive = 1\naddress = 172.25.30.100 eth0:1\nvip_nmask = 255.255.255.0\nport = 80\nsend = \"GET / HTTP/1.0\\r\\n\\r\\n\"\nexpect = \"ok\"\nuse_regex = 0\nsend_program = \"/bin/testlink %h\"\nload_monitor = none\nscheduler = wlc\nprotocol = tcp\ntimeout = 6\nreentry = 15\nquiesce_server = 0\n\nserver node1 {\n\naddress = 192.168.122.224\nactive = 1\nport = 80\nweight = 1\n\n}\n\nserver node2 {\n\naddress = 192.168.122.245\nactive = 1\nport = 80\nweight = 1\n\n​     }\n\n}\n```\n[![lvsnat](/images/lvsnat.png)](http://www.xiemx.com/wp-content/uploads/2016/02/lvsnat.png)","tags":["cluster"],"categories":["cluster"]},{"title":"四种事务隔离级别","url":"//2016/01/31/2016-01-31-transaction-isolation-level/","content":"数据库系统提供了四种事务隔离级别：\n  \nA.Serializable（串行化）：一个事务在执行过程中完全看不到其他事务对数据库所做的更新（事务执行的时候不允许别的事务并发执行。事务串行化执行，事务只能一个接着一个地执行，而不能并发执行。\n  \nB.Repeatable Read（可重复读）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，但是不能看到其他其他事务对已有记录的更新。\n  \nC.Read Commited（读已提交数据）：一个事务在执行过程中可以看到其他事务已经提交的新插入的记录，而且能看到其他事务已经提交的对已有记录的更新。\n  \nD.Read Uncommitted（读未提交数据）：一个事务在执行过程中可以看到其他事务没有提交的新插入的记录，而且能看到其他事务没有提交的对已有记录的更新。\n","tags":["mysql"],"categories":["mysql"]},{"title":"window系统文件或目录无法删除解决方法","url":"//2015/10/08/2015-10-08-window-force-delete-file/","content":"1. 新建.BAT批处理文件输入如下命令，然后将要删除的文件拖放到批处理文件图标上即可删除。\n\n```powershell\nDEL /F /A /Q\nRD /S /Q\n```\n\n2. 可利用软件来解锁占用文件的进程推荐unlock\n\n","tags":["window"],"categories":["window"]},{"title":"URLRewriter设置Config和IIS配置做伪静态","url":"//2015/08/21/2015-08-21-iis-set-urlrewrite/","content":"\n一、首先检查config文件里面是否包含这两个节点\n\n```xml\n <configSections>\n\n   <section name=\"RewriterConfig\" requirePermission=\"false\" type=\"URLRewriter.Config.RewriterConfigSerializerSectionHandler, URLRewriter\"/>\n\n </configSections>\n\n <system.web>\n\n   <httpModules>\n     <add type=\"URLRewriter.ModuleRewriter, URLRewriter\" name=\"ModuleRewriter\"/>\n\n   </httpModules>\n\n </system.web>\n\n```\n\n二、配置IIS。\n\n 1.打开IIS，选择网站。右键，点击属性\n\n 2.选择主目录，点击配置按钮\n\n 3.在弹出的应用程序配置中，点击添加\n\n 4.在弹出的添加/编辑应用程序扩展名映射中，填写可执行文件\n\n​\t点击浏览，选择aspnet_isapi.dll这个DLL，它一般在：C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727文件夹中(也就是你的系统盘中）\n\n 5.在扩展名中填写.html\n\n 6.在动作里选择限制为，他的框就可以填写了！请填写：GET,POST\n\n 7.不要勾选把确认文件是否存在，然后点击确定\n\n![image-20190917165314461](/images/image-20190917165314461.png)","tags":["windows","iis"],"categories":["iis","windows"]},{"title":"常见MIME类型设置方法","url":"//2015/08/21/2015-08-21-mime-type/","content":"### 常见MIME类型和设置方法\n当前列举了常用的MIME类型，查询详细：[MIME Type](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types)\n\n#### MIME类型\n\n| 扩展名 | 文档类型 | MIME 类型 |\n| :----- | :------ | ----: |\n| .aac | AAC audio | audio/aac |\n| .abw | AbiWord document | application/x-abiword |\n| .arc | Archive document (multiple files embedded) | application/x-freearc |\n| .avi | AVI: Audio Video Interleave | video/x-msvideo |\n| .azw | Amazon Kindle eBook format | application/vnd.amazon.ebook |\n| .bin | Any kind of binary data | application/octet-stream |\n| .bmp | Windows OS/2 Bitmap Graphics | image/bmp |\n| .bz | BZip archive | application/x-bzip |\n| .bz2 | BZip2 archive | application/x-bzip2 |\n| .csh | C-Shell script | application/x-csh |\n| .css | Cascading Style Sheets (CSS) | text/css |\n| .csv | Comma-separated values (CSV) | text/csv |\n| .doc | Microsoft Word | application/msword |\n| .epub | Electronic publication (EPUB) | application/epub+zip |\n| .gif | Graphics Interchange Format (GIF) | image/gif |\n| .html | HyperText Markup Language (HTML) | text/html |\n| .ico | Icon format | image/vnd.microsoft.icon |\n| .ics | iCalendar format | text/calendar |\n| .jar | Java Archive (JAR) | application/java-archive |\n| .jpeg | JPEG images | image/jpeg |\n| .js | JavaScript | text/javascript |\n| .json | JSON format | application/json |\n| .mjs | JavaScript module | text/javascript |\n| .mp3 | MP3 audio | audio/mpeg |\n| .mpeg | MPEG Video | video/mpeg |\n| .oga | OGG audio | audio/ogg |\n| .ogv | OGG video | video/ogg |\n| .ogx | OGG | application/ogg |\n| .otf | OpenType font | font/otf |\n| .png | Portable Network Graphics | image/png |\n| .pdf | Adobe Portable Document Format (PDF) | application/pdf |\n| .rar | RAR archive | application/x-rar-compressed |\n| .rtf | Rich Text Format (RTF) | application/rtf |\n| .sh | Bourne shell script | application/x-sh |\n| .svg | Scalable Vector Graphics (SVG) | image/svg+xml |\n| .tar | Tape Archive (TAR) | application/x-tar |\n| .tiff | Tagged Image File Format (TIFF) | image/tiff |\n| .ttf | TrueType Font | font/ttf |\n| .txt | Text, (generally ASCII or ISO 8859-n) | text/plain |\n| .vsd | Microsoft Visio | application/vnd.visio |\n| .wav | Waveform Audio Format | audio/wav |\n| .woff | Web Open Font Format (WOFF) | font/woff |\n| .woff2 | Web Open Font Format (WOFF) | font/woff2 |\n| .xhtml | XHTML | application/xhtml+xml |\n| .xls | Microsoft Excel | application/vnd.ms-excel |\n| .xml | XML | application/xml|\n| .zip | ZIP archive | application/zip |\n| .3gp | 3GPP audio/video container | video/3gpp |\n| .3g2 | 3GPP2 audio/video container | video/3gpp2 |\n| .7z | 7-zip archive | application/x-7z-compressed |\n\n#### 设置方法\n```markdown\n# IIS\n默认网站属性-->http 头-->MIME映射-->文件类型-->新类型\n\n# nginx\nconf/mime.types\n```","tags":["http","mime-type"],"categories":["http","mime-type"]}]